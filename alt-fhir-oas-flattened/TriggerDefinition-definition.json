{
  "type": "object",
  "properties": {
    "type": {
      "type": "string",
      "enum": [
        "named-event",
        "periodic",
        "data-changed",
        "data-added",
        "data-modified",
        "data-removed",
        "data-accessed",
        "data-access-ended"
      ],
      "description": "The type of triggering event."
    },
    "name": {
      "type": "string",
      "pattern": "[ \\r\\n\\t\\S]+",
      "description": "A formal name for the event. This may be an absolute URI that identifies the event formally (e.g. from a trigger registry), or a simple relative URI that identifies the event in a local context."
    },
    "timingTiming": {
      "description": "The timing of the event (if this is a periodic trigger).",
      "type": "object",
      "properties": {
        "modifierExtension": {
          "type": "array",
          "items": {
            "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            "type": "object",
            "additionalProperties": true
          }
        },
        "event": {
          "type": "array",
          "items": {
            "type": "string",
            "pattern": "([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?",
            "description": "Identifies specific times when the event occurs."
          }
        },
        "repeat": {
          "description": "A set of rules that describe when the event is scheduled.",
          "type": "object",
          "properties": {
            "modifierExtension": {
              "type": "array",
              "items": {
                "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                "type": "object",
                "additionalProperties": true
              }
            },
            "boundsDuration": {
              "description": "Either a duration for the length of the timing schedule, a range of possible length, or outer bounds for start and/or end limits of the timing schedule.",
              "type": "object",
              "properties": {
                "value": {
                  "type": "number",
                  "description": "The value of the measured amount. The value includes an implicit precision in the presentation of the value."
                },
                "comparator": {
                  "type": "string",
                  "enum": [
                    "<",
                    "<=",
                    ">=",
                    ">"
                  ],
                  "description": "How the value should be understood and represented &ndash; whether the actual value is greater or less than the stated value due to measurement issues; e.g. if the comparator is \"<\" , then the real value is < stated value."
                },
                "unit": {
                  "type": "string",
                  "pattern": "[ \\r\\n\\t\\S]+",
                  "description": "A human&ndash;readable form of the unit."
                },
                "system": {
                  "type": "string",
                  "pattern": "\\S*",
                  "description": "The identification of the system that provides the coded form of the unit."
                },
                "code": {
                  "type": "string",
                  "pattern": "[^\\s]+(\\s[^\\s]+)*",
                  "description": "A computer processable form of the unit in some unit representation system."
                }
              }
            },
            "boundsRange": {
              "description": "Either a duration for the length of the timing schedule, a range of possible length, or outer bounds for start and/or end limits of the timing schedule.",
              "type": "object",
              "properties": {
                "low": {
                  "description": "The low limit. The boundary is inclusive.",
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "number",
                      "description": "The value of the measured amount. The value includes an implicit precision in the presentation of the value."
                    },
                    "comparator": {
                      "type": "string",
                      "enum": [
                        "<",
                        "<=",
                        ">=",
                        ">"
                      ],
                      "description": "How the value should be understood and represented &ndash; whether the actual value is greater or less than the stated value due to measurement issues; e.g. if the comparator is \"<\" , then the real value is < stated value."
                    },
                    "unit": {
                      "type": "string",
                      "pattern": "[ \\r\\n\\t\\S]+",
                      "description": "A human&ndash;readable form of the unit."
                    },
                    "system": {
                      "type": "string",
                      "pattern": "\\S*",
                      "description": "The identification of the system that provides the coded form of the unit."
                    },
                    "code": {
                      "type": "string",
                      "pattern": "[^\\s]+(\\s[^\\s]+)*",
                      "description": "A computer processable form of the unit in some unit representation system."
                    }
                  }
                },
                "high": {
                  "description": "The high limit. The boundary is inclusive.",
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "number",
                      "description": "The value of the measured amount. The value includes an implicit precision in the presentation of the value."
                    },
                    "comparator": {
                      "type": "string",
                      "enum": [
                        "<",
                        "<=",
                        ">=",
                        ">"
                      ],
                      "description": "How the value should be understood and represented &ndash; whether the actual value is greater or less than the stated value due to measurement issues; e.g. if the comparator is \"<\" , then the real value is < stated value."
                    },
                    "unit": {
                      "type": "string",
                      "pattern": "[ \\r\\n\\t\\S]+",
                      "description": "A human&ndash;readable form of the unit."
                    },
                    "system": {
                      "type": "string",
                      "pattern": "\\S*",
                      "description": "The identification of the system that provides the coded form of the unit."
                    },
                    "code": {
                      "type": "string",
                      "pattern": "[^\\s]+(\\s[^\\s]+)*",
                      "description": "A computer processable form of the unit in some unit representation system."
                    }
                  }
                }
              }
            },
            "boundsPeriod": {
              "description": "Either a duration for the length of the timing schedule, a range of possible length, or outer bounds for start and/or end limits of the timing schedule.",
              "type": "object",
              "properties": {
                "start": {
                  "type": "string",
                  "pattern": "([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?",
                  "description": "The start of the period. The boundary is inclusive."
                },
                "end": {
                  "type": "string",
                  "pattern": "([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?",
                  "description": "The end of the period. If the end of the period is missing, it means no end was known or planned at the time the instance was created. The start may be in the past, and the end date in the future, which means that period is expected/planned to end at that time."
                }
              }
            },
            "count": {
              "type": "integer",
              "format": "int32",
              "description": "A total count of the desired number of repetitions across the duration of the entire timing specification. If countMax is present, this element indicates the lower bound of the allowed range of count values."
            },
            "countMax": {
              "type": "integer",
              "format": "int32",
              "description": "If present, indicates that the count is a range &ndash; so to perform the action between [count] and [countMax] times."
            },
            "duration": {
              "type": "number",
              "description": "How long this thing happens for when it happens. If durationMax is present, this element indicates the lower bound of the allowed range of the duration."
            },
            "durationMax": {
              "type": "number",
              "description": "If present, indicates that the duration is a range &ndash; so to perform the action between [duration] and [durationMax] time length."
            },
            "durationUnit": {
              "type": "string",
              "enum": [
                "s",
                "min",
                "h",
                "d",
                "wk",
                "mo",
                "a"
              ],
              "description": "The units of time for the duration, in UCUM units."
            },
            "frequency": {
              "type": "integer",
              "format": "int32",
              "description": "The number of times to repeat the action within the specified period. If frequencyMax is present, this element indicates the lower bound of the allowed range of the frequency."
            },
            "frequencyMax": {
              "type": "integer",
              "format": "int32",
              "description": "If present, indicates that the frequency is a range &ndash; so to repeat between [frequency] and [frequencyMax] times within the period or period range."
            },
            "period": {
              "type": "number",
              "description": "Indicates the duration of time over which repetitions are to occur; e.g. to express \"3 times per day\", 3 would be the frequency and \"1 day\" would be the period. If periodMax is present, this element indicates the lower bound of the allowed range of the period length."
            },
            "periodMax": {
              "type": "number",
              "description": "If present, indicates that the period is a range from [period] to [periodMax], allowing expressing concepts such as \"do this once every 3&ndash;5 days."
            },
            "periodUnit": {
              "type": "string",
              "enum": [
                "s",
                "min",
                "h",
                "d",
                "wk",
                "mo",
                "a"
              ],
              "description": "The units of time for the period in UCUM units."
            },
            "dayOfWeek": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "mon",
                  "tue",
                  "wed",
                  "thu",
                  "fri",
                  "sat",
                  "sun"
                ],
                "description": "If one or more days of week is provided, then the action happens only on the specified day(s)."
              }
            },
            "timeOfDay": {
              "type": "array",
              "items": {
                "type": "string",
                "pattern": "([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?",
                "description": "Specified time of day for action to take place."
              }
            },
            "when": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "MORN",
                  "MORN.early",
                  "MORN.late",
                  "NOON",
                  "AFT",
                  "AFT.early",
                  "AFT.late",
                  "EVE",
                  "EVE.early",
                  "EVE.late",
                  "NIGHT",
                  "PHS",
                  "HS",
                  "WAKE",
                  "C",
                  "CM",
                  "CD",
                  "CV",
                  "AC",
                  "ACM",
                  "ACD",
                  "ACV",
                  "PC",
                  "PCM",
                  "PCD",
                  "PCV"
                ],
                "description": "An approximate time period during the day, potentially linked to an event of daily living that indicates when the action should occur."
              }
            },
            "offset": {
              "type": "integer",
              "format": "int32",
              "description": "The number of minutes from the event. If the event code does not indicate whether the minutes is before or after the event, then the offset is assumed to be after the event."
            }
          }
        },
        "code": {
          "description": "A code for the timing schedule (or just text in code.text). Some codes such as BID are ubiquitous, but many institutions define their own additional codes. If a code is provided, the code is understood to be a complete statement of whatever is specified in the structured timing data, and either the code or the data may be used to interpret the Timing, with the exception that .repeat.bounds still applies over the code (and is not contained in the code).",
          "type": "object",
          "properties": {
            "coding": {
              "type": "array",
              "items": {
                "description": "A reference to a code defined by a terminology system.",
                "type": "object",
                "properties": {
                  "system": {
                    "type": "string",
                    "pattern": "\\S*",
                    "description": "The identification of the code system that defines the meaning of the symbol in the code."
                  },
                  "version": {
                    "type": "string",
                    "pattern": "[ \\r\\n\\t\\S]+",
                    "description": "The version of the code system which was used when choosing this code. Note that a well&ndash;maintained code system does not need the version reported, because the meaning of codes is consistent across versions. However this cannot consistently be assured, and when the meaning is not guaranteed to be consistent, the version SHOULD be exchanged."
                  },
                  "code": {
                    "type": "string",
                    "pattern": "[^\\s]+(\\s[^\\s]+)*",
                    "description": "A symbol in syntax defined by the system. The symbol may be a predefined code or an expression in a syntax defined by the coding system (e.g. post&ndash;coordination)."
                  },
                  "display": {
                    "type": "string",
                    "pattern": "[ \\r\\n\\t\\S]+",
                    "description": "A representation of the meaning of the code in the system, following the rules of the system."
                  },
                  "userSelected": {
                    "type": "boolean",
                    "description": "Indicates that this coding was chosen by a user directly &ndash; e.g. off a pick list of available items (codes or displays)."
                  }
                }
              }
            },
            "text": {
              "type": "string",
              "pattern": "[ \\r\\n\\t\\S]+",
              "description": "A human language representation of the concept as seen/selected/uttered by the user who entered the data and/or which represents the intended meaning of the user."
            }
          }
        }
      }
    },
    "timingReference": {
      "description": "The timing of the event (if this is a periodic trigger).",
      "type": "object",
      "properties": {
        "reference": {
          "type": "string",
          "pattern": "[ \\r\\n\\t\\S]+",
          "description": "A reference to a location at which the other resource is found. The reference may be a relative reference, in which case it is relative to the service base URL, or an absolute URL that resolves to the location where the resource is found. The reference may be version specific or not. If the reference is not to a FHIR RESTful server, then it should be assumed to be version specific. Internal fragment references (start with '#') refer to contained resources."
        },
        "type": {
          "type": "string",
          "pattern": "\\S*",
          "description": "The expected type of the target of the reference. If both Reference.type and Reference.reference are populated and Reference.reference is a FHIR URL, both SHALL be consistent.\n\nThe type is the Canonical URL of Resource Definition that is the type this reference refers to. References are URLs that are relative to http://hl7.org/fhir/StructureDefinition/ e.g. \"Patient\" is a reference to http://hl7.org/fhir/StructureDefinition/Patient. Absolute URLs are only allowed for logical models (and can only be used in references in logical models, not resources)."
        },
        "identifier": {
          "type": "object",
          "additionalProperties": true,
          "description": "An identifier for the target resource. This is used when there is no way to reference the other resource directly, either because the entity it represents is not available through a FHIR server, or because there is no way for the author of the resource to convert a known identifier to an actual location. There is no requirement that a Reference.identifier point to something that is actually exposed as a FHIR instance, but it SHALL point to a business concept that would be expected to be exposed as a FHIR instance, and that instance would need to be of a FHIR resource type allowed by the reference."
        },
        "display": {
          "type": "string",
          "pattern": "[ \\r\\n\\t\\S]+",
          "description": "Plain text narrative that identifies the resource in addition to the resource reference."
        }
      }
    },
    "timingDate": {
      "type": "string",
      "pattern": "([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?",
      "description": "The timing of the event (if this is a periodic trigger)."
    },
    "timingDateTime": {
      "type": "string",
      "pattern": "([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?",
      "description": "The timing of the event (if this is a periodic trigger)."
    },
    "data": {
      "type": "array",
      "items": {
        "description": "The triggering data of the event (if this is a data trigger). If more than one data is requirement is specified, then all the data requirements must be true.",
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "Address",
              "Age",
              "Annotation",
              "Attachment",
              "BackboneElement",
              "CodeableConcept",
              "Coding",
              "ContactDetail",
              "ContactPoint",
              "Contributor",
              "Count",
              "DataRequirement",
              "Distance",
              "Dosage",
              "Duration",
              "Element",
              "ElementDefinition",
              "Expression",
              "Extension",
              "HumanName",
              "Identifier",
              "MarketingStatus",
              "Meta",
              "Money",
              "MoneyQuantity",
              "Narrative",
              "ParameterDefinition",
              "Period",
              "Population",
              "ProdCharacteristic",
              "ProductShelfLife",
              "Quantity",
              "Range",
              "Ratio",
              "Reference",
              "RelatedArtifact",
              "SampledData",
              "Signature",
              "SimpleQuantity",
              "SubstanceAmount",
              "Timing",
              "TriggerDefinition",
              "UsageContext",
              "base64Binary",
              "boolean",
              "canonical",
              "code",
              "date",
              "dateTime",
              "decimal",
              "id",
              "instant",
              "integer",
              "markdown",
              "oid",
              "positiveInt",
              "string",
              "time",
              "unsignedInt",
              "uri",
              "url",
              "uuid",
              "xhtml",
              "Account",
              "ActivityDefinition",
              "AdverseEvent",
              "AllergyIntolerance",
              "Appointment",
              "AppointmentResponse",
              "AuditEvent",
              "Basic",
              "Binary",
              "BiologicallyDerivedProduct",
              "BodyStructure",
              "Bundle",
              "CapabilityStatement",
              "CarePlan",
              "CareTeam",
              "CatalogEntry",
              "ChargeItem",
              "ChargeItemDefinition",
              "Claim",
              "ClaimResponse",
              "ClinicalImpression",
              "CodeSystem",
              "Communication",
              "CommunicationRequest",
              "CompartmentDefinition",
              "Composition",
              "ConceptMap",
              "Condition",
              "Consent",
              "Contract",
              "Coverage",
              "CoverageEligibilityRequest",
              "CoverageEligibilityResponse",
              "DetectedIssue",
              "Device",
              "DeviceDefinition",
              "DeviceMetric",
              "DeviceRequest",
              "DeviceUseStatement",
              "DiagnosticReport",
              "DocumentManifest",
              "DocumentReference",
              "DomainResource",
              "EffectEvidenceSynthesis",
              "Encounter",
              "Endpoint",
              "EnrollmentRequest",
              "EnrollmentResponse",
              "EpisodeOfCare",
              "EventDefinition",
              "Evidence",
              "EvidenceVariable",
              "ExampleScenario",
              "ExplanationOfBenefit",
              "FamilyMemberHistory",
              "Flag",
              "Goal",
              "GraphDefinition",
              "Group",
              "GuidanceResponse",
              "HealthcareService",
              "ImagingStudy",
              "Immunization",
              "ImmunizationEvaluation",
              "ImmunizationRecommendation",
              "ImplementationGuide",
              "InsurancePlan",
              "Invoice",
              "Library",
              "Linkage",
              "List",
              "Location",
              "Measure",
              "MeasureReport",
              "Media",
              "Medication",
              "MedicationAdministration",
              "MedicationDispense",
              "MedicationKnowledge",
              "MedicationRequest",
              "MedicationStatement",
              "MedicinalProduct",
              "MedicinalProductAuthorization",
              "MedicinalProductContraindication",
              "MedicinalProductIndication",
              "MedicinalProductIngredient",
              "MedicinalProductInteraction",
              "MedicinalProductManufactured",
              "MedicinalProductPackaged",
              "MedicinalProductPharmaceutical",
              "MedicinalProductUndesirableEffect",
              "MessageDefinition",
              "MessageHeader",
              "MolecularSequence",
              "NamingSystem",
              "NutritionOrder",
              "Observation",
              "ObservationDefinition",
              "OperationDefinition",
              "OperationOutcome",
              "Organization",
              "OrganizationAffiliation",
              "Parameters",
              "Patient",
              "PaymentNotice",
              "PaymentReconciliation",
              "Person",
              "PlanDefinition",
              "Practitioner",
              "PractitionerRole",
              "Procedure",
              "Provenance",
              "Questionnaire",
              "QuestionnaireResponse",
              "RelatedPerson",
              "RequestGroup",
              "ResearchDefinition",
              "ResearchElementDefinition",
              "ResearchStudy",
              "ResearchSubject",
              "Resource",
              "RiskAssessment",
              "RiskEvidenceSynthesis",
              "Schedule",
              "SearchParameter",
              "ServiceRequest",
              "Slot",
              "Specimen",
              "SpecimenDefinition",
              "StructureDefinition",
              "StructureMap",
              "Subscription",
              "Substance",
              "SubstanceNucleicAcid",
              "SubstancePolymer",
              "SubstanceProtein",
              "SubstanceReferenceInformation",
              "SubstanceSourceMaterial",
              "SubstanceSpecification",
              "SupplyDelivery",
              "SupplyRequest",
              "Task",
              "TerminologyCapabilities",
              "TestReport",
              "TestScript",
              "ValueSet",
              "VerificationResult",
              "VisionPrescription",
              "Type",
              "Any"
            ],
            "description": "The type of the required data, specified as the type name of a resource. For profiles, this value is set to the type of the base resource of the profile."
          },
          "profile": {
            "type": "array",
            "items": {
              "type": "string",
              "pattern": "\\S*",
              "description": "The profile of the required data, specified as the uri of the profile definition."
            }
          },
          "subjectCodeableConcept": {
            "description": "The intended subjects of the data requirement. If this element is not provided, a Patient subject is assumed.",
            "type": "object",
            "properties": {
              "coding": {
                "type": "array",
                "items": {
                  "description": "A reference to a code defined by a terminology system.",
                  "type": "object",
                  "properties": {
                    "system": {
                      "type": "string",
                      "pattern": "\\S*",
                      "description": "The identification of the code system that defines the meaning of the symbol in the code."
                    },
                    "version": {
                      "type": "string",
                      "pattern": "[ \\r\\n\\t\\S]+",
                      "description": "The version of the code system which was used when choosing this code. Note that a well&ndash;maintained code system does not need the version reported, because the meaning of codes is consistent across versions. However this cannot consistently be assured, and when the meaning is not guaranteed to be consistent, the version SHOULD be exchanged."
                    },
                    "code": {
                      "type": "string",
                      "pattern": "[^\\s]+(\\s[^\\s]+)*",
                      "description": "A symbol in syntax defined by the system. The symbol may be a predefined code or an expression in a syntax defined by the coding system (e.g. post&ndash;coordination)."
                    },
                    "display": {
                      "type": "string",
                      "pattern": "[ \\r\\n\\t\\S]+",
                      "description": "A representation of the meaning of the code in the system, following the rules of the system."
                    },
                    "userSelected": {
                      "type": "boolean",
                      "description": "Indicates that this coding was chosen by a user directly &ndash; e.g. off a pick list of available items (codes or displays)."
                    }
                  }
                }
              },
              "text": {
                "type": "string",
                "pattern": "[ \\r\\n\\t\\S]+",
                "description": "A human language representation of the concept as seen/selected/uttered by the user who entered the data and/or which represents the intended meaning of the user."
              }
            }
          },
          "subjectReference": {
            "description": "The intended subjects of the data requirement. If this element is not provided, a Patient subject is assumed.",
            "type": "object",
            "properties": {
              "reference": {
                "type": "string",
                "pattern": "[ \\r\\n\\t\\S]+",
                "description": "A reference to a location at which the other resource is found. The reference may be a relative reference, in which case it is relative to the service base URL, or an absolute URL that resolves to the location where the resource is found. The reference may be version specific or not. If the reference is not to a FHIR RESTful server, then it should be assumed to be version specific. Internal fragment references (start with '#') refer to contained resources."
              },
              "type": {
                "type": "string",
                "pattern": "\\S*",
                "description": "The expected type of the target of the reference. If both Reference.type and Reference.reference are populated and Reference.reference is a FHIR URL, both SHALL be consistent.\n\nThe type is the Canonical URL of Resource Definition that is the type this reference refers to. References are URLs that are relative to http://hl7.org/fhir/StructureDefinition/ e.g. \"Patient\" is a reference to http://hl7.org/fhir/StructureDefinition/Patient. Absolute URLs are only allowed for logical models (and can only be used in references in logical models, not resources)."
              },
              "identifier": {
                "type": "object",
                "additionalProperties": true,
                "description": "An identifier for the target resource. This is used when there is no way to reference the other resource directly, either because the entity it represents is not available through a FHIR server, or because there is no way for the author of the resource to convert a known identifier to an actual location. There is no requirement that a Reference.identifier point to something that is actually exposed as a FHIR instance, but it SHALL point to a business concept that would be expected to be exposed as a FHIR instance, and that instance would need to be of a FHIR resource type allowed by the reference."
              },
              "display": {
                "type": "string",
                "pattern": "[ \\r\\n\\t\\S]+",
                "description": "Plain text narrative that identifies the resource in addition to the resource reference."
              }
            }
          },
          "mustSupport": {
            "type": "array",
            "items": {
              "type": "string",
              "pattern": "[ \\r\\n\\t\\S]+",
              "description": "Indicates that specific elements of the type are referenced by the knowledge module and must be supported by the consumer in order to obtain an effective evaluation. This does not mean that a value is required for this element, only that the consuming system must understand the element and be able to provide values for it if they are available. \n\nThe value of mustSupport SHALL be a FHIRPath resolveable on the type of the DataRequirement. The path SHALL consist only of identifiers, constant indexers, and .resolve() (see the [Simple FHIRPath Profile](fhirpath.html#simple) for full details)."
            }
          },
          "codeFilter": {
            "type": "array",
            "items": {
              "description": "Code filters specify additional constraints on the data, specifying the value set of interest for a particular element of the data. Each code filter defines an additional constraint on the data, i.e. code filters are AND'ed, not OR'ed.",
              "type": "object",
              "properties": {
                "modifierExtension": {
                  "type": "array",
                  "items": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                    "type": "object",
                    "additionalProperties": true
                  }
                },
                "path": {
                  "type": "string",
                  "pattern": "[ \\r\\n\\t\\S]+",
                  "description": "The code&ndash;valued attribute of the filter. The specified path SHALL be a FHIRPath resolveable on the specified type of the DataRequirement, and SHALL consist only of identifiers, constant indexers, and .resolve(). The path is allowed to contain qualifiers (.) to traverse sub&ndash;elements, as well as indexers ([x]) to traverse multiple&ndash;cardinality sub&ndash;elements (see the [Simple FHIRPath Profile](fhirpath.html#simple) for full details). Note that the index must be an integer constant. The path must resolve to an element of type code, Coding, or CodeableConcept."
                },
                "searchParam": {
                  "type": "string",
                  "pattern": "[ \\r\\n\\t\\S]+",
                  "description": "A token parameter that refers to a search parameter defined on the specified type of the DataRequirement, and which searches on elements of type code, Coding, or CodeableConcept."
                },
                "valueSet": {
                  "type": "string",
                  "pattern": "\\S*",
                  "description": "The valueset for the code filter. The valueSet and code elements are additive. If valueSet is specified, the filter will return only those data items for which the value of the code&ndash;valued element specified in the path is a member of the specified valueset."
                },
                "code": {
                  "type": "array",
                  "items": {
                    "description": "The codes for the code filter. If values are given, the filter will return only those data items for which the code&ndash;valued attribute specified by the path has a value that is one of the specified codes. If codes are specified in addition to a value set, the filter returns items matching a code in the value set or one of the specified codes.",
                    "type": "object",
                    "properties": {
                      "system": {
                        "type": "string",
                        "pattern": "\\S*",
                        "description": "The identification of the code system that defines the meaning of the symbol in the code."
                      },
                      "version": {
                        "type": "string",
                        "pattern": "[ \\r\\n\\t\\S]+",
                        "description": "The version of the code system which was used when choosing this code. Note that a well&ndash;maintained code system does not need the version reported, because the meaning of codes is consistent across versions. However this cannot consistently be assured, and when the meaning is not guaranteed to be consistent, the version SHOULD be exchanged."
                      },
                      "code": {
                        "type": "string",
                        "pattern": "[^\\s]+(\\s[^\\s]+)*",
                        "description": "A symbol in syntax defined by the system. The symbol may be a predefined code or an expression in a syntax defined by the coding system (e.g. post&ndash;coordination)."
                      },
                      "display": {
                        "type": "string",
                        "pattern": "[ \\r\\n\\t\\S]+",
                        "description": "A representation of the meaning of the code in the system, following the rules of the system."
                      },
                      "userSelected": {
                        "type": "boolean",
                        "description": "Indicates that this coding was chosen by a user directly &ndash; e.g. off a pick list of available items (codes or displays)."
                      }
                    }
                  }
                }
              }
            }
          },
          "dateFilter": {
            "type": "array",
            "items": {
              "description": "Date filters specify additional constraints on the data in terms of the applicable date range for specific elements. Each date filter specifies an additional constraint on the data, i.e. date filters are AND'ed, not OR'ed.",
              "type": "object",
              "properties": {
                "modifierExtension": {
                  "type": "array",
                  "items": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                    "type": "object",
                    "additionalProperties": true
                  }
                },
                "path": {
                  "type": "string",
                  "pattern": "[ \\r\\n\\t\\S]+",
                  "description": "The date&ndash;valued attribute of the filter. The specified path SHALL be a FHIRPath resolveable on the specified type of the DataRequirement, and SHALL consist only of identifiers, constant indexers, and .resolve(). The path is allowed to contain qualifiers (.) to traverse sub&ndash;elements, as well as indexers ([x]) to traverse multiple&ndash;cardinality sub&ndash;elements (see the [Simple FHIRPath Profile](fhirpath.html#simple) for full details). Note that the index must be an integer constant. The path must resolve to an element of type date, dateTime, Period, Schedule, or Timing."
                },
                "searchParam": {
                  "type": "string",
                  "pattern": "[ \\r\\n\\t\\S]+",
                  "description": "A date parameter that refers to a search parameter defined on the specified type of the DataRequirement, and which searches on elements of type date, dateTime, Period, Schedule, or Timing."
                },
                "valueDateTime": {
                  "type": "string",
                  "pattern": "([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?",
                  "description": "The value of the filter. If period is specified, the filter will return only those data items that fall within the bounds determined by the Period, inclusive of the period boundaries. If dateTime is specified, the filter will return only those data items that are equal to the specified dateTime. If a Duration is specified, the filter will return only those data items that fall within Duration before now."
                },
                "valuePeriod": {
                  "description": "The value of the filter. If period is specified, the filter will return only those data items that fall within the bounds determined by the Period, inclusive of the period boundaries. If dateTime is specified, the filter will return only those data items that are equal to the specified dateTime. If a Duration is specified, the filter will return only those data items that fall within Duration before now.",
                  "type": "object",
                  "properties": {
                    "start": {
                      "type": "string",
                      "pattern": "([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?",
                      "description": "The start of the period. The boundary is inclusive."
                    },
                    "end": {
                      "type": "string",
                      "pattern": "([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?",
                      "description": "The end of the period. If the end of the period is missing, it means no end was known or planned at the time the instance was created. The start may be in the past, and the end date in the future, which means that period is expected/planned to end at that time."
                    }
                  }
                },
                "valueDuration": {
                  "description": "The value of the filter. If period is specified, the filter will return only those data items that fall within the bounds determined by the Period, inclusive of the period boundaries. If dateTime is specified, the filter will return only those data items that are equal to the specified dateTime. If a Duration is specified, the filter will return only those data items that fall within Duration before now.",
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "number",
                      "description": "The value of the measured amount. The value includes an implicit precision in the presentation of the value."
                    },
                    "comparator": {
                      "type": "string",
                      "enum": [
                        "<",
                        "<=",
                        ">=",
                        ">"
                      ],
                      "description": "How the value should be understood and represented &ndash; whether the actual value is greater or less than the stated value due to measurement issues; e.g. if the comparator is \"<\" , then the real value is < stated value."
                    },
                    "unit": {
                      "type": "string",
                      "pattern": "[ \\r\\n\\t\\S]+",
                      "description": "A human&ndash;readable form of the unit."
                    },
                    "system": {
                      "type": "string",
                      "pattern": "\\S*",
                      "description": "The identification of the system that provides the coded form of the unit."
                    },
                    "code": {
                      "type": "string",
                      "pattern": "[^\\s]+(\\s[^\\s]+)*",
                      "description": "A computer processable form of the unit in some unit representation system."
                    }
                  }
                }
              }
            }
          },
          "limit": {
            "type": "integer",
            "format": "int32",
            "description": "Specifies a maximum number of results that are required (uses the _count search parameter)."
          },
          "sort": {
            "type": "array",
            "items": {
              "description": "Specifies the order of the results to be returned.",
              "type": "object",
              "properties": {
                "modifierExtension": {
                  "type": "array",
                  "items": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                    "type": "object",
                    "additionalProperties": true
                  }
                },
                "path": {
                  "type": "string",
                  "pattern": "[ \\r\\n\\t\\S]+",
                  "description": "The attribute of the sort. The specified path must be resolvable from the type of the required data. The path is allowed to contain qualifiers (.) to traverse sub&ndash;elements, as well as indexers ([x]) to traverse multiple&ndash;cardinality sub&ndash;elements. Note that the index must be an integer constant."
                },
                "direction": {
                  "type": "string",
                  "enum": [
                    "ascending",
                    "descending"
                  ],
                  "description": "The direction of the sort, ascending or descending."
                }
              },
              "required": [
                "path",
                "direction"
              ]
            }
          }
        },
        "required": [
          "type"
        ]
      }
    },
    "condition": {
      "description": "A boolean&ndash;valued expression that is evaluated in the context of the container of the trigger definition and returns whether or not the trigger fires.",
      "type": "object",
      "properties": {
        "description": {
          "type": "string",
          "pattern": "[ \\r\\n\\t\\S]+",
          "description": "A brief, natural language description of the condition that effectively communicates the intended semantics."
        },
        "name": {
          "type": "string",
          "pattern": "[A-Za-z0-9\\-\\.]{1,64}",
          "description": "A short name assigned to the expression to allow for multiple reuse of the expression in the context where it is defined."
        },
        "language": {
          "type": "string",
          "pattern": "[^\\s]+(\\s[^\\s]+)*",
          "description": "The media type of the language for the expression."
        },
        "expression": {
          "type": "string",
          "pattern": "[ \\r\\n\\t\\S]+",
          "description": "An expression in the specified language that returns a value."
        },
        "reference": {
          "type": "string",
          "pattern": "\\S*",
          "description": "A URI that defines where the expression is found."
        }
      },
      "required": [
        "language"
      ]
    }
  },
  "required": [
    "type"
  ]
}