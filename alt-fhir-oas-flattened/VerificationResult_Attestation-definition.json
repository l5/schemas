{
  "type": "object",
  "properties": {
    "modifierExtension": {
      "type": "array",
      "items": {
        "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
        "type": "object",
        "additionalProperties": true
      }
    },
    "who": {
      "description": "The individual or organization attesting to information.",
      "type": "object",
      "properties": {
        "reference": {
          "type": "string",
          "pattern": "[ \\r\\n\\t\\S]+",
          "description": "A reference to a location at which the other resource is found. The reference may be a relative reference, in which case it is relative to the service base URL, or an absolute URL that resolves to the location where the resource is found. The reference may be version specific or not. If the reference is not to a FHIR RESTful server, then it should be assumed to be version specific. Internal fragment references (start with '#') refer to contained resources."
        },
        "type": {
          "type": "string",
          "pattern": "\\S*",
          "description": "The expected type of the target of the reference. If both Reference.type and Reference.reference are populated and Reference.reference is a FHIR URL, both SHALL be consistent.\n\nThe type is the Canonical URL of Resource Definition that is the type this reference refers to. References are URLs that are relative to http://hl7.org/fhir/StructureDefinition/ e.g. \"Patient\" is a reference to http://hl7.org/fhir/StructureDefinition/Patient. Absolute URLs are only allowed for logical models (and can only be used in references in logical models, not resources)."
        },
        "identifier": {
          "type": "object",
          "additionalProperties": true,
          "description": "An identifier for the target resource. This is used when there is no way to reference the other resource directly, either because the entity it represents is not available through a FHIR server, or because there is no way for the author of the resource to convert a known identifier to an actual location. There is no requirement that a Reference.identifier point to something that is actually exposed as a FHIR instance, but it SHALL point to a business concept that would be expected to be exposed as a FHIR instance, and that instance would need to be of a FHIR resource type allowed by the reference."
        },
        "display": {
          "type": "string",
          "pattern": "[ \\r\\n\\t\\S]+",
          "description": "Plain text narrative that identifies the resource in addition to the resource reference."
        }
      }
    },
    "onBehalfOf": {
      "description": "When the who is asserting on behalf of another (organization or individual).",
      "type": "object",
      "properties": {
        "reference": {
          "type": "string",
          "pattern": "[ \\r\\n\\t\\S]+",
          "description": "A reference to a location at which the other resource is found. The reference may be a relative reference, in which case it is relative to the service base URL, or an absolute URL that resolves to the location where the resource is found. The reference may be version specific or not. If the reference is not to a FHIR RESTful server, then it should be assumed to be version specific. Internal fragment references (start with '#') refer to contained resources."
        },
        "type": {
          "type": "string",
          "pattern": "\\S*",
          "description": "The expected type of the target of the reference. If both Reference.type and Reference.reference are populated and Reference.reference is a FHIR URL, both SHALL be consistent.\n\nThe type is the Canonical URL of Resource Definition that is the type this reference refers to. References are URLs that are relative to http://hl7.org/fhir/StructureDefinition/ e.g. \"Patient\" is a reference to http://hl7.org/fhir/StructureDefinition/Patient. Absolute URLs are only allowed for logical models (and can only be used in references in logical models, not resources)."
        },
        "identifier": {
          "type": "object",
          "additionalProperties": true,
          "description": "An identifier for the target resource. This is used when there is no way to reference the other resource directly, either because the entity it represents is not available through a FHIR server, or because there is no way for the author of the resource to convert a known identifier to an actual location. There is no requirement that a Reference.identifier point to something that is actually exposed as a FHIR instance, but it SHALL point to a business concept that would be expected to be exposed as a FHIR instance, and that instance would need to be of a FHIR resource type allowed by the reference."
        },
        "display": {
          "type": "string",
          "pattern": "[ \\r\\n\\t\\S]+",
          "description": "Plain text narrative that identifies the resource in addition to the resource reference."
        }
      }
    },
    "communicationMethod": {
      "description": "The method by which attested information was submitted/retrieved (manual; API; Push).",
      "type": "object",
      "properties": {
        "coding": {
          "type": "array",
          "items": {
            "description": "A reference to a code defined by a terminology system.",
            "type": "object",
            "properties": {
              "system": {
                "type": "string",
                "pattern": "\\S*",
                "description": "The identification of the code system that defines the meaning of the symbol in the code."
              },
              "version": {
                "type": "string",
                "pattern": "[ \\r\\n\\t\\S]+",
                "description": "The version of the code system which was used when choosing this code. Note that a well&ndash;maintained code system does not need the version reported, because the meaning of codes is consistent across versions. However this cannot consistently be assured, and when the meaning is not guaranteed to be consistent, the version SHOULD be exchanged."
              },
              "code": {
                "type": "string",
                "pattern": "[^\\s]+(\\s[^\\s]+)*",
                "description": "A symbol in syntax defined by the system. The symbol may be a predefined code or an expression in a syntax defined by the coding system (e.g. post&ndash;coordination)."
              },
              "display": {
                "type": "string",
                "pattern": "[ \\r\\n\\t\\S]+",
                "description": "A representation of the meaning of the code in the system, following the rules of the system."
              },
              "userSelected": {
                "type": "boolean",
                "description": "Indicates that this coding was chosen by a user directly &ndash; e.g. off a pick list of available items (codes or displays)."
              }
            }
          }
        },
        "text": {
          "type": "string",
          "pattern": "[ \\r\\n\\t\\S]+",
          "description": "A human language representation of the concept as seen/selected/uttered by the user who entered the data and/or which represents the intended meaning of the user."
        }
      }
    },
    "date": {
      "type": "string",
      "pattern": "([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?",
      "description": "The date the information was attested to."
    },
    "sourceIdentityCertificate": {
      "type": "string",
      "pattern": "[ \\r\\n\\t\\S]+",
      "description": "A digital identity certificate associated with the attestation source."
    },
    "proxyIdentityCertificate": {
      "type": "string",
      "pattern": "[ \\r\\n\\t\\S]+",
      "description": "A digital identity certificate associated with the proxy entity submitting attested information on behalf of the attestation source."
    },
    "proxySignature": {
      "description": "Signed assertion by the proxy entity indicating that they have the right to submit attested information on behalf of the attestation source.",
      "type": "object",
      "properties": {
        "type": {
          "type": "array",
          "items": {
            "description": "An indication of the reason that the entity signed this document. This may be explicitly included as part of the signature information and can be used when determining accountability for various actions concerning the document.",
            "type": "object",
            "properties": {
              "system": {
                "type": "string",
                "pattern": "\\S*",
                "description": "The identification of the code system that defines the meaning of the symbol in the code."
              },
              "version": {
                "type": "string",
                "pattern": "[ \\r\\n\\t\\S]+",
                "description": "The version of the code system which was used when choosing this code. Note that a well&ndash;maintained code system does not need the version reported, because the meaning of codes is consistent across versions. However this cannot consistently be assured, and when the meaning is not guaranteed to be consistent, the version SHOULD be exchanged."
              },
              "code": {
                "type": "string",
                "pattern": "[^\\s]+(\\s[^\\s]+)*",
                "description": "A symbol in syntax defined by the system. The symbol may be a predefined code or an expression in a syntax defined by the coding system (e.g. post&ndash;coordination)."
              },
              "display": {
                "type": "string",
                "pattern": "[ \\r\\n\\t\\S]+",
                "description": "A representation of the meaning of the code in the system, following the rules of the system."
              },
              "userSelected": {
                "type": "boolean",
                "description": "Indicates that this coding was chosen by a user directly &ndash; e.g. off a pick list of available items (codes or displays)."
              }
            }
          },
          "minItems": 1
        },
        "when": {
          "type": "string",
          "pattern": "([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))",
          "description": "When the digital signature was signed."
        },
        "who": {
          "description": "A reference to an application&ndash;usable description of the identity that signed  (e.g. the signature used their private key).",
          "type": "object",
          "properties": {
            "reference": {
              "type": "string",
              "pattern": "[ \\r\\n\\t\\S]+",
              "description": "A reference to a location at which the other resource is found. The reference may be a relative reference, in which case it is relative to the service base URL, or an absolute URL that resolves to the location where the resource is found. The reference may be version specific or not. If the reference is not to a FHIR RESTful server, then it should be assumed to be version specific. Internal fragment references (start with '#') refer to contained resources."
            },
            "type": {
              "type": "string",
              "pattern": "\\S*",
              "description": "The expected type of the target of the reference. If both Reference.type and Reference.reference are populated and Reference.reference is a FHIR URL, both SHALL be consistent.\n\nThe type is the Canonical URL of Resource Definition that is the type this reference refers to. References are URLs that are relative to http://hl7.org/fhir/StructureDefinition/ e.g. \"Patient\" is a reference to http://hl7.org/fhir/StructureDefinition/Patient. Absolute URLs are only allowed for logical models (and can only be used in references in logical models, not resources)."
            },
            "identifier": {
              "type": "object",
              "additionalProperties": true,
              "description": "An identifier for the target resource. This is used when there is no way to reference the other resource directly, either because the entity it represents is not available through a FHIR server, or because there is no way for the author of the resource to convert a known identifier to an actual location. There is no requirement that a Reference.identifier point to something that is actually exposed as a FHIR instance, but it SHALL point to a business concept that would be expected to be exposed as a FHIR instance, and that instance would need to be of a FHIR resource type allowed by the reference."
            },
            "display": {
              "type": "string",
              "pattern": "[ \\r\\n\\t\\S]+",
              "description": "Plain text narrative that identifies the resource in addition to the resource reference."
            }
          }
        },
        "onBehalfOf": {
          "description": "A reference to an application&ndash;usable description of the identity that is represented by the signature.",
          "type": "object",
          "properties": {
            "reference": {
              "type": "string",
              "pattern": "[ \\r\\n\\t\\S]+",
              "description": "A reference to a location at which the other resource is found. The reference may be a relative reference, in which case it is relative to the service base URL, or an absolute URL that resolves to the location where the resource is found. The reference may be version specific or not. If the reference is not to a FHIR RESTful server, then it should be assumed to be version specific. Internal fragment references (start with '#') refer to contained resources."
            },
            "type": {
              "type": "string",
              "pattern": "\\S*",
              "description": "The expected type of the target of the reference. If both Reference.type and Reference.reference are populated and Reference.reference is a FHIR URL, both SHALL be consistent.\n\nThe type is the Canonical URL of Resource Definition that is the type this reference refers to. References are URLs that are relative to http://hl7.org/fhir/StructureDefinition/ e.g. \"Patient\" is a reference to http://hl7.org/fhir/StructureDefinition/Patient. Absolute URLs are only allowed for logical models (and can only be used in references in logical models, not resources)."
            },
            "identifier": {
              "type": "object",
              "additionalProperties": true,
              "description": "An identifier for the target resource. This is used when there is no way to reference the other resource directly, either because the entity it represents is not available through a FHIR server, or because there is no way for the author of the resource to convert a known identifier to an actual location. There is no requirement that a Reference.identifier point to something that is actually exposed as a FHIR instance, but it SHALL point to a business concept that would be expected to be exposed as a FHIR instance, and that instance would need to be of a FHIR resource type allowed by the reference."
            },
            "display": {
              "type": "string",
              "pattern": "[ \\r\\n\\t\\S]+",
              "description": "Plain text narrative that identifies the resource in addition to the resource reference."
            }
          }
        },
        "targetFormat": {
          "type": "string",
          "pattern": "[^\\s]+(\\s[^\\s]+)*",
          "description": "A mime type that indicates the technical format of the target resources signed by the signature."
        },
        "sigFormat": {
          "type": "string",
          "pattern": "[^\\s]+(\\s[^\\s]+)*",
          "description": "A mime type that indicates the technical format of the signature. Important mime types are application/signature+xml for X ML DigSig, application/jose for JWS, and image/* for a graphical image of a signature, etc."
        },
        "data": {
          "type": "string",
          "pattern": "(\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+",
          "description": "The base64 encoding of the Signature content. When signature is not recorded electronically this element would be empty."
        }
      },
      "required": [
        "type",
        "when",
        "who"
      ]
    },
    "sourceSignature": {
      "description": "Signed assertion by the attestation source that they have attested to the information.",
      "type": "object",
      "properties": {
        "type": {
          "type": "array",
          "items": {
            "description": "An indication of the reason that the entity signed this document. This may be explicitly included as part of the signature information and can be used when determining accountability for various actions concerning the document.",
            "type": "object",
            "properties": {
              "system": {
                "type": "string",
                "pattern": "\\S*",
                "description": "The identification of the code system that defines the meaning of the symbol in the code."
              },
              "version": {
                "type": "string",
                "pattern": "[ \\r\\n\\t\\S]+",
                "description": "The version of the code system which was used when choosing this code. Note that a well&ndash;maintained code system does not need the version reported, because the meaning of codes is consistent across versions. However this cannot consistently be assured, and when the meaning is not guaranteed to be consistent, the version SHOULD be exchanged."
              },
              "code": {
                "type": "string",
                "pattern": "[^\\s]+(\\s[^\\s]+)*",
                "description": "A symbol in syntax defined by the system. The symbol may be a predefined code or an expression in a syntax defined by the coding system (e.g. post&ndash;coordination)."
              },
              "display": {
                "type": "string",
                "pattern": "[ \\r\\n\\t\\S]+",
                "description": "A representation of the meaning of the code in the system, following the rules of the system."
              },
              "userSelected": {
                "type": "boolean",
                "description": "Indicates that this coding was chosen by a user directly &ndash; e.g. off a pick list of available items (codes or displays)."
              }
            }
          },
          "minItems": 1
        },
        "when": {
          "type": "string",
          "pattern": "([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))",
          "description": "When the digital signature was signed."
        },
        "who": {
          "description": "A reference to an application&ndash;usable description of the identity that signed  (e.g. the signature used their private key).",
          "type": "object",
          "properties": {
            "reference": {
              "type": "string",
              "pattern": "[ \\r\\n\\t\\S]+",
              "description": "A reference to a location at which the other resource is found. The reference may be a relative reference, in which case it is relative to the service base URL, or an absolute URL that resolves to the location where the resource is found. The reference may be version specific or not. If the reference is not to a FHIR RESTful server, then it should be assumed to be version specific. Internal fragment references (start with '#') refer to contained resources."
            },
            "type": {
              "type": "string",
              "pattern": "\\S*",
              "description": "The expected type of the target of the reference. If both Reference.type and Reference.reference are populated and Reference.reference is a FHIR URL, both SHALL be consistent.\n\nThe type is the Canonical URL of Resource Definition that is the type this reference refers to. References are URLs that are relative to http://hl7.org/fhir/StructureDefinition/ e.g. \"Patient\" is a reference to http://hl7.org/fhir/StructureDefinition/Patient. Absolute URLs are only allowed for logical models (and can only be used in references in logical models, not resources)."
            },
            "identifier": {
              "type": "object",
              "additionalProperties": true,
              "description": "An identifier for the target resource. This is used when there is no way to reference the other resource directly, either because the entity it represents is not available through a FHIR server, or because there is no way for the author of the resource to convert a known identifier to an actual location. There is no requirement that a Reference.identifier point to something that is actually exposed as a FHIR instance, but it SHALL point to a business concept that would be expected to be exposed as a FHIR instance, and that instance would need to be of a FHIR resource type allowed by the reference."
            },
            "display": {
              "type": "string",
              "pattern": "[ \\r\\n\\t\\S]+",
              "description": "Plain text narrative that identifies the resource in addition to the resource reference."
            }
          }
        },
        "onBehalfOf": {
          "description": "A reference to an application&ndash;usable description of the identity that is represented by the signature.",
          "type": "object",
          "properties": {
            "reference": {
              "type": "string",
              "pattern": "[ \\r\\n\\t\\S]+",
              "description": "A reference to a location at which the other resource is found. The reference may be a relative reference, in which case it is relative to the service base URL, or an absolute URL that resolves to the location where the resource is found. The reference may be version specific or not. If the reference is not to a FHIR RESTful server, then it should be assumed to be version specific. Internal fragment references (start with '#') refer to contained resources."
            },
            "type": {
              "type": "string",
              "pattern": "\\S*",
              "description": "The expected type of the target of the reference. If both Reference.type and Reference.reference are populated and Reference.reference is a FHIR URL, both SHALL be consistent.\n\nThe type is the Canonical URL of Resource Definition that is the type this reference refers to. References are URLs that are relative to http://hl7.org/fhir/StructureDefinition/ e.g. \"Patient\" is a reference to http://hl7.org/fhir/StructureDefinition/Patient. Absolute URLs are only allowed for logical models (and can only be used in references in logical models, not resources)."
            },
            "identifier": {
              "type": "object",
              "additionalProperties": true,
              "description": "An identifier for the target resource. This is used when there is no way to reference the other resource directly, either because the entity it represents is not available through a FHIR server, or because there is no way for the author of the resource to convert a known identifier to an actual location. There is no requirement that a Reference.identifier point to something that is actually exposed as a FHIR instance, but it SHALL point to a business concept that would be expected to be exposed as a FHIR instance, and that instance would need to be of a FHIR resource type allowed by the reference."
            },
            "display": {
              "type": "string",
              "pattern": "[ \\r\\n\\t\\S]+",
              "description": "Plain text narrative that identifies the resource in addition to the resource reference."
            }
          }
        },
        "targetFormat": {
          "type": "string",
          "pattern": "[^\\s]+(\\s[^\\s]+)*",
          "description": "A mime type that indicates the technical format of the target resources signed by the signature."
        },
        "sigFormat": {
          "type": "string",
          "pattern": "[^\\s]+(\\s[^\\s]+)*",
          "description": "A mime type that indicates the technical format of the signature. Important mime types are application/signature+xml for X ML DigSig, application/jose for JWS, and image/* for a graphical image of a signature, etc."
        },
        "data": {
          "type": "string",
          "pattern": "(\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+",
          "description": "The base64 encoding of the Signature content. When signature is not recorded electronically this element would be empty."
        }
      },
      "required": [
        "type",
        "when",
        "who"
      ]
    }
  }
}