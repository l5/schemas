{
  "type": "object",
  "properties": {
    "resourceType": {
      "type": "string",
      "enum": [
        "MedicationKnowledge"
      ]
    },
    "id": {
      "type": "string",
      "pattern": "[A-Za-z0-9\\-\\.]{1,64}",
      "description": "The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes."
    },
    "meta": {
      "description": "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
      "type": "object",
      "properties": {
        "versionId": {
          "type": "string",
          "pattern": "[A-Za-z0-9\\-\\.]{1,64}",
          "description": "The version specific identifier, as it appears in the version portion of the URL. This value changes when the resource is created, updated, or deleted."
        },
        "lastUpdated": {
          "type": "string",
          "pattern": "([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))",
          "description": "When the resource last changed &ndash; e.g. when the version changed."
        },
        "source": {
          "type": "string",
          "pattern": "\\S*",
          "description": "A uri that identifies the source system of the resource. This provides a minimal amount of [Provenance](provenance.html#) information that can be used to track or differentiate the source of information in the resource. The source may identify another FHIR server, document, message, database, etc."
        },
        "profile": {
          "type": "array",
          "items": {
            "type": "string",
            "pattern": "\\S*",
            "description": "A list of profiles (references to [StructureDefinition](structuredefinition.html#) resources) that this resource claims to conform to. The URL is a reference to [StructureDefinition.url](structuredefinition&ndash;definitions.html#StructureDefinition.url)."
          }
        },
        "security": {
          "type": "array",
          "items": {
            "description": "Security labels applied to this resource. These tags connect specific resources to the overall security policy and infrastructure.",
            "type": "object",
            "properties": {
              "system": {
                "type": "string",
                "pattern": "\\S*",
                "description": "The identification of the code system that defines the meaning of the symbol in the code."
              },
              "version": {
                "type": "string",
                "pattern": "[ \\r\\n\\t\\S]+",
                "description": "The version of the code system which was used when choosing this code. Note that a well&ndash;maintained code system does not need the version reported, because the meaning of codes is consistent across versions. However this cannot consistently be assured, and when the meaning is not guaranteed to be consistent, the version SHOULD be exchanged."
              },
              "code": {
                "type": "string",
                "pattern": "[^\\s]+(\\s[^\\s]+)*",
                "description": "A symbol in syntax defined by the system. The symbol may be a predefined code or an expression in a syntax defined by the coding system (e.g. post&ndash;coordination)."
              },
              "display": {
                "type": "string",
                "pattern": "[ \\r\\n\\t\\S]+",
                "description": "A representation of the meaning of the code in the system, following the rules of the system."
              },
              "userSelected": {
                "type": "boolean",
                "description": "Indicates that this coding was chosen by a user directly &ndash; e.g. off a pick list of available items (codes or displays)."
              }
            }
          }
        },
        "tag": {
          "type": "array",
          "items": {
            "description": "Tags applied to this resource. Tags are intended to be used to identify and relate resources to process and workflow, and applications are not required to consider the tags when interpreting the meaning of a resource.",
            "type": "object",
            "properties": {
              "system": {
                "type": "string",
                "pattern": "\\S*",
                "description": "The identification of the code system that defines the meaning of the symbol in the code."
              },
              "version": {
                "type": "string",
                "pattern": "[ \\r\\n\\t\\S]+",
                "description": "The version of the code system which was used when choosing this code. Note that a well&ndash;maintained code system does not need the version reported, because the meaning of codes is consistent across versions. However this cannot consistently be assured, and when the meaning is not guaranteed to be consistent, the version SHOULD be exchanged."
              },
              "code": {
                "type": "string",
                "pattern": "[^\\s]+(\\s[^\\s]+)*",
                "description": "A symbol in syntax defined by the system. The symbol may be a predefined code or an expression in a syntax defined by the coding system (e.g. post&ndash;coordination)."
              },
              "display": {
                "type": "string",
                "pattern": "[ \\r\\n\\t\\S]+",
                "description": "A representation of the meaning of the code in the system, following the rules of the system."
              },
              "userSelected": {
                "type": "boolean",
                "description": "Indicates that this coding was chosen by a user directly &ndash; e.g. off a pick list of available items (codes or displays)."
              }
            }
          }
        }
      }
    },
    "implicitRules": {
      "type": "string",
      "pattern": "\\S*",
      "description": "A reference to a set of rules that were followed when the resource was constructed, and which must be understood when processing the content. Often, this is a reference to an implementation guide that defines the special rules along with other profiles etc."
    },
    "language": {
      "type": "string",
      "pattern": "[^\\s]+(\\s[^\\s]+)*",
      "description": "The base language in which the resource is written."
    },
    "text": {
      "description": "A human&ndash;readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it \"clinically safe\" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.",
      "type": "object",
      "properties": {
        "status": {
          "type": "string",
          "enum": [
            "generated",
            "extensions",
            "additional",
            "empty"
          ],
          "description": "The status of the narrative &ndash; whether it's entirely generated (from just the defined data or the extensions too), or whether a human authored it and it may contain additional data."
        },
        "div": {
          "type": "string",
          "description": "The actual narrative content, a stripped down version of XHTML."
        }
      },
      "required": [
        "status",
        "div"
      ]
    },
    "contained": {
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "resourceType": {
            "type": "string",
            "enum": [
              "Account",
              "ActivityDefinition",
              "AdverseEvent",
              "AllergyIntolerance",
              "Appointment",
              "AppointmentResponse",
              "AuditEvent",
              "Basic",
              "Binary",
              "BiologicallyDerivedProduct",
              "BodyStructure",
              "Bundle",
              "CapabilityStatement",
              "CarePlan",
              "CareTeam",
              "CatalogEntry",
              "ChargeItem",
              "ChargeItemDefinition",
              "Claim",
              "ClaimResponse",
              "ClinicalImpression",
              "CodeSystem",
              "Communication",
              "CommunicationRequest",
              "CompartmentDefinition",
              "Composition",
              "ConceptMap",
              "Condition",
              "Consent",
              "Contract",
              "Coverage",
              "CoverageEligibilityRequest",
              "CoverageEligibilityResponse",
              "DetectedIssue",
              "Device",
              "DeviceDefinition",
              "DeviceMetric",
              "DeviceRequest",
              "DeviceUseStatement",
              "DiagnosticReport",
              "DocumentManifest",
              "DocumentReference",
              "DomainResource",
              "EffectEvidenceSynthesis",
              "Encounter",
              "Endpoint",
              "EnrollmentRequest",
              "EnrollmentResponse",
              "EpisodeOfCare",
              "EventDefinition",
              "Evidence",
              "EvidenceVariable",
              "ExampleScenario",
              "ExplanationOfBenefit",
              "FamilyMemberHistory",
              "Flag",
              "Goal",
              "GraphDefinition",
              "Group",
              "GuidanceResponse",
              "HealthcareService",
              "ImagingStudy",
              "Immunization",
              "ImmunizationEvaluation",
              "ImmunizationRecommendation",
              "ImplementationGuide",
              "InsurancePlan",
              "Invoice",
              "Library",
              "Linkage",
              "List",
              "Location",
              "Measure",
              "MeasureReport",
              "Media",
              "Medication",
              "MedicationAdministration",
              "MedicationDispense",
              "MedicationKnowledge",
              "MedicationRequest",
              "MedicationStatement",
              "MedicinalProduct",
              "MedicinalProductAuthorization",
              "MedicinalProductContraindication",
              "MedicinalProductIndication",
              "MedicinalProductIngredient",
              "MedicinalProductInteraction",
              "MedicinalProductManufactured",
              "MedicinalProductPackaged",
              "MedicinalProductPharmaceutical",
              "MedicinalProductUndesirableEffect",
              "MessageDefinition",
              "MessageHeader",
              "MolecularSequence",
              "NamingSystem",
              "NutritionOrder",
              "Observation",
              "ObservationDefinition",
              "OperationDefinition",
              "OperationOutcome",
              "Organization",
              "OrganizationAffiliation",
              "Parameters",
              "Patient",
              "PaymentNotice",
              "PaymentReconciliation",
              "Person",
              "PlanDefinition",
              "Practitioner",
              "PractitionerRole",
              "Procedure",
              "Provenance",
              "Questionnaire",
              "QuestionnaireResponse",
              "RelatedPerson",
              "RequestGroup",
              "ResearchDefinition",
              "ResearchElementDefinition",
              "ResearchStudy",
              "ResearchSubject",
              "Resource",
              "RiskAssessment",
              "RiskEvidenceSynthesis",
              "Schedule",
              "SearchParameter",
              "ServiceRequest",
              "Slot",
              "Specimen",
              "SpecimenDefinition",
              "StructureDefinition",
              "StructureMap",
              "Subscription",
              "Substance",
              "SubstanceNucleicAcid",
              "SubstancePolymer",
              "SubstanceProtein",
              "SubstanceReferenceInformation",
              "SubstanceSourceMaterial",
              "SubstanceSpecification",
              "SupplyDelivery",
              "SupplyRequest",
              "Task",
              "TerminologyCapabilities",
              "TestReport",
              "TestScript",
              "ValueSet",
              "VerificationResult",
              "VisionPrescription"
            ]
          },
          "id": {
            "type": "string",
            "pattern": "[A-Za-z0-9\\-\\.]{1,64}",
            "description": "The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes."
          },
          "meta": {
            "description": "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
            "type": "object",
            "properties": {
              "versionId": {
                "type": "string",
                "pattern": "[A-Za-z0-9\\-\\.]{1,64}",
                "description": "The version specific identifier, as it appears in the version portion of the URL. This value changes when the resource is created, updated, or deleted."
              },
              "lastUpdated": {
                "type": "string",
                "pattern": "([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))",
                "description": "When the resource last changed &ndash; e.g. when the version changed."
              },
              "source": {
                "type": "string",
                "pattern": "\\S*",
                "description": "A uri that identifies the source system of the resource. This provides a minimal amount of [Provenance](provenance.html#) information that can be used to track or differentiate the source of information in the resource. The source may identify another FHIR server, document, message, database, etc."
              },
              "profile": {
                "type": "array",
                "items": {
                  "type": "string",
                  "pattern": "\\S*",
                  "description": "A list of profiles (references to [StructureDefinition](structuredefinition.html#) resources) that this resource claims to conform to. The URL is a reference to [StructureDefinition.url](structuredefinition&ndash;definitions.html#StructureDefinition.url)."
                }
              },
              "security": {
                "type": "array",
                "items": {
                  "description": "Security labels applied to this resource. These tags connect specific resources to the overall security policy and infrastructure.",
                  "type": "object",
                  "properties": {
                    "system": {
                      "type": "string",
                      "pattern": "\\S*",
                      "description": "The identification of the code system that defines the meaning of the symbol in the code."
                    },
                    "version": {
                      "type": "string",
                      "pattern": "[ \\r\\n\\t\\S]+",
                      "description": "The version of the code system which was used when choosing this code. Note that a well&ndash;maintained code system does not need the version reported, because the meaning of codes is consistent across versions. However this cannot consistently be assured, and when the meaning is not guaranteed to be consistent, the version SHOULD be exchanged."
                    },
                    "code": {
                      "type": "string",
                      "pattern": "[^\\s]+(\\s[^\\s]+)*",
                      "description": "A symbol in syntax defined by the system. The symbol may be a predefined code or an expression in a syntax defined by the coding system (e.g. post&ndash;coordination)."
                    },
                    "display": {
                      "type": "string",
                      "pattern": "[ \\r\\n\\t\\S]+",
                      "description": "A representation of the meaning of the code in the system, following the rules of the system."
                    },
                    "userSelected": {
                      "type": "boolean",
                      "description": "Indicates that this coding was chosen by a user directly &ndash; e.g. off a pick list of available items (codes or displays)."
                    }
                  }
                }
              },
              "tag": {
                "type": "array",
                "items": {
                  "description": "Tags applied to this resource. Tags are intended to be used to identify and relate resources to process and workflow, and applications are not required to consider the tags when interpreting the meaning of a resource.",
                  "type": "object",
                  "properties": {
                    "system": {
                      "type": "string",
                      "pattern": "\\S*",
                      "description": "The identification of the code system that defines the meaning of the symbol in the code."
                    },
                    "version": {
                      "type": "string",
                      "pattern": "[ \\r\\n\\t\\S]+",
                      "description": "The version of the code system which was used when choosing this code. Note that a well&ndash;maintained code system does not need the version reported, because the meaning of codes is consistent across versions. However this cannot consistently be assured, and when the meaning is not guaranteed to be consistent, the version SHOULD be exchanged."
                    },
                    "code": {
                      "type": "string",
                      "pattern": "[^\\s]+(\\s[^\\s]+)*",
                      "description": "A symbol in syntax defined by the system. The symbol may be a predefined code or an expression in a syntax defined by the coding system (e.g. post&ndash;coordination)."
                    },
                    "display": {
                      "type": "string",
                      "pattern": "[ \\r\\n\\t\\S]+",
                      "description": "A representation of the meaning of the code in the system, following the rules of the system."
                    },
                    "userSelected": {
                      "type": "boolean",
                      "description": "Indicates that this coding was chosen by a user directly &ndash; e.g. off a pick list of available items (codes or displays)."
                    }
                  }
                }
              }
            }
          },
          "implicitRules": {
            "type": "string",
            "pattern": "\\S*",
            "description": "A reference to a set of rules that were followed when the resource was constructed, and which must be understood when processing the content. Often, this is a reference to an implementation guide that defines the special rules along with other profiles etc."
          },
          "language": {
            "type": "string",
            "pattern": "[^\\s]+(\\s[^\\s]+)*",
            "description": "The base language in which the resource is written."
          }
        },
        "required": [
          "resourceType"
        ],
        "description": "These resources do not have an independent existence apart from the resource that contains them &ndash; they cannot be identified independently, and nor can they have their own independent transaction scope."
      }
    },
    "extension": {
      "type": "array",
      "items": {
        "description": "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
        "type": "object",
        "additionalProperties": true
      }
    },
    "modifierExtension": {
      "type": "array",
      "items": {
        "description": "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
        "type": "object",
        "additionalProperties": true
      }
    },
    "code": {
      "description": "A code that specifies this medication, or a textual description if no code is available. Usage note: This could be a standard medication code such as a code from RxNorm, SNOMED CT, IDMP etc. It could also be a national or local formulary code, optionally with translations to other code systems.",
      "type": "object",
      "properties": {
        "coding": {
          "type": "array",
          "items": {
            "description": "A reference to a code defined by a terminology system.",
            "type": "object",
            "properties": {
              "system": {
                "type": "string",
                "pattern": "\\S*",
                "description": "The identification of the code system that defines the meaning of the symbol in the code."
              },
              "version": {
                "type": "string",
                "pattern": "[ \\r\\n\\t\\S]+",
                "description": "The version of the code system which was used when choosing this code. Note that a well&ndash;maintained code system does not need the version reported, because the meaning of codes is consistent across versions. However this cannot consistently be assured, and when the meaning is not guaranteed to be consistent, the version SHOULD be exchanged."
              },
              "code": {
                "type": "string",
                "pattern": "[^\\s]+(\\s[^\\s]+)*",
                "description": "A symbol in syntax defined by the system. The symbol may be a predefined code or an expression in a syntax defined by the coding system (e.g. post&ndash;coordination)."
              },
              "display": {
                "type": "string",
                "pattern": "[ \\r\\n\\t\\S]+",
                "description": "A representation of the meaning of the code in the system, following the rules of the system."
              },
              "userSelected": {
                "type": "boolean",
                "description": "Indicates that this coding was chosen by a user directly &ndash; e.g. off a pick list of available items (codes or displays)."
              }
            }
          }
        },
        "text": {
          "type": "string",
          "pattern": "[ \\r\\n\\t\\S]+",
          "description": "A human language representation of the concept as seen/selected/uttered by the user who entered the data and/or which represents the intended meaning of the user."
        }
      }
    },
    "status": {
      "type": "string",
      "enum": [
        "active",
        "inactive",
        "entered-in-error"
      ],
      "description": "A code to indicate if the medication is in active use.  The status refers to the validity about the information of the medication and not to its medicinal properties."
    },
    "manufacturer": {
      "description": "Describes the details of the manufacturer of the medication product.  This is not intended to represent the distributor of a medication product.",
      "type": "object",
      "properties": {
        "reference": {
          "type": "string",
          "pattern": "[ \\r\\n\\t\\S]+",
          "description": "A reference to a location at which the other resource is found. The reference may be a relative reference, in which case it is relative to the service base URL, or an absolute URL that resolves to the location where the resource is found. The reference may be version specific or not. If the reference is not to a FHIR RESTful server, then it should be assumed to be version specific. Internal fragment references (start with '#') refer to contained resources."
        },
        "type": {
          "type": "string",
          "pattern": "\\S*",
          "description": "The expected type of the target of the reference. If both Reference.type and Reference.reference are populated and Reference.reference is a FHIR URL, both SHALL be consistent.\n\nThe type is the Canonical URL of Resource Definition that is the type this reference refers to. References are URLs that are relative to http://hl7.org/fhir/StructureDefinition/ e.g. \"Patient\" is a reference to http://hl7.org/fhir/StructureDefinition/Patient. Absolute URLs are only allowed for logical models (and can only be used in references in logical models, not resources)."
        },
        "identifier": {
          "type": "object",
          "additionalProperties": true,
          "description": "An identifier for the target resource. This is used when there is no way to reference the other resource directly, either because the entity it represents is not available through a FHIR server, or because there is no way for the author of the resource to convert a known identifier to an actual location. There is no requirement that a Reference.identifier point to something that is actually exposed as a FHIR instance, but it SHALL point to a business concept that would be expected to be exposed as a FHIR instance, and that instance would need to be of a FHIR resource type allowed by the reference."
        },
        "display": {
          "type": "string",
          "pattern": "[ \\r\\n\\t\\S]+",
          "description": "Plain text narrative that identifies the resource in addition to the resource reference."
        }
      }
    },
    "doseForm": {
      "description": "Describes the form of the item.  Powder; tablets; capsule.",
      "type": "object",
      "properties": {
        "coding": {
          "type": "array",
          "items": {
            "description": "A reference to a code defined by a terminology system.",
            "type": "object",
            "properties": {
              "system": {
                "type": "string",
                "pattern": "\\S*",
                "description": "The identification of the code system that defines the meaning of the symbol in the code."
              },
              "version": {
                "type": "string",
                "pattern": "[ \\r\\n\\t\\S]+",
                "description": "The version of the code system which was used when choosing this code. Note that a well&ndash;maintained code system does not need the version reported, because the meaning of codes is consistent across versions. However this cannot consistently be assured, and when the meaning is not guaranteed to be consistent, the version SHOULD be exchanged."
              },
              "code": {
                "type": "string",
                "pattern": "[^\\s]+(\\s[^\\s]+)*",
                "description": "A symbol in syntax defined by the system. The symbol may be a predefined code or an expression in a syntax defined by the coding system (e.g. post&ndash;coordination)."
              },
              "display": {
                "type": "string",
                "pattern": "[ \\r\\n\\t\\S]+",
                "description": "A representation of the meaning of the code in the system, following the rules of the system."
              },
              "userSelected": {
                "type": "boolean",
                "description": "Indicates that this coding was chosen by a user directly &ndash; e.g. off a pick list of available items (codes or displays)."
              }
            }
          }
        },
        "text": {
          "type": "string",
          "pattern": "[ \\r\\n\\t\\S]+",
          "description": "A human language representation of the concept as seen/selected/uttered by the user who entered the data and/or which represents the intended meaning of the user."
        }
      }
    },
    "amount": {
      "description": "Specific amount of the drug in the packaged product.  For example, when specifying a product that has the same strength (For example, Insulin glargine 100 unit per mL solution for injection), this attribute provides additional clarification of the package amount (For example, 3 mL, 10mL, etc.).",
      "type": "object",
      "properties": {
        "value": {
          "type": "number",
          "description": "The value of the measured amount. The value includes an implicit precision in the presentation of the value."
        },
        "comparator": {
          "type": "string",
          "enum": [
            "<",
            "<=",
            ">=",
            ">"
          ],
          "description": "How the value should be understood and represented &ndash; whether the actual value is greater or less than the stated value due to measurement issues; e.g. if the comparator is \"<\" , then the real value is < stated value."
        },
        "unit": {
          "type": "string",
          "pattern": "[ \\r\\n\\t\\S]+",
          "description": "A human&ndash;readable form of the unit."
        },
        "system": {
          "type": "string",
          "pattern": "\\S*",
          "description": "The identification of the system that provides the coded form of the unit."
        },
        "code": {
          "type": "string",
          "pattern": "[^\\s]+(\\s[^\\s]+)*",
          "description": "A computer processable form of the unit in some unit representation system."
        }
      }
    },
    "synonym": {
      "type": "array",
      "items": {
        "type": "string",
        "pattern": "[ \\r\\n\\t\\S]+",
        "description": "Additional names for a medication, for example, the name(s) given to a medication in different countries.  For example, acetaminophen and paracetamol or salbutamol and albuterol."
      }
    },
    "relatedMedicationKnowledge": {
      "type": "array",
      "items": {
        "description": "Associated or related knowledge about a medication.",
        "type": "object",
        "properties": {
          "modifierExtension": {
            "type": "array",
            "items": {
              "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
              "type": "object",
              "additionalProperties": true
            }
          },
          "type": {
            "description": "The category of the associated medication knowledge reference.",
            "type": "object",
            "properties": {
              "coding": {
                "type": "array",
                "items": {
                  "description": "A reference to a code defined by a terminology system.",
                  "type": "object",
                  "properties": {
                    "system": {
                      "type": "string",
                      "pattern": "\\S*",
                      "description": "The identification of the code system that defines the meaning of the symbol in the code."
                    },
                    "version": {
                      "type": "string",
                      "pattern": "[ \\r\\n\\t\\S]+",
                      "description": "The version of the code system which was used when choosing this code. Note that a well&ndash;maintained code system does not need the version reported, because the meaning of codes is consistent across versions. However this cannot consistently be assured, and when the meaning is not guaranteed to be consistent, the version SHOULD be exchanged."
                    },
                    "code": {
                      "type": "string",
                      "pattern": "[^\\s]+(\\s[^\\s]+)*",
                      "description": "A symbol in syntax defined by the system. The symbol may be a predefined code or an expression in a syntax defined by the coding system (e.g. post&ndash;coordination)."
                    },
                    "display": {
                      "type": "string",
                      "pattern": "[ \\r\\n\\t\\S]+",
                      "description": "A representation of the meaning of the code in the system, following the rules of the system."
                    },
                    "userSelected": {
                      "type": "boolean",
                      "description": "Indicates that this coding was chosen by a user directly &ndash; e.g. off a pick list of available items (codes or displays)."
                    }
                  }
                }
              },
              "text": {
                "type": "string",
                "pattern": "[ \\r\\n\\t\\S]+",
                "description": "A human language representation of the concept as seen/selected/uttered by the user who entered the data and/or which represents the intended meaning of the user."
              }
            }
          },
          "reference": {
            "type": "array",
            "items": {
              "description": "Associated documentation about the associated medication knowledge.",
              "type": "object",
              "properties": {
                "reference": {
                  "type": "string",
                  "pattern": "[ \\r\\n\\t\\S]+",
                  "description": "A reference to a location at which the other resource is found. The reference may be a relative reference, in which case it is relative to the service base URL, or an absolute URL that resolves to the location where the resource is found. The reference may be version specific or not. If the reference is not to a FHIR RESTful server, then it should be assumed to be version specific. Internal fragment references (start with '#') refer to contained resources."
                },
                "type": {
                  "type": "string",
                  "pattern": "\\S*",
                  "description": "The expected type of the target of the reference. If both Reference.type and Reference.reference are populated and Reference.reference is a FHIR URL, both SHALL be consistent.\n\nThe type is the Canonical URL of Resource Definition that is the type this reference refers to. References are URLs that are relative to http://hl7.org/fhir/StructureDefinition/ e.g. \"Patient\" is a reference to http://hl7.org/fhir/StructureDefinition/Patient. Absolute URLs are only allowed for logical models (and can only be used in references in logical models, not resources)."
                },
                "identifier": {
                  "type": "object",
                  "additionalProperties": true,
                  "description": "An identifier for the target resource. This is used when there is no way to reference the other resource directly, either because the entity it represents is not available through a FHIR server, or because there is no way for the author of the resource to convert a known identifier to an actual location. There is no requirement that a Reference.identifier point to something that is actually exposed as a FHIR instance, but it SHALL point to a business concept that would be expected to be exposed as a FHIR instance, and that instance would need to be of a FHIR resource type allowed by the reference."
                },
                "display": {
                  "type": "string",
                  "pattern": "[ \\r\\n\\t\\S]+",
                  "description": "Plain text narrative that identifies the resource in addition to the resource reference."
                }
              }
            },
            "minItems": 1
          }
        },
        "required": [
          "type",
          "reference"
        ]
      }
    },
    "associatedMedication": {
      "type": "array",
      "items": {
        "description": "Associated or related medications.  For example, if the medication is a branded product (e.g. Crestor), this is the Therapeutic Moeity (e.g. Rosuvastatin) or if this is a generic medication (e.g. Rosuvastatin), this would link to a branded product (e.g. Crestor).",
        "type": "object",
        "properties": {
          "reference": {
            "type": "string",
            "pattern": "[ \\r\\n\\t\\S]+",
            "description": "A reference to a location at which the other resource is found. The reference may be a relative reference, in which case it is relative to the service base URL, or an absolute URL that resolves to the location where the resource is found. The reference may be version specific or not. If the reference is not to a FHIR RESTful server, then it should be assumed to be version specific. Internal fragment references (start with '#') refer to contained resources."
          },
          "type": {
            "type": "string",
            "pattern": "\\S*",
            "description": "The expected type of the target of the reference. If both Reference.type and Reference.reference are populated and Reference.reference is a FHIR URL, both SHALL be consistent.\n\nThe type is the Canonical URL of Resource Definition that is the type this reference refers to. References are URLs that are relative to http://hl7.org/fhir/StructureDefinition/ e.g. \"Patient\" is a reference to http://hl7.org/fhir/StructureDefinition/Patient. Absolute URLs are only allowed for logical models (and can only be used in references in logical models, not resources)."
          },
          "identifier": {
            "type": "object",
            "additionalProperties": true,
            "description": "An identifier for the target resource. This is used when there is no way to reference the other resource directly, either because the entity it represents is not available through a FHIR server, or because there is no way for the author of the resource to convert a known identifier to an actual location. There is no requirement that a Reference.identifier point to something that is actually exposed as a FHIR instance, but it SHALL point to a business concept that would be expected to be exposed as a FHIR instance, and that instance would need to be of a FHIR resource type allowed by the reference."
          },
          "display": {
            "type": "string",
            "pattern": "[ \\r\\n\\t\\S]+",
            "description": "Plain text narrative that identifies the resource in addition to the resource reference."
          }
        }
      }
    },
    "productType": {
      "type": "array",
      "items": {
        "description": "Category of the medication or product (e.g. branded product, therapeutic moeity, generic product, innovator product, etc.).",
        "type": "object",
        "properties": {
          "coding": {
            "type": "array",
            "items": {
              "description": "A reference to a code defined by a terminology system.",
              "type": "object",
              "properties": {
                "system": {
                  "type": "string",
                  "pattern": "\\S*",
                  "description": "The identification of the code system that defines the meaning of the symbol in the code."
                },
                "version": {
                  "type": "string",
                  "pattern": "[ \\r\\n\\t\\S]+",
                  "description": "The version of the code system which was used when choosing this code. Note that a well&ndash;maintained code system does not need the version reported, because the meaning of codes is consistent across versions. However this cannot consistently be assured, and when the meaning is not guaranteed to be consistent, the version SHOULD be exchanged."
                },
                "code": {
                  "type": "string",
                  "pattern": "[^\\s]+(\\s[^\\s]+)*",
                  "description": "A symbol in syntax defined by the system. The symbol may be a predefined code or an expression in a syntax defined by the coding system (e.g. post&ndash;coordination)."
                },
                "display": {
                  "type": "string",
                  "pattern": "[ \\r\\n\\t\\S]+",
                  "description": "A representation of the meaning of the code in the system, following the rules of the system."
                },
                "userSelected": {
                  "type": "boolean",
                  "description": "Indicates that this coding was chosen by a user directly &ndash; e.g. off a pick list of available items (codes or displays)."
                }
              }
            }
          },
          "text": {
            "type": "string",
            "pattern": "[ \\r\\n\\t\\S]+",
            "description": "A human language representation of the concept as seen/selected/uttered by the user who entered the data and/or which represents the intended meaning of the user."
          }
        }
      }
    },
    "monograph": {
      "type": "array",
      "items": {
        "description": "Associated documentation about the medication.",
        "type": "object",
        "properties": {
          "modifierExtension": {
            "type": "array",
            "items": {
              "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
              "type": "object",
              "additionalProperties": true
            }
          },
          "type": {
            "description": "The category of documentation about the medication. (e.g. professional monograph, patient education monograph).",
            "type": "object",
            "properties": {
              "coding": {
                "type": "array",
                "items": {
                  "description": "A reference to a code defined by a terminology system.",
                  "type": "object",
                  "properties": {
                    "system": {
                      "type": "string",
                      "pattern": "\\S*",
                      "description": "The identification of the code system that defines the meaning of the symbol in the code."
                    },
                    "version": {
                      "type": "string",
                      "pattern": "[ \\r\\n\\t\\S]+",
                      "description": "The version of the code system which was used when choosing this code. Note that a well&ndash;maintained code system does not need the version reported, because the meaning of codes is consistent across versions. However this cannot consistently be assured, and when the meaning is not guaranteed to be consistent, the version SHOULD be exchanged."
                    },
                    "code": {
                      "type": "string",
                      "pattern": "[^\\s]+(\\s[^\\s]+)*",
                      "description": "A symbol in syntax defined by the system. The symbol may be a predefined code or an expression in a syntax defined by the coding system (e.g. post&ndash;coordination)."
                    },
                    "display": {
                      "type": "string",
                      "pattern": "[ \\r\\n\\t\\S]+",
                      "description": "A representation of the meaning of the code in the system, following the rules of the system."
                    },
                    "userSelected": {
                      "type": "boolean",
                      "description": "Indicates that this coding was chosen by a user directly &ndash; e.g. off a pick list of available items (codes or displays)."
                    }
                  }
                }
              },
              "text": {
                "type": "string",
                "pattern": "[ \\r\\n\\t\\S]+",
                "description": "A human language representation of the concept as seen/selected/uttered by the user who entered the data and/or which represents the intended meaning of the user."
              }
            }
          },
          "source": {
            "description": "Associated documentation about the medication.",
            "type": "object",
            "properties": {
              "reference": {
                "type": "string",
                "pattern": "[ \\r\\n\\t\\S]+",
                "description": "A reference to a location at which the other resource is found. The reference may be a relative reference, in which case it is relative to the service base URL, or an absolute URL that resolves to the location where the resource is found. The reference may be version specific or not. If the reference is not to a FHIR RESTful server, then it should be assumed to be version specific. Internal fragment references (start with '#') refer to contained resources."
              },
              "type": {
                "type": "string",
                "pattern": "\\S*",
                "description": "The expected type of the target of the reference. If both Reference.type and Reference.reference are populated and Reference.reference is a FHIR URL, both SHALL be consistent.\n\nThe type is the Canonical URL of Resource Definition that is the type this reference refers to. References are URLs that are relative to http://hl7.org/fhir/StructureDefinition/ e.g. \"Patient\" is a reference to http://hl7.org/fhir/StructureDefinition/Patient. Absolute URLs are only allowed for logical models (and can only be used in references in logical models, not resources)."
              },
              "identifier": {
                "type": "object",
                "additionalProperties": true,
                "description": "An identifier for the target resource. This is used when there is no way to reference the other resource directly, either because the entity it represents is not available through a FHIR server, or because there is no way for the author of the resource to convert a known identifier to an actual location. There is no requirement that a Reference.identifier point to something that is actually exposed as a FHIR instance, but it SHALL point to a business concept that would be expected to be exposed as a FHIR instance, and that instance would need to be of a FHIR resource type allowed by the reference."
              },
              "display": {
                "type": "string",
                "pattern": "[ \\r\\n\\t\\S]+",
                "description": "Plain text narrative that identifies the resource in addition to the resource reference."
              }
            }
          }
        }
      }
    },
    "ingredient": {
      "type": "array",
      "items": {
        "description": "Identifies a particular constituent of interest in the product.",
        "type": "object",
        "properties": {
          "modifierExtension": {
            "type": "array",
            "items": {
              "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
              "type": "object",
              "additionalProperties": true
            }
          },
          "itemCodeableConcept": {
            "description": "The actual ingredient &ndash; either a substance (simple ingredient) or another medication.",
            "type": "object",
            "properties": {
              "coding": {
                "type": "array",
                "items": {
                  "description": "A reference to a code defined by a terminology system.",
                  "type": "object",
                  "properties": {
                    "system": {
                      "type": "string",
                      "pattern": "\\S*",
                      "description": "The identification of the code system that defines the meaning of the symbol in the code."
                    },
                    "version": {
                      "type": "string",
                      "pattern": "[ \\r\\n\\t\\S]+",
                      "description": "The version of the code system which was used when choosing this code. Note that a well&ndash;maintained code system does not need the version reported, because the meaning of codes is consistent across versions. However this cannot consistently be assured, and when the meaning is not guaranteed to be consistent, the version SHOULD be exchanged."
                    },
                    "code": {
                      "type": "string",
                      "pattern": "[^\\s]+(\\s[^\\s]+)*",
                      "description": "A symbol in syntax defined by the system. The symbol may be a predefined code or an expression in a syntax defined by the coding system (e.g. post&ndash;coordination)."
                    },
                    "display": {
                      "type": "string",
                      "pattern": "[ \\r\\n\\t\\S]+",
                      "description": "A representation of the meaning of the code in the system, following the rules of the system."
                    },
                    "userSelected": {
                      "type": "boolean",
                      "description": "Indicates that this coding was chosen by a user directly &ndash; e.g. off a pick list of available items (codes or displays)."
                    }
                  }
                }
              },
              "text": {
                "type": "string",
                "pattern": "[ \\r\\n\\t\\S]+",
                "description": "A human language representation of the concept as seen/selected/uttered by the user who entered the data and/or which represents the intended meaning of the user."
              }
            }
          },
          "itemReference": {
            "description": "The actual ingredient &ndash; either a substance (simple ingredient) or another medication.",
            "type": "object",
            "properties": {
              "reference": {
                "type": "string",
                "pattern": "[ \\r\\n\\t\\S]+",
                "description": "A reference to a location at which the other resource is found. The reference may be a relative reference, in which case it is relative to the service base URL, or an absolute URL that resolves to the location where the resource is found. The reference may be version specific or not. If the reference is not to a FHIR RESTful server, then it should be assumed to be version specific. Internal fragment references (start with '#') refer to contained resources."
              },
              "type": {
                "type": "string",
                "pattern": "\\S*",
                "description": "The expected type of the target of the reference. If both Reference.type and Reference.reference are populated and Reference.reference is a FHIR URL, both SHALL be consistent.\n\nThe type is the Canonical URL of Resource Definition that is the type this reference refers to. References are URLs that are relative to http://hl7.org/fhir/StructureDefinition/ e.g. \"Patient\" is a reference to http://hl7.org/fhir/StructureDefinition/Patient. Absolute URLs are only allowed for logical models (and can only be used in references in logical models, not resources)."
              },
              "identifier": {
                "type": "object",
                "additionalProperties": true,
                "description": "An identifier for the target resource. This is used when there is no way to reference the other resource directly, either because the entity it represents is not available through a FHIR server, or because there is no way for the author of the resource to convert a known identifier to an actual location. There is no requirement that a Reference.identifier point to something that is actually exposed as a FHIR instance, but it SHALL point to a business concept that would be expected to be exposed as a FHIR instance, and that instance would need to be of a FHIR resource type allowed by the reference."
              },
              "display": {
                "type": "string",
                "pattern": "[ \\r\\n\\t\\S]+",
                "description": "Plain text narrative that identifies the resource in addition to the resource reference."
              }
            }
          },
          "isActive": {
            "type": "boolean",
            "description": "Indication of whether this ingredient affects the therapeutic action of the drug."
          },
          "strength": {
            "description": "Specifies how many (or how much) of the items there are in this Medication.  For example, 250 mg per tablet.  This is expressed as a ratio where the numerator is 250mg and the denominator is 1 tablet.",
            "type": "object",
            "properties": {
              "numerator": {
                "description": "The value of the numerator.",
                "type": "object",
                "properties": {
                  "value": {
                    "type": "number",
                    "description": "The value of the measured amount. The value includes an implicit precision in the presentation of the value."
                  },
                  "comparator": {
                    "type": "string",
                    "enum": [
                      "<",
                      "<=",
                      ">=",
                      ">"
                    ],
                    "description": "How the value should be understood and represented &ndash; whether the actual value is greater or less than the stated value due to measurement issues; e.g. if the comparator is \"<\" , then the real value is < stated value."
                  },
                  "unit": {
                    "type": "string",
                    "pattern": "[ \\r\\n\\t\\S]+",
                    "description": "A human&ndash;readable form of the unit."
                  },
                  "system": {
                    "type": "string",
                    "pattern": "\\S*",
                    "description": "The identification of the system that provides the coded form of the unit."
                  },
                  "code": {
                    "type": "string",
                    "pattern": "[^\\s]+(\\s[^\\s]+)*",
                    "description": "A computer processable form of the unit in some unit representation system."
                  }
                }
              },
              "denominator": {
                "description": "The value of the denominator.",
                "type": "object",
                "properties": {
                  "value": {
                    "type": "number",
                    "description": "The value of the measured amount. The value includes an implicit precision in the presentation of the value."
                  },
                  "comparator": {
                    "type": "string",
                    "enum": [
                      "<",
                      "<=",
                      ">=",
                      ">"
                    ],
                    "description": "How the value should be understood and represented &ndash; whether the actual value is greater or less than the stated value due to measurement issues; e.g. if the comparator is \"<\" , then the real value is < stated value."
                  },
                  "unit": {
                    "type": "string",
                    "pattern": "[ \\r\\n\\t\\S]+",
                    "description": "A human&ndash;readable form of the unit."
                  },
                  "system": {
                    "type": "string",
                    "pattern": "\\S*",
                    "description": "The identification of the system that provides the coded form of the unit."
                  },
                  "code": {
                    "type": "string",
                    "pattern": "[^\\s]+(\\s[^\\s]+)*",
                    "description": "A computer processable form of the unit in some unit representation system."
                  }
                }
              }
            }
          }
        }
      }
    },
    "preparationInstruction": {
      "type": "string",
      "pattern": "[ \\r\\n\\t\\S]+",
      "description": "The instructions for preparing the medication."
    },
    "intendedRoute": {
      "type": "array",
      "items": {
        "description": "The intended or approved route of administration.",
        "type": "object",
        "properties": {
          "coding": {
            "type": "array",
            "items": {
              "description": "A reference to a code defined by a terminology system.",
              "type": "object",
              "properties": {
                "system": {
                  "type": "string",
                  "pattern": "\\S*",
                  "description": "The identification of the code system that defines the meaning of the symbol in the code."
                },
                "version": {
                  "type": "string",
                  "pattern": "[ \\r\\n\\t\\S]+",
                  "description": "The version of the code system which was used when choosing this code. Note that a well&ndash;maintained code system does not need the version reported, because the meaning of codes is consistent across versions. However this cannot consistently be assured, and when the meaning is not guaranteed to be consistent, the version SHOULD be exchanged."
                },
                "code": {
                  "type": "string",
                  "pattern": "[^\\s]+(\\s[^\\s]+)*",
                  "description": "A symbol in syntax defined by the system. The symbol may be a predefined code or an expression in a syntax defined by the coding system (e.g. post&ndash;coordination)."
                },
                "display": {
                  "type": "string",
                  "pattern": "[ \\r\\n\\t\\S]+",
                  "description": "A representation of the meaning of the code in the system, following the rules of the system."
                },
                "userSelected": {
                  "type": "boolean",
                  "description": "Indicates that this coding was chosen by a user directly &ndash; e.g. off a pick list of available items (codes or displays)."
                }
              }
            }
          },
          "text": {
            "type": "string",
            "pattern": "[ \\r\\n\\t\\S]+",
            "description": "A human language representation of the concept as seen/selected/uttered by the user who entered the data and/or which represents the intended meaning of the user."
          }
        }
      }
    },
    "cost": {
      "type": "array",
      "items": {
        "description": "The price of the medication.",
        "type": "object",
        "properties": {
          "modifierExtension": {
            "type": "array",
            "items": {
              "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
              "type": "object",
              "additionalProperties": true
            }
          },
          "type": {
            "description": "The category of the cost information.  For example, manufacturers' cost, patient cost, claim reimbursement cost, actual acquisition cost.",
            "type": "object",
            "properties": {
              "coding": {
                "type": "array",
                "items": {
                  "description": "A reference to a code defined by a terminology system.",
                  "type": "object",
                  "properties": {
                    "system": {
                      "type": "string",
                      "pattern": "\\S*",
                      "description": "The identification of the code system that defines the meaning of the symbol in the code."
                    },
                    "version": {
                      "type": "string",
                      "pattern": "[ \\r\\n\\t\\S]+",
                      "description": "The version of the code system which was used when choosing this code. Note that a well&ndash;maintained code system does not need the version reported, because the meaning of codes is consistent across versions. However this cannot consistently be assured, and when the meaning is not guaranteed to be consistent, the version SHOULD be exchanged."
                    },
                    "code": {
                      "type": "string",
                      "pattern": "[^\\s]+(\\s[^\\s]+)*",
                      "description": "A symbol in syntax defined by the system. The symbol may be a predefined code or an expression in a syntax defined by the coding system (e.g. post&ndash;coordination)."
                    },
                    "display": {
                      "type": "string",
                      "pattern": "[ \\r\\n\\t\\S]+",
                      "description": "A representation of the meaning of the code in the system, following the rules of the system."
                    },
                    "userSelected": {
                      "type": "boolean",
                      "description": "Indicates that this coding was chosen by a user directly &ndash; e.g. off a pick list of available items (codes or displays)."
                    }
                  }
                }
              },
              "text": {
                "type": "string",
                "pattern": "[ \\r\\n\\t\\S]+",
                "description": "A human language representation of the concept as seen/selected/uttered by the user who entered the data and/or which represents the intended meaning of the user."
              }
            }
          },
          "source": {
            "type": "string",
            "pattern": "[ \\r\\n\\t\\S]+",
            "description": "The source or owner that assigns the price to the medication."
          },
          "cost": {
            "description": "The price of the medication.",
            "type": "object",
            "properties": {
              "value": {
                "type": "number",
                "description": "Numerical value (with implicit precision)."
              },
              "currency": {
                "type": "string",
                "pattern": "[^\\s]+(\\s[^\\s]+)*",
                "description": "ISO 4217 Currency Code."
              }
            }
          }
        },
        "required": [
          "type",
          "cost"
        ]
      }
    },
    "monitoringProgram": {
      "type": "array",
      "items": {
        "description": "The program under which the medication is reviewed.",
        "type": "object",
        "properties": {
          "modifierExtension": {
            "type": "array",
            "items": {
              "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
              "type": "object",
              "additionalProperties": true
            }
          },
          "type": {
            "description": "Type of program under which the medication is monitored.",
            "type": "object",
            "properties": {
              "coding": {
                "type": "array",
                "items": {
                  "description": "A reference to a code defined by a terminology system.",
                  "type": "object",
                  "properties": {
                    "system": {
                      "type": "string",
                      "pattern": "\\S*",
                      "description": "The identification of the code system that defines the meaning of the symbol in the code."
                    },
                    "version": {
                      "type": "string",
                      "pattern": "[ \\r\\n\\t\\S]+",
                      "description": "The version of the code system which was used when choosing this code. Note that a well&ndash;maintained code system does not need the version reported, because the meaning of codes is consistent across versions. However this cannot consistently be assured, and when the meaning is not guaranteed to be consistent, the version SHOULD be exchanged."
                    },
                    "code": {
                      "type": "string",
                      "pattern": "[^\\s]+(\\s[^\\s]+)*",
                      "description": "A symbol in syntax defined by the system. The symbol may be a predefined code or an expression in a syntax defined by the coding system (e.g. post&ndash;coordination)."
                    },
                    "display": {
                      "type": "string",
                      "pattern": "[ \\r\\n\\t\\S]+",
                      "description": "A representation of the meaning of the code in the system, following the rules of the system."
                    },
                    "userSelected": {
                      "type": "boolean",
                      "description": "Indicates that this coding was chosen by a user directly &ndash; e.g. off a pick list of available items (codes or displays)."
                    }
                  }
                }
              },
              "text": {
                "type": "string",
                "pattern": "[ \\r\\n\\t\\S]+",
                "description": "A human language representation of the concept as seen/selected/uttered by the user who entered the data and/or which represents the intended meaning of the user."
              }
            }
          },
          "name": {
            "type": "string",
            "pattern": "[ \\r\\n\\t\\S]+",
            "description": "Name of the reviewing program."
          }
        }
      }
    },
    "administrationGuidelines": {
      "type": "array",
      "items": {
        "description": "Guidelines for the administration of the medication.",
        "type": "object",
        "properties": {
          "modifierExtension": {
            "type": "array",
            "items": {
              "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
              "type": "object",
              "additionalProperties": true
            }
          },
          "dosage": {
            "type": "array",
            "items": {
              "description": "Dosage for the medication for the specific guidelines.",
              "type": "object",
              "properties": {
                "modifierExtension": {
                  "type": "array",
                  "items": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                    "type": "object",
                    "additionalProperties": true
                  }
                },
                "type": {
                  "description": "The type of dosage (for example, prophylaxis, maintenance, therapeutic, etc.).",
                  "type": "object",
                  "properties": {
                    "coding": {
                      "type": "array",
                      "items": {
                        "description": "A reference to a code defined by a terminology system.",
                        "type": "object",
                        "properties": {
                          "system": {
                            "type": "string",
                            "pattern": "\\S*",
                            "description": "The identification of the code system that defines the meaning of the symbol in the code."
                          },
                          "version": {
                            "type": "string",
                            "pattern": "[ \\r\\n\\t\\S]+",
                            "description": "The version of the code system which was used when choosing this code. Note that a well&ndash;maintained code system does not need the version reported, because the meaning of codes is consistent across versions. However this cannot consistently be assured, and when the meaning is not guaranteed to be consistent, the version SHOULD be exchanged."
                          },
                          "code": {
                            "type": "string",
                            "pattern": "[^\\s]+(\\s[^\\s]+)*",
                            "description": "A symbol in syntax defined by the system. The symbol may be a predefined code or an expression in a syntax defined by the coding system (e.g. post&ndash;coordination)."
                          },
                          "display": {
                            "type": "string",
                            "pattern": "[ \\r\\n\\t\\S]+",
                            "description": "A representation of the meaning of the code in the system, following the rules of the system."
                          },
                          "userSelected": {
                            "type": "boolean",
                            "description": "Indicates that this coding was chosen by a user directly &ndash; e.g. off a pick list of available items (codes or displays)."
                          }
                        }
                      }
                    },
                    "text": {
                      "type": "string",
                      "pattern": "[ \\r\\n\\t\\S]+",
                      "description": "A human language representation of the concept as seen/selected/uttered by the user who entered the data and/or which represents the intended meaning of the user."
                    }
                  }
                },
                "dosage": {
                  "type": "array",
                  "items": {
                    "description": "Dosage for the medication for the specific guidelines.",
                    "type": "object",
                    "properties": {
                      "modifierExtension": {
                        "type": "array",
                        "items": {
                          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                          "type": "object",
                          "additionalProperties": true
                        }
                      },
                      "sequence": {
                        "type": "integer",
                        "format": "int32",
                        "description": "Indicates the order in which the dosage instructions should be applied or interpreted."
                      },
                      "text": {
                        "type": "string",
                        "pattern": "[ \\r\\n\\t\\S]+",
                        "description": "Free text dosage instructions e.g. SIG."
                      },
                      "additionalInstruction": {
                        "type": "array",
                        "items": {
                          "description": "Supplemental instructions to the patient on how to take the medication  (e.g. \"with meals\" or\"take half to one hour before food\") or warnings for the patient about the medication (e.g. \"may cause drowsiness\" or \"avoid exposure of skin to direct sunlight or sunlamps\").",
                          "type": "object",
                          "properties": {
                            "coding": {
                              "type": "array",
                              "items": {
                                "description": "A reference to a code defined by a terminology system.",
                                "type": "object",
                                "properties": {
                                  "system": {
                                    "type": "string",
                                    "pattern": "\\S*",
                                    "description": "The identification of the code system that defines the meaning of the symbol in the code."
                                  },
                                  "version": {
                                    "type": "string",
                                    "pattern": "[ \\r\\n\\t\\S]+",
                                    "description": "The version of the code system which was used when choosing this code. Note that a well&ndash;maintained code system does not need the version reported, because the meaning of codes is consistent across versions. However this cannot consistently be assured, and when the meaning is not guaranteed to be consistent, the version SHOULD be exchanged."
                                  },
                                  "code": {
                                    "type": "string",
                                    "pattern": "[^\\s]+(\\s[^\\s]+)*",
                                    "description": "A symbol in syntax defined by the system. The symbol may be a predefined code or an expression in a syntax defined by the coding system (e.g. post&ndash;coordination)."
                                  },
                                  "display": {
                                    "type": "string",
                                    "pattern": "[ \\r\\n\\t\\S]+",
                                    "description": "A representation of the meaning of the code in the system, following the rules of the system."
                                  },
                                  "userSelected": {
                                    "type": "boolean",
                                    "description": "Indicates that this coding was chosen by a user directly &ndash; e.g. off a pick list of available items (codes or displays)."
                                  }
                                }
                              }
                            },
                            "text": {
                              "type": "string",
                              "pattern": "[ \\r\\n\\t\\S]+",
                              "description": "A human language representation of the concept as seen/selected/uttered by the user who entered the data and/or which represents the intended meaning of the user."
                            }
                          }
                        }
                      },
                      "patientInstruction": {
                        "type": "string",
                        "pattern": "[ \\r\\n\\t\\S]+",
                        "description": "Instructions in terms that are understood by the patient or consumer."
                      },
                      "timing": {
                        "description": "When medication should be administered.",
                        "type": "object",
                        "properties": {
                          "modifierExtension": {
                            "type": "array",
                            "items": {
                              "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                              "type": "object",
                              "additionalProperties": true
                            }
                          },
                          "event": {
                            "type": "array",
                            "items": {
                              "type": "string",
                              "pattern": "([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?",
                              "description": "Identifies specific times when the event occurs."
                            }
                          },
                          "repeat": {
                            "description": "A set of rules that describe when the event is scheduled.",
                            "type": "object",
                            "properties": {
                              "modifierExtension": {
                                "type": "array",
                                "items": {
                                  "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                                  "type": "object",
                                  "additionalProperties": true
                                }
                              },
                              "boundsDuration": {
                                "description": "Either a duration for the length of the timing schedule, a range of possible length, or outer bounds for start and/or end limits of the timing schedule.",
                                "type": "object",
                                "properties": {
                                  "value": {
                                    "type": "number",
                                    "description": "The value of the measured amount. The value includes an implicit precision in the presentation of the value."
                                  },
                                  "comparator": {
                                    "type": "string",
                                    "enum": [
                                      "<",
                                      "<=",
                                      ">=",
                                      ">"
                                    ],
                                    "description": "How the value should be understood and represented &ndash; whether the actual value is greater or less than the stated value due to measurement issues; e.g. if the comparator is \"<\" , then the real value is < stated value."
                                  },
                                  "unit": {
                                    "type": "string",
                                    "pattern": "[ \\r\\n\\t\\S]+",
                                    "description": "A human&ndash;readable form of the unit."
                                  },
                                  "system": {
                                    "type": "string",
                                    "pattern": "\\S*",
                                    "description": "The identification of the system that provides the coded form of the unit."
                                  },
                                  "code": {
                                    "type": "string",
                                    "pattern": "[^\\s]+(\\s[^\\s]+)*",
                                    "description": "A computer processable form of the unit in some unit representation system."
                                  }
                                }
                              },
                              "boundsRange": {
                                "description": "Either a duration for the length of the timing schedule, a range of possible length, or outer bounds for start and/or end limits of the timing schedule.",
                                "type": "object",
                                "properties": {
                                  "low": {
                                    "description": "The low limit. The boundary is inclusive.",
                                    "type": "object",
                                    "properties": {
                                      "value": {
                                        "type": "number",
                                        "description": "The value of the measured amount. The value includes an implicit precision in the presentation of the value."
                                      },
                                      "comparator": {
                                        "type": "string",
                                        "enum": [
                                          "<",
                                          "<=",
                                          ">=",
                                          ">"
                                        ],
                                        "description": "How the value should be understood and represented &ndash; whether the actual value is greater or less than the stated value due to measurement issues; e.g. if the comparator is \"<\" , then the real value is < stated value."
                                      },
                                      "unit": {
                                        "type": "string",
                                        "pattern": "[ \\r\\n\\t\\S]+",
                                        "description": "A human&ndash;readable form of the unit."
                                      },
                                      "system": {
                                        "type": "string",
                                        "pattern": "\\S*",
                                        "description": "The identification of the system that provides the coded form of the unit."
                                      },
                                      "code": {
                                        "type": "string",
                                        "pattern": "[^\\s]+(\\s[^\\s]+)*",
                                        "description": "A computer processable form of the unit in some unit representation system."
                                      }
                                    }
                                  },
                                  "high": {
                                    "description": "The high limit. The boundary is inclusive.",
                                    "type": "object",
                                    "properties": {
                                      "value": {
                                        "type": "number",
                                        "description": "The value of the measured amount. The value includes an implicit precision in the presentation of the value."
                                      },
                                      "comparator": {
                                        "type": "string",
                                        "enum": [
                                          "<",
                                          "<=",
                                          ">=",
                                          ">"
                                        ],
                                        "description": "How the value should be understood and represented &ndash; whether the actual value is greater or less than the stated value due to measurement issues; e.g. if the comparator is \"<\" , then the real value is < stated value."
                                      },
                                      "unit": {
                                        "type": "string",
                                        "pattern": "[ \\r\\n\\t\\S]+",
                                        "description": "A human&ndash;readable form of the unit."
                                      },
                                      "system": {
                                        "type": "string",
                                        "pattern": "\\S*",
                                        "description": "The identification of the system that provides the coded form of the unit."
                                      },
                                      "code": {
                                        "type": "string",
                                        "pattern": "[^\\s]+(\\s[^\\s]+)*",
                                        "description": "A computer processable form of the unit in some unit representation system."
                                      }
                                    }
                                  }
                                }
                              },
                              "boundsPeriod": {
                                "description": "Either a duration for the length of the timing schedule, a range of possible length, or outer bounds for start and/or end limits of the timing schedule.",
                                "type": "object",
                                "properties": {
                                  "start": {
                                    "type": "string",
                                    "pattern": "([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?",
                                    "description": "The start of the period. The boundary is inclusive."
                                  },
                                  "end": {
                                    "type": "string",
                                    "pattern": "([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?",
                                    "description": "The end of the period. If the end of the period is missing, it means no end was known or planned at the time the instance was created. The start may be in the past, and the end date in the future, which means that period is expected/planned to end at that time."
                                  }
                                }
                              },
                              "count": {
                                "type": "integer",
                                "format": "int32",
                                "description": "A total count of the desired number of repetitions across the duration of the entire timing specification. If countMax is present, this element indicates the lower bound of the allowed range of count values."
                              },
                              "countMax": {
                                "type": "integer",
                                "format": "int32",
                                "description": "If present, indicates that the count is a range &ndash; so to perform the action between [count] and [countMax] times."
                              },
                              "duration": {
                                "type": "number",
                                "description": "How long this thing happens for when it happens. If durationMax is present, this element indicates the lower bound of the allowed range of the duration."
                              },
                              "durationMax": {
                                "type": "number",
                                "description": "If present, indicates that the duration is a range &ndash; so to perform the action between [duration] and [durationMax] time length."
                              },
                              "durationUnit": {
                                "type": "string",
                                "enum": [
                                  "s",
                                  "min",
                                  "h",
                                  "d",
                                  "wk",
                                  "mo",
                                  "a"
                                ],
                                "description": "The units of time for the duration, in UCUM units."
                              },
                              "frequency": {
                                "type": "integer",
                                "format": "int32",
                                "description": "The number of times to repeat the action within the specified period. If frequencyMax is present, this element indicates the lower bound of the allowed range of the frequency."
                              },
                              "frequencyMax": {
                                "type": "integer",
                                "format": "int32",
                                "description": "If present, indicates that the frequency is a range &ndash; so to repeat between [frequency] and [frequencyMax] times within the period or period range."
                              },
                              "period": {
                                "type": "number",
                                "description": "Indicates the duration of time over which repetitions are to occur; e.g. to express \"3 times per day\", 3 would be the frequency and \"1 day\" would be the period. If periodMax is present, this element indicates the lower bound of the allowed range of the period length."
                              },
                              "periodMax": {
                                "type": "number",
                                "description": "If present, indicates that the period is a range from [period] to [periodMax], allowing expressing concepts such as \"do this once every 3&ndash;5 days."
                              },
                              "periodUnit": {
                                "type": "string",
                                "enum": [
                                  "s",
                                  "min",
                                  "h",
                                  "d",
                                  "wk",
                                  "mo",
                                  "a"
                                ],
                                "description": "The units of time for the period in UCUM units."
                              },
                              "dayOfWeek": {
                                "type": "array",
                                "items": {
                                  "type": "string",
                                  "enum": [
                                    "mon",
                                    "tue",
                                    "wed",
                                    "thu",
                                    "fri",
                                    "sat",
                                    "sun"
                                  ],
                                  "description": "If one or more days of week is provided, then the action happens only on the specified day(s)."
                                }
                              },
                              "timeOfDay": {
                                "type": "array",
                                "items": {
                                  "type": "string",
                                  "pattern": "([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?",
                                  "description": "Specified time of day for action to take place."
                                }
                              },
                              "when": {
                                "type": "array",
                                "items": {
                                  "type": "string",
                                  "enum": [
                                    "MORN",
                                    "MORN.early",
                                    "MORN.late",
                                    "NOON",
                                    "AFT",
                                    "AFT.early",
                                    "AFT.late",
                                    "EVE",
                                    "EVE.early",
                                    "EVE.late",
                                    "NIGHT",
                                    "PHS",
                                    "HS",
                                    "WAKE",
                                    "C",
                                    "CM",
                                    "CD",
                                    "CV",
                                    "AC",
                                    "ACM",
                                    "ACD",
                                    "ACV",
                                    "PC",
                                    "PCM",
                                    "PCD",
                                    "PCV"
                                  ],
                                  "description": "An approximate time period during the day, potentially linked to an event of daily living that indicates when the action should occur."
                                }
                              },
                              "offset": {
                                "type": "integer",
                                "format": "int32",
                                "description": "The number of minutes from the event. If the event code does not indicate whether the minutes is before or after the event, then the offset is assumed to be after the event."
                              }
                            }
                          },
                          "code": {
                            "description": "A code for the timing schedule (or just text in code.text). Some codes such as BID are ubiquitous, but many institutions define their own additional codes. If a code is provided, the code is understood to be a complete statement of whatever is specified in the structured timing data, and either the code or the data may be used to interpret the Timing, with the exception that .repeat.bounds still applies over the code (and is not contained in the code).",
                            "type": "object",
                            "properties": {
                              "coding": {
                                "type": "array",
                                "items": {
                                  "description": "A reference to a code defined by a terminology system.",
                                  "type": "object",
                                  "properties": {
                                    "system": {
                                      "type": "string",
                                      "pattern": "\\S*",
                                      "description": "The identification of the code system that defines the meaning of the symbol in the code."
                                    },
                                    "version": {
                                      "type": "string",
                                      "pattern": "[ \\r\\n\\t\\S]+",
                                      "description": "The version of the code system which was used when choosing this code. Note that a well&ndash;maintained code system does not need the version reported, because the meaning of codes is consistent across versions. However this cannot consistently be assured, and when the meaning is not guaranteed to be consistent, the version SHOULD be exchanged."
                                    },
                                    "code": {
                                      "type": "string",
                                      "pattern": "[^\\s]+(\\s[^\\s]+)*",
                                      "description": "A symbol in syntax defined by the system. The symbol may be a predefined code or an expression in a syntax defined by the coding system (e.g. post&ndash;coordination)."
                                    },
                                    "display": {
                                      "type": "string",
                                      "pattern": "[ \\r\\n\\t\\S]+",
                                      "description": "A representation of the meaning of the code in the system, following the rules of the system."
                                    },
                                    "userSelected": {
                                      "type": "boolean",
                                      "description": "Indicates that this coding was chosen by a user directly &ndash; e.g. off a pick list of available items (codes or displays)."
                                    }
                                  }
                                }
                              },
                              "text": {
                                "type": "string",
                                "pattern": "[ \\r\\n\\t\\S]+",
                                "description": "A human language representation of the concept as seen/selected/uttered by the user who entered the data and/or which represents the intended meaning of the user."
                              }
                            }
                          }
                        }
                      },
                      "asNeededBoolean": {
                        "type": "boolean",
                        "description": "Indicates whether the Medication is only taken when needed within a specific dosing schedule (Boolean option), or it indicates the precondition for taking the Medication (CodeableConcept)."
                      },
                      "asNeededCodeableConcept": {
                        "description": "Indicates whether the Medication is only taken when needed within a specific dosing schedule (Boolean option), or it indicates the precondition for taking the Medication (CodeableConcept).",
                        "type": "object",
                        "properties": {
                          "coding": {
                            "type": "array",
                            "items": {
                              "description": "A reference to a code defined by a terminology system.",
                              "type": "object",
                              "properties": {
                                "system": {
                                  "type": "string",
                                  "pattern": "\\S*",
                                  "description": "The identification of the code system that defines the meaning of the symbol in the code."
                                },
                                "version": {
                                  "type": "string",
                                  "pattern": "[ \\r\\n\\t\\S]+",
                                  "description": "The version of the code system which was used when choosing this code. Note that a well&ndash;maintained code system does not need the version reported, because the meaning of codes is consistent across versions. However this cannot consistently be assured, and when the meaning is not guaranteed to be consistent, the version SHOULD be exchanged."
                                },
                                "code": {
                                  "type": "string",
                                  "pattern": "[^\\s]+(\\s[^\\s]+)*",
                                  "description": "A symbol in syntax defined by the system. The symbol may be a predefined code or an expression in a syntax defined by the coding system (e.g. post&ndash;coordination)."
                                },
                                "display": {
                                  "type": "string",
                                  "pattern": "[ \\r\\n\\t\\S]+",
                                  "description": "A representation of the meaning of the code in the system, following the rules of the system."
                                },
                                "userSelected": {
                                  "type": "boolean",
                                  "description": "Indicates that this coding was chosen by a user directly &ndash; e.g. off a pick list of available items (codes or displays)."
                                }
                              }
                            }
                          },
                          "text": {
                            "type": "string",
                            "pattern": "[ \\r\\n\\t\\S]+",
                            "description": "A human language representation of the concept as seen/selected/uttered by the user who entered the data and/or which represents the intended meaning of the user."
                          }
                        }
                      },
                      "site": {
                        "description": "Body site to administer to.",
                        "type": "object",
                        "properties": {
                          "coding": {
                            "type": "array",
                            "items": {
                              "description": "A reference to a code defined by a terminology system.",
                              "type": "object",
                              "properties": {
                                "system": {
                                  "type": "string",
                                  "pattern": "\\S*",
                                  "description": "The identification of the code system that defines the meaning of the symbol in the code."
                                },
                                "version": {
                                  "type": "string",
                                  "pattern": "[ \\r\\n\\t\\S]+",
                                  "description": "The version of the code system which was used when choosing this code. Note that a well&ndash;maintained code system does not need the version reported, because the meaning of codes is consistent across versions. However this cannot consistently be assured, and when the meaning is not guaranteed to be consistent, the version SHOULD be exchanged."
                                },
                                "code": {
                                  "type": "string",
                                  "pattern": "[^\\s]+(\\s[^\\s]+)*",
                                  "description": "A symbol in syntax defined by the system. The symbol may be a predefined code or an expression in a syntax defined by the coding system (e.g. post&ndash;coordination)."
                                },
                                "display": {
                                  "type": "string",
                                  "pattern": "[ \\r\\n\\t\\S]+",
                                  "description": "A representation of the meaning of the code in the system, following the rules of the system."
                                },
                                "userSelected": {
                                  "type": "boolean",
                                  "description": "Indicates that this coding was chosen by a user directly &ndash; e.g. off a pick list of available items (codes or displays)."
                                }
                              }
                            }
                          },
                          "text": {
                            "type": "string",
                            "pattern": "[ \\r\\n\\t\\S]+",
                            "description": "A human language representation of the concept as seen/selected/uttered by the user who entered the data and/or which represents the intended meaning of the user."
                          }
                        }
                      },
                      "route": {
                        "description": "How drug should enter body.",
                        "type": "object",
                        "properties": {
                          "coding": {
                            "type": "array",
                            "items": {
                              "description": "A reference to a code defined by a terminology system.",
                              "type": "object",
                              "properties": {
                                "system": {
                                  "type": "string",
                                  "pattern": "\\S*",
                                  "description": "The identification of the code system that defines the meaning of the symbol in the code."
                                },
                                "version": {
                                  "type": "string",
                                  "pattern": "[ \\r\\n\\t\\S]+",
                                  "description": "The version of the code system which was used when choosing this code. Note that a well&ndash;maintained code system does not need the version reported, because the meaning of codes is consistent across versions. However this cannot consistently be assured, and when the meaning is not guaranteed to be consistent, the version SHOULD be exchanged."
                                },
                                "code": {
                                  "type": "string",
                                  "pattern": "[^\\s]+(\\s[^\\s]+)*",
                                  "description": "A symbol in syntax defined by the system. The symbol may be a predefined code or an expression in a syntax defined by the coding system (e.g. post&ndash;coordination)."
                                },
                                "display": {
                                  "type": "string",
                                  "pattern": "[ \\r\\n\\t\\S]+",
                                  "description": "A representation of the meaning of the code in the system, following the rules of the system."
                                },
                                "userSelected": {
                                  "type": "boolean",
                                  "description": "Indicates that this coding was chosen by a user directly &ndash; e.g. off a pick list of available items (codes or displays)."
                                }
                              }
                            }
                          },
                          "text": {
                            "type": "string",
                            "pattern": "[ \\r\\n\\t\\S]+",
                            "description": "A human language representation of the concept as seen/selected/uttered by the user who entered the data and/or which represents the intended meaning of the user."
                          }
                        }
                      },
                      "method": {
                        "description": "Technique for administering medication.",
                        "type": "object",
                        "properties": {
                          "coding": {
                            "type": "array",
                            "items": {
                              "description": "A reference to a code defined by a terminology system.",
                              "type": "object",
                              "properties": {
                                "system": {
                                  "type": "string",
                                  "pattern": "\\S*",
                                  "description": "The identification of the code system that defines the meaning of the symbol in the code."
                                },
                                "version": {
                                  "type": "string",
                                  "pattern": "[ \\r\\n\\t\\S]+",
                                  "description": "The version of the code system which was used when choosing this code. Note that a well&ndash;maintained code system does not need the version reported, because the meaning of codes is consistent across versions. However this cannot consistently be assured, and when the meaning is not guaranteed to be consistent, the version SHOULD be exchanged."
                                },
                                "code": {
                                  "type": "string",
                                  "pattern": "[^\\s]+(\\s[^\\s]+)*",
                                  "description": "A symbol in syntax defined by the system. The symbol may be a predefined code or an expression in a syntax defined by the coding system (e.g. post&ndash;coordination)."
                                },
                                "display": {
                                  "type": "string",
                                  "pattern": "[ \\r\\n\\t\\S]+",
                                  "description": "A representation of the meaning of the code in the system, following the rules of the system."
                                },
                                "userSelected": {
                                  "type": "boolean",
                                  "description": "Indicates that this coding was chosen by a user directly &ndash; e.g. off a pick list of available items (codes or displays)."
                                }
                              }
                            }
                          },
                          "text": {
                            "type": "string",
                            "pattern": "[ \\r\\n\\t\\S]+",
                            "description": "A human language representation of the concept as seen/selected/uttered by the user who entered the data and/or which represents the intended meaning of the user."
                          }
                        }
                      },
                      "doseAndRate": {
                        "type": "array",
                        "items": {
                          "description": "The amount of medication administered.",
                          "type": "object",
                          "properties": {
                            "modifierExtension": {
                              "type": "array",
                              "items": {
                                "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                                "type": "object",
                                "additionalProperties": true
                              }
                            },
                            "type": {
                              "description": "The kind of dose or rate specified, for example, ordered or calculated.",
                              "type": "object",
                              "properties": {
                                "coding": {
                                  "type": "array",
                                  "items": {
                                    "description": "A reference to a code defined by a terminology system.",
                                    "type": "object",
                                    "properties": {
                                      "system": {
                                        "type": "string",
                                        "pattern": "\\S*",
                                        "description": "The identification of the code system that defines the meaning of the symbol in the code."
                                      },
                                      "version": {
                                        "type": "string",
                                        "pattern": "[ \\r\\n\\t\\S]+",
                                        "description": "The version of the code system which was used when choosing this code. Note that a well&ndash;maintained code system does not need the version reported, because the meaning of codes is consistent across versions. However this cannot consistently be assured, and when the meaning is not guaranteed to be consistent, the version SHOULD be exchanged."
                                      },
                                      "code": {
                                        "type": "string",
                                        "pattern": "[^\\s]+(\\s[^\\s]+)*",
                                        "description": "A symbol in syntax defined by the system. The symbol may be a predefined code or an expression in a syntax defined by the coding system (e.g. post&ndash;coordination)."
                                      },
                                      "display": {
                                        "type": "string",
                                        "pattern": "[ \\r\\n\\t\\S]+",
                                        "description": "A representation of the meaning of the code in the system, following the rules of the system."
                                      },
                                      "userSelected": {
                                        "type": "boolean",
                                        "description": "Indicates that this coding was chosen by a user directly &ndash; e.g. off a pick list of available items (codes or displays)."
                                      }
                                    }
                                  }
                                },
                                "text": {
                                  "type": "string",
                                  "pattern": "[ \\r\\n\\t\\S]+",
                                  "description": "A human language representation of the concept as seen/selected/uttered by the user who entered the data and/or which represents the intended meaning of the user."
                                }
                              }
                            },
                            "doseRange": {
                              "description": "Amount of medication per dose.",
                              "type": "object",
                              "properties": {
                                "low": {
                                  "description": "The low limit. The boundary is inclusive.",
                                  "type": "object",
                                  "properties": {
                                    "value": {
                                      "type": "number",
                                      "description": "The value of the measured amount. The value includes an implicit precision in the presentation of the value."
                                    },
                                    "comparator": {
                                      "type": "string",
                                      "enum": [
                                        "<",
                                        "<=",
                                        ">=",
                                        ">"
                                      ],
                                      "description": "How the value should be understood and represented &ndash; whether the actual value is greater or less than the stated value due to measurement issues; e.g. if the comparator is \"<\" , then the real value is < stated value."
                                    },
                                    "unit": {
                                      "type": "string",
                                      "pattern": "[ \\r\\n\\t\\S]+",
                                      "description": "A human&ndash;readable form of the unit."
                                    },
                                    "system": {
                                      "type": "string",
                                      "pattern": "\\S*",
                                      "description": "The identification of the system that provides the coded form of the unit."
                                    },
                                    "code": {
                                      "type": "string",
                                      "pattern": "[^\\s]+(\\s[^\\s]+)*",
                                      "description": "A computer processable form of the unit in some unit representation system."
                                    }
                                  }
                                },
                                "high": {
                                  "description": "The high limit. The boundary is inclusive.",
                                  "type": "object",
                                  "properties": {
                                    "value": {
                                      "type": "number",
                                      "description": "The value of the measured amount. The value includes an implicit precision in the presentation of the value."
                                    },
                                    "comparator": {
                                      "type": "string",
                                      "enum": [
                                        "<",
                                        "<=",
                                        ">=",
                                        ">"
                                      ],
                                      "description": "How the value should be understood and represented &ndash; whether the actual value is greater or less than the stated value due to measurement issues; e.g. if the comparator is \"<\" , then the real value is < stated value."
                                    },
                                    "unit": {
                                      "type": "string",
                                      "pattern": "[ \\r\\n\\t\\S]+",
                                      "description": "A human&ndash;readable form of the unit."
                                    },
                                    "system": {
                                      "type": "string",
                                      "pattern": "\\S*",
                                      "description": "The identification of the system that provides the coded form of the unit."
                                    },
                                    "code": {
                                      "type": "string",
                                      "pattern": "[^\\s]+(\\s[^\\s]+)*",
                                      "description": "A computer processable form of the unit in some unit representation system."
                                    }
                                  }
                                }
                              }
                            },
                            "doseQuantity": {
                              "description": "Amount of medication per dose.",
                              "type": "object",
                              "properties": {
                                "value": {
                                  "type": "number",
                                  "description": "The value of the measured amount. The value includes an implicit precision in the presentation of the value."
                                },
                                "comparator": {
                                  "type": "string",
                                  "enum": [
                                    "<",
                                    "<=",
                                    ">=",
                                    ">"
                                  ],
                                  "description": "How the value should be understood and represented &ndash; whether the actual value is greater or less than the stated value due to measurement issues; e.g. if the comparator is \"<\" , then the real value is < stated value."
                                },
                                "unit": {
                                  "type": "string",
                                  "pattern": "[ \\r\\n\\t\\S]+",
                                  "description": "A human&ndash;readable form of the unit."
                                },
                                "system": {
                                  "type": "string",
                                  "pattern": "\\S*",
                                  "description": "The identification of the system that provides the coded form of the unit."
                                },
                                "code": {
                                  "type": "string",
                                  "pattern": "[^\\s]+(\\s[^\\s]+)*",
                                  "description": "A computer processable form of the unit in some unit representation system."
                                }
                              }
                            },
                            "rateRatio": {
                              "description": "Amount of medication per unit of time.",
                              "type": "object",
                              "properties": {
                                "numerator": {
                                  "description": "The value of the numerator.",
                                  "type": "object",
                                  "properties": {
                                    "value": {
                                      "type": "number",
                                      "description": "The value of the measured amount. The value includes an implicit precision in the presentation of the value."
                                    },
                                    "comparator": {
                                      "type": "string",
                                      "enum": [
                                        "<",
                                        "<=",
                                        ">=",
                                        ">"
                                      ],
                                      "description": "How the value should be understood and represented &ndash; whether the actual value is greater or less than the stated value due to measurement issues; e.g. if the comparator is \"<\" , then the real value is < stated value."
                                    },
                                    "unit": {
                                      "type": "string",
                                      "pattern": "[ \\r\\n\\t\\S]+",
                                      "description": "A human&ndash;readable form of the unit."
                                    },
                                    "system": {
                                      "type": "string",
                                      "pattern": "\\S*",
                                      "description": "The identification of the system that provides the coded form of the unit."
                                    },
                                    "code": {
                                      "type": "string",
                                      "pattern": "[^\\s]+(\\s[^\\s]+)*",
                                      "description": "A computer processable form of the unit in some unit representation system."
                                    }
                                  }
                                },
                                "denominator": {
                                  "description": "The value of the denominator.",
                                  "type": "object",
                                  "properties": {
                                    "value": {
                                      "type": "number",
                                      "description": "The value of the measured amount. The value includes an implicit precision in the presentation of the value."
                                    },
                                    "comparator": {
                                      "type": "string",
                                      "enum": [
                                        "<",
                                        "<=",
                                        ">=",
                                        ">"
                                      ],
                                      "description": "How the value should be understood and represented &ndash; whether the actual value is greater or less than the stated value due to measurement issues; e.g. if the comparator is \"<\" , then the real value is < stated value."
                                    },
                                    "unit": {
                                      "type": "string",
                                      "pattern": "[ \\r\\n\\t\\S]+",
                                      "description": "A human&ndash;readable form of the unit."
                                    },
                                    "system": {
                                      "type": "string",
                                      "pattern": "\\S*",
                                      "description": "The identification of the system that provides the coded form of the unit."
                                    },
                                    "code": {
                                      "type": "string",
                                      "pattern": "[^\\s]+(\\s[^\\s]+)*",
                                      "description": "A computer processable form of the unit in some unit representation system."
                                    }
                                  }
                                }
                              }
                            },
                            "rateRange": {
                              "description": "Amount of medication per unit of time.",
                              "type": "object",
                              "properties": {
                                "low": {
                                  "description": "The low limit. The boundary is inclusive.",
                                  "type": "object",
                                  "properties": {
                                    "value": {
                                      "type": "number",
                                      "description": "The value of the measured amount. The value includes an implicit precision in the presentation of the value."
                                    },
                                    "comparator": {
                                      "type": "string",
                                      "enum": [
                                        "<",
                                        "<=",
                                        ">=",
                                        ">"
                                      ],
                                      "description": "How the value should be understood and represented &ndash; whether the actual value is greater or less than the stated value due to measurement issues; e.g. if the comparator is \"<\" , then the real value is < stated value."
                                    },
                                    "unit": {
                                      "type": "string",
                                      "pattern": "[ \\r\\n\\t\\S]+",
                                      "description": "A human&ndash;readable form of the unit."
                                    },
                                    "system": {
                                      "type": "string",
                                      "pattern": "\\S*",
                                      "description": "The identification of the system that provides the coded form of the unit."
                                    },
                                    "code": {
                                      "type": "string",
                                      "pattern": "[^\\s]+(\\s[^\\s]+)*",
                                      "description": "A computer processable form of the unit in some unit representation system."
                                    }
                                  }
                                },
                                "high": {
                                  "description": "The high limit. The boundary is inclusive.",
                                  "type": "object",
                                  "properties": {
                                    "value": {
                                      "type": "number",
                                      "description": "The value of the measured amount. The value includes an implicit precision in the presentation of the value."
                                    },
                                    "comparator": {
                                      "type": "string",
                                      "enum": [
                                        "<",
                                        "<=",
                                        ">=",
                                        ">"
                                      ],
                                      "description": "How the value should be understood and represented &ndash; whether the actual value is greater or less than the stated value due to measurement issues; e.g. if the comparator is \"<\" , then the real value is < stated value."
                                    },
                                    "unit": {
                                      "type": "string",
                                      "pattern": "[ \\r\\n\\t\\S]+",
                                      "description": "A human&ndash;readable form of the unit."
                                    },
                                    "system": {
                                      "type": "string",
                                      "pattern": "\\S*",
                                      "description": "The identification of the system that provides the coded form of the unit."
                                    },
                                    "code": {
                                      "type": "string",
                                      "pattern": "[^\\s]+(\\s[^\\s]+)*",
                                      "description": "A computer processable form of the unit in some unit representation system."
                                    }
                                  }
                                }
                              }
                            },
                            "rateQuantity": {
                              "description": "Amount of medication per unit of time.",
                              "type": "object",
                              "properties": {
                                "value": {
                                  "type": "number",
                                  "description": "The value of the measured amount. The value includes an implicit precision in the presentation of the value."
                                },
                                "comparator": {
                                  "type": "string",
                                  "enum": [
                                    "<",
                                    "<=",
                                    ">=",
                                    ">"
                                  ],
                                  "description": "How the value should be understood and represented &ndash; whether the actual value is greater or less than the stated value due to measurement issues; e.g. if the comparator is \"<\" , then the real value is < stated value."
                                },
                                "unit": {
                                  "type": "string",
                                  "pattern": "[ \\r\\n\\t\\S]+",
                                  "description": "A human&ndash;readable form of the unit."
                                },
                                "system": {
                                  "type": "string",
                                  "pattern": "\\S*",
                                  "description": "The identification of the system that provides the coded form of the unit."
                                },
                                "code": {
                                  "type": "string",
                                  "pattern": "[^\\s]+(\\s[^\\s]+)*",
                                  "description": "A computer processable form of the unit in some unit representation system."
                                }
                              }
                            }
                          }
                        }
                      },
                      "maxDosePerPeriod": {
                        "description": "Upper limit on medication per unit of time.",
                        "type": "object",
                        "properties": {
                          "numerator": {
                            "description": "The value of the numerator.",
                            "type": "object",
                            "properties": {
                              "value": {
                                "type": "number",
                                "description": "The value of the measured amount. The value includes an implicit precision in the presentation of the value."
                              },
                              "comparator": {
                                "type": "string",
                                "enum": [
                                  "<",
                                  "<=",
                                  ">=",
                                  ">"
                                ],
                                "description": "How the value should be understood and represented &ndash; whether the actual value is greater or less than the stated value due to measurement issues; e.g. if the comparator is \"<\" , then the real value is < stated value."
                              },
                              "unit": {
                                "type": "string",
                                "pattern": "[ \\r\\n\\t\\S]+",
                                "description": "A human&ndash;readable form of the unit."
                              },
                              "system": {
                                "type": "string",
                                "pattern": "\\S*",
                                "description": "The identification of the system that provides the coded form of the unit."
                              },
                              "code": {
                                "type": "string",
                                "pattern": "[^\\s]+(\\s[^\\s]+)*",
                                "description": "A computer processable form of the unit in some unit representation system."
                              }
                            }
                          },
                          "denominator": {
                            "description": "The value of the denominator.",
                            "type": "object",
                            "properties": {
                              "value": {
                                "type": "number",
                                "description": "The value of the measured amount. The value includes an implicit precision in the presentation of the value."
                              },
                              "comparator": {
                                "type": "string",
                                "enum": [
                                  "<",
                                  "<=",
                                  ">=",
                                  ">"
                                ],
                                "description": "How the value should be understood and represented &ndash; whether the actual value is greater or less than the stated value due to measurement issues; e.g. if the comparator is \"<\" , then the real value is < stated value."
                              },
                              "unit": {
                                "type": "string",
                                "pattern": "[ \\r\\n\\t\\S]+",
                                "description": "A human&ndash;readable form of the unit."
                              },
                              "system": {
                                "type": "string",
                                "pattern": "\\S*",
                                "description": "The identification of the system that provides the coded form of the unit."
                              },
                              "code": {
                                "type": "string",
                                "pattern": "[^\\s]+(\\s[^\\s]+)*",
                                "description": "A computer processable form of the unit in some unit representation system."
                              }
                            }
                          }
                        }
                      },
                      "maxDosePerAdministration": {
                        "description": "Upper limit on medication per administration.",
                        "type": "object",
                        "properties": {
                          "value": {
                            "type": "number",
                            "description": "The value of the measured amount. The value includes an implicit precision in the presentation of the value."
                          },
                          "comparator": {
                            "type": "string",
                            "enum": [
                              "<",
                              "<=",
                              ">=",
                              ">"
                            ],
                            "description": "How the value should be understood and represented &ndash; whether the actual value is greater or less than the stated value due to measurement issues; e.g. if the comparator is \"<\" , then the real value is < stated value."
                          },
                          "unit": {
                            "type": "string",
                            "pattern": "[ \\r\\n\\t\\S]+",
                            "description": "A human&ndash;readable form of the unit."
                          },
                          "system": {
                            "type": "string",
                            "pattern": "\\S*",
                            "description": "The identification of the system that provides the coded form of the unit."
                          },
                          "code": {
                            "type": "string",
                            "pattern": "[^\\s]+(\\s[^\\s]+)*",
                            "description": "A computer processable form of the unit in some unit representation system."
                          }
                        }
                      },
                      "maxDosePerLifetime": {
                        "description": "Upper limit on medication per lifetime of the patient.",
                        "type": "object",
                        "properties": {
                          "value": {
                            "type": "number",
                            "description": "The value of the measured amount. The value includes an implicit precision in the presentation of the value."
                          },
                          "comparator": {
                            "type": "string",
                            "enum": [
                              "<",
                              "<=",
                              ">=",
                              ">"
                            ],
                            "description": "How the value should be understood and represented &ndash; whether the actual value is greater or less than the stated value due to measurement issues; e.g. if the comparator is \"<\" , then the real value is < stated value."
                          },
                          "unit": {
                            "type": "string",
                            "pattern": "[ \\r\\n\\t\\S]+",
                            "description": "A human&ndash;readable form of the unit."
                          },
                          "system": {
                            "type": "string",
                            "pattern": "\\S*",
                            "description": "The identification of the system that provides the coded form of the unit."
                          },
                          "code": {
                            "type": "string",
                            "pattern": "[^\\s]+(\\s[^\\s]+)*",
                            "description": "A computer processable form of the unit in some unit representation system."
                          }
                        }
                      }
                    }
                  },
                  "minItems": 1
                }
              },
              "required": [
                "type",
                "dosage"
              ]
            }
          },
          "indicationCodeableConcept": {
            "description": "Indication for use that apply to the specific administration guidelines.",
            "type": "object",
            "properties": {
              "coding": {
                "type": "array",
                "items": {
                  "description": "A reference to a code defined by a terminology system.",
                  "type": "object",
                  "properties": {
                    "system": {
                      "type": "string",
                      "pattern": "\\S*",
                      "description": "The identification of the code system that defines the meaning of the symbol in the code."
                    },
                    "version": {
                      "type": "string",
                      "pattern": "[ \\r\\n\\t\\S]+",
                      "description": "The version of the code system which was used when choosing this code. Note that a well&ndash;maintained code system does not need the version reported, because the meaning of codes is consistent across versions. However this cannot consistently be assured, and when the meaning is not guaranteed to be consistent, the version SHOULD be exchanged."
                    },
                    "code": {
                      "type": "string",
                      "pattern": "[^\\s]+(\\s[^\\s]+)*",
                      "description": "A symbol in syntax defined by the system. The symbol may be a predefined code or an expression in a syntax defined by the coding system (e.g. post&ndash;coordination)."
                    },
                    "display": {
                      "type": "string",
                      "pattern": "[ \\r\\n\\t\\S]+",
                      "description": "A representation of the meaning of the code in the system, following the rules of the system."
                    },
                    "userSelected": {
                      "type": "boolean",
                      "description": "Indicates that this coding was chosen by a user directly &ndash; e.g. off a pick list of available items (codes or displays)."
                    }
                  }
                }
              },
              "text": {
                "type": "string",
                "pattern": "[ \\r\\n\\t\\S]+",
                "description": "A human language representation of the concept as seen/selected/uttered by the user who entered the data and/or which represents the intended meaning of the user."
              }
            }
          },
          "indicationReference": {
            "description": "Indication for use that apply to the specific administration guidelines.",
            "type": "object",
            "properties": {
              "reference": {
                "type": "string",
                "pattern": "[ \\r\\n\\t\\S]+",
                "description": "A reference to a location at which the other resource is found. The reference may be a relative reference, in which case it is relative to the service base URL, or an absolute URL that resolves to the location where the resource is found. The reference may be version specific or not. If the reference is not to a FHIR RESTful server, then it should be assumed to be version specific. Internal fragment references (start with '#') refer to contained resources."
              },
              "type": {
                "type": "string",
                "pattern": "\\S*",
                "description": "The expected type of the target of the reference. If both Reference.type and Reference.reference are populated and Reference.reference is a FHIR URL, both SHALL be consistent.\n\nThe type is the Canonical URL of Resource Definition that is the type this reference refers to. References are URLs that are relative to http://hl7.org/fhir/StructureDefinition/ e.g. \"Patient\" is a reference to http://hl7.org/fhir/StructureDefinition/Patient. Absolute URLs are only allowed for logical models (and can only be used in references in logical models, not resources)."
              },
              "identifier": {
                "type": "object",
                "additionalProperties": true,
                "description": "An identifier for the target resource. This is used when there is no way to reference the other resource directly, either because the entity it represents is not available through a FHIR server, or because there is no way for the author of the resource to convert a known identifier to an actual location. There is no requirement that a Reference.identifier point to something that is actually exposed as a FHIR instance, but it SHALL point to a business concept that would be expected to be exposed as a FHIR instance, and that instance would need to be of a FHIR resource type allowed by the reference."
              },
              "display": {
                "type": "string",
                "pattern": "[ \\r\\n\\t\\S]+",
                "description": "Plain text narrative that identifies the resource in addition to the resource reference."
              }
            }
          },
          "patientCharacteristics": {
            "type": "array",
            "items": {
              "description": "Characteristics of the patient that are relevant to the administration guidelines (for example, height, weight, gender, etc.).",
              "type": "object",
              "properties": {
                "modifierExtension": {
                  "type": "array",
                  "items": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                    "type": "object",
                    "additionalProperties": true
                  }
                },
                "characteristicCodeableConcept": {
                  "description": "Specific characteristic that is relevant to the administration guideline (e.g. height, weight, gender).",
                  "type": "object",
                  "properties": {
                    "coding": {
                      "type": "array",
                      "items": {
                        "description": "A reference to a code defined by a terminology system.",
                        "type": "object",
                        "properties": {
                          "system": {
                            "type": "string",
                            "pattern": "\\S*",
                            "description": "The identification of the code system that defines the meaning of the symbol in the code."
                          },
                          "version": {
                            "type": "string",
                            "pattern": "[ \\r\\n\\t\\S]+",
                            "description": "The version of the code system which was used when choosing this code. Note that a well&ndash;maintained code system does not need the version reported, because the meaning of codes is consistent across versions. However this cannot consistently be assured, and when the meaning is not guaranteed to be consistent, the version SHOULD be exchanged."
                          },
                          "code": {
                            "type": "string",
                            "pattern": "[^\\s]+(\\s[^\\s]+)*",
                            "description": "A symbol in syntax defined by the system. The symbol may be a predefined code or an expression in a syntax defined by the coding system (e.g. post&ndash;coordination)."
                          },
                          "display": {
                            "type": "string",
                            "pattern": "[ \\r\\n\\t\\S]+",
                            "description": "A representation of the meaning of the code in the system, following the rules of the system."
                          },
                          "userSelected": {
                            "type": "boolean",
                            "description": "Indicates that this coding was chosen by a user directly &ndash; e.g. off a pick list of available items (codes or displays)."
                          }
                        }
                      }
                    },
                    "text": {
                      "type": "string",
                      "pattern": "[ \\r\\n\\t\\S]+",
                      "description": "A human language representation of the concept as seen/selected/uttered by the user who entered the data and/or which represents the intended meaning of the user."
                    }
                  }
                },
                "characteristicQuantity": {
                  "description": "Specific characteristic that is relevant to the administration guideline (e.g. height, weight, gender).",
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "number",
                      "description": "The value of the measured amount. The value includes an implicit precision in the presentation of the value."
                    },
                    "comparator": {
                      "type": "string",
                      "enum": [
                        "<",
                        "<=",
                        ">=",
                        ">"
                      ],
                      "description": "How the value should be understood and represented &ndash; whether the actual value is greater or less than the stated value due to measurement issues; e.g. if the comparator is \"<\" , then the real value is < stated value."
                    },
                    "unit": {
                      "type": "string",
                      "pattern": "[ \\r\\n\\t\\S]+",
                      "description": "A human&ndash;readable form of the unit."
                    },
                    "system": {
                      "type": "string",
                      "pattern": "\\S*",
                      "description": "The identification of the system that provides the coded form of the unit."
                    },
                    "code": {
                      "type": "string",
                      "pattern": "[^\\s]+(\\s[^\\s]+)*",
                      "description": "A computer processable form of the unit in some unit representation system."
                    }
                  }
                },
                "value": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "pattern": "[ \\r\\n\\t\\S]+",
                    "description": "The specific characteristic (e.g. height, weight, gender, etc.)."
                  }
                }
              }
            }
          }
        }
      }
    },
    "medicineClassification": {
      "type": "array",
      "items": {
        "description": "Categorization of the medication within a formulary or classification system.",
        "type": "object",
        "properties": {
          "modifierExtension": {
            "type": "array",
            "items": {
              "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
              "type": "object",
              "additionalProperties": true
            }
          },
          "type": {
            "description": "The type of category for the medication (for example, therapeutic classification, therapeutic sub&ndash;classification).",
            "type": "object",
            "properties": {
              "coding": {
                "type": "array",
                "items": {
                  "description": "A reference to a code defined by a terminology system.",
                  "type": "object",
                  "properties": {
                    "system": {
                      "type": "string",
                      "pattern": "\\S*",
                      "description": "The identification of the code system that defines the meaning of the symbol in the code."
                    },
                    "version": {
                      "type": "string",
                      "pattern": "[ \\r\\n\\t\\S]+",
                      "description": "The version of the code system which was used when choosing this code. Note that a well&ndash;maintained code system does not need the version reported, because the meaning of codes is consistent across versions. However this cannot consistently be assured, and when the meaning is not guaranteed to be consistent, the version SHOULD be exchanged."
                    },
                    "code": {
                      "type": "string",
                      "pattern": "[^\\s]+(\\s[^\\s]+)*",
                      "description": "A symbol in syntax defined by the system. The symbol may be a predefined code or an expression in a syntax defined by the coding system (e.g. post&ndash;coordination)."
                    },
                    "display": {
                      "type": "string",
                      "pattern": "[ \\r\\n\\t\\S]+",
                      "description": "A representation of the meaning of the code in the system, following the rules of the system."
                    },
                    "userSelected": {
                      "type": "boolean",
                      "description": "Indicates that this coding was chosen by a user directly &ndash; e.g. off a pick list of available items (codes or displays)."
                    }
                  }
                }
              },
              "text": {
                "type": "string",
                "pattern": "[ \\r\\n\\t\\S]+",
                "description": "A human language representation of the concept as seen/selected/uttered by the user who entered the data and/or which represents the intended meaning of the user."
              }
            }
          },
          "classification": {
            "type": "array",
            "items": {
              "description": "Specific category assigned to the medication (e.g. anti&ndash;infective, anti&ndash;hypertensive, antibiotic, etc.).",
              "type": "object",
              "properties": {
                "coding": {
                  "type": "array",
                  "items": {
                    "description": "A reference to a code defined by a terminology system.",
                    "type": "object",
                    "properties": {
                      "system": {
                        "type": "string",
                        "pattern": "\\S*",
                        "description": "The identification of the code system that defines the meaning of the symbol in the code."
                      },
                      "version": {
                        "type": "string",
                        "pattern": "[ \\r\\n\\t\\S]+",
                        "description": "The version of the code system which was used when choosing this code. Note that a well&ndash;maintained code system does not need the version reported, because the meaning of codes is consistent across versions. However this cannot consistently be assured, and when the meaning is not guaranteed to be consistent, the version SHOULD be exchanged."
                      },
                      "code": {
                        "type": "string",
                        "pattern": "[^\\s]+(\\s[^\\s]+)*",
                        "description": "A symbol in syntax defined by the system. The symbol may be a predefined code or an expression in a syntax defined by the coding system (e.g. post&ndash;coordination)."
                      },
                      "display": {
                        "type": "string",
                        "pattern": "[ \\r\\n\\t\\S]+",
                        "description": "A representation of the meaning of the code in the system, following the rules of the system."
                      },
                      "userSelected": {
                        "type": "boolean",
                        "description": "Indicates that this coding was chosen by a user directly &ndash; e.g. off a pick list of available items (codes or displays)."
                      }
                    }
                  }
                },
                "text": {
                  "type": "string",
                  "pattern": "[ \\r\\n\\t\\S]+",
                  "description": "A human language representation of the concept as seen/selected/uttered by the user who entered the data and/or which represents the intended meaning of the user."
                }
              }
            }
          }
        },
        "required": [
          "type"
        ]
      }
    },
    "packaging": {
      "description": "Information that only applies to packages (not products).",
      "type": "object",
      "properties": {
        "modifierExtension": {
          "type": "array",
          "items": {
            "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            "type": "object",
            "additionalProperties": true
          }
        },
        "type": {
          "description": "A code that defines the specific type of packaging that the medication can be found in (e.g. blister sleeve, tube, bottle).",
          "type": "object",
          "properties": {
            "coding": {
              "type": "array",
              "items": {
                "description": "A reference to a code defined by a terminology system.",
                "type": "object",
                "properties": {
                  "system": {
                    "type": "string",
                    "pattern": "\\S*",
                    "description": "The identification of the code system that defines the meaning of the symbol in the code."
                  },
                  "version": {
                    "type": "string",
                    "pattern": "[ \\r\\n\\t\\S]+",
                    "description": "The version of the code system which was used when choosing this code. Note that a well&ndash;maintained code system does not need the version reported, because the meaning of codes is consistent across versions. However this cannot consistently be assured, and when the meaning is not guaranteed to be consistent, the version SHOULD be exchanged."
                  },
                  "code": {
                    "type": "string",
                    "pattern": "[^\\s]+(\\s[^\\s]+)*",
                    "description": "A symbol in syntax defined by the system. The symbol may be a predefined code or an expression in a syntax defined by the coding system (e.g. post&ndash;coordination)."
                  },
                  "display": {
                    "type": "string",
                    "pattern": "[ \\r\\n\\t\\S]+",
                    "description": "A representation of the meaning of the code in the system, following the rules of the system."
                  },
                  "userSelected": {
                    "type": "boolean",
                    "description": "Indicates that this coding was chosen by a user directly &ndash; e.g. off a pick list of available items (codes or displays)."
                  }
                }
              }
            },
            "text": {
              "type": "string",
              "pattern": "[ \\r\\n\\t\\S]+",
              "description": "A human language representation of the concept as seen/selected/uttered by the user who entered the data and/or which represents the intended meaning of the user."
            }
          }
        },
        "quantity": {
          "description": "The number of product units the package would contain if fully loaded.",
          "type": "object",
          "properties": {
            "value": {
              "type": "number",
              "description": "The value of the measured amount. The value includes an implicit precision in the presentation of the value."
            },
            "comparator": {
              "type": "string",
              "enum": [
                "<",
                "<=",
                ">=",
                ">"
              ],
              "description": "How the value should be understood and represented &ndash; whether the actual value is greater or less than the stated value due to measurement issues; e.g. if the comparator is \"<\" , then the real value is < stated value."
            },
            "unit": {
              "type": "string",
              "pattern": "[ \\r\\n\\t\\S]+",
              "description": "A human&ndash;readable form of the unit."
            },
            "system": {
              "type": "string",
              "pattern": "\\S*",
              "description": "The identification of the system that provides the coded form of the unit."
            },
            "code": {
              "type": "string",
              "pattern": "[^\\s]+(\\s[^\\s]+)*",
              "description": "A computer processable form of the unit in some unit representation system."
            }
          }
        }
      }
    },
    "drugCharacteristic": {
      "type": "array",
      "items": {
        "description": "Specifies descriptive properties of the medicine, such as color, shape, imprints, etc.",
        "type": "object",
        "properties": {
          "modifierExtension": {
            "type": "array",
            "items": {
              "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
              "type": "object",
              "additionalProperties": true
            }
          },
          "type": {
            "description": "A code specifying which characteristic of the medicine is being described (for example, colour, shape, imprint).",
            "type": "object",
            "properties": {
              "coding": {
                "type": "array",
                "items": {
                  "description": "A reference to a code defined by a terminology system.",
                  "type": "object",
                  "properties": {
                    "system": {
                      "type": "string",
                      "pattern": "\\S*",
                      "description": "The identification of the code system that defines the meaning of the symbol in the code."
                    },
                    "version": {
                      "type": "string",
                      "pattern": "[ \\r\\n\\t\\S]+",
                      "description": "The version of the code system which was used when choosing this code. Note that a well&ndash;maintained code system does not need the version reported, because the meaning of codes is consistent across versions. However this cannot consistently be assured, and when the meaning is not guaranteed to be consistent, the version SHOULD be exchanged."
                    },
                    "code": {
                      "type": "string",
                      "pattern": "[^\\s]+(\\s[^\\s]+)*",
                      "description": "A symbol in syntax defined by the system. The symbol may be a predefined code or an expression in a syntax defined by the coding system (e.g. post&ndash;coordination)."
                    },
                    "display": {
                      "type": "string",
                      "pattern": "[ \\r\\n\\t\\S]+",
                      "description": "A representation of the meaning of the code in the system, following the rules of the system."
                    },
                    "userSelected": {
                      "type": "boolean",
                      "description": "Indicates that this coding was chosen by a user directly &ndash; e.g. off a pick list of available items (codes or displays)."
                    }
                  }
                }
              },
              "text": {
                "type": "string",
                "pattern": "[ \\r\\n\\t\\S]+",
                "description": "A human language representation of the concept as seen/selected/uttered by the user who entered the data and/or which represents the intended meaning of the user."
              }
            }
          },
          "valueCodeableConcept": {
            "description": "Description of the characteristic.",
            "type": "object",
            "properties": {
              "coding": {
                "type": "array",
                "items": {
                  "description": "A reference to a code defined by a terminology system.",
                  "type": "object",
                  "properties": {
                    "system": {
                      "type": "string",
                      "pattern": "\\S*",
                      "description": "The identification of the code system that defines the meaning of the symbol in the code."
                    },
                    "version": {
                      "type": "string",
                      "pattern": "[ \\r\\n\\t\\S]+",
                      "description": "The version of the code system which was used when choosing this code. Note that a well&ndash;maintained code system does not need the version reported, because the meaning of codes is consistent across versions. However this cannot consistently be assured, and when the meaning is not guaranteed to be consistent, the version SHOULD be exchanged."
                    },
                    "code": {
                      "type": "string",
                      "pattern": "[^\\s]+(\\s[^\\s]+)*",
                      "description": "A symbol in syntax defined by the system. The symbol may be a predefined code or an expression in a syntax defined by the coding system (e.g. post&ndash;coordination)."
                    },
                    "display": {
                      "type": "string",
                      "pattern": "[ \\r\\n\\t\\S]+",
                      "description": "A representation of the meaning of the code in the system, following the rules of the system."
                    },
                    "userSelected": {
                      "type": "boolean",
                      "description": "Indicates that this coding was chosen by a user directly &ndash; e.g. off a pick list of available items (codes or displays)."
                    }
                  }
                }
              },
              "text": {
                "type": "string",
                "pattern": "[ \\r\\n\\t\\S]+",
                "description": "A human language representation of the concept as seen/selected/uttered by the user who entered the data and/or which represents the intended meaning of the user."
              }
            }
          },
          "valueString": {
            "type": "string",
            "pattern": "[ \\r\\n\\t\\S]+",
            "description": "Description of the characteristic."
          },
          "valueQuantity": {
            "description": "Description of the characteristic.",
            "type": "object",
            "properties": {
              "value": {
                "type": "number",
                "description": "The value of the measured amount. The value includes an implicit precision in the presentation of the value."
              },
              "comparator": {
                "type": "string",
                "enum": [
                  "<",
                  "<=",
                  ">=",
                  ">"
                ],
                "description": "How the value should be understood and represented &ndash; whether the actual value is greater or less than the stated value due to measurement issues; e.g. if the comparator is \"<\" , then the real value is < stated value."
              },
              "unit": {
                "type": "string",
                "pattern": "[ \\r\\n\\t\\S]+",
                "description": "A human&ndash;readable form of the unit."
              },
              "system": {
                "type": "string",
                "pattern": "\\S*",
                "description": "The identification of the system that provides the coded form of the unit."
              },
              "code": {
                "type": "string",
                "pattern": "[^\\s]+(\\s[^\\s]+)*",
                "description": "A computer processable form of the unit in some unit representation system."
              }
            }
          },
          "valueBase64Binary": {
            "type": "string",
            "pattern": "(\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+",
            "description": "Description of the characteristic."
          }
        }
      }
    },
    "contraindication": {
      "type": "array",
      "items": {
        "description": "Potential clinical issue with or between medication(s) (for example, drug&ndash;drug interaction, drug&ndash;disease contraindication, drug&ndash;allergy interaction, etc.).",
        "type": "object",
        "properties": {
          "reference": {
            "type": "string",
            "pattern": "[ \\r\\n\\t\\S]+",
            "description": "A reference to a location at which the other resource is found. The reference may be a relative reference, in which case it is relative to the service base URL, or an absolute URL that resolves to the location where the resource is found. The reference may be version specific or not. If the reference is not to a FHIR RESTful server, then it should be assumed to be version specific. Internal fragment references (start with '#') refer to contained resources."
          },
          "type": {
            "type": "string",
            "pattern": "\\S*",
            "description": "The expected type of the target of the reference. If both Reference.type and Reference.reference are populated and Reference.reference is a FHIR URL, both SHALL be consistent.\n\nThe type is the Canonical URL of Resource Definition that is the type this reference refers to. References are URLs that are relative to http://hl7.org/fhir/StructureDefinition/ e.g. \"Patient\" is a reference to http://hl7.org/fhir/StructureDefinition/Patient. Absolute URLs are only allowed for logical models (and can only be used in references in logical models, not resources)."
          },
          "identifier": {
            "type": "object",
            "additionalProperties": true,
            "description": "An identifier for the target resource. This is used when there is no way to reference the other resource directly, either because the entity it represents is not available through a FHIR server, or because there is no way for the author of the resource to convert a known identifier to an actual location. There is no requirement that a Reference.identifier point to something that is actually exposed as a FHIR instance, but it SHALL point to a business concept that would be expected to be exposed as a FHIR instance, and that instance would need to be of a FHIR resource type allowed by the reference."
          },
          "display": {
            "type": "string",
            "pattern": "[ \\r\\n\\t\\S]+",
            "description": "Plain text narrative that identifies the resource in addition to the resource reference."
          }
        }
      }
    },
    "regulatory": {
      "type": "array",
      "items": {
        "description": "Regulatory information about a medication.",
        "type": "object",
        "properties": {
          "modifierExtension": {
            "type": "array",
            "items": {
              "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
              "type": "object",
              "additionalProperties": true
            }
          },
          "regulatoryAuthority": {
            "description": "The authority that is specifying the regulations.",
            "type": "object",
            "properties": {
              "reference": {
                "type": "string",
                "pattern": "[ \\r\\n\\t\\S]+",
                "description": "A reference to a location at which the other resource is found. The reference may be a relative reference, in which case it is relative to the service base URL, or an absolute URL that resolves to the location where the resource is found. The reference may be version specific or not. If the reference is not to a FHIR RESTful server, then it should be assumed to be version specific. Internal fragment references (start with '#') refer to contained resources."
              },
              "type": {
                "type": "string",
                "pattern": "\\S*",
                "description": "The expected type of the target of the reference. If both Reference.type and Reference.reference are populated and Reference.reference is a FHIR URL, both SHALL be consistent.\n\nThe type is the Canonical URL of Resource Definition that is the type this reference refers to. References are URLs that are relative to http://hl7.org/fhir/StructureDefinition/ e.g. \"Patient\" is a reference to http://hl7.org/fhir/StructureDefinition/Patient. Absolute URLs are only allowed for logical models (and can only be used in references in logical models, not resources)."
              },
              "identifier": {
                "type": "object",
                "additionalProperties": true,
                "description": "An identifier for the target resource. This is used when there is no way to reference the other resource directly, either because the entity it represents is not available through a FHIR server, or because there is no way for the author of the resource to convert a known identifier to an actual location. There is no requirement that a Reference.identifier point to something that is actually exposed as a FHIR instance, but it SHALL point to a business concept that would be expected to be exposed as a FHIR instance, and that instance would need to be of a FHIR resource type allowed by the reference."
              },
              "display": {
                "type": "string",
                "pattern": "[ \\r\\n\\t\\S]+",
                "description": "Plain text narrative that identifies the resource in addition to the resource reference."
              }
            }
          },
          "substitution": {
            "type": "array",
            "items": {
              "description": "Specifies if changes are allowed when dispensing a medication from a regulatory perspective.",
              "type": "object",
              "properties": {
                "modifierExtension": {
                  "type": "array",
                  "items": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                    "type": "object",
                    "additionalProperties": true
                  }
                },
                "type": {
                  "description": "Specifies the type of substitution allowed.",
                  "type": "object",
                  "properties": {
                    "coding": {
                      "type": "array",
                      "items": {
                        "description": "A reference to a code defined by a terminology system.",
                        "type": "object",
                        "properties": {
                          "system": {
                            "type": "string",
                            "pattern": "\\S*",
                            "description": "The identification of the code system that defines the meaning of the symbol in the code."
                          },
                          "version": {
                            "type": "string",
                            "pattern": "[ \\r\\n\\t\\S]+",
                            "description": "The version of the code system which was used when choosing this code. Note that a well&ndash;maintained code system does not need the version reported, because the meaning of codes is consistent across versions. However this cannot consistently be assured, and when the meaning is not guaranteed to be consistent, the version SHOULD be exchanged."
                          },
                          "code": {
                            "type": "string",
                            "pattern": "[^\\s]+(\\s[^\\s]+)*",
                            "description": "A symbol in syntax defined by the system. The symbol may be a predefined code or an expression in a syntax defined by the coding system (e.g. post&ndash;coordination)."
                          },
                          "display": {
                            "type": "string",
                            "pattern": "[ \\r\\n\\t\\S]+",
                            "description": "A representation of the meaning of the code in the system, following the rules of the system."
                          },
                          "userSelected": {
                            "type": "boolean",
                            "description": "Indicates that this coding was chosen by a user directly &ndash; e.g. off a pick list of available items (codes or displays)."
                          }
                        }
                      }
                    },
                    "text": {
                      "type": "string",
                      "pattern": "[ \\r\\n\\t\\S]+",
                      "description": "A human language representation of the concept as seen/selected/uttered by the user who entered the data and/or which represents the intended meaning of the user."
                    }
                  }
                },
                "allowed": {
                  "type": "boolean",
                  "description": "Specifies if regulation allows for changes in the medication when dispensing."
                }
              },
              "required": [
                "type",
                "allowed"
              ]
            }
          },
          "schedule": {
            "type": "array",
            "items": {
              "description": "Specifies the schedule of a medication in jurisdiction.",
              "type": "object",
              "properties": {
                "modifierExtension": {
                  "type": "array",
                  "items": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                    "type": "object",
                    "additionalProperties": true
                  }
                },
                "schedule": {
                  "description": "Specifies the specific drug schedule.",
                  "type": "object",
                  "properties": {
                    "coding": {
                      "type": "array",
                      "items": {
                        "description": "A reference to a code defined by a terminology system.",
                        "type": "object",
                        "properties": {
                          "system": {
                            "type": "string",
                            "pattern": "\\S*",
                            "description": "The identification of the code system that defines the meaning of the symbol in the code."
                          },
                          "version": {
                            "type": "string",
                            "pattern": "[ \\r\\n\\t\\S]+",
                            "description": "The version of the code system which was used when choosing this code. Note that a well&ndash;maintained code system does not need the version reported, because the meaning of codes is consistent across versions. However this cannot consistently be assured, and when the meaning is not guaranteed to be consistent, the version SHOULD be exchanged."
                          },
                          "code": {
                            "type": "string",
                            "pattern": "[^\\s]+(\\s[^\\s]+)*",
                            "description": "A symbol in syntax defined by the system. The symbol may be a predefined code or an expression in a syntax defined by the coding system (e.g. post&ndash;coordination)."
                          },
                          "display": {
                            "type": "string",
                            "pattern": "[ \\r\\n\\t\\S]+",
                            "description": "A representation of the meaning of the code in the system, following the rules of the system."
                          },
                          "userSelected": {
                            "type": "boolean",
                            "description": "Indicates that this coding was chosen by a user directly &ndash; e.g. off a pick list of available items (codes or displays)."
                          }
                        }
                      }
                    },
                    "text": {
                      "type": "string",
                      "pattern": "[ \\r\\n\\t\\S]+",
                      "description": "A human language representation of the concept as seen/selected/uttered by the user who entered the data and/or which represents the intended meaning of the user."
                    }
                  }
                }
              },
              "required": [
                "schedule"
              ]
            }
          },
          "maxDispense": {
            "description": "The maximum number of units of the medication that can be dispensed in a period.",
            "type": "object",
            "properties": {
              "modifierExtension": {
                "type": "array",
                "items": {
                  "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                  "type": "object",
                  "additionalProperties": true
                }
              },
              "quantity": {
                "description": "The maximum number of units of the medication that can be dispensed.",
                "type": "object",
                "properties": {
                  "value": {
                    "type": "number",
                    "description": "The value of the measured amount. The value includes an implicit precision in the presentation of the value."
                  },
                  "comparator": {
                    "type": "string",
                    "enum": [
                      "<",
                      "<=",
                      ">=",
                      ">"
                    ],
                    "description": "How the value should be understood and represented &ndash; whether the actual value is greater or less than the stated value due to measurement issues; e.g. if the comparator is \"<\" , then the real value is < stated value."
                  },
                  "unit": {
                    "type": "string",
                    "pattern": "[ \\r\\n\\t\\S]+",
                    "description": "A human&ndash;readable form of the unit."
                  },
                  "system": {
                    "type": "string",
                    "pattern": "\\S*",
                    "description": "The identification of the system that provides the coded form of the unit."
                  },
                  "code": {
                    "type": "string",
                    "pattern": "[^\\s]+(\\s[^\\s]+)*",
                    "description": "A computer processable form of the unit in some unit representation system."
                  }
                }
              },
              "period": {
                "description": "The period that applies to the maximum number of units.",
                "type": "object",
                "properties": {
                  "value": {
                    "type": "number",
                    "description": "The value of the measured amount. The value includes an implicit precision in the presentation of the value."
                  },
                  "comparator": {
                    "type": "string",
                    "enum": [
                      "<",
                      "<=",
                      ">=",
                      ">"
                    ],
                    "description": "How the value should be understood and represented &ndash; whether the actual value is greater or less than the stated value due to measurement issues; e.g. if the comparator is \"<\" , then the real value is < stated value."
                  },
                  "unit": {
                    "type": "string",
                    "pattern": "[ \\r\\n\\t\\S]+",
                    "description": "A human&ndash;readable form of the unit."
                  },
                  "system": {
                    "type": "string",
                    "pattern": "\\S*",
                    "description": "The identification of the system that provides the coded form of the unit."
                  },
                  "code": {
                    "type": "string",
                    "pattern": "[^\\s]+(\\s[^\\s]+)*",
                    "description": "A computer processable form of the unit in some unit representation system."
                  }
                }
              }
            },
            "required": [
              "quantity"
            ]
          }
        },
        "required": [
          "regulatoryAuthority"
        ]
      }
    },
    "kinetics": {
      "type": "array",
      "items": {
        "description": "The time course of drug absorption, distribution, metabolism and excretion of a medication from the body.",
        "type": "object",
        "properties": {
          "modifierExtension": {
            "type": "array",
            "items": {
              "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
              "type": "object",
              "additionalProperties": true
            }
          },
          "areaUnderCurve": {
            "type": "array",
            "items": {
              "description": "The drug concentration measured at certain discrete points in time.",
              "type": "object",
              "properties": {
                "value": {
                  "type": "number",
                  "description": "The value of the measured amount. The value includes an implicit precision in the presentation of the value."
                },
                "comparator": {
                  "type": "string",
                  "enum": [
                    "<",
                    "<=",
                    ">=",
                    ">"
                  ],
                  "description": "How the value should be understood and represented &ndash; whether the actual value is greater or less than the stated value due to measurement issues; e.g. if the comparator is \"<\" , then the real value is < stated value."
                },
                "unit": {
                  "type": "string",
                  "pattern": "[ \\r\\n\\t\\S]+",
                  "description": "A human&ndash;readable form of the unit."
                },
                "system": {
                  "type": "string",
                  "pattern": "\\S*",
                  "description": "The identification of the system that provides the coded form of the unit."
                },
                "code": {
                  "type": "string",
                  "pattern": "[^\\s]+(\\s[^\\s]+)*",
                  "description": "A computer processable form of the unit in some unit representation system."
                }
              }
            }
          },
          "lethalDose50": {
            "type": "array",
            "items": {
              "description": "The median lethal dose of a drug.",
              "type": "object",
              "properties": {
                "value": {
                  "type": "number",
                  "description": "The value of the measured amount. The value includes an implicit precision in the presentation of the value."
                },
                "comparator": {
                  "type": "string",
                  "enum": [
                    "<",
                    "<=",
                    ">=",
                    ">"
                  ],
                  "description": "How the value should be understood and represented &ndash; whether the actual value is greater or less than the stated value due to measurement issues; e.g. if the comparator is \"<\" , then the real value is < stated value."
                },
                "unit": {
                  "type": "string",
                  "pattern": "[ \\r\\n\\t\\S]+",
                  "description": "A human&ndash;readable form of the unit."
                },
                "system": {
                  "type": "string",
                  "pattern": "\\S*",
                  "description": "The identification of the system that provides the coded form of the unit."
                },
                "code": {
                  "type": "string",
                  "pattern": "[^\\s]+(\\s[^\\s]+)*",
                  "description": "A computer processable form of the unit in some unit representation system."
                }
              }
            }
          },
          "halfLifePeriod": {
            "description": "The time required for any specified property (e.g., the concentration of a substance in the body) to decrease by half.",
            "type": "object",
            "properties": {
              "value": {
                "type": "number",
                "description": "The value of the measured amount. The value includes an implicit precision in the presentation of the value."
              },
              "comparator": {
                "type": "string",
                "enum": [
                  "<",
                  "<=",
                  ">=",
                  ">"
                ],
                "description": "How the value should be understood and represented &ndash; whether the actual value is greater or less than the stated value due to measurement issues; e.g. if the comparator is \"<\" , then the real value is < stated value."
              },
              "unit": {
                "type": "string",
                "pattern": "[ \\r\\n\\t\\S]+",
                "description": "A human&ndash;readable form of the unit."
              },
              "system": {
                "type": "string",
                "pattern": "\\S*",
                "description": "The identification of the system that provides the coded form of the unit."
              },
              "code": {
                "type": "string",
                "pattern": "[^\\s]+(\\s[^\\s]+)*",
                "description": "A computer processable form of the unit in some unit representation system."
              }
            }
          }
        }
      }
    }
  },
  "required": [
    "resourceType"
  ]
}