{
  "type": "object",
  "properties": {
    "resourceType": {
      "type": "string",
      "enum": [
        "NutritionOrder"
      ]
    },
    "id": {
      "type": "string",
      "pattern": "[A-Za-z0-9\\-\\.]{1,64}",
      "description": "The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes."
    },
    "meta": {
      "description": "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
      "type": "object",
      "properties": {
        "versionId": {
          "type": "string",
          "pattern": "[A-Za-z0-9\\-\\.]{1,64}",
          "description": "The version specific identifier, as it appears in the version portion of the URL. This value changes when the resource is created, updated, or deleted."
        },
        "lastUpdated": {
          "type": "string",
          "pattern": "([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))",
          "description": "When the resource last changed &ndash; e.g. when the version changed."
        },
        "source": {
          "type": "string",
          "pattern": "\\S*",
          "description": "A uri that identifies the source system of the resource. This provides a minimal amount of [Provenance](provenance.html#) information that can be used to track or differentiate the source of information in the resource. The source may identify another FHIR server, document, message, database, etc."
        },
        "profile": {
          "type": "array",
          "items": {
            "type": "string",
            "pattern": "\\S*",
            "description": "A list of profiles (references to [StructureDefinition](structuredefinition.html#) resources) that this resource claims to conform to. The URL is a reference to [StructureDefinition.url](structuredefinition&ndash;definitions.html#StructureDefinition.url)."
          }
        },
        "security": {
          "type": "array",
          "items": {
            "description": "Security labels applied to this resource. These tags connect specific resources to the overall security policy and infrastructure.",
            "type": "object",
            "properties": {
              "system": {
                "type": "string",
                "pattern": "\\S*",
                "description": "The identification of the code system that defines the meaning of the symbol in the code."
              },
              "version": {
                "type": "string",
                "pattern": "[ \\r\\n\\t\\S]+",
                "description": "The version of the code system which was used when choosing this code. Note that a well&ndash;maintained code system does not need the version reported, because the meaning of codes is consistent across versions. However this cannot consistently be assured, and when the meaning is not guaranteed to be consistent, the version SHOULD be exchanged."
              },
              "code": {
                "type": "string",
                "pattern": "[^\\s]+(\\s[^\\s]+)*",
                "description": "A symbol in syntax defined by the system. The symbol may be a predefined code or an expression in a syntax defined by the coding system (e.g. post&ndash;coordination)."
              },
              "display": {
                "type": "string",
                "pattern": "[ \\r\\n\\t\\S]+",
                "description": "A representation of the meaning of the code in the system, following the rules of the system."
              },
              "userSelected": {
                "type": "boolean",
                "description": "Indicates that this coding was chosen by a user directly &ndash; e.g. off a pick list of available items (codes or displays)."
              }
            }
          }
        },
        "tag": {
          "type": "array",
          "items": {
            "description": "Tags applied to this resource. Tags are intended to be used to identify and relate resources to process and workflow, and applications are not required to consider the tags when interpreting the meaning of a resource.",
            "type": "object",
            "properties": {
              "system": {
                "type": "string",
                "pattern": "\\S*",
                "description": "The identification of the code system that defines the meaning of the symbol in the code."
              },
              "version": {
                "type": "string",
                "pattern": "[ \\r\\n\\t\\S]+",
                "description": "The version of the code system which was used when choosing this code. Note that a well&ndash;maintained code system does not need the version reported, because the meaning of codes is consistent across versions. However this cannot consistently be assured, and when the meaning is not guaranteed to be consistent, the version SHOULD be exchanged."
              },
              "code": {
                "type": "string",
                "pattern": "[^\\s]+(\\s[^\\s]+)*",
                "description": "A symbol in syntax defined by the system. The symbol may be a predefined code or an expression in a syntax defined by the coding system (e.g. post&ndash;coordination)."
              },
              "display": {
                "type": "string",
                "pattern": "[ \\r\\n\\t\\S]+",
                "description": "A representation of the meaning of the code in the system, following the rules of the system."
              },
              "userSelected": {
                "type": "boolean",
                "description": "Indicates that this coding was chosen by a user directly &ndash; e.g. off a pick list of available items (codes or displays)."
              }
            }
          }
        }
      }
    },
    "implicitRules": {
      "type": "string",
      "pattern": "\\S*",
      "description": "A reference to a set of rules that were followed when the resource was constructed, and which must be understood when processing the content. Often, this is a reference to an implementation guide that defines the special rules along with other profiles etc."
    },
    "language": {
      "type": "string",
      "pattern": "[^\\s]+(\\s[^\\s]+)*",
      "description": "The base language in which the resource is written."
    },
    "text": {
      "description": "A human&ndash;readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it \"clinically safe\" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.",
      "type": "object",
      "properties": {
        "status": {
          "type": "string",
          "enum": [
            "generated",
            "extensions",
            "additional",
            "empty"
          ],
          "description": "The status of the narrative &ndash; whether it's entirely generated (from just the defined data or the extensions too), or whether a human authored it and it may contain additional data."
        },
        "div": {
          "type": "string",
          "description": "The actual narrative content, a stripped down version of XHTML."
        }
      },
      "required": [
        "status",
        "div"
      ]
    },
    "contained": {
      "type": "array",
      "items": {
        "type": "object",
        "discriminator": "resourceType",
        "properties": {
          "resourceType": {
            "type": "string",
            "enum": [
              "Account",
              "ActivityDefinition",
              "AdverseEvent",
              "AllergyIntolerance",
              "Appointment",
              "AppointmentResponse",
              "AuditEvent",
              "Basic",
              "Binary",
              "BiologicallyDerivedProduct",
              "BodyStructure",
              "Bundle",
              "CapabilityStatement",
              "CarePlan",
              "CareTeam",
              "CatalogEntry",
              "ChargeItem",
              "ChargeItemDefinition",
              "Claim",
              "ClaimResponse",
              "ClinicalImpression",
              "CodeSystem",
              "Communication",
              "CommunicationRequest",
              "CompartmentDefinition",
              "Composition",
              "ConceptMap",
              "Condition",
              "Consent",
              "Contract",
              "Coverage",
              "CoverageEligibilityRequest",
              "CoverageEligibilityResponse",
              "DetectedIssue",
              "Device",
              "DeviceDefinition",
              "DeviceMetric",
              "DeviceRequest",
              "DeviceUseStatement",
              "DiagnosticReport",
              "DocumentManifest",
              "DocumentReference",
              "DomainResource",
              "EffectEvidenceSynthesis",
              "Encounter",
              "Endpoint",
              "EnrollmentRequest",
              "EnrollmentResponse",
              "EpisodeOfCare",
              "EventDefinition",
              "Evidence",
              "EvidenceVariable",
              "ExampleScenario",
              "ExplanationOfBenefit",
              "FamilyMemberHistory",
              "Flag",
              "Goal",
              "GraphDefinition",
              "Group",
              "GuidanceResponse",
              "HealthcareService",
              "ImagingStudy",
              "Immunization",
              "ImmunizationEvaluation",
              "ImmunizationRecommendation",
              "ImplementationGuide",
              "InsurancePlan",
              "Invoice",
              "Library",
              "Linkage",
              "List",
              "Location",
              "Measure",
              "MeasureReport",
              "Media",
              "Medication",
              "MedicationAdministration",
              "MedicationDispense",
              "MedicationKnowledge",
              "MedicationRequest",
              "MedicationStatement",
              "MedicinalProduct",
              "MedicinalProductAuthorization",
              "MedicinalProductContraindication",
              "MedicinalProductIndication",
              "MedicinalProductIngredient",
              "MedicinalProductInteraction",
              "MedicinalProductManufactured",
              "MedicinalProductPackaged",
              "MedicinalProductPharmaceutical",
              "MedicinalProductUndesirableEffect",
              "MessageDefinition",
              "MessageHeader",
              "MolecularSequence",
              "NamingSystem",
              "NutritionOrder",
              "Observation",
              "ObservationDefinition",
              "OperationDefinition",
              "OperationOutcome",
              "Organization",
              "OrganizationAffiliation",
              "Parameters",
              "Patient",
              "PaymentNotice",
              "PaymentReconciliation",
              "Person",
              "PlanDefinition",
              "Practitioner",
              "PractitionerRole",
              "Procedure",
              "Provenance",
              "Questionnaire",
              "QuestionnaireResponse",
              "RelatedPerson",
              "RequestGroup",
              "ResearchDefinition",
              "ResearchElementDefinition",
              "ResearchStudy",
              "ResearchSubject",
              "Resource",
              "RiskAssessment",
              "RiskEvidenceSynthesis",
              "Schedule",
              "SearchParameter",
              "ServiceRequest",
              "Slot",
              "Specimen",
              "SpecimenDefinition",
              "StructureDefinition",
              "StructureMap",
              "Subscription",
              "Substance",
              "SubstanceNucleicAcid",
              "SubstancePolymer",
              "SubstanceProtein",
              "SubstanceReferenceInformation",
              "SubstanceSourceMaterial",
              "SubstanceSpecification",
              "SupplyDelivery",
              "SupplyRequest",
              "Task",
              "TerminologyCapabilities",
              "TestReport",
              "TestScript",
              "ValueSet",
              "VerificationResult",
              "VisionPrescription"
            ]
          },
          "id": {
            "type": "string",
            "pattern": "[A-Za-z0-9\\-\\.]{1,64}",
            "description": "The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes."
          },
          "meta": {
            "description": "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
            "type": "object",
            "properties": {
              "versionId": {
                "type": "string",
                "pattern": "[A-Za-z0-9\\-\\.]{1,64}",
                "description": "The version specific identifier, as it appears in the version portion of the URL. This value changes when the resource is created, updated, or deleted."
              },
              "lastUpdated": {
                "type": "string",
                "pattern": "([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))",
                "description": "When the resource last changed &ndash; e.g. when the version changed."
              },
              "source": {
                "type": "string",
                "pattern": "\\S*",
                "description": "A uri that identifies the source system of the resource. This provides a minimal amount of [Provenance](provenance.html#) information that can be used to track or differentiate the source of information in the resource. The source may identify another FHIR server, document, message, database, etc."
              },
              "profile": {
                "type": "array",
                "items": {
                  "type": "string",
                  "pattern": "\\S*",
                  "description": "A list of profiles (references to [StructureDefinition](structuredefinition.html#) resources) that this resource claims to conform to. The URL is a reference to [StructureDefinition.url](structuredefinition&ndash;definitions.html#StructureDefinition.url)."
                }
              },
              "security": {
                "type": "array",
                "items": {
                  "description": "Security labels applied to this resource. These tags connect specific resources to the overall security policy and infrastructure.",
                  "type": "object",
                  "properties": {
                    "system": {
                      "type": "string",
                      "pattern": "\\S*",
                      "description": "The identification of the code system that defines the meaning of the symbol in the code."
                    },
                    "version": {
                      "type": "string",
                      "pattern": "[ \\r\\n\\t\\S]+",
                      "description": "The version of the code system which was used when choosing this code. Note that a well&ndash;maintained code system does not need the version reported, because the meaning of codes is consistent across versions. However this cannot consistently be assured, and when the meaning is not guaranteed to be consistent, the version SHOULD be exchanged."
                    },
                    "code": {
                      "type": "string",
                      "pattern": "[^\\s]+(\\s[^\\s]+)*",
                      "description": "A symbol in syntax defined by the system. The symbol may be a predefined code or an expression in a syntax defined by the coding system (e.g. post&ndash;coordination)."
                    },
                    "display": {
                      "type": "string",
                      "pattern": "[ \\r\\n\\t\\S]+",
                      "description": "A representation of the meaning of the code in the system, following the rules of the system."
                    },
                    "userSelected": {
                      "type": "boolean",
                      "description": "Indicates that this coding was chosen by a user directly &ndash; e.g. off a pick list of available items (codes or displays)."
                    }
                  }
                }
              },
              "tag": {
                "type": "array",
                "items": {
                  "description": "Tags applied to this resource. Tags are intended to be used to identify and relate resources to process and workflow, and applications are not required to consider the tags when interpreting the meaning of a resource.",
                  "type": "object",
                  "properties": {
                    "system": {
                      "type": "string",
                      "pattern": "\\S*",
                      "description": "The identification of the code system that defines the meaning of the symbol in the code."
                    },
                    "version": {
                      "type": "string",
                      "pattern": "[ \\r\\n\\t\\S]+",
                      "description": "The version of the code system which was used when choosing this code. Note that a well&ndash;maintained code system does not need the version reported, because the meaning of codes is consistent across versions. However this cannot consistently be assured, and when the meaning is not guaranteed to be consistent, the version SHOULD be exchanged."
                    },
                    "code": {
                      "type": "string",
                      "pattern": "[^\\s]+(\\s[^\\s]+)*",
                      "description": "A symbol in syntax defined by the system. The symbol may be a predefined code or an expression in a syntax defined by the coding system (e.g. post&ndash;coordination)."
                    },
                    "display": {
                      "type": "string",
                      "pattern": "[ \\r\\n\\t\\S]+",
                      "description": "A representation of the meaning of the code in the system, following the rules of the system."
                    },
                    "userSelected": {
                      "type": "boolean",
                      "description": "Indicates that this coding was chosen by a user directly &ndash; e.g. off a pick list of available items (codes or displays)."
                    }
                  }
                }
              }
            }
          },
          "implicitRules": {
            "type": "string",
            "pattern": "\\S*",
            "description": "A reference to a set of rules that were followed when the resource was constructed, and which must be understood when processing the content. Often, this is a reference to an implementation guide that defines the special rules along with other profiles etc."
          },
          "language": {
            "type": "string",
            "pattern": "[^\\s]+(\\s[^\\s]+)*",
            "description": "The base language in which the resource is written."
          }
        },
        "required": [
          "resourceType"
        ],
        "description": "These resources do not have an independent existence apart from the resource that contains them &ndash; they cannot be identified independently, and nor can they have their own independent transaction scope."
      }
    },
    "extension": {
      "type": "array",
      "items": {
        "description": "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
        "type": "object",
        "additionalProperties": true
      }
    },
    "modifierExtension": {
      "type": "array",
      "items": {
        "description": "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
        "type": "object",
        "additionalProperties": true
      }
    },
    "identifier": {
      "type": "array",
      "items": {
        "description": "Identifiers assigned to this order by the order sender or by the order receiver.",
        "type": "object",
        "properties": {
          "use": {
            "type": "string",
            "enum": [
              "usual",
              "official",
              "temp",
              "secondary",
              "old"
            ],
            "description": "The purpose of this identifier."
          },
          "type": {
            "description": "A coded type for the identifier that can be used to determine which identifier to use for a specific purpose.",
            "type": "object",
            "properties": {
              "coding": {
                "type": "array",
                "items": {
                  "description": "A reference to a code defined by a terminology system.",
                  "type": "object",
                  "properties": {
                    "system": {
                      "type": "string",
                      "pattern": "\\S*",
                      "description": "The identification of the code system that defines the meaning of the symbol in the code."
                    },
                    "version": {
                      "type": "string",
                      "pattern": "[ \\r\\n\\t\\S]+",
                      "description": "The version of the code system which was used when choosing this code. Note that a well&ndash;maintained code system does not need the version reported, because the meaning of codes is consistent across versions. However this cannot consistently be assured, and when the meaning is not guaranteed to be consistent, the version SHOULD be exchanged."
                    },
                    "code": {
                      "type": "string",
                      "pattern": "[^\\s]+(\\s[^\\s]+)*",
                      "description": "A symbol in syntax defined by the system. The symbol may be a predefined code or an expression in a syntax defined by the coding system (e.g. post&ndash;coordination)."
                    },
                    "display": {
                      "type": "string",
                      "pattern": "[ \\r\\n\\t\\S]+",
                      "description": "A representation of the meaning of the code in the system, following the rules of the system."
                    },
                    "userSelected": {
                      "type": "boolean",
                      "description": "Indicates that this coding was chosen by a user directly &ndash; e.g. off a pick list of available items (codes or displays)."
                    }
                  }
                }
              },
              "text": {
                "type": "string",
                "pattern": "[ \\r\\n\\t\\S]+",
                "description": "A human language representation of the concept as seen/selected/uttered by the user who entered the data and/or which represents the intended meaning of the user."
              }
            }
          },
          "system": {
            "type": "string",
            "pattern": "\\S*",
            "description": "Establishes the namespace for the value &ndash; that is, a URL that describes a set values that are unique."
          },
          "value": {
            "type": "string",
            "pattern": "[ \\r\\n\\t\\S]+",
            "description": "The portion of the identifier typically relevant to the user and which is unique within the context of the system."
          },
          "period": {
            "description": "Time period during which identifier is/was valid for use.",
            "type": "object",
            "properties": {
              "start": {
                "type": "string",
                "pattern": "([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?",
                "description": "The start of the period. The boundary is inclusive."
              },
              "end": {
                "type": "string",
                "pattern": "([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?",
                "description": "The end of the period. If the end of the period is missing, it means no end was known or planned at the time the instance was created. The start may be in the past, and the end date in the future, which means that period is expected/planned to end at that time."
              }
            }
          },
          "assigner": {
            "description": "Organization that issued/manages the identifier.",
            "type": "object",
            "properties": {
              "reference": {
                "type": "string",
                "pattern": "[ \\r\\n\\t\\S]+",
                "description": "A reference to a location at which the other resource is found. The reference may be a relative reference, in which case it is relative to the service base URL, or an absolute URL that resolves to the location where the resource is found. The reference may be version specific or not. If the reference is not to a FHIR RESTful server, then it should be assumed to be version specific. Internal fragment references (start with '#') refer to contained resources."
              },
              "type": {
                "type": "string",
                "pattern": "\\S*",
                "description": "The expected type of the target of the reference. If both Reference.type and Reference.reference are populated and Reference.reference is a FHIR URL, both SHALL be consistent.\n\nThe type is the Canonical URL of Resource Definition that is the type this reference refers to. References are URLs that are relative to http://hl7.org/fhir/StructureDefinition/ e.g. \"Patient\" is a reference to http://hl7.org/fhir/StructureDefinition/Patient. Absolute URLs are only allowed for logical models (and can only be used in references in logical models, not resources)."
              },
              "identifier": {
                "type": "object",
                "additionalProperties": true,
                "description": "An identifier for the target resource. This is used when there is no way to reference the other resource directly, either because the entity it represents is not available through a FHIR server, or because there is no way for the author of the resource to convert a known identifier to an actual location. There is no requirement that a Reference.identifier point to something that is actually exposed as a FHIR instance, but it SHALL point to a business concept that would be expected to be exposed as a FHIR instance, and that instance would need to be of a FHIR resource type allowed by the reference."
              },
              "display": {
                "type": "string",
                "pattern": "[ \\r\\n\\t\\S]+",
                "description": "Plain text narrative that identifies the resource in addition to the resource reference."
              }
            }
          }
        }
      }
    },
    "instantiatesCanonical": {
      "type": "array",
      "items": {
        "type": "string",
        "pattern": "\\S*",
        "description": "The URL pointing to a FHIR&ndash;defined protocol, guideline, orderset or other definition that is adhered to in whole or in part by this NutritionOrder."
      }
    },
    "instantiatesUri": {
      "type": "array",
      "items": {
        "type": "string",
        "pattern": "\\S*",
        "description": "The URL pointing to an externally maintained protocol, guideline, orderset or other definition that is adhered to in whole or in part by this NutritionOrder."
      }
    },
    "instantiates": {
      "type": "array",
      "items": {
        "type": "string",
        "pattern": "\\S*",
        "description": "The URL pointing to a protocol, guideline, orderset or other definition that is adhered to in whole or in part by this NutritionOrder."
      }
    },
    "status": {
      "type": "string",
      "enum": [
        "draft",
        "active",
        "on-hold",
        "revoked",
        "completed",
        "entered-in-error",
        "unknown"
      ],
      "description": "The workflow status of the nutrition order/request."
    },
    "intent": {
      "type": "string",
      "enum": [
        "proposal",
        "plan",
        "directive",
        "order",
        "original-order",
        "reflex-order",
        "filler-order",
        "instance-order",
        "option"
      ],
      "description": "Indicates the level of authority/intentionality associated with the NutrionOrder and where the request fits into the workflow chain."
    },
    "patient": {
      "description": "The person (patient) who needs the nutrition order for an oral diet, nutritional supplement and/or enteral or formula feeding.",
      "type": "object",
      "properties": {
        "reference": {
          "type": "string",
          "pattern": "[ \\r\\n\\t\\S]+",
          "description": "A reference to a location at which the other resource is found. The reference may be a relative reference, in which case it is relative to the service base URL, or an absolute URL that resolves to the location where the resource is found. The reference may be version specific or not. If the reference is not to a FHIR RESTful server, then it should be assumed to be version specific. Internal fragment references (start with '#') refer to contained resources."
        },
        "type": {
          "type": "string",
          "pattern": "\\S*",
          "description": "The expected type of the target of the reference. If both Reference.type and Reference.reference are populated and Reference.reference is a FHIR URL, both SHALL be consistent.\n\nThe type is the Canonical URL of Resource Definition that is the type this reference refers to. References are URLs that are relative to http://hl7.org/fhir/StructureDefinition/ e.g. \"Patient\" is a reference to http://hl7.org/fhir/StructureDefinition/Patient. Absolute URLs are only allowed for logical models (and can only be used in references in logical models, not resources)."
        },
        "identifier": {
          "type": "object",
          "additionalProperties": true,
          "description": "An identifier for the target resource. This is used when there is no way to reference the other resource directly, either because the entity it represents is not available through a FHIR server, or because there is no way for the author of the resource to convert a known identifier to an actual location. There is no requirement that a Reference.identifier point to something that is actually exposed as a FHIR instance, but it SHALL point to a business concept that would be expected to be exposed as a FHIR instance, and that instance would need to be of a FHIR resource type allowed by the reference."
        },
        "display": {
          "type": "string",
          "pattern": "[ \\r\\n\\t\\S]+",
          "description": "Plain text narrative that identifies the resource in addition to the resource reference."
        }
      }
    },
    "encounter": {
      "description": "An encounter that provides additional information about the healthcare context in which this request is made.",
      "type": "object",
      "properties": {
        "reference": {
          "type": "string",
          "pattern": "[ \\r\\n\\t\\S]+",
          "description": "A reference to a location at which the other resource is found. The reference may be a relative reference, in which case it is relative to the service base URL, or an absolute URL that resolves to the location where the resource is found. The reference may be version specific or not. If the reference is not to a FHIR RESTful server, then it should be assumed to be version specific. Internal fragment references (start with '#') refer to contained resources."
        },
        "type": {
          "type": "string",
          "pattern": "\\S*",
          "description": "The expected type of the target of the reference. If both Reference.type and Reference.reference are populated and Reference.reference is a FHIR URL, both SHALL be consistent.\n\nThe type is the Canonical URL of Resource Definition that is the type this reference refers to. References are URLs that are relative to http://hl7.org/fhir/StructureDefinition/ e.g. \"Patient\" is a reference to http://hl7.org/fhir/StructureDefinition/Patient. Absolute URLs are only allowed for logical models (and can only be used in references in logical models, not resources)."
        },
        "identifier": {
          "type": "object",
          "additionalProperties": true,
          "description": "An identifier for the target resource. This is used when there is no way to reference the other resource directly, either because the entity it represents is not available through a FHIR server, or because there is no way for the author of the resource to convert a known identifier to an actual location. There is no requirement that a Reference.identifier point to something that is actually exposed as a FHIR instance, but it SHALL point to a business concept that would be expected to be exposed as a FHIR instance, and that instance would need to be of a FHIR resource type allowed by the reference."
        },
        "display": {
          "type": "string",
          "pattern": "[ \\r\\n\\t\\S]+",
          "description": "Plain text narrative that identifies the resource in addition to the resource reference."
        }
      }
    },
    "dateTime": {
      "type": "string",
      "pattern": "([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?",
      "description": "The date and time that this nutrition order was requested."
    },
    "orderer": {
      "description": "The practitioner that holds legal responsibility for ordering the diet, nutritional supplement, or formula feedings.",
      "type": "object",
      "properties": {
        "reference": {
          "type": "string",
          "pattern": "[ \\r\\n\\t\\S]+",
          "description": "A reference to a location at which the other resource is found. The reference may be a relative reference, in which case it is relative to the service base URL, or an absolute URL that resolves to the location where the resource is found. The reference may be version specific or not. If the reference is not to a FHIR RESTful server, then it should be assumed to be version specific. Internal fragment references (start with '#') refer to contained resources."
        },
        "type": {
          "type": "string",
          "pattern": "\\S*",
          "description": "The expected type of the target of the reference. If both Reference.type and Reference.reference are populated and Reference.reference is a FHIR URL, both SHALL be consistent.\n\nThe type is the Canonical URL of Resource Definition that is the type this reference refers to. References are URLs that are relative to http://hl7.org/fhir/StructureDefinition/ e.g. \"Patient\" is a reference to http://hl7.org/fhir/StructureDefinition/Patient. Absolute URLs are only allowed for logical models (and can only be used in references in logical models, not resources)."
        },
        "identifier": {
          "type": "object",
          "additionalProperties": true,
          "description": "An identifier for the target resource. This is used when there is no way to reference the other resource directly, either because the entity it represents is not available through a FHIR server, or because there is no way for the author of the resource to convert a known identifier to an actual location. There is no requirement that a Reference.identifier point to something that is actually exposed as a FHIR instance, but it SHALL point to a business concept that would be expected to be exposed as a FHIR instance, and that instance would need to be of a FHIR resource type allowed by the reference."
        },
        "display": {
          "type": "string",
          "pattern": "[ \\r\\n\\t\\S]+",
          "description": "Plain text narrative that identifies the resource in addition to the resource reference."
        }
      }
    },
    "allergyIntolerance": {
      "type": "array",
      "items": {
        "description": "A link to a record of allergies or intolerances  which should be included in the nutrition order.",
        "type": "object",
        "properties": {
          "reference": {
            "type": "string",
            "pattern": "[ \\r\\n\\t\\S]+",
            "description": "A reference to a location at which the other resource is found. The reference may be a relative reference, in which case it is relative to the service base URL, or an absolute URL that resolves to the location where the resource is found. The reference may be version specific or not. If the reference is not to a FHIR RESTful server, then it should be assumed to be version specific. Internal fragment references (start with '#') refer to contained resources."
          },
          "type": {
            "type": "string",
            "pattern": "\\S*",
            "description": "The expected type of the target of the reference. If both Reference.type and Reference.reference are populated and Reference.reference is a FHIR URL, both SHALL be consistent.\n\nThe type is the Canonical URL of Resource Definition that is the type this reference refers to. References are URLs that are relative to http://hl7.org/fhir/StructureDefinition/ e.g. \"Patient\" is a reference to http://hl7.org/fhir/StructureDefinition/Patient. Absolute URLs are only allowed for logical models (and can only be used in references in logical models, not resources)."
          },
          "identifier": {
            "type": "object",
            "additionalProperties": true,
            "description": "An identifier for the target resource. This is used when there is no way to reference the other resource directly, either because the entity it represents is not available through a FHIR server, or because there is no way for the author of the resource to convert a known identifier to an actual location. There is no requirement that a Reference.identifier point to something that is actually exposed as a FHIR instance, but it SHALL point to a business concept that would be expected to be exposed as a FHIR instance, and that instance would need to be of a FHIR resource type allowed by the reference."
          },
          "display": {
            "type": "string",
            "pattern": "[ \\r\\n\\t\\S]+",
            "description": "Plain text narrative that identifies the resource in addition to the resource reference."
          }
        }
      }
    },
    "foodPreferenceModifier": {
      "type": "array",
      "items": {
        "description": "This modifier is used to convey order&ndash;specific modifiers about the type of food that should be given. These can be derived from patient allergies, intolerances, or preferences such as Halal, Vegan or Kosher. This modifier applies to the entire nutrition order inclusive of the oral diet, nutritional supplements and enteral formula feedings.",
        "type": "object",
        "properties": {
          "coding": {
            "type": "array",
            "items": {
              "description": "A reference to a code defined by a terminology system.",
              "type": "object",
              "properties": {
                "system": {
                  "type": "string",
                  "pattern": "\\S*",
                  "description": "The identification of the code system that defines the meaning of the symbol in the code."
                },
                "version": {
                  "type": "string",
                  "pattern": "[ \\r\\n\\t\\S]+",
                  "description": "The version of the code system which was used when choosing this code. Note that a well&ndash;maintained code system does not need the version reported, because the meaning of codes is consistent across versions. However this cannot consistently be assured, and when the meaning is not guaranteed to be consistent, the version SHOULD be exchanged."
                },
                "code": {
                  "type": "string",
                  "pattern": "[^\\s]+(\\s[^\\s]+)*",
                  "description": "A symbol in syntax defined by the system. The symbol may be a predefined code or an expression in a syntax defined by the coding system (e.g. post&ndash;coordination)."
                },
                "display": {
                  "type": "string",
                  "pattern": "[ \\r\\n\\t\\S]+",
                  "description": "A representation of the meaning of the code in the system, following the rules of the system."
                },
                "userSelected": {
                  "type": "boolean",
                  "description": "Indicates that this coding was chosen by a user directly &ndash; e.g. off a pick list of available items (codes or displays)."
                }
              }
            }
          },
          "text": {
            "type": "string",
            "pattern": "[ \\r\\n\\t\\S]+",
            "description": "A human language representation of the concept as seen/selected/uttered by the user who entered the data and/or which represents the intended meaning of the user."
          }
        }
      }
    },
    "excludeFoodModifier": {
      "type": "array",
      "items": {
        "description": "This modifier is used to convey Order&ndash;specific modifier about the type of oral food or oral fluids that should not be given. These can be derived from patient allergies, intolerances, or preferences such as No Red Meat, No Soy or No Wheat or  Gluten&ndash;Free.  While it should not be necessary to repeat allergy or intolerance information captured in the referenced AllergyIntolerance resource in the excludeFoodModifier, this element may be used to convey additional specificity related to foods that should be eliminated from the patient&rsquo;s diet for any reason.  This modifier applies to the entire nutrition order inclusive of the oral diet, nutritional supplements and enteral formula feedings.",
        "type": "object",
        "properties": {
          "coding": {
            "type": "array",
            "items": {
              "description": "A reference to a code defined by a terminology system.",
              "type": "object",
              "properties": {
                "system": {
                  "type": "string",
                  "pattern": "\\S*",
                  "description": "The identification of the code system that defines the meaning of the symbol in the code."
                },
                "version": {
                  "type": "string",
                  "pattern": "[ \\r\\n\\t\\S]+",
                  "description": "The version of the code system which was used when choosing this code. Note that a well&ndash;maintained code system does not need the version reported, because the meaning of codes is consistent across versions. However this cannot consistently be assured, and when the meaning is not guaranteed to be consistent, the version SHOULD be exchanged."
                },
                "code": {
                  "type": "string",
                  "pattern": "[^\\s]+(\\s[^\\s]+)*",
                  "description": "A symbol in syntax defined by the system. The symbol may be a predefined code or an expression in a syntax defined by the coding system (e.g. post&ndash;coordination)."
                },
                "display": {
                  "type": "string",
                  "pattern": "[ \\r\\n\\t\\S]+",
                  "description": "A representation of the meaning of the code in the system, following the rules of the system."
                },
                "userSelected": {
                  "type": "boolean",
                  "description": "Indicates that this coding was chosen by a user directly &ndash; e.g. off a pick list of available items (codes or displays)."
                }
              }
            }
          },
          "text": {
            "type": "string",
            "pattern": "[ \\r\\n\\t\\S]+",
            "description": "A human language representation of the concept as seen/selected/uttered by the user who entered the data and/or which represents the intended meaning of the user."
          }
        }
      }
    },
    "oralDiet": {
      "description": "Diet given orally in contrast to enteral (tube) feeding.",
      "type": "object",
      "properties": {
        "modifierExtension": {
          "type": "array",
          "items": {
            "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            "type": "object",
            "additionalProperties": true
          }
        },
        "type": {
          "type": "array",
          "items": {
            "description": "The kind of diet or dietary restriction such as fiber restricted diet or diabetic diet.",
            "type": "object",
            "properties": {
              "coding": {
                "type": "array",
                "items": {
                  "description": "A reference to a code defined by a terminology system.",
                  "type": "object",
                  "properties": {
                    "system": {
                      "type": "string",
                      "pattern": "\\S*",
                      "description": "The identification of the code system that defines the meaning of the symbol in the code."
                    },
                    "version": {
                      "type": "string",
                      "pattern": "[ \\r\\n\\t\\S]+",
                      "description": "The version of the code system which was used when choosing this code. Note that a well&ndash;maintained code system does not need the version reported, because the meaning of codes is consistent across versions. However this cannot consistently be assured, and when the meaning is not guaranteed to be consistent, the version SHOULD be exchanged."
                    },
                    "code": {
                      "type": "string",
                      "pattern": "[^\\s]+(\\s[^\\s]+)*",
                      "description": "A symbol in syntax defined by the system. The symbol may be a predefined code or an expression in a syntax defined by the coding system (e.g. post&ndash;coordination)."
                    },
                    "display": {
                      "type": "string",
                      "pattern": "[ \\r\\n\\t\\S]+",
                      "description": "A representation of the meaning of the code in the system, following the rules of the system."
                    },
                    "userSelected": {
                      "type": "boolean",
                      "description": "Indicates that this coding was chosen by a user directly &ndash; e.g. off a pick list of available items (codes or displays)."
                    }
                  }
                }
              },
              "text": {
                "type": "string",
                "pattern": "[ \\r\\n\\t\\S]+",
                "description": "A human language representation of the concept as seen/selected/uttered by the user who entered the data and/or which represents the intended meaning of the user."
              }
            }
          }
        },
        "schedule": {
          "type": "array",
          "items": {
            "description": "The time period and frequency at which the diet should be given.  The diet should be given for the combination of all schedules if more than one schedule is present.",
            "type": "object",
            "properties": {
              "modifierExtension": {
                "type": "array",
                "items": {
                  "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                  "type": "object",
                  "additionalProperties": true
                }
              },
              "event": {
                "type": "array",
                "items": {
                  "type": "string",
                  "pattern": "([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?",
                  "description": "Identifies specific times when the event occurs."
                }
              },
              "repeat": {
                "description": "A set of rules that describe when the event is scheduled.",
                "type": "object",
                "properties": {
                  "modifierExtension": {
                    "type": "array",
                    "items": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                      "type": "object",
                      "additionalProperties": true
                    }
                  },
                  "boundsDuration": {
                    "description": "Either a duration for the length of the timing schedule, a range of possible length, or outer bounds for start and/or end limits of the timing schedule.",
                    "type": "object",
                    "properties": {
                      "value": {
                        "type": "number",
                        "description": "The value of the measured amount. The value includes an implicit precision in the presentation of the value."
                      },
                      "comparator": {
                        "type": "string",
                        "enum": [
                          "<",
                          "<=",
                          ">=",
                          ">"
                        ],
                        "description": "How the value should be understood and represented &ndash; whether the actual value is greater or less than the stated value due to measurement issues; e.g. if the comparator is \"<\" , then the real value is < stated value."
                      },
                      "unit": {
                        "type": "string",
                        "pattern": "[ \\r\\n\\t\\S]+",
                        "description": "A human&ndash;readable form of the unit."
                      },
                      "system": {
                        "type": "string",
                        "pattern": "\\S*",
                        "description": "The identification of the system that provides the coded form of the unit."
                      },
                      "code": {
                        "type": "string",
                        "pattern": "[^\\s]+(\\s[^\\s]+)*",
                        "description": "A computer processable form of the unit in some unit representation system."
                      }
                    }
                  },
                  "boundsRange": {
                    "description": "Either a duration for the length of the timing schedule, a range of possible length, or outer bounds for start and/or end limits of the timing schedule.",
                    "type": "object",
                    "properties": {
                      "low": {
                        "description": "The low limit. The boundary is inclusive.",
                        "type": "object",
                        "properties": {
                          "value": {
                            "type": "number",
                            "description": "The value of the measured amount. The value includes an implicit precision in the presentation of the value."
                          },
                          "comparator": {
                            "type": "string",
                            "enum": [
                              "<",
                              "<=",
                              ">=",
                              ">"
                            ],
                            "description": "How the value should be understood and represented &ndash; whether the actual value is greater or less than the stated value due to measurement issues; e.g. if the comparator is \"<\" , then the real value is < stated value."
                          },
                          "unit": {
                            "type": "string",
                            "pattern": "[ \\r\\n\\t\\S]+",
                            "description": "A human&ndash;readable form of the unit."
                          },
                          "system": {
                            "type": "string",
                            "pattern": "\\S*",
                            "description": "The identification of the system that provides the coded form of the unit."
                          },
                          "code": {
                            "type": "string",
                            "pattern": "[^\\s]+(\\s[^\\s]+)*",
                            "description": "A computer processable form of the unit in some unit representation system."
                          }
                        }
                      },
                      "high": {
                        "description": "The high limit. The boundary is inclusive.",
                        "type": "object",
                        "properties": {
                          "value": {
                            "type": "number",
                            "description": "The value of the measured amount. The value includes an implicit precision in the presentation of the value."
                          },
                          "comparator": {
                            "type": "string",
                            "enum": [
                              "<",
                              "<=",
                              ">=",
                              ">"
                            ],
                            "description": "How the value should be understood and represented &ndash; whether the actual value is greater or less than the stated value due to measurement issues; e.g. if the comparator is \"<\" , then the real value is < stated value."
                          },
                          "unit": {
                            "type": "string",
                            "pattern": "[ \\r\\n\\t\\S]+",
                            "description": "A human&ndash;readable form of the unit."
                          },
                          "system": {
                            "type": "string",
                            "pattern": "\\S*",
                            "description": "The identification of the system that provides the coded form of the unit."
                          },
                          "code": {
                            "type": "string",
                            "pattern": "[^\\s]+(\\s[^\\s]+)*",
                            "description": "A computer processable form of the unit in some unit representation system."
                          }
                        }
                      }
                    }
                  },
                  "boundsPeriod": {
                    "description": "Either a duration for the length of the timing schedule, a range of possible length, or outer bounds for start and/or end limits of the timing schedule.",
                    "type": "object",
                    "properties": {
                      "start": {
                        "type": "string",
                        "pattern": "([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?",
                        "description": "The start of the period. The boundary is inclusive."
                      },
                      "end": {
                        "type": "string",
                        "pattern": "([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?",
                        "description": "The end of the period. If the end of the period is missing, it means no end was known or planned at the time the instance was created. The start may be in the past, and the end date in the future, which means that period is expected/planned to end at that time."
                      }
                    }
                  },
                  "count": {
                    "type": "integer",
                    "format": "int32",
                    "description": "A total count of the desired number of repetitions across the duration of the entire timing specification. If countMax is present, this element indicates the lower bound of the allowed range of count values."
                  },
                  "countMax": {
                    "type": "integer",
                    "format": "int32",
                    "description": "If present, indicates that the count is a range &ndash; so to perform the action between [count] and [countMax] times."
                  },
                  "duration": {
                    "type": "number",
                    "description": "How long this thing happens for when it happens. If durationMax is present, this element indicates the lower bound of the allowed range of the duration."
                  },
                  "durationMax": {
                    "type": "number",
                    "description": "If present, indicates that the duration is a range &ndash; so to perform the action between [duration] and [durationMax] time length."
                  },
                  "durationUnit": {
                    "type": "string",
                    "enum": [
                      "s",
                      "min",
                      "h",
                      "d",
                      "wk",
                      "mo",
                      "a"
                    ],
                    "description": "The units of time for the duration, in UCUM units."
                  },
                  "frequency": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The number of times to repeat the action within the specified period. If frequencyMax is present, this element indicates the lower bound of the allowed range of the frequency."
                  },
                  "frequencyMax": {
                    "type": "integer",
                    "format": "int32",
                    "description": "If present, indicates that the frequency is a range &ndash; so to repeat between [frequency] and [frequencyMax] times within the period or period range."
                  },
                  "period": {
                    "type": "number",
                    "description": "Indicates the duration of time over which repetitions are to occur; e.g. to express \"3 times per day\", 3 would be the frequency and \"1 day\" would be the period. If periodMax is present, this element indicates the lower bound of the allowed range of the period length."
                  },
                  "periodMax": {
                    "type": "number",
                    "description": "If present, indicates that the period is a range from [period] to [periodMax], allowing expressing concepts such as \"do this once every 3&ndash;5 days."
                  },
                  "periodUnit": {
                    "type": "string",
                    "enum": [
                      "s",
                      "min",
                      "h",
                      "d",
                      "wk",
                      "mo",
                      "a"
                    ],
                    "description": "The units of time for the period in UCUM units."
                  },
                  "dayOfWeek": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "enum": [
                        "mon",
                        "tue",
                        "wed",
                        "thu",
                        "fri",
                        "sat",
                        "sun"
                      ],
                      "description": "If one or more days of week is provided, then the action happens only on the specified day(s)."
                    }
                  },
                  "timeOfDay": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "pattern": "([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?",
                      "description": "Specified time of day for action to take place."
                    }
                  },
                  "when": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "enum": [
                        "MORN",
                        "MORN.early",
                        "MORN.late",
                        "NOON",
                        "AFT",
                        "AFT.early",
                        "AFT.late",
                        "EVE",
                        "EVE.early",
                        "EVE.late",
                        "NIGHT",
                        "PHS",
                        "HS",
                        "WAKE",
                        "C",
                        "CM",
                        "CD",
                        "CV",
                        "AC",
                        "ACM",
                        "ACD",
                        "ACV",
                        "PC",
                        "PCM",
                        "PCD",
                        "PCV"
                      ],
                      "description": "An approximate time period during the day, potentially linked to an event of daily living that indicates when the action should occur."
                    }
                  },
                  "offset": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The number of minutes from the event. If the event code does not indicate whether the minutes is before or after the event, then the offset is assumed to be after the event."
                  }
                }
              },
              "code": {
                "description": "A code for the timing schedule (or just text in code.text). Some codes such as BID are ubiquitous, but many institutions define their own additional codes. If a code is provided, the code is understood to be a complete statement of whatever is specified in the structured timing data, and either the code or the data may be used to interpret the Timing, with the exception that .repeat.bounds still applies over the code (and is not contained in the code).",
                "type": "object",
                "properties": {
                  "coding": {
                    "type": "array",
                    "items": {
                      "description": "A reference to a code defined by a terminology system.",
                      "type": "object",
                      "properties": {
                        "system": {
                          "type": "string",
                          "pattern": "\\S*",
                          "description": "The identification of the code system that defines the meaning of the symbol in the code."
                        },
                        "version": {
                          "type": "string",
                          "pattern": "[ \\r\\n\\t\\S]+",
                          "description": "The version of the code system which was used when choosing this code. Note that a well&ndash;maintained code system does not need the version reported, because the meaning of codes is consistent across versions. However this cannot consistently be assured, and when the meaning is not guaranteed to be consistent, the version SHOULD be exchanged."
                        },
                        "code": {
                          "type": "string",
                          "pattern": "[^\\s]+(\\s[^\\s]+)*",
                          "description": "A symbol in syntax defined by the system. The symbol may be a predefined code or an expression in a syntax defined by the coding system (e.g. post&ndash;coordination)."
                        },
                        "display": {
                          "type": "string",
                          "pattern": "[ \\r\\n\\t\\S]+",
                          "description": "A representation of the meaning of the code in the system, following the rules of the system."
                        },
                        "userSelected": {
                          "type": "boolean",
                          "description": "Indicates that this coding was chosen by a user directly &ndash; e.g. off a pick list of available items (codes or displays)."
                        }
                      }
                    }
                  },
                  "text": {
                    "type": "string",
                    "pattern": "[ \\r\\n\\t\\S]+",
                    "description": "A human language representation of the concept as seen/selected/uttered by the user who entered the data and/or which represents the intended meaning of the user."
                  }
                }
              }
            }
          }
        },
        "nutrient": {
          "type": "array",
          "items": {
            "description": "Class that defines the quantity and type of nutrient modifications (for example carbohydrate, fiber or sodium) required for the oral diet.",
            "type": "object",
            "properties": {
              "modifierExtension": {
                "type": "array",
                "items": {
                  "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                  "type": "object",
                  "additionalProperties": true
                }
              },
              "modifier": {
                "description": "The nutrient that is being modified such as carbohydrate or sodium.",
                "type": "object",
                "properties": {
                  "coding": {
                    "type": "array",
                    "items": {
                      "description": "A reference to a code defined by a terminology system.",
                      "type": "object",
                      "properties": {
                        "system": {
                          "type": "string",
                          "pattern": "\\S*",
                          "description": "The identification of the code system that defines the meaning of the symbol in the code."
                        },
                        "version": {
                          "type": "string",
                          "pattern": "[ \\r\\n\\t\\S]+",
                          "description": "The version of the code system which was used when choosing this code. Note that a well&ndash;maintained code system does not need the version reported, because the meaning of codes is consistent across versions. However this cannot consistently be assured, and when the meaning is not guaranteed to be consistent, the version SHOULD be exchanged."
                        },
                        "code": {
                          "type": "string",
                          "pattern": "[^\\s]+(\\s[^\\s]+)*",
                          "description": "A symbol in syntax defined by the system. The symbol may be a predefined code or an expression in a syntax defined by the coding system (e.g. post&ndash;coordination)."
                        },
                        "display": {
                          "type": "string",
                          "pattern": "[ \\r\\n\\t\\S]+",
                          "description": "A representation of the meaning of the code in the system, following the rules of the system."
                        },
                        "userSelected": {
                          "type": "boolean",
                          "description": "Indicates that this coding was chosen by a user directly &ndash; e.g. off a pick list of available items (codes or displays)."
                        }
                      }
                    }
                  },
                  "text": {
                    "type": "string",
                    "pattern": "[ \\r\\n\\t\\S]+",
                    "description": "A human language representation of the concept as seen/selected/uttered by the user who entered the data and/or which represents the intended meaning of the user."
                  }
                }
              },
              "amount": {
                "description": "The quantity of the specified nutrient to include in diet.",
                "type": "object",
                "properties": {
                  "value": {
                    "type": "number",
                    "description": "The value of the measured amount. The value includes an implicit precision in the presentation of the value."
                  },
                  "comparator": {
                    "type": "string",
                    "enum": [
                      "<",
                      "<=",
                      ">=",
                      ">"
                    ],
                    "description": "How the value should be understood and represented &ndash; whether the actual value is greater or less than the stated value due to measurement issues; e.g. if the comparator is \"<\" , then the real value is < stated value."
                  },
                  "unit": {
                    "type": "string",
                    "pattern": "[ \\r\\n\\t\\S]+",
                    "description": "A human&ndash;readable form of the unit."
                  },
                  "system": {
                    "type": "string",
                    "pattern": "\\S*",
                    "description": "The identification of the system that provides the coded form of the unit."
                  },
                  "code": {
                    "type": "string",
                    "pattern": "[^\\s]+(\\s[^\\s]+)*",
                    "description": "A computer processable form of the unit in some unit representation system."
                  }
                }
              }
            }
          }
        },
        "texture": {
          "type": "array",
          "items": {
            "description": "Class that describes any texture modifications required for the patient to safely consume various types of solid foods.",
            "type": "object",
            "properties": {
              "modifierExtension": {
                "type": "array",
                "items": {
                  "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                  "type": "object",
                  "additionalProperties": true
                }
              },
              "modifier": {
                "description": "Any texture modifications (for solid foods) that should be made, e.g. easy to chew, chopped, ground, and pureed.",
                "type": "object",
                "properties": {
                  "coding": {
                    "type": "array",
                    "items": {
                      "description": "A reference to a code defined by a terminology system.",
                      "type": "object",
                      "properties": {
                        "system": {
                          "type": "string",
                          "pattern": "\\S*",
                          "description": "The identification of the code system that defines the meaning of the symbol in the code."
                        },
                        "version": {
                          "type": "string",
                          "pattern": "[ \\r\\n\\t\\S]+",
                          "description": "The version of the code system which was used when choosing this code. Note that a well&ndash;maintained code system does not need the version reported, because the meaning of codes is consistent across versions. However this cannot consistently be assured, and when the meaning is not guaranteed to be consistent, the version SHOULD be exchanged."
                        },
                        "code": {
                          "type": "string",
                          "pattern": "[^\\s]+(\\s[^\\s]+)*",
                          "description": "A symbol in syntax defined by the system. The symbol may be a predefined code or an expression in a syntax defined by the coding system (e.g. post&ndash;coordination)."
                        },
                        "display": {
                          "type": "string",
                          "pattern": "[ \\r\\n\\t\\S]+",
                          "description": "A representation of the meaning of the code in the system, following the rules of the system."
                        },
                        "userSelected": {
                          "type": "boolean",
                          "description": "Indicates that this coding was chosen by a user directly &ndash; e.g. off a pick list of available items (codes or displays)."
                        }
                      }
                    }
                  },
                  "text": {
                    "type": "string",
                    "pattern": "[ \\r\\n\\t\\S]+",
                    "description": "A human language representation of the concept as seen/selected/uttered by the user who entered the data and/or which represents the intended meaning of the user."
                  }
                }
              },
              "foodType": {
                "description": "The food type(s) (e.g. meats, all foods)  that the texture modification applies to.  This could be all foods types.",
                "type": "object",
                "properties": {
                  "coding": {
                    "type": "array",
                    "items": {
                      "description": "A reference to a code defined by a terminology system.",
                      "type": "object",
                      "properties": {
                        "system": {
                          "type": "string",
                          "pattern": "\\S*",
                          "description": "The identification of the code system that defines the meaning of the symbol in the code."
                        },
                        "version": {
                          "type": "string",
                          "pattern": "[ \\r\\n\\t\\S]+",
                          "description": "The version of the code system which was used when choosing this code. Note that a well&ndash;maintained code system does not need the version reported, because the meaning of codes is consistent across versions. However this cannot consistently be assured, and when the meaning is not guaranteed to be consistent, the version SHOULD be exchanged."
                        },
                        "code": {
                          "type": "string",
                          "pattern": "[^\\s]+(\\s[^\\s]+)*",
                          "description": "A symbol in syntax defined by the system. The symbol may be a predefined code or an expression in a syntax defined by the coding system (e.g. post&ndash;coordination)."
                        },
                        "display": {
                          "type": "string",
                          "pattern": "[ \\r\\n\\t\\S]+",
                          "description": "A representation of the meaning of the code in the system, following the rules of the system."
                        },
                        "userSelected": {
                          "type": "boolean",
                          "description": "Indicates that this coding was chosen by a user directly &ndash; e.g. off a pick list of available items (codes or displays)."
                        }
                      }
                    }
                  },
                  "text": {
                    "type": "string",
                    "pattern": "[ \\r\\n\\t\\S]+",
                    "description": "A human language representation of the concept as seen/selected/uttered by the user who entered the data and/or which represents the intended meaning of the user."
                  }
                }
              }
            }
          }
        },
        "fluidConsistencyType": {
          "type": "array",
          "items": {
            "description": "The required consistency (e.g. honey&ndash;thick, nectar&ndash;thick, thin, thickened.) of liquids or fluids served to the patient.",
            "type": "object",
            "properties": {
              "coding": {
                "type": "array",
                "items": {
                  "description": "A reference to a code defined by a terminology system.",
                  "type": "object",
                  "properties": {
                    "system": {
                      "type": "string",
                      "pattern": "\\S*",
                      "description": "The identification of the code system that defines the meaning of the symbol in the code."
                    },
                    "version": {
                      "type": "string",
                      "pattern": "[ \\r\\n\\t\\S]+",
                      "description": "The version of the code system which was used when choosing this code. Note that a well&ndash;maintained code system does not need the version reported, because the meaning of codes is consistent across versions. However this cannot consistently be assured, and when the meaning is not guaranteed to be consistent, the version SHOULD be exchanged."
                    },
                    "code": {
                      "type": "string",
                      "pattern": "[^\\s]+(\\s[^\\s]+)*",
                      "description": "A symbol in syntax defined by the system. The symbol may be a predefined code or an expression in a syntax defined by the coding system (e.g. post&ndash;coordination)."
                    },
                    "display": {
                      "type": "string",
                      "pattern": "[ \\r\\n\\t\\S]+",
                      "description": "A representation of the meaning of the code in the system, following the rules of the system."
                    },
                    "userSelected": {
                      "type": "boolean",
                      "description": "Indicates that this coding was chosen by a user directly &ndash; e.g. off a pick list of available items (codes or displays)."
                    }
                  }
                }
              },
              "text": {
                "type": "string",
                "pattern": "[ \\r\\n\\t\\S]+",
                "description": "A human language representation of the concept as seen/selected/uttered by the user who entered the data and/or which represents the intended meaning of the user."
              }
            }
          }
        },
        "instruction": {
          "type": "string",
          "pattern": "[ \\r\\n\\t\\S]+",
          "description": "Free text or additional instructions or information pertaining to the oral diet."
        }
      }
    },
    "supplement": {
      "type": "array",
      "items": {
        "description": "Oral nutritional products given in order to add further nutritional value to the patient's diet.",
        "type": "object",
        "properties": {
          "modifierExtension": {
            "type": "array",
            "items": {
              "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
              "type": "object",
              "additionalProperties": true
            }
          },
          "type": {
            "description": "The kind of nutritional supplement product required such as a high protein or pediatric clear liquid supplement.",
            "type": "object",
            "properties": {
              "coding": {
                "type": "array",
                "items": {
                  "description": "A reference to a code defined by a terminology system.",
                  "type": "object",
                  "properties": {
                    "system": {
                      "type": "string",
                      "pattern": "\\S*",
                      "description": "The identification of the code system that defines the meaning of the symbol in the code."
                    },
                    "version": {
                      "type": "string",
                      "pattern": "[ \\r\\n\\t\\S]+",
                      "description": "The version of the code system which was used when choosing this code. Note that a well&ndash;maintained code system does not need the version reported, because the meaning of codes is consistent across versions. However this cannot consistently be assured, and when the meaning is not guaranteed to be consistent, the version SHOULD be exchanged."
                    },
                    "code": {
                      "type": "string",
                      "pattern": "[^\\s]+(\\s[^\\s]+)*",
                      "description": "A symbol in syntax defined by the system. The symbol may be a predefined code or an expression in a syntax defined by the coding system (e.g. post&ndash;coordination)."
                    },
                    "display": {
                      "type": "string",
                      "pattern": "[ \\r\\n\\t\\S]+",
                      "description": "A representation of the meaning of the code in the system, following the rules of the system."
                    },
                    "userSelected": {
                      "type": "boolean",
                      "description": "Indicates that this coding was chosen by a user directly &ndash; e.g. off a pick list of available items (codes or displays)."
                    }
                  }
                }
              },
              "text": {
                "type": "string",
                "pattern": "[ \\r\\n\\t\\S]+",
                "description": "A human language representation of the concept as seen/selected/uttered by the user who entered the data and/or which represents the intended meaning of the user."
              }
            }
          },
          "productName": {
            "type": "string",
            "pattern": "[ \\r\\n\\t\\S]+",
            "description": "The product or brand name of the nutritional supplement such as \"Acme Protein Shake\"."
          },
          "schedule": {
            "type": "array",
            "items": {
              "description": "The time period and frequency at which the supplement(s) should be given.  The supplement should be given for the combination of all schedules if more than one schedule is present.",
              "type": "object",
              "properties": {
                "modifierExtension": {
                  "type": "array",
                  "items": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                    "type": "object",
                    "additionalProperties": true
                  }
                },
                "event": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "pattern": "([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?",
                    "description": "Identifies specific times when the event occurs."
                  }
                },
                "repeat": {
                  "description": "A set of rules that describe when the event is scheduled.",
                  "type": "object",
                  "properties": {
                    "modifierExtension": {
                      "type": "array",
                      "items": {
                        "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                        "type": "object",
                        "additionalProperties": true
                      }
                    },
                    "boundsDuration": {
                      "description": "Either a duration for the length of the timing schedule, a range of possible length, or outer bounds for start and/or end limits of the timing schedule.",
                      "type": "object",
                      "properties": {
                        "value": {
                          "type": "number",
                          "description": "The value of the measured amount. The value includes an implicit precision in the presentation of the value."
                        },
                        "comparator": {
                          "type": "string",
                          "enum": [
                            "<",
                            "<=",
                            ">=",
                            ">"
                          ],
                          "description": "How the value should be understood and represented &ndash; whether the actual value is greater or less than the stated value due to measurement issues; e.g. if the comparator is \"<\" , then the real value is < stated value."
                        },
                        "unit": {
                          "type": "string",
                          "pattern": "[ \\r\\n\\t\\S]+",
                          "description": "A human&ndash;readable form of the unit."
                        },
                        "system": {
                          "type": "string",
                          "pattern": "\\S*",
                          "description": "The identification of the system that provides the coded form of the unit."
                        },
                        "code": {
                          "type": "string",
                          "pattern": "[^\\s]+(\\s[^\\s]+)*",
                          "description": "A computer processable form of the unit in some unit representation system."
                        }
                      }
                    },
                    "boundsRange": {
                      "description": "Either a duration for the length of the timing schedule, a range of possible length, or outer bounds for start and/or end limits of the timing schedule.",
                      "type": "object",
                      "properties": {
                        "low": {
                          "description": "The low limit. The boundary is inclusive.",
                          "type": "object",
                          "properties": {
                            "value": {
                              "type": "number",
                              "description": "The value of the measured amount. The value includes an implicit precision in the presentation of the value."
                            },
                            "comparator": {
                              "type": "string",
                              "enum": [
                                "<",
                                "<=",
                                ">=",
                                ">"
                              ],
                              "description": "How the value should be understood and represented &ndash; whether the actual value is greater or less than the stated value due to measurement issues; e.g. if the comparator is \"<\" , then the real value is < stated value."
                            },
                            "unit": {
                              "type": "string",
                              "pattern": "[ \\r\\n\\t\\S]+",
                              "description": "A human&ndash;readable form of the unit."
                            },
                            "system": {
                              "type": "string",
                              "pattern": "\\S*",
                              "description": "The identification of the system that provides the coded form of the unit."
                            },
                            "code": {
                              "type": "string",
                              "pattern": "[^\\s]+(\\s[^\\s]+)*",
                              "description": "A computer processable form of the unit in some unit representation system."
                            }
                          }
                        },
                        "high": {
                          "description": "The high limit. The boundary is inclusive.",
                          "type": "object",
                          "properties": {
                            "value": {
                              "type": "number",
                              "description": "The value of the measured amount. The value includes an implicit precision in the presentation of the value."
                            },
                            "comparator": {
                              "type": "string",
                              "enum": [
                                "<",
                                "<=",
                                ">=",
                                ">"
                              ],
                              "description": "How the value should be understood and represented &ndash; whether the actual value is greater or less than the stated value due to measurement issues; e.g. if the comparator is \"<\" , then the real value is < stated value."
                            },
                            "unit": {
                              "type": "string",
                              "pattern": "[ \\r\\n\\t\\S]+",
                              "description": "A human&ndash;readable form of the unit."
                            },
                            "system": {
                              "type": "string",
                              "pattern": "\\S*",
                              "description": "The identification of the system that provides the coded form of the unit."
                            },
                            "code": {
                              "type": "string",
                              "pattern": "[^\\s]+(\\s[^\\s]+)*",
                              "description": "A computer processable form of the unit in some unit representation system."
                            }
                          }
                        }
                      }
                    },
                    "boundsPeriod": {
                      "description": "Either a duration for the length of the timing schedule, a range of possible length, or outer bounds for start and/or end limits of the timing schedule.",
                      "type": "object",
                      "properties": {
                        "start": {
                          "type": "string",
                          "pattern": "([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?",
                          "description": "The start of the period. The boundary is inclusive."
                        },
                        "end": {
                          "type": "string",
                          "pattern": "([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?",
                          "description": "The end of the period. If the end of the period is missing, it means no end was known or planned at the time the instance was created. The start may be in the past, and the end date in the future, which means that period is expected/planned to end at that time."
                        }
                      }
                    },
                    "count": {
                      "type": "integer",
                      "format": "int32",
                      "description": "A total count of the desired number of repetitions across the duration of the entire timing specification. If countMax is present, this element indicates the lower bound of the allowed range of count values."
                    },
                    "countMax": {
                      "type": "integer",
                      "format": "int32",
                      "description": "If present, indicates that the count is a range &ndash; so to perform the action between [count] and [countMax] times."
                    },
                    "duration": {
                      "type": "number",
                      "description": "How long this thing happens for when it happens. If durationMax is present, this element indicates the lower bound of the allowed range of the duration."
                    },
                    "durationMax": {
                      "type": "number",
                      "description": "If present, indicates that the duration is a range &ndash; so to perform the action between [duration] and [durationMax] time length."
                    },
                    "durationUnit": {
                      "type": "string",
                      "enum": [
                        "s",
                        "min",
                        "h",
                        "d",
                        "wk",
                        "mo",
                        "a"
                      ],
                      "description": "The units of time for the duration, in UCUM units."
                    },
                    "frequency": {
                      "type": "integer",
                      "format": "int32",
                      "description": "The number of times to repeat the action within the specified period. If frequencyMax is present, this element indicates the lower bound of the allowed range of the frequency."
                    },
                    "frequencyMax": {
                      "type": "integer",
                      "format": "int32",
                      "description": "If present, indicates that the frequency is a range &ndash; so to repeat between [frequency] and [frequencyMax] times within the period or period range."
                    },
                    "period": {
                      "type": "number",
                      "description": "Indicates the duration of time over which repetitions are to occur; e.g. to express \"3 times per day\", 3 would be the frequency and \"1 day\" would be the period. If periodMax is present, this element indicates the lower bound of the allowed range of the period length."
                    },
                    "periodMax": {
                      "type": "number",
                      "description": "If present, indicates that the period is a range from [period] to [periodMax], allowing expressing concepts such as \"do this once every 3&ndash;5 days."
                    },
                    "periodUnit": {
                      "type": "string",
                      "enum": [
                        "s",
                        "min",
                        "h",
                        "d",
                        "wk",
                        "mo",
                        "a"
                      ],
                      "description": "The units of time for the period in UCUM units."
                    },
                    "dayOfWeek": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "enum": [
                          "mon",
                          "tue",
                          "wed",
                          "thu",
                          "fri",
                          "sat",
                          "sun"
                        ],
                        "description": "If one or more days of week is provided, then the action happens only on the specified day(s)."
                      }
                    },
                    "timeOfDay": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "pattern": "([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?",
                        "description": "Specified time of day for action to take place."
                      }
                    },
                    "when": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "enum": [
                          "MORN",
                          "MORN.early",
                          "MORN.late",
                          "NOON",
                          "AFT",
                          "AFT.early",
                          "AFT.late",
                          "EVE",
                          "EVE.early",
                          "EVE.late",
                          "NIGHT",
                          "PHS",
                          "HS",
                          "WAKE",
                          "C",
                          "CM",
                          "CD",
                          "CV",
                          "AC",
                          "ACM",
                          "ACD",
                          "ACV",
                          "PC",
                          "PCM",
                          "PCD",
                          "PCV"
                        ],
                        "description": "An approximate time period during the day, potentially linked to an event of daily living that indicates when the action should occur."
                      }
                    },
                    "offset": {
                      "type": "integer",
                      "format": "int32",
                      "description": "The number of minutes from the event. If the event code does not indicate whether the minutes is before or after the event, then the offset is assumed to be after the event."
                    }
                  }
                },
                "code": {
                  "description": "A code for the timing schedule (or just text in code.text). Some codes such as BID are ubiquitous, but many institutions define their own additional codes. If a code is provided, the code is understood to be a complete statement of whatever is specified in the structured timing data, and either the code or the data may be used to interpret the Timing, with the exception that .repeat.bounds still applies over the code (and is not contained in the code).",
                  "type": "object",
                  "properties": {
                    "coding": {
                      "type": "array",
                      "items": {
                        "description": "A reference to a code defined by a terminology system.",
                        "type": "object",
                        "properties": {
                          "system": {
                            "type": "string",
                            "pattern": "\\S*",
                            "description": "The identification of the code system that defines the meaning of the symbol in the code."
                          },
                          "version": {
                            "type": "string",
                            "pattern": "[ \\r\\n\\t\\S]+",
                            "description": "The version of the code system which was used when choosing this code. Note that a well&ndash;maintained code system does not need the version reported, because the meaning of codes is consistent across versions. However this cannot consistently be assured, and when the meaning is not guaranteed to be consistent, the version SHOULD be exchanged."
                          },
                          "code": {
                            "type": "string",
                            "pattern": "[^\\s]+(\\s[^\\s]+)*",
                            "description": "A symbol in syntax defined by the system. The symbol may be a predefined code or an expression in a syntax defined by the coding system (e.g. post&ndash;coordination)."
                          },
                          "display": {
                            "type": "string",
                            "pattern": "[ \\r\\n\\t\\S]+",
                            "description": "A representation of the meaning of the code in the system, following the rules of the system."
                          },
                          "userSelected": {
                            "type": "boolean",
                            "description": "Indicates that this coding was chosen by a user directly &ndash; e.g. off a pick list of available items (codes or displays)."
                          }
                        }
                      }
                    },
                    "text": {
                      "type": "string",
                      "pattern": "[ \\r\\n\\t\\S]+",
                      "description": "A human language representation of the concept as seen/selected/uttered by the user who entered the data and/or which represents the intended meaning of the user."
                    }
                  }
                }
              }
            }
          },
          "quantity": {
            "description": "The amount of the nutritional supplement to be given.",
            "type": "object",
            "properties": {
              "value": {
                "type": "number",
                "description": "The value of the measured amount. The value includes an implicit precision in the presentation of the value."
              },
              "comparator": {
                "type": "string",
                "enum": [
                  "<",
                  "<=",
                  ">=",
                  ">"
                ],
                "description": "How the value should be understood and represented &ndash; whether the actual value is greater or less than the stated value due to measurement issues; e.g. if the comparator is \"<\" , then the real value is < stated value."
              },
              "unit": {
                "type": "string",
                "pattern": "[ \\r\\n\\t\\S]+",
                "description": "A human&ndash;readable form of the unit."
              },
              "system": {
                "type": "string",
                "pattern": "\\S*",
                "description": "The identification of the system that provides the coded form of the unit."
              },
              "code": {
                "type": "string",
                "pattern": "[^\\s]+(\\s[^\\s]+)*",
                "description": "A computer processable form of the unit in some unit representation system."
              }
            }
          },
          "instruction": {
            "type": "string",
            "pattern": "[ \\r\\n\\t\\S]+",
            "description": "Free text or additional instructions or information pertaining to the oral supplement."
          }
        }
      }
    },
    "enteralFormula": {
      "description": "Feeding provided through the gastrointestinal tract via a tube, catheter, or stoma that delivers nutrition distal to the oral cavity.",
      "type": "object",
      "properties": {
        "modifierExtension": {
          "type": "array",
          "items": {
            "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            "type": "object",
            "additionalProperties": true
          }
        },
        "baseFormulaType": {
          "description": "The type of enteral or infant formula such as an adult standard formula with fiber or a soy&ndash;based infant formula.",
          "type": "object",
          "properties": {
            "coding": {
              "type": "array",
              "items": {
                "description": "A reference to a code defined by a terminology system.",
                "type": "object",
                "properties": {
                  "system": {
                    "type": "string",
                    "pattern": "\\S*",
                    "description": "The identification of the code system that defines the meaning of the symbol in the code."
                  },
                  "version": {
                    "type": "string",
                    "pattern": "[ \\r\\n\\t\\S]+",
                    "description": "The version of the code system which was used when choosing this code. Note that a well&ndash;maintained code system does not need the version reported, because the meaning of codes is consistent across versions. However this cannot consistently be assured, and when the meaning is not guaranteed to be consistent, the version SHOULD be exchanged."
                  },
                  "code": {
                    "type": "string",
                    "pattern": "[^\\s]+(\\s[^\\s]+)*",
                    "description": "A symbol in syntax defined by the system. The symbol may be a predefined code or an expression in a syntax defined by the coding system (e.g. post&ndash;coordination)."
                  },
                  "display": {
                    "type": "string",
                    "pattern": "[ \\r\\n\\t\\S]+",
                    "description": "A representation of the meaning of the code in the system, following the rules of the system."
                  },
                  "userSelected": {
                    "type": "boolean",
                    "description": "Indicates that this coding was chosen by a user directly &ndash; e.g. off a pick list of available items (codes or displays)."
                  }
                }
              }
            },
            "text": {
              "type": "string",
              "pattern": "[ \\r\\n\\t\\S]+",
              "description": "A human language representation of the concept as seen/selected/uttered by the user who entered the data and/or which represents the intended meaning of the user."
            }
          }
        },
        "baseFormulaProductName": {
          "type": "string",
          "pattern": "[ \\r\\n\\t\\S]+",
          "description": "The product or brand name of the enteral or infant formula product such as \"ACME Adult Standard Formula\"."
        },
        "additiveType": {
          "description": "Indicates the type of modular component such as protein, carbohydrate, fat or fiber to be provided in addition to or mixed with the base formula.",
          "type": "object",
          "properties": {
            "coding": {
              "type": "array",
              "items": {
                "description": "A reference to a code defined by a terminology system.",
                "type": "object",
                "properties": {
                  "system": {
                    "type": "string",
                    "pattern": "\\S*",
                    "description": "The identification of the code system that defines the meaning of the symbol in the code."
                  },
                  "version": {
                    "type": "string",
                    "pattern": "[ \\r\\n\\t\\S]+",
                    "description": "The version of the code system which was used when choosing this code. Note that a well&ndash;maintained code system does not need the version reported, because the meaning of codes is consistent across versions. However this cannot consistently be assured, and when the meaning is not guaranteed to be consistent, the version SHOULD be exchanged."
                  },
                  "code": {
                    "type": "string",
                    "pattern": "[^\\s]+(\\s[^\\s]+)*",
                    "description": "A symbol in syntax defined by the system. The symbol may be a predefined code or an expression in a syntax defined by the coding system (e.g. post&ndash;coordination)."
                  },
                  "display": {
                    "type": "string",
                    "pattern": "[ \\r\\n\\t\\S]+",
                    "description": "A representation of the meaning of the code in the system, following the rules of the system."
                  },
                  "userSelected": {
                    "type": "boolean",
                    "description": "Indicates that this coding was chosen by a user directly &ndash; e.g. off a pick list of available items (codes or displays)."
                  }
                }
              }
            },
            "text": {
              "type": "string",
              "pattern": "[ \\r\\n\\t\\S]+",
              "description": "A human language representation of the concept as seen/selected/uttered by the user who entered the data and/or which represents the intended meaning of the user."
            }
          }
        },
        "additiveProductName": {
          "type": "string",
          "pattern": "[ \\r\\n\\t\\S]+",
          "description": "The product or brand name of the type of modular component to be added to the formula."
        },
        "caloricDensity": {
          "description": "The amount of energy (calories) that the formula should provide per specified volume, typically per mL or fluid oz.  For example, an infant may require a formula that provides 24 calories per fluid ounce or an adult may require an enteral formula that provides 1.5 calorie/mL.",
          "type": "object",
          "properties": {
            "value": {
              "type": "number",
              "description": "The value of the measured amount. The value includes an implicit precision in the presentation of the value."
            },
            "comparator": {
              "type": "string",
              "enum": [
                "<",
                "<=",
                ">=",
                ">"
              ],
              "description": "How the value should be understood and represented &ndash; whether the actual value is greater or less than the stated value due to measurement issues; e.g. if the comparator is \"<\" , then the real value is < stated value."
            },
            "unit": {
              "type": "string",
              "pattern": "[ \\r\\n\\t\\S]+",
              "description": "A human&ndash;readable form of the unit."
            },
            "system": {
              "type": "string",
              "pattern": "\\S*",
              "description": "The identification of the system that provides the coded form of the unit."
            },
            "code": {
              "type": "string",
              "pattern": "[^\\s]+(\\s[^\\s]+)*",
              "description": "A computer processable form of the unit in some unit representation system."
            }
          }
        },
        "routeofAdministration": {
          "description": "The route or physiological path of administration into the patient's gastrointestinal  tract for purposes of providing the formula feeding, e.g. nasogastric tube.",
          "type": "object",
          "properties": {
            "coding": {
              "type": "array",
              "items": {
                "description": "A reference to a code defined by a terminology system.",
                "type": "object",
                "properties": {
                  "system": {
                    "type": "string",
                    "pattern": "\\S*",
                    "description": "The identification of the code system that defines the meaning of the symbol in the code."
                  },
                  "version": {
                    "type": "string",
                    "pattern": "[ \\r\\n\\t\\S]+",
                    "description": "The version of the code system which was used when choosing this code. Note that a well&ndash;maintained code system does not need the version reported, because the meaning of codes is consistent across versions. However this cannot consistently be assured, and when the meaning is not guaranteed to be consistent, the version SHOULD be exchanged."
                  },
                  "code": {
                    "type": "string",
                    "pattern": "[^\\s]+(\\s[^\\s]+)*",
                    "description": "A symbol in syntax defined by the system. The symbol may be a predefined code or an expression in a syntax defined by the coding system (e.g. post&ndash;coordination)."
                  },
                  "display": {
                    "type": "string",
                    "pattern": "[ \\r\\n\\t\\S]+",
                    "description": "A representation of the meaning of the code in the system, following the rules of the system."
                  },
                  "userSelected": {
                    "type": "boolean",
                    "description": "Indicates that this coding was chosen by a user directly &ndash; e.g. off a pick list of available items (codes or displays)."
                  }
                }
              }
            },
            "text": {
              "type": "string",
              "pattern": "[ \\r\\n\\t\\S]+",
              "description": "A human language representation of the concept as seen/selected/uttered by the user who entered the data and/or which represents the intended meaning of the user."
            }
          }
        },
        "administration": {
          "type": "array",
          "items": {
            "description": "Formula administration instructions as structured data.  This repeating structure allows for changing the administration rate or volume over time for both bolus and continuous feeding.  An example of this would be an instruction to increase the rate of continuous feeding every 2 hours.",
            "type": "object",
            "properties": {
              "modifierExtension": {
                "type": "array",
                "items": {
                  "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                  "type": "object",
                  "additionalProperties": true
                }
              },
              "schedule": {
                "description": "The time period and frequency at which the enteral formula should be delivered to the patient.",
                "type": "object",
                "properties": {
                  "modifierExtension": {
                    "type": "array",
                    "items": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                      "type": "object",
                      "additionalProperties": true
                    }
                  },
                  "event": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "pattern": "([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?",
                      "description": "Identifies specific times when the event occurs."
                    }
                  },
                  "repeat": {
                    "description": "A set of rules that describe when the event is scheduled.",
                    "type": "object",
                    "properties": {
                      "modifierExtension": {
                        "type": "array",
                        "items": {
                          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                          "type": "object",
                          "additionalProperties": true
                        }
                      },
                      "boundsDuration": {
                        "description": "Either a duration for the length of the timing schedule, a range of possible length, or outer bounds for start and/or end limits of the timing schedule.",
                        "type": "object",
                        "properties": {
                          "value": {
                            "type": "number",
                            "description": "The value of the measured amount. The value includes an implicit precision in the presentation of the value."
                          },
                          "comparator": {
                            "type": "string",
                            "enum": [
                              "<",
                              "<=",
                              ">=",
                              ">"
                            ],
                            "description": "How the value should be understood and represented &ndash; whether the actual value is greater or less than the stated value due to measurement issues; e.g. if the comparator is \"<\" , then the real value is < stated value."
                          },
                          "unit": {
                            "type": "string",
                            "pattern": "[ \\r\\n\\t\\S]+",
                            "description": "A human&ndash;readable form of the unit."
                          },
                          "system": {
                            "type": "string",
                            "pattern": "\\S*",
                            "description": "The identification of the system that provides the coded form of the unit."
                          },
                          "code": {
                            "type": "string",
                            "pattern": "[^\\s]+(\\s[^\\s]+)*",
                            "description": "A computer processable form of the unit in some unit representation system."
                          }
                        }
                      },
                      "boundsRange": {
                        "description": "Either a duration for the length of the timing schedule, a range of possible length, or outer bounds for start and/or end limits of the timing schedule.",
                        "type": "object",
                        "properties": {
                          "low": {
                            "description": "The low limit. The boundary is inclusive.",
                            "type": "object",
                            "properties": {
                              "value": {
                                "type": "number",
                                "description": "The value of the measured amount. The value includes an implicit precision in the presentation of the value."
                              },
                              "comparator": {
                                "type": "string",
                                "enum": [
                                  "<",
                                  "<=",
                                  ">=",
                                  ">"
                                ],
                                "description": "How the value should be understood and represented &ndash; whether the actual value is greater or less than the stated value due to measurement issues; e.g. if the comparator is \"<\" , then the real value is < stated value."
                              },
                              "unit": {
                                "type": "string",
                                "pattern": "[ \\r\\n\\t\\S]+",
                                "description": "A human&ndash;readable form of the unit."
                              },
                              "system": {
                                "type": "string",
                                "pattern": "\\S*",
                                "description": "The identification of the system that provides the coded form of the unit."
                              },
                              "code": {
                                "type": "string",
                                "pattern": "[^\\s]+(\\s[^\\s]+)*",
                                "description": "A computer processable form of the unit in some unit representation system."
                              }
                            }
                          },
                          "high": {
                            "description": "The high limit. The boundary is inclusive.",
                            "type": "object",
                            "properties": {
                              "value": {
                                "type": "number",
                                "description": "The value of the measured amount. The value includes an implicit precision in the presentation of the value."
                              },
                              "comparator": {
                                "type": "string",
                                "enum": [
                                  "<",
                                  "<=",
                                  ">=",
                                  ">"
                                ],
                                "description": "How the value should be understood and represented &ndash; whether the actual value is greater or less than the stated value due to measurement issues; e.g. if the comparator is \"<\" , then the real value is < stated value."
                              },
                              "unit": {
                                "type": "string",
                                "pattern": "[ \\r\\n\\t\\S]+",
                                "description": "A human&ndash;readable form of the unit."
                              },
                              "system": {
                                "type": "string",
                                "pattern": "\\S*",
                                "description": "The identification of the system that provides the coded form of the unit."
                              },
                              "code": {
                                "type": "string",
                                "pattern": "[^\\s]+(\\s[^\\s]+)*",
                                "description": "A computer processable form of the unit in some unit representation system."
                              }
                            }
                          }
                        }
                      },
                      "boundsPeriod": {
                        "description": "Either a duration for the length of the timing schedule, a range of possible length, or outer bounds for start and/or end limits of the timing schedule.",
                        "type": "object",
                        "properties": {
                          "start": {
                            "type": "string",
                            "pattern": "([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?",
                            "description": "The start of the period. The boundary is inclusive."
                          },
                          "end": {
                            "type": "string",
                            "pattern": "([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?",
                            "description": "The end of the period. If the end of the period is missing, it means no end was known or planned at the time the instance was created. The start may be in the past, and the end date in the future, which means that period is expected/planned to end at that time."
                          }
                        }
                      },
                      "count": {
                        "type": "integer",
                        "format": "int32",
                        "description": "A total count of the desired number of repetitions across the duration of the entire timing specification. If countMax is present, this element indicates the lower bound of the allowed range of count values."
                      },
                      "countMax": {
                        "type": "integer",
                        "format": "int32",
                        "description": "If present, indicates that the count is a range &ndash; so to perform the action between [count] and [countMax] times."
                      },
                      "duration": {
                        "type": "number",
                        "description": "How long this thing happens for when it happens. If durationMax is present, this element indicates the lower bound of the allowed range of the duration."
                      },
                      "durationMax": {
                        "type": "number",
                        "description": "If present, indicates that the duration is a range &ndash; so to perform the action between [duration] and [durationMax] time length."
                      },
                      "durationUnit": {
                        "type": "string",
                        "enum": [
                          "s",
                          "min",
                          "h",
                          "d",
                          "wk",
                          "mo",
                          "a"
                        ],
                        "description": "The units of time for the duration, in UCUM units."
                      },
                      "frequency": {
                        "type": "integer",
                        "format": "int32",
                        "description": "The number of times to repeat the action within the specified period. If frequencyMax is present, this element indicates the lower bound of the allowed range of the frequency."
                      },
                      "frequencyMax": {
                        "type": "integer",
                        "format": "int32",
                        "description": "If present, indicates that the frequency is a range &ndash; so to repeat between [frequency] and [frequencyMax] times within the period or period range."
                      },
                      "period": {
                        "type": "number",
                        "description": "Indicates the duration of time over which repetitions are to occur; e.g. to express \"3 times per day\", 3 would be the frequency and \"1 day\" would be the period. If periodMax is present, this element indicates the lower bound of the allowed range of the period length."
                      },
                      "periodMax": {
                        "type": "number",
                        "description": "If present, indicates that the period is a range from [period] to [periodMax], allowing expressing concepts such as \"do this once every 3&ndash;5 days."
                      },
                      "periodUnit": {
                        "type": "string",
                        "enum": [
                          "s",
                          "min",
                          "h",
                          "d",
                          "wk",
                          "mo",
                          "a"
                        ],
                        "description": "The units of time for the period in UCUM units."
                      },
                      "dayOfWeek": {
                        "type": "array",
                        "items": {
                          "type": "string",
                          "enum": [
                            "mon",
                            "tue",
                            "wed",
                            "thu",
                            "fri",
                            "sat",
                            "sun"
                          ],
                          "description": "If one or more days of week is provided, then the action happens only on the specified day(s)."
                        }
                      },
                      "timeOfDay": {
                        "type": "array",
                        "items": {
                          "type": "string",
                          "pattern": "([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?",
                          "description": "Specified time of day for action to take place."
                        }
                      },
                      "when": {
                        "type": "array",
                        "items": {
                          "type": "string",
                          "enum": [
                            "MORN",
                            "MORN.early",
                            "MORN.late",
                            "NOON",
                            "AFT",
                            "AFT.early",
                            "AFT.late",
                            "EVE",
                            "EVE.early",
                            "EVE.late",
                            "NIGHT",
                            "PHS",
                            "HS",
                            "WAKE",
                            "C",
                            "CM",
                            "CD",
                            "CV",
                            "AC",
                            "ACM",
                            "ACD",
                            "ACV",
                            "PC",
                            "PCM",
                            "PCD",
                            "PCV"
                          ],
                          "description": "An approximate time period during the day, potentially linked to an event of daily living that indicates when the action should occur."
                        }
                      },
                      "offset": {
                        "type": "integer",
                        "format": "int32",
                        "description": "The number of minutes from the event. If the event code does not indicate whether the minutes is before or after the event, then the offset is assumed to be after the event."
                      }
                    }
                  },
                  "code": {
                    "description": "A code for the timing schedule (or just text in code.text). Some codes such as BID are ubiquitous, but many institutions define their own additional codes. If a code is provided, the code is understood to be a complete statement of whatever is specified in the structured timing data, and either the code or the data may be used to interpret the Timing, with the exception that .repeat.bounds still applies over the code (and is not contained in the code).",
                    "type": "object",
                    "properties": {
                      "coding": {
                        "type": "array",
                        "items": {
                          "description": "A reference to a code defined by a terminology system.",
                          "type": "object",
                          "properties": {
                            "system": {
                              "type": "string",
                              "pattern": "\\S*",
                              "description": "The identification of the code system that defines the meaning of the symbol in the code."
                            },
                            "version": {
                              "type": "string",
                              "pattern": "[ \\r\\n\\t\\S]+",
                              "description": "The version of the code system which was used when choosing this code. Note that a well&ndash;maintained code system does not need the version reported, because the meaning of codes is consistent across versions. However this cannot consistently be assured, and when the meaning is not guaranteed to be consistent, the version SHOULD be exchanged."
                            },
                            "code": {
                              "type": "string",
                              "pattern": "[^\\s]+(\\s[^\\s]+)*",
                              "description": "A symbol in syntax defined by the system. The symbol may be a predefined code or an expression in a syntax defined by the coding system (e.g. post&ndash;coordination)."
                            },
                            "display": {
                              "type": "string",
                              "pattern": "[ \\r\\n\\t\\S]+",
                              "description": "A representation of the meaning of the code in the system, following the rules of the system."
                            },
                            "userSelected": {
                              "type": "boolean",
                              "description": "Indicates that this coding was chosen by a user directly &ndash; e.g. off a pick list of available items (codes or displays)."
                            }
                          }
                        }
                      },
                      "text": {
                        "type": "string",
                        "pattern": "[ \\r\\n\\t\\S]+",
                        "description": "A human language representation of the concept as seen/selected/uttered by the user who entered the data and/or which represents the intended meaning of the user."
                      }
                    }
                  }
                }
              },
              "quantity": {
                "description": "The volume of formula to provide to the patient per the specified administration schedule.",
                "type": "object",
                "properties": {
                  "value": {
                    "type": "number",
                    "description": "The value of the measured amount. The value includes an implicit precision in the presentation of the value."
                  },
                  "comparator": {
                    "type": "string",
                    "enum": [
                      "<",
                      "<=",
                      ">=",
                      ">"
                    ],
                    "description": "How the value should be understood and represented &ndash; whether the actual value is greater or less than the stated value due to measurement issues; e.g. if the comparator is \"<\" , then the real value is < stated value."
                  },
                  "unit": {
                    "type": "string",
                    "pattern": "[ \\r\\n\\t\\S]+",
                    "description": "A human&ndash;readable form of the unit."
                  },
                  "system": {
                    "type": "string",
                    "pattern": "\\S*",
                    "description": "The identification of the system that provides the coded form of the unit."
                  },
                  "code": {
                    "type": "string",
                    "pattern": "[^\\s]+(\\s[^\\s]+)*",
                    "description": "A computer processable form of the unit in some unit representation system."
                  }
                }
              },
              "rateQuantity": {
                "description": "The rate of administration of formula via a feeding pump, e.g. 60 mL per hour, according to the specified schedule.",
                "type": "object",
                "properties": {
                  "value": {
                    "type": "number",
                    "description": "The value of the measured amount. The value includes an implicit precision in the presentation of the value."
                  },
                  "comparator": {
                    "type": "string",
                    "enum": [
                      "<",
                      "<=",
                      ">=",
                      ">"
                    ],
                    "description": "How the value should be understood and represented &ndash; whether the actual value is greater or less than the stated value due to measurement issues; e.g. if the comparator is \"<\" , then the real value is < stated value."
                  },
                  "unit": {
                    "type": "string",
                    "pattern": "[ \\r\\n\\t\\S]+",
                    "description": "A human&ndash;readable form of the unit."
                  },
                  "system": {
                    "type": "string",
                    "pattern": "\\S*",
                    "description": "The identification of the system that provides the coded form of the unit."
                  },
                  "code": {
                    "type": "string",
                    "pattern": "[^\\s]+(\\s[^\\s]+)*",
                    "description": "A computer processable form of the unit in some unit representation system."
                  }
                }
              },
              "rateRatio": {
                "description": "The rate of administration of formula via a feeding pump, e.g. 60 mL per hour, according to the specified schedule.",
                "type": "object",
                "properties": {
                  "numerator": {
                    "description": "The value of the numerator.",
                    "type": "object",
                    "properties": {
                      "value": {
                        "type": "number",
                        "description": "The value of the measured amount. The value includes an implicit precision in the presentation of the value."
                      },
                      "comparator": {
                        "type": "string",
                        "enum": [
                          "<",
                          "<=",
                          ">=",
                          ">"
                        ],
                        "description": "How the value should be understood and represented &ndash; whether the actual value is greater or less than the stated value due to measurement issues; e.g. if the comparator is \"<\" , then the real value is < stated value."
                      },
                      "unit": {
                        "type": "string",
                        "pattern": "[ \\r\\n\\t\\S]+",
                        "description": "A human&ndash;readable form of the unit."
                      },
                      "system": {
                        "type": "string",
                        "pattern": "\\S*",
                        "description": "The identification of the system that provides the coded form of the unit."
                      },
                      "code": {
                        "type": "string",
                        "pattern": "[^\\s]+(\\s[^\\s]+)*",
                        "description": "A computer processable form of the unit in some unit representation system."
                      }
                    }
                  },
                  "denominator": {
                    "description": "The value of the denominator.",
                    "type": "object",
                    "properties": {
                      "value": {
                        "type": "number",
                        "description": "The value of the measured amount. The value includes an implicit precision in the presentation of the value."
                      },
                      "comparator": {
                        "type": "string",
                        "enum": [
                          "<",
                          "<=",
                          ">=",
                          ">"
                        ],
                        "description": "How the value should be understood and represented &ndash; whether the actual value is greater or less than the stated value due to measurement issues; e.g. if the comparator is \"<\" , then the real value is < stated value."
                      },
                      "unit": {
                        "type": "string",
                        "pattern": "[ \\r\\n\\t\\S]+",
                        "description": "A human&ndash;readable form of the unit."
                      },
                      "system": {
                        "type": "string",
                        "pattern": "\\S*",
                        "description": "The identification of the system that provides the coded form of the unit."
                      },
                      "code": {
                        "type": "string",
                        "pattern": "[^\\s]+(\\s[^\\s]+)*",
                        "description": "A computer processable form of the unit in some unit representation system."
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "maxVolumeToDeliver": {
          "description": "The maximum total quantity of formula that may be administered to a subject over the period of time, e.g. 1440 mL over 24 hours.",
          "type": "object",
          "properties": {
            "value": {
              "type": "number",
              "description": "The value of the measured amount. The value includes an implicit precision in the presentation of the value."
            },
            "comparator": {
              "type": "string",
              "enum": [
                "<",
                "<=",
                ">=",
                ">"
              ],
              "description": "How the value should be understood and represented &ndash; whether the actual value is greater or less than the stated value due to measurement issues; e.g. if the comparator is \"<\" , then the real value is < stated value."
            },
            "unit": {
              "type": "string",
              "pattern": "[ \\r\\n\\t\\S]+",
              "description": "A human&ndash;readable form of the unit."
            },
            "system": {
              "type": "string",
              "pattern": "\\S*",
              "description": "The identification of the system that provides the coded form of the unit."
            },
            "code": {
              "type": "string",
              "pattern": "[^\\s]+(\\s[^\\s]+)*",
              "description": "A computer processable form of the unit in some unit representation system."
            }
          }
        },
        "administrationInstruction": {
          "type": "string",
          "pattern": "[ \\r\\n\\t\\S]+",
          "description": "Free text formula administration, feeding instructions or additional instructions or information."
        }
      }
    },
    "note": {
      "type": "array",
      "items": {
        "description": "Comments made about the {{title}} by the requester, performer, subject or other participants.",
        "type": "object",
        "properties": {
          "authorReference": {
            "description": "The individual responsible for making the annotation.",
            "type": "object",
            "properties": {
              "reference": {
                "type": "string",
                "pattern": "[ \\r\\n\\t\\S]+",
                "description": "A reference to a location at which the other resource is found. The reference may be a relative reference, in which case it is relative to the service base URL, or an absolute URL that resolves to the location where the resource is found. The reference may be version specific or not. If the reference is not to a FHIR RESTful server, then it should be assumed to be version specific. Internal fragment references (start with '#') refer to contained resources."
              },
              "type": {
                "type": "string",
                "pattern": "\\S*",
                "description": "The expected type of the target of the reference. If both Reference.type and Reference.reference are populated and Reference.reference is a FHIR URL, both SHALL be consistent.\n\nThe type is the Canonical URL of Resource Definition that is the type this reference refers to. References are URLs that are relative to http://hl7.org/fhir/StructureDefinition/ e.g. \"Patient\" is a reference to http://hl7.org/fhir/StructureDefinition/Patient. Absolute URLs are only allowed for logical models (and can only be used in references in logical models, not resources)."
              },
              "identifier": {
                "type": "object",
                "additionalProperties": true,
                "description": "An identifier for the target resource. This is used when there is no way to reference the other resource directly, either because the entity it represents is not available through a FHIR server, or because there is no way for the author of the resource to convert a known identifier to an actual location. There is no requirement that a Reference.identifier point to something that is actually exposed as a FHIR instance, but it SHALL point to a business concept that would be expected to be exposed as a FHIR instance, and that instance would need to be of a FHIR resource type allowed by the reference."
              },
              "display": {
                "type": "string",
                "pattern": "[ \\r\\n\\t\\S]+",
                "description": "Plain text narrative that identifies the resource in addition to the resource reference."
              }
            }
          },
          "authorString": {
            "type": "string",
            "pattern": "[ \\r\\n\\t\\S]+",
            "description": "The individual responsible for making the annotation."
          },
          "time": {
            "type": "string",
            "pattern": "([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?",
            "description": "Indicates when this particular annotation was made."
          },
          "text": {
            "type": "string",
            "pattern": "[ \\r\\n\\t\\S]+",
            "description": "The text of the annotation in markdown format."
          }
        },
        "required": [
          "text"
        ]
      }
    }
  },
  "required": [
    "resourceType",
    "status",
    "intent",
    "patient",
    "dateTime"
  ]
}