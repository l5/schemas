{"description":"A statement of relationships from one set of concepts to one or more other concepts - either concepts in code systems, or data element/data element concepts, or classes in class models.","properties":{"id":{"description":"Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.","$ref":"./string"},"extension":{"description":"May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.","items":{"$ref":"./Extension"},"type":"array"},"modifierExtension":{"description":"May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).","items":{"$ref":"./Extension"},"type":"array"},"attribute":{"description":"A reference to the additional attribute that holds a value the map depends on.","$ref":"./code"},"_attribute":{"description":"Extensions for attribute","$ref":"./Element"},"valueCode":{"description":"Data element value that the map depends on / produces.","pattern":"^[^\\s]+( [^\\s]+)*$","type":"string"},"_valueCode":{"description":"Extensions for valueCode","$ref":"./Element"},"valueCoding":{"description":"Data element value that the map depends on / produces.","$ref":"./Coding"},"valueString":{"description":"Data element value that the map depends on / produces.","pattern":"^^[\\s\\S]+$$","type":"string"},"_valueString":{"description":"Extensions for valueString","$ref":"./Element"},"valueBoolean":{"description":"Data element value that the map depends on / produces.","pattern":"^true|false$","type":"boolean"},"_valueBoolean":{"description":"Extensions for valueBoolean","$ref":"./Element"},"valueQuantity":{"description":"Data element value that the map depends on / produces.","$ref":"./Quantity"},"valueSet":{"description":"This mapping applies if the data element value is a code from this value set.","$ref":"./canonical"}},"type":"object","additionalProperties":false}