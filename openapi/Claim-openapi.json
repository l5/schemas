
{
    "openapi": "3.0.0",
    "info": {
        "title": "Claim API",
        "description": "A simplified version of the HL7 FHIR API for Claim resources.",
        "version": "4.0.1"
    },
    "servers": [
        {
            "url": "/fhir-server/api/v4"
        }
    ],
    "x-ibm-configuration": {
        "gateway": "datapower-api-gateway",
        "type": "rest",
        "phase": "realized",
        "enforced": true,
        "testable": true,
        "cors": {
            "enabled": true
        },
        "assembly": {
            "execute": [
                {
                    "invoke": {
                        "version": "2.0.0",
                        "title": "invoke",
                        "header-control": {
                            "type": "blacklist",
                            "values": [
                            ]
                        },
                        "parameter-control": {
                            "type": "whitelist",
                            "values": [
                            ]
                        },
                        "timeout": 60,
                        "verb": "keep",
                        "cache-response": "protocol",
                        "cache-ttl": 900,
                        "stop-on-error": [
                        ],
                        "target-url": "$(target-url)$(api.operation.path)$(request.search)"
                    }
                }
            ],
            "catch": [
            ]
        },
        "properties": {
            "target-url": {
                "value": "https://localhost/fhir-server/api/v4/",
                "description": "The URL of the target service",
                "encoded": false
            }
        },
        "activity-log": {
            "enabled": true,
            "error-content": "header",
            "success-content": "activity"
        },
        "application-authentication": {
            "certificate": false
        },
        "catalogs": {
        }
    },
    "tags": [
        {
            "name": "Claim"
        }
    ],
    "paths": {
        "/Claim": {
            "post": {
                "tags": [
                    "Claim"
                ],
                "summary": "Create a Claim resource",
                "operationId": "createClaim",
                "responses": {
                    "201": {
                        "description": "Create Claim operation successful"
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/Claim"
                }
            },
            "get": {
                "tags": [
                    "Claim"
                ],
                "summary": "Search for Claim resources",
                "operationId": "searchClaim",
                "parameters": [
                    {
                        "name": "care-team",
                        "description": "Member of the CareTeam",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "identifier",
                        "description": "The primary identifier of the financial resource",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "created",
                        "description": "The creation date for the Claim",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "use",
                        "description": "The kind of financial resource",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "encounter",
                        "description": "Encounters associated with a billed line item",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "priority",
                        "description": "Processing priority requested",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "payee",
                        "description": "The party receiving any payment for the Claim",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "provider",
                        "description": "Provider responsible for the Claim",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "patient",
                        "description": "Patient receiving the products or services",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "insurer",
                        "description": "The target payor/insurer for the Claim",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "detail-udi",
                        "description": "UDI associated with a line item, detail product or service",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "enterer",
                        "description": "The party responsible for the entry of the Claim",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "procedure-udi",
                        "description": "UDI associated with a procedure",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "subdetail-udi",
                        "description": "UDI associated with a line item, detail, subdetail product or service",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "item-udi",
                        "description": "UDI associated with a line item product or service",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "facility",
                        "description": "Facility where the products or services have been or will be provided",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "status",
                        "description": "The status of the Claim instance.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/_profileParam"
                    },
                    {
                        "$ref": "#/components/parameters/_lastUpdatedParam"
                    },
                    {
                        "$ref": "#/components/parameters/_tagParam"
                    },
                    {
                        "$ref": "#/components/parameters/_securityParam"
                    },
                    {
                        "$ref": "#/components/parameters/_sourceParam"
                    },
                    {
                        "$ref": "#/components/parameters/_idParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Search Claim operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Bundle"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/Claim/{id}/_history/{vid}": {
            "get": {
                "tags": [
                    "Claim"
                ],
                "summary": "Read specific version of a Claim resource",
                "operationId": "vreadClaim",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "description": "logical identifier",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "vid",
                        "in": "path",
                        "required": true,
                        "description": "version identifier",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Versioned read Claim operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Claim"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/Claim/{id}": {
            "get": {
                "tags": [
                    "Claim"
                ],
                "summary": "Read a Claim resource",
                "operationId": "readClaim",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "description": "logical identifier",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Read Claim operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Claim"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Claim"
                ],
                "summary": "Update an existing Claim resource",
                "operationId": "updateClaim",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "description": "logical identifier",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Update Claim operation successful"
                    },
                    "201": {
                        "description": "Create Claim operation successful (requires 'updateCreateEnabled' configuration option)"
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/Claim"
                }
            },
            "delete": {
                "tags": [
                    "Claim"
                ],
                "summary": "Delete a Claim resource",
                "operationId": "deleteClaim",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "description": "logical identifier",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Delete Claim operation successful"
                    }
                }
            }
        },
        "/Claim/{id}/_history": {
            "get": {
                "tags": [
                    "Claim"
                ],
                "summary": "Return the history of a Claim resource",
                "operationId": "historyClaim",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "description": "logical identifier",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "History Claim operation successful",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Bundle"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "parameters": {
            "_profileParam": {
                "name": "_profile",
                "description": "Profiles this resource claims to conform to",
                "in": "query",
                "required": false,
                "schema": {
                    "type": "string"
                }
            },
            "_lastUpdatedParam": {
                "name": "_lastUpdated",
                "description": "When the resource version last changed",
                "in": "query",
                "required": false,
                "schema": {
                    "type": "string"
                }
            },
            "_tagParam": {
                "name": "_tag",
                "description": "Tags applied to this resource",
                "in": "query",
                "required": false,
                "schema": {
                    "type": "string"
                }
            },
            "_securityParam": {
                "name": "_security",
                "description": "Security Labels applied to this resource",
                "in": "query",
                "required": false,
                "schema": {
                    "type": "string"
                }
            },
            "_sourceParam": {
                "name": "_source",
                "description": "Identifies where the resource comes from",
                "in": "query",
                "required": false,
                "schema": {
                    "type": "string"
                }
            },
            "_idParam": {
                "name": "_id",
                "description": "Logical id of this artifact",
                "in": "query",
                "required": false,
                "schema": {
                    "type": "string"
                }
            }
        },
        "requestBodies": {
            "Claim": {
                "content": {
                    "application/fhir+json": {
                        "schema": {
                            "$ref": "#/components/schemas/Claim"
                        }
                    }
                },
                "required": true
            }
        },
        "schemas": {
            "Resource": {
                "type": "object",
                "discriminator": "resourceType",
                "properties": {
                    "resourceType": {
                        "type": "string",
                        "enum": [
                            "Account",
                            "ActivityDefinition",
                            "AdverseEvent",
                            "AllergyIntolerance",
                            "Appointment",
                            "AppointmentResponse",
                            "AuditEvent",
                            "Basic",
                            "Binary",
                            "BiologicallyDerivedProduct",
                            "BodyStructure",
                            "Bundle",
                            "CapabilityStatement",
                            "CarePlan",
                            "CareTeam",
                            "CatalogEntry",
                            "ChargeItem",
                            "ChargeItemDefinition",
                            "Claim",
                            "ClaimResponse",
                            "ClinicalImpression",
                            "CodeSystem",
                            "Communication",
                            "CommunicationRequest",
                            "CompartmentDefinition",
                            "Composition",
                            "ConceptMap",
                            "Condition",
                            "Consent",
                            "Contract",
                            "Coverage",
                            "CoverageEligibilityRequest",
                            "CoverageEligibilityResponse",
                            "DetectedIssue",
                            "Device",
                            "DeviceDefinition",
                            "DeviceMetric",
                            "DeviceRequest",
                            "DeviceUseStatement",
                            "DiagnosticReport",
                            "DocumentManifest",
                            "DocumentReference",
                            "DomainResource",
                            "EffectEvidenceSynthesis",
                            "Encounter",
                            "Endpoint",
                            "EnrollmentRequest",
                            "EnrollmentResponse",
                            "EpisodeOfCare",
                            "EventDefinition",
                            "Evidence",
                            "EvidenceVariable",
                            "ExampleScenario",
                            "ExplanationOfBenefit",
                            "FamilyMemberHistory",
                            "Flag",
                            "Goal",
                            "GraphDefinition",
                            "Group",
                            "GuidanceResponse",
                            "HealthcareService",
                            "ImagingStudy",
                            "Immunization",
                            "ImmunizationEvaluation",
                            "ImmunizationRecommendation",
                            "ImplementationGuide",
                            "InsurancePlan",
                            "Invoice",
                            "Library",
                            "Linkage",
                            "List",
                            "Location",
                            "Measure",
                            "MeasureReport",
                            "Media",
                            "Medication",
                            "MedicationAdministration",
                            "MedicationDispense",
                            "MedicationKnowledge",
                            "MedicationRequest",
                            "MedicationStatement",
                            "MedicinalProduct",
                            "MedicinalProductAuthorization",
                            "MedicinalProductContraindication",
                            "MedicinalProductIndication",
                            "MedicinalProductIngredient",
                            "MedicinalProductInteraction",
                            "MedicinalProductManufactured",
                            "MedicinalProductPackaged",
                            "MedicinalProductPharmaceutical",
                            "MedicinalProductUndesirableEffect",
                            "MessageDefinition",
                            "MessageHeader",
                            "MolecularSequence",
                            "NamingSystem",
                            "NutritionOrder",
                            "Observation",
                            "ObservationDefinition",
                            "OperationDefinition",
                            "OperationOutcome",
                            "Organization",
                            "OrganizationAffiliation",
                            "Parameters",
                            "Patient",
                            "PaymentNotice",
                            "PaymentReconciliation",
                            "Person",
                            "PlanDefinition",
                            "Practitioner",
                            "PractitionerRole",
                            "Procedure",
                            "Provenance",
                            "Questionnaire",
                            "QuestionnaireResponse",
                            "RelatedPerson",
                            "RequestGroup",
                            "ResearchDefinition",
                            "ResearchElementDefinition",
                            "ResearchStudy",
                            "ResearchSubject",
                            "Resource",
                            "RiskAssessment",
                            "RiskEvidenceSynthesis",
                            "Schedule",
                            "SearchParameter",
                            "ServiceRequest",
                            "Slot",
                            "Specimen",
                            "SpecimenDefinition",
                            "StructureDefinition",
                            "StructureMap",
                            "Subscription",
                            "Substance",
                            "SubstanceNucleicAcid",
                            "SubstancePolymer",
                            "SubstanceProtein",
                            "SubstanceReferenceInformation",
                            "SubstanceSourceMaterial",
                            "SubstanceSpecification",
                            "SupplyDelivery",
                            "SupplyRequest",
                            "Task",
                            "TerminologyCapabilities",
                            "TestReport",
                            "TestScript",
                            "ValueSet",
                            "VerificationResult",
                            "VisionPrescription"
                        ]
                    },
                    "id": {
                        "type": "string",
                        "pattern": "[A-Za-z0-9\\-\\.]{1,64}",
                        "description": "The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes."
                    },
                    "meta": {
                        "$ref": "#/components/schemas/Meta",
                        "description": "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource."
                    },
                    "implicitRules": {
                        "type": "string",
                        "pattern": "\\S*",
                        "description": "A reference to a set of rules that were followed when the resource was constructed, and which must be understood when processing the content. Often, this is a reference to an implementation guide that defines the special rules along with other profiles etc."
                    },
                    "language": {
                        "type": "string",
                        "pattern": "[^\\s]+(\\s[^\\s]+)*",
                        "description": "The base language in which the resource is written."
                    }
                },
                "required": [
                    "resourceType"
                ]
            },
            "DomainResource": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Resource"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "text": {
                                "$ref": "#/components/schemas/Narrative",
                                "description": "A human&ndash;readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it \"clinically safe\" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety."
                            },
                            "contained": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Resource",
                                    "description": "These resources do not have an independent existence apart from the resource that contains them &ndash; they cannot be identified independently, and nor can they have their own independent transaction scope."
                                }
                            },
                            "extension": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Extension",
                                    "description": "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
                                }
                            },
                            "modifierExtension": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Extension",
                                    "description": "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
                                }
                            }
                        }
                    }
                ]
            },
            "Claim": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/DomainResource"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "identifier": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Identifier",
                                    "description": "A unique identifier assigned to this claim."
                                }
                            },
                            "status": {
                                "type": "string",
                                "enum": [
                                    "active",
                                    "cancelled",
                                    "draft",
                                    "entered-in-error"
                                ],
                                "description": "The status of the resource instance."
                            },
                            "type": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "The category of claim, e.g. oral, pharmacy, vision, institutional, professional."
                            },
                            "subType": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "A finer grained suite of claim type codes which may convey additional information such as Inpatient vs Outpatient and/or a specialty service."
                            },
                            "use": {
                                "type": "string",
                                "enum": [
                                    "claim",
                                    "preauthorization",
                                    "predetermination"
                                ],
                                "description": "A code to indicate whether the nature of the request is: to request adjudication of products and services previously rendered; or requesting authorization and adjudication for provision in the future; or requesting the non&ndash;binding adjudication of the listed products and services which could be provided in the future."
                            },
                            "patient": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "The party to whom the professional services and/or products have been supplied or are being considered and for whom actual or forecast reimbursement is sought."
                            },
                            "billablePeriod": {
                                "$ref": "#/components/schemas/Period",
                                "description": "The period for which charges are being submitted."
                            },
                            "created": {
                                "type": "string",
                                "pattern": "([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?",
                                "description": "The date this resource was created."
                            },
                            "enterer": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "Individual who created the claim, predetermination or preauthorization."
                            },
                            "insurer": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "The Insurer who is target of the request."
                            },
                            "provider": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "The provider which is responsible for the claim, predetermination or preauthorization."
                            },
                            "priority": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "The provider&ndash;required urgency of processing the request. Typical values include: stat, routine deferred."
                            },
                            "fundsReserve": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "A code to indicate whether and for whom funds are to be reserved for future claims."
                            },
                            "related": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Claim_Related",
                                    "description": "Other claims which are related to this claim such as prior submissions or claims for related services or for the same event."
                                }
                            },
                            "prescription": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "Prescription to support the dispensing of pharmacy, device or vision products."
                            },
                            "originalPrescription": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "Original prescription which has been superseded by this prescription to support the dispensing of pharmacy services, medications or products."
                            },
                            "payee": {
                                "$ref": "#/components/schemas/Claim_Payee",
                                "description": "The party to be reimbursed for cost of the products and services according to the terms of the policy."
                            },
                            "referral": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "A reference to a referral resource."
                            },
                            "facility": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "Facility where the services were provided."
                            },
                            "careTeam": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Claim_CareTeam",
                                    "description": "The members of the team who provided the products and services."
                                }
                            },
                            "supportingInfo": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Claim_SupportingInfo",
                                    "description": "Additional information codes regarding exceptions, special considerations, the condition, situation, prior or concurrent issues."
                                }
                            },
                            "diagnosis": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Claim_Diagnosis",
                                    "description": "Information about diagnoses relevant to the claim items."
                                }
                            },
                            "procedure": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Claim_Procedure",
                                    "description": "Procedures performed on the patient relevant to the billing items with the claim."
                                }
                            },
                            "insurance": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Claim_Insurance",
                                    "description": "Financial instruments for reimbursement for the health care products and services specified on the claim."
                                },
                                "minItems": 1
                            },
                            "accident": {
                                "$ref": "#/components/schemas/Claim_Accident",
                                "description": "Details of an accident which resulted in injuries which required the products and services listed in the claim."
                            },
                            "item": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Claim_Item",
                                    "description": "A claim line. Either a simple  product or service or a 'group' of details which can each be a simple items or groups of sub&ndash;details."
                                }
                            },
                            "total": {
                                "$ref": "#/components/schemas/Money",
                                "description": "The total value of the all the items in the claim."
                            }
                        },
                        "required": [
                            "status",
                            "type",
                            "use",
                            "patient",
                            "created",
                            "provider",
                            "priority",
                            "insurance"
                        ]
                    }
                ],
                "example": {
                    "resourceType": "Claim",
                    "meta": {
                        "versionId": "Yjf1XLpOPT",
                        "lastUpdated": "2020-11-04T11:22:39.725488-05:00",
                        "source": "b3_mYfSVbh",
                        "profile": [
                            "XX67viJHBJ"
                        ],
                        "security": [
                            {
                                "system": "VKwcWXw2nZ",
                                "version": "W3QrJn29VD",
                                "code": "sUvIj9Vtpg",
                                "display": "aTpiIFVkTA",
                                "userSelected": true
                            }
                        ],
                        "tag": [
                            {
                                "system": "LUMaK7X_yW",
                                "version": "cC0Rcg4_ef",
                                "code": "8jrXssohIn",
                                "display": "G6d4mnVChV",
                                "userSelected": true
                            },
                            {
                                "code": "ibm/complete-mock"
                            }
                        ]
                    },
                    "implicitRules": "pdlzvjGwuG",
                    "language": "en-US",
                    "text": {
                        "status": "extensions",
                        "div": "<div xmlns=\"http://www.w3.org/1999/xhtml\"></div>"
                    },
                    "identifier": [
                        {
                            "use": "usual",
                            "type": {
                                "coding": [
                                    {
                                        "system": "lbFp0XsV_M",
                                        "version": "fte1UTVqbK",
                                        "code": "2SZV4BLWlC",
                                        "display": "Kf9ocw2F9i",
                                        "userSelected": true
                                    }
                                ],
                                "text": "b73WnlUyd0"
                            },
                            "system": "xBdfQoR3UC",
                            "value": "pzrdVVourv",
                            "period": {
                                "start": "2020-11-04T11:22:39.729928-05:00",
                                "end": "2020-11-04T11:22:39.730321-05:00"
                            }
                        }
                    ],
                    "status": "entered-in-error",
                    "type": {
                        "coding": [
                            {
                                "system": "bRbJ0zoZtU",
                                "version": "uIApJpaoQU",
                                "code": "sq8WV7Te42",
                                "display": "ez_y0dOYGc",
                                "userSelected": true
                            }
                        ],
                        "text": "fsGaNOwHwh"
                    },
                    "subType": {
                        "coding": [
                            {
                                "system": "tngI0GLuWy",
                                "version": "2WpCxlsSfV",
                                "code": "kx2LdrgfHC",
                                "display": "w1BGSCAPAc",
                                "userSelected": true
                            }
                        ],
                        "text": "v_9iWixT46"
                    },
                    "use": "claim",
                    "patient": {
                        "reference": "Patient/yNgZGzZybg",
                        "type": "Patient",
                        "identifier": {
                            "use": "old",
                            "type": {
                                "coding": [
                                    {
                                        "system": "oZ4UCIxW9n",
                                        "version": "JIdVlnNi4t",
                                        "code": "63nzmw4fej",
                                        "display": "dnirqHhhBN",
                                        "userSelected": true
                                    }
                                ],
                                "text": "_KAkSVxfhN"
                            },
                            "system": "nqafLk4Ffo",
                            "value": "lmGV3BtrV4",
                            "period": {
                                "start": "2020-11-04T11:22:39.73548-05:00",
                                "end": "2020-11-04T11:22:39.735737-05:00"
                            }
                        },
                        "display": "ChWbDjED4y"
                    },
                    "billablePeriod": {
                        "start": "2020-11-04T11:22:39.736057-05:00",
                        "end": "2020-11-04T11:22:39.736264-05:00"
                    },
                    "created": "2020-11-04T11:22:39.736486-05:00",
                    "enterer": {
                        "reference": "Practitioner/EWV8_envQX",
                        "type": "Practitioner",
                        "identifier": {
                            "use": "temp",
                            "type": {
                                "coding": [
                                    {
                                        "system": "lKi2eIZgOp",
                                        "version": "D5Zh8zZvRC",
                                        "code": "aKPogXithB",
                                        "display": "w7Fa2HVkz6",
                                        "userSelected": true
                                    }
                                ],
                                "text": "VKRF0iJyM_"
                            },
                            "system": "zRlQ_cVzxv",
                            "value": "hy3reZU2uw",
                            "period": {
                                "start": "2020-11-04T11:22:39.739141-05:00",
                                "end": "2020-11-04T11:22:39.739392-05:00"
                            }
                        },
                        "display": "KJsjN1k6Db"
                    },
                    "insurer": {
                        "reference": "Organization/Hk5jOrd8Lq",
                        "type": "Organization",
                        "identifier": {
                            "use": "old",
                            "type": {
                                "coding": [
                                    {
                                        "system": "MHqp50YidR",
                                        "version": "0KkMN_2xLa",
                                        "code": "VdkX7CGXCd",
                                        "display": "bUnaeUrCF8",
                                        "userSelected": true
                                    }
                                ],
                                "text": "DVjjXR81rM"
                            },
                            "system": "v_n8SknEem",
                            "value": "uEUvMcmEE5",
                            "period": {
                                "start": "2020-11-04T11:22:39.741433-05:00",
                                "end": "2020-11-04T11:22:39.74196-05:00"
                            }
                        },
                        "display": "GA0v1U53Rw"
                    },
                    "provider": {
                        "reference": "Practitioner/8ub5mdAC2N",
                        "type": "Practitioner",
                        "identifier": {
                            "use": "temp",
                            "type": {
                                "coding": [
                                    {
                                        "system": "v9o18exjH7",
                                        "version": "JGPTg0JI1a",
                                        "code": "Etwf4gNj5y",
                                        "display": "MGcBgMr1EO",
                                        "userSelected": true
                                    }
                                ],
                                "text": "G9OWWYX8gf"
                            },
                            "system": "cJxNVPradk",
                            "value": "pVc9knAj1n",
                            "period": {
                                "start": "2020-11-04T11:22:39.744151-05:00",
                                "end": "2020-11-04T11:22:39.744453-05:00"
                            }
                        },
                        "display": "E6FX53ujdb"
                    },
                    "priority": {
                        "coding": [
                            {
                                "system": "EusVrzqqCP",
                                "version": "d3EulIeeEg",
                                "code": "6doXtb30dX",
                                "display": "pywWrvksTH",
                                "userSelected": true
                            }
                        ],
                        "text": "URcLdUCV1v"
                    },
                    "fundsReserve": {
                        "coding": [
                            {
                                "system": "HTn_xIbUoW",
                                "version": "7lBWyEjJ0m",
                                "code": "elaBndApl9",
                                "display": "wmNjkIwQFW",
                                "userSelected": true
                            }
                        ],
                        "text": "cVEi_ehJ5y"
                    },
                    "related": [
                        {
                            "claim": {
                                "reference": "Claim/_XjC0eQvKJ",
                                "type": "Claim",
                                "identifier": {
                                    "use": "secondary",
                                    "type": {
                                        "coding": [
                                            {
                                                "system": "01ka37qThG",
                                                "version": "9vbTM9cUqL",
                                                "code": "HYQTl607jD",
                                                "display": "7LM2wa6y53",
                                                "userSelected": true
                                            }
                                        ],
                                        "text": "2VaJPzLczO"
                                    },
                                    "system": "uwHOo35Imk",
                                    "value": "hwkohHX876",
                                    "period": {
                                        "start": "2020-11-04T11:22:39.748603-05:00",
                                        "end": "2020-11-04T11:22:39.749094-05:00"
                                    }
                                },
                                "display": "_N9doYucaR"
                            },
                            "relationship": {
                                "coding": [
                                    {
                                        "system": "GeWOnx1DMX",
                                        "version": "0CSQmWR4mz",
                                        "code": "VuWUcq5yo0",
                                        "display": "9_A7mHbp23",
                                        "userSelected": true
                                    }
                                ],
                                "text": "kWnUpgEOhl"
                            },
                            "reference": {
                                "use": "secondary",
                                "type": {
                                    "coding": [
                                        {
                                            "system": "PJMemAAdE9",
                                            "version": "t6h7NPf4H5",
                                            "code": "RNnLrhn_xm",
                                            "display": "km6TxhV4u_",
                                            "userSelected": true
                                        }
                                    ],
                                    "text": "52gNvMAGfo"
                                },
                                "system": "4CQmtgjUqJ",
                                "value": "ndHHBJ9CRs",
                                "period": {
                                    "start": "2020-11-04T11:22:39.75167-05:00",
                                    "end": "2020-11-04T11:22:39.75192-05:00"
                                }
                            }
                        }
                    ],
                    "prescription": {
                        "reference": "DeviceRequest/4l6L0379IR",
                        "type": "DeviceRequest",
                        "identifier": {
                            "use": "old",
                            "type": {
                                "coding": [
                                    {
                                        "system": "USpdRJzvbp",
                                        "version": "5rsGi9V5bR",
                                        "code": "8arqvqcvTA",
                                        "display": "cm7YFsHA76",
                                        "userSelected": true
                                    }
                                ],
                                "text": "XbT7yHyd2x"
                            },
                            "system": "KnzeIHd1rN",
                            "value": "VimBt6TthS",
                            "period": {
                                "start": "2020-11-04T11:22:39.753562-05:00",
                                "end": "2020-11-04T11:22:39.753806-05:00"
                            }
                        },
                        "display": "u9EJs6NEyJ"
                    },
                    "originalPrescription": {
                        "reference": "DeviceRequest/lHvuikECwN",
                        "type": "DeviceRequest",
                        "identifier": {
                            "use": "temp",
                            "type": {
                                "coding": [
                                    {
                                        "system": "GPEg2zj9B7",
                                        "version": "Ocx4NtXa30",
                                        "code": "saij0_pz2G",
                                        "display": "sT3Ty7wTzD",
                                        "userSelected": true
                                    }
                                ],
                                "text": "7CwwIoN_Nx"
                            },
                            "system": "DS1ze7Tlg1",
                            "value": "9zJGp5nnl4",
                            "period": {
                                "start": "2020-11-04T11:22:39.755625-05:00",
                                "end": "2020-11-04T11:22:39.755904-05:00"
                            }
                        },
                        "display": "peSE9AF5qf"
                    },
                    "payee": {
                        "type": {
                            "coding": [
                                {
                                    "system": "wiAfjIeQFD",
                                    "version": "LaLqxhvYdM",
                                    "code": "tzoWJYjHcM",
                                    "display": "oDRDYUJflT",
                                    "userSelected": true
                                }
                            ],
                            "text": "qXeuEoXqQv"
                        },
                        "party": {
                            "reference": "Practitioner/p6tPKz7pc0",
                            "type": "Practitioner",
                            "identifier": {
                                "use": "usual",
                                "type": {
                                    "coding": [
                                        {
                                            "system": "wlwkl8QE2d",
                                            "version": "pWpvMIenXA",
                                            "code": "kQiOTBJuPH",
                                            "display": "2rpjYvTIxw",
                                            "userSelected": true
                                        }
                                    ],
                                    "text": "0hAFJc68Wf"
                                },
                                "system": "3C2wvu4N7P",
                                "value": "OlqWlzvy2V",
                                "period": {
                                    "start": "2020-11-04T11:22:39.75877-05:00",
                                    "end": "2020-11-04T11:22:39.759047-05:00"
                                }
                            },
                            "display": "vFFSxxAs2a"
                        }
                    },
                    "referral": {
                        "reference": "ServiceRequest/E0AVhfojcX",
                        "type": "ServiceRequest",
                        "identifier": {
                            "use": "official",
                            "type": {
                                "coding": [
                                    {
                                        "system": "HvqYFJKbFb",
                                        "version": "VdkTgQ8cBJ",
                                        "code": "mfokz9ktOV",
                                        "display": "pO00rWhhfy",
                                        "userSelected": true
                                    }
                                ],
                                "text": "fsOPctaX7r"
                            },
                            "system": "yDuC1Mtl4b",
                            "value": "fig3a8iUsk",
                            "period": {
                                "start": "2020-11-04T11:22:39.760707-05:00",
                                "end": "2020-11-04T11:22:39.760955-05:00"
                            }
                        },
                        "display": "LJbrsJ22EP"
                    },
                    "facility": {
                        "reference": "Location/kx5jXDC4IH",
                        "type": "Location",
                        "identifier": {
                            "use": "old",
                            "type": {
                                "coding": [
                                    {
                                        "system": "vuzqviTYLT",
                                        "version": "0ECs4N1oEK",
                                        "code": "ofsQ3uWMIy",
                                        "display": "B1dbjgp4E3",
                                        "userSelected": true
                                    }
                                ],
                                "text": "cgqQ283kkl"
                            },
                            "system": "jir04dP9tM",
                            "value": "DGhKCmSxdX",
                            "period": {
                                "start": "2020-11-04T11:22:39.762548-05:00",
                                "end": "2020-11-04T11:22:39.762786-05:00"
                            }
                        },
                        "display": "ctRXsfdZVF"
                    },
                    "careTeam": [
                        {
                            "sequence": 490080629,
                            "provider": {
                                "reference": "Practitioner/FOy_qNQU2n",
                                "type": "Practitioner",
                                "identifier": {
                                    "use": "temp",
                                    "type": {
                                        "coding": [
                                            {
                                                "system": "S61Yr1H7aH",
                                                "version": "f6ruzMhvK4",
                                                "code": "IaP_KWtQi2",
                                                "display": "Kli3YoNydE",
                                                "userSelected": true
                                            }
                                        ],
                                        "text": "EWJdOJOMbp"
                                    },
                                    "system": "ypvTas6Weh",
                                    "value": "vgLiOKT7Ur",
                                    "period": {
                                        "start": "2020-11-04T11:22:39.764666-05:00",
                                        "end": "2020-11-04T11:22:39.764888-05:00"
                                    }
                                },
                                "display": "aQ23qpLMgR"
                            },
                            "responsible": true,
                            "role": {
                                "coding": [
                                    {
                                        "system": "IwMwTWQmix",
                                        "version": "R7miKswSjw",
                                        "code": "u9f00jjzVl",
                                        "display": "6z0cZwXvnl",
                                        "userSelected": true
                                    }
                                ],
                                "text": "vAq446nb8O"
                            },
                            "qualification": {
                                "coding": [
                                    {
                                        "system": "1q9NrVG26n",
                                        "version": "bTpUjXtLI9",
                                        "code": "8xVg7b5VOa",
                                        "display": "YSSVU6qjjh",
                                        "userSelected": true
                                    }
                                ],
                                "text": "6HYDe4ThnI"
                            }
                        }
                    ],
                    "supportingInfo": [
                        {
                            "sequence": 337143608,
                            "category": {
                                "coding": [
                                    {
                                        "system": "uDa25fCi_d",
                                        "version": "jOj2IfRRYO",
                                        "code": "Ok9TCAF9SK",
                                        "display": "r8r1mRkJJc",
                                        "userSelected": true
                                    }
                                ],
                                "text": "TbMWBe1sHN"
                            },
                            "code": {
                                "coding": [
                                    {
                                        "system": "q8M_NTXLFG",
                                        "version": "n2B9uPb9S0",
                                        "code": "jrXjp5uoHH",
                                        "display": "JQACTX3a5u",
                                        "userSelected": true
                                    }
                                ],
                                "text": "MMETdSL8b7"
                            },
                            "timingDate": "2020-11-04",
                            "valueBoolean": true,
                            "reason": {
                                "coding": [
                                    {
                                        "system": "5gJgMATkZe",
                                        "version": "iHPkM7TBvy",
                                        "code": "Bm9m2tBAOz",
                                        "display": "1b5ZpIKBkb",
                                        "userSelected": true
                                    }
                                ],
                                "text": "Cm_YZZentS"
                            }
                        }
                    ],
                    "diagnosis": [
                        {
                            "sequence": 241425939,
                            "diagnosisCodeableConcept": {
                                "coding": [
                                    {
                                        "system": "1VNOdKCIDU",
                                        "version": "iYHKtkJRAb",
                                        "code": "mjc68z2SI8",
                                        "display": "xLxOsDD77_",
                                        "userSelected": true
                                    }
                                ],
                                "text": "HcWlvf9bQi"
                            },
                            "type": [
                                {
                                    "coding": [
                                        {
                                            "system": "iUZQpOuXCH",
                                            "version": "HwO2oowNEy",
                                            "code": "30A9zo0Ehb",
                                            "display": "1gHbnzaOR4",
                                            "userSelected": true
                                        }
                                    ],
                                    "text": "AXDglyrai2"
                                }
                            ],
                            "onAdmission": {
                                "coding": [
                                    {
                                        "system": "FBXjpVcb_b",
                                        "version": "eb16HeriPJ",
                                        "code": "VeMOviLZ9m",
                                        "display": "IXHQ_3omiS",
                                        "userSelected": true
                                    }
                                ],
                                "text": "YN7M3F8UqG"
                            },
                            "packageCode": {
                                "coding": [
                                    {
                                        "system": "fesDudMsXY",
                                        "version": "9AuV726YHk",
                                        "code": "YGpfAMwkYR",
                                        "display": "YqjvMVrv1u",
                                        "userSelected": true
                                    }
                                ],
                                "text": "IjmyOYresp"
                            }
                        }
                    ],
                    "procedure": [
                        {
                            "sequence": 879076589,
                            "type": [
                                {
                                    "coding": [
                                        {
                                            "system": "JxQTQb7ew4",
                                            "version": "OtL7VB11zB",
                                            "code": "KgdWZtrIT_",
                                            "display": "vNyh5_jW1t",
                                            "userSelected": true
                                        }
                                    ],
                                    "text": "caaJVg2LiE"
                                }
                            ],
                            "date": "2020-11-04T11:22:39.77419-05:00",
                            "procedureCodeableConcept": {
                                "coding": [
                                    {
                                        "system": "0eEBRniACm",
                                        "version": "cbTdIZzXsm",
                                        "code": "Q13R0dA0Yl",
                                        "display": "ozQyWT5CqV",
                                        "userSelected": true
                                    }
                                ],
                                "text": "4raedCATRM"
                            },
                            "udi": [
                                {
                                    "reference": "Device/ik5VmzErge",
                                    "type": "Device",
                                    "identifier": {
                                        "use": "temp",
                                        "type": {
                                            "coding": [
                                                {
                                                    "system": "0BdzYy43_7",
                                                    "version": "WPXy6oKhlK",
                                                    "code": "wSpgio6I4J",
                                                    "display": "9YqKxocffS",
                                                    "userSelected": true
                                                }
                                            ],
                                            "text": "S64rsxmBnY"
                                        },
                                        "system": "iw6jgLInRO",
                                        "value": "V9eNJRX5ju",
                                        "period": {
                                            "start": "2020-11-04T11:22:39.776375-05:00",
                                            "end": "2020-11-04T11:22:39.776619-05:00"
                                        }
                                    },
                                    "display": "36J_WI5rPk"
                                }
                            ]
                        }
                    ],
                    "insurance": [
                        {
                            "sequence": 52269555,
                            "focal": true,
                            "identifier": {
                                "use": "temp",
                                "type": {
                                    "coding": [
                                        {
                                            "system": "CAL2iVuBPp",
                                            "version": "25zYhjOTlz",
                                            "code": "sXq8XJFRDn",
                                            "display": "Us3YnIynx7",
                                            "userSelected": true
                                        }
                                    ],
                                    "text": "G8o4zY1XpQ"
                                },
                                "system": "pkbYyGjuri",
                                "value": "mPGWsV_pHi",
                                "period": {
                                    "start": "2020-11-04T11:22:39.778127-05:00",
                                    "end": "2020-11-04T11:22:39.778354-05:00"
                                }
                            },
                            "coverage": {
                                "reference": "Coverage/kzYiuhnBsR",
                                "type": "Coverage",
                                "identifier": {
                                    "use": "official",
                                    "type": {
                                        "coding": [
                                            {
                                                "system": "9B7QFh7_jT",
                                                "version": "27iITc5LBx",
                                                "code": "C7KQo7tMFb",
                                                "display": "u_2AsZgi1O",
                                                "userSelected": true
                                            }
                                        ],
                                        "text": "OTyPWJ4_6v"
                                    },
                                    "system": "gpgamBL5Mx",
                                    "value": "gBAHpekdhk",
                                    "period": {
                                        "start": "2020-11-04T11:22:39.779668-05:00",
                                        "end": "2020-11-04T11:22:39.779883-05:00"
                                    }
                                },
                                "display": "a9vzrW9NVj"
                            },
                            "businessArrangement": "Nh0VYK6BDY",
                            "preAuthRef": [
                                "eSUPdS_zpy"
                            ],
                            "claimResponse": {
                                "reference": "ClaimResponse/s6rhOnX6FJ",
                                "type": "ClaimResponse",
                                "identifier": {
                                    "use": "old",
                                    "type": {
                                        "coding": [
                                            {
                                                "system": "QmabymuMyd",
                                                "version": "JQ8KyZhazG",
                                                "code": "5ws7cLscJq",
                                                "display": "za5rK10ClD",
                                                "userSelected": true
                                            }
                                        ],
                                        "text": "t9eXkXuURS"
                                    },
                                    "system": "wuCoJK4Y3S",
                                    "value": "3YfdmtkfKy",
                                    "period": {
                                        "start": "2020-11-04T11:22:39.781433-05:00",
                                        "end": "2020-11-04T11:22:39.781683-05:00"
                                    }
                                },
                                "display": "lfDFsmZHPv"
                            }
                        }
                    ],
                    "accident": {
                        "date": "2020-11-04",
                        "type": {
                            "coding": [
                                {
                                    "system": "jTsvvuY8wj",
                                    "version": "p7QM7NRarQ",
                                    "code": "HLsdeNwVfA",
                                    "display": "sJpJfyqxTO",
                                    "userSelected": true
                                }
                            ],
                            "text": "S2oQR0S0zg"
                        },
                        "locationAddress": {
                            "use": "old",
                            "type": "both",
                            "text": "xTWL0evcc0",
                            "line": [
                                "AW4RLToWVf"
                            ],
                            "city": "BGEzodYITn",
                            "district": "PCMjZIv0hE",
                            "state": "wVF1F9b9fz",
                            "postalCode": "b0qN517KaO",
                            "country": "YwWyEEie73",
                            "period": {
                                "start": "2020-11-04T11:22:39.786712-05:00",
                                "end": "2020-11-04T11:22:39.786963-05:00"
                            }
                        }
                    },
                    "item": [
                        {
                            "sequence": 49289401,
                            "careTeamSequence": [
                                1008759987
                            ],
                            "diagnosisSequence": [
                                862098984
                            ],
                            "procedureSequence": [
                                1663924743
                            ],
                            "informationSequence": [
                                1798146182
                            ],
                            "revenue": {
                                "coding": [
                                    {
                                        "system": "tshMpQT6a9",
                                        "version": "Xfy1nrhq6e",
                                        "code": "Q0KADNPR1Y",
                                        "display": "Mw59EeCXOu",
                                        "userSelected": true
                                    }
                                ],
                                "text": "gRQ0wu6Iw_"
                            },
                            "category": {
                                "coding": [
                                    {
                                        "system": "NEYF2S0ZBw",
                                        "version": "wOZmddJKd4",
                                        "code": "juGl8_rZt5",
                                        "display": "VC0V31nfye",
                                        "userSelected": true
                                    }
                                ],
                                "text": "XeKXQl6NiX"
                            },
                            "productOrService": {
                                "coding": [
                                    {
                                        "system": "gcHjhoBQqR",
                                        "version": "OF8lLvt741",
                                        "code": "NTpBj_V7C3",
                                        "display": "jdu11jO7VX",
                                        "userSelected": true
                                    }
                                ],
                                "text": "eSXCnliJ6R"
                            },
                            "modifier": [
                                {
                                    "coding": [
                                        {
                                            "system": "lJ_vtJ8guH",
                                            "version": "KWxGYoc0DI",
                                            "code": "rw7fHfFPpA",
                                            "display": "4_iFv_I5A4",
                                            "userSelected": true
                                        }
                                    ],
                                    "text": "S7UD0S8dV1"
                                }
                            ],
                            "programCode": [
                                {
                                    "coding": [
                                        {
                                            "system": "H6cBkBsBl_",
                                            "version": "3PC0vlkJNV",
                                            "code": "BdZISccmNK",
                                            "display": "KKyOYsBMUv",
                                            "userSelected": true
                                        }
                                    ],
                                    "text": "wU5H0FKdna"
                                }
                            ],
                            "servicedDate": "2020-11-04",
                            "locationCodeableConcept": {
                                "coding": [
                                    {
                                        "system": "54OOwjI5fw",
                                        "version": "FS6xJ7N4OF",
                                        "code": "768CXfvWRz",
                                        "display": "fxJlmPD61i",
                                        "userSelected": true
                                    }
                                ],
                                "text": "ZH1VrxpfEO"
                            },
                            "quantity": {
                                "value": 0.961832797395727023825884316465817391872406005859375,
                                "unit": "vfLnw7RAUV",
                                "system": "ghmLzKlWth",
                                "code": "D14gGA6nDo"
                            },
                            "unitPrice": {
                                "value": 0.98182452691851762605068643097183667123317718505859375,
                                "currency": "OjRwwo6wON"
                            },
                            "factor": 0.5835156692739775774469990210491232573986053466796875,
                            "net": {
                                "value": 0.349111396386279471126812268266803584992885589599609375,
                                "currency": "NNfMilQMN9"
                            },
                            "udi": [
                                {
                                    "reference": "Device/tGN3ccfb7o",
                                    "type": "Device",
                                    "identifier": {
                                        "use": "old",
                                        "type": {
                                            "coding": [
                                                {
                                                    "system": "bHxfmmFqt5",
                                                    "version": "hLptyivvli",
                                                    "code": "KPaXhyh7NN",
                                                    "display": "dYlS51N3tS",
                                                    "userSelected": true
                                                }
                                            ],
                                            "text": "MGl4xzhFaD"
                                        },
                                        "system": "3Spploo7Za",
                                        "value": "8M9LSgc2CD",
                                        "period": {
                                            "start": "2020-11-04T11:22:39.794995-05:00",
                                            "end": "2020-11-04T11:22:39.795219-05:00"
                                        }
                                    },
                                    "display": "XCwnD6TA53"
                                }
                            ],
                            "bodySite": {
                                "coding": [
                                    {
                                        "system": "vQAsBQnJCr",
                                        "version": "k4aKblWp8w",
                                        "code": "F7rEpiCBwM",
                                        "display": "CMP3CMUBty",
                                        "userSelected": true
                                    }
                                ],
                                "text": "Bl21r1In2N"
                            },
                            "subSite": [
                                {
                                    "coding": [
                                        {
                                            "system": "fbnR6r51xV",
                                            "version": "WhutBCfgWG",
                                            "code": "jAcfYrRZMV",
                                            "display": "TnkVNu8REP",
                                            "userSelected": true
                                        }
                                    ],
                                    "text": "SYNgp11QVh"
                                }
                            ],
                            "encounter": [
                                {
                                    "reference": "Encounter/99eFjzQoE_",
                                    "type": "Encounter",
                                    "identifier": {
                                        "use": "official",
                                        "type": {
                                            "coding": [
                                                {
                                                    "system": "lvxH42XiLp",
                                                    "version": "_764a7l3cZ",
                                                    "code": "HwSV_G5b3s",
                                                    "display": "W_QQ7gzruw",
                                                    "userSelected": true
                                                }
                                            ],
                                            "text": "V7aiuCE0wj"
                                        },
                                        "system": "96ScAeZjNT",
                                        "value": "BY6H9nOv2z",
                                        "period": {
                                            "start": "2020-11-04T11:22:39.797665-05:00",
                                            "end": "2020-11-04T11:22:39.79788-05:00"
                                        }
                                    },
                                    "display": "QvXP0wS1vR"
                                }
                            ],
                            "detail": [
                                {
                                    "sequence": 1076845964,
                                    "revenue": {
                                        "coding": [
                                            {
                                                "system": "JRTCNRMRIM",
                                                "version": "1WnuvQcj2Q",
                                                "code": "7xKm9P09Q6",
                                                "display": "iwkrPoOdSc",
                                                "userSelected": true
                                            }
                                        ],
                                        "text": "TVuq4ga1yO"
                                    },
                                    "category": {
                                        "coding": [
                                            {
                                                "system": "PNpM7uMqlT",
                                                "version": "3u3qdBz4A2",
                                                "code": "4gvNIF8Zx9",
                                                "display": "4PseU03qq1",
                                                "userSelected": true
                                            }
                                        ],
                                        "text": "GeIFfJUVjX"
                                    },
                                    "productOrService": {
                                        "coding": [
                                            {
                                                "system": "68suh3x4ev",
                                                "version": "oue00bPLGW",
                                                "code": "AN51qTTSaX",
                                                "display": "5Mvi9VWYvm",
                                                "userSelected": true
                                            }
                                        ],
                                        "text": "UL6bWteEDp"
                                    },
                                    "modifier": [
                                        {
                                            "coding": [
                                                {
                                                    "system": "tRHqb5bjuL",
                                                    "version": "mBTX2KXgjt",
                                                    "code": "sN9X3eIJ4e",
                                                    "display": "5qcLE2csBP",
                                                    "userSelected": true
                                                }
                                            ],
                                            "text": "uN2aNFqLDv"
                                        }
                                    ],
                                    "programCode": [
                                        {
                                            "coding": [
                                                {
                                                    "system": "OJ7mNdpd6c",
                                                    "version": "8QbJxBeheC",
                                                    "code": "AJr7EhZ7jk",
                                                    "display": "stolEM4la3",
                                                    "userSelected": true
                                                }
                                            ],
                                            "text": "x2DQDlrHFS"
                                        }
                                    ],
                                    "quantity": {
                                        "value": 0.1568449557454858478422465850599110126495361328125,
                                        "unit": "Tk7iT43SHW",
                                        "system": "1cpjiw7UIE",
                                        "code": "Qv3ZGCCdya"
                                    },
                                    "unitPrice": {
                                        "value": 0.4769932619996624101332827194710262119770050048828125,
                                        "currency": "TCfBM331Wr"
                                    },
                                    "factor": 0.96723020409746440773091080700396560132503509521484375,
                                    "net": {
                                        "value": 0.93490830588039142146072890682262368500232696533203125,
                                        "currency": "945gq_rTq0"
                                    },
                                    "udi": [
                                        {
                                            "reference": "Device/r2k8UjwVA2",
                                            "type": "Device",
                                            "identifier": {
                                                "use": "usual",
                                                "type": {
                                                    "coding": [
                                                        {
                                                            "system": "M1ARlHqKqk",
                                                            "version": "DxU_T7WeoA",
                                                            "code": "lPjKEYCUss",
                                                            "display": "6W0EfUGBuK",
                                                            "userSelected": true
                                                        }
                                                    ],
                                                    "text": "wROq5glGT8"
                                                },
                                                "system": "z3orQzNo3W",
                                                "value": "mh_7t9N00e",
                                                "period": {
                                                    "start": "2020-11-04T11:22:39.804284-05:00",
                                                    "end": "2020-11-04T11:22:39.804509-05:00"
                                                }
                                            },
                                            "display": "iXveSgB6hv"
                                        }
                                    ],
                                    "subDetail": [
                                        {
                                            "sequence": 889750032,
                                            "revenue": {
                                                "coding": [
                                                    {
                                                        "system": "6sN31cL97w",
                                                        "version": "Knj_dQqH4_",
                                                        "code": "4PSEqMbVM8",
                                                        "display": "QmyN4pU6tN",
                                                        "userSelected": true
                                                    }
                                                ],
                                                "text": "MQnIRtu9HW"
                                            },
                                            "category": {
                                                "coding": [
                                                    {
                                                        "system": "fpwzjvhH5E",
                                                        "version": "cIw5YPQhtU",
                                                        "code": "0w4TtlRlKr",
                                                        "display": "6Uchm205Ku",
                                                        "userSelected": true
                                                    }
                                                ],
                                                "text": "JM0h_N_eVw"
                                            },
                                            "productOrService": {
                                                "coding": [
                                                    {
                                                        "system": "cjam4s7_0B",
                                                        "version": "eU8_8BmcGB",
                                                        "code": "pCzmq3Pprz",
                                                        "display": "slx8l9msdP",
                                                        "userSelected": true
                                                    }
                                                ],
                                                "text": "jqC1IvQLcd"
                                            },
                                            "modifier": [
                                                {
                                                    "coding": [
                                                        {
                                                            "system": "JVfxUd1pSc",
                                                            "version": "4L6MdljB46",
                                                            "code": "e9pP6JzLzZ",
                                                            "display": "coCGFUhMVK",
                                                            "userSelected": true
                                                        }
                                                    ],
                                                    "text": "wWSC7h77LO"
                                                }
                                            ],
                                            "programCode": [
                                                {
                                                    "coding": [
                                                        {
                                                            "system": "F4NDT2RA4e",
                                                            "version": "XRl9BoivgW",
                                                            "code": "5mv03NOkeE",
                                                            "display": "W3ArrdWvyT",
                                                            "userSelected": true
                                                        }
                                                    ],
                                                    "text": "bdPywTdYSk"
                                                }
                                            ],
                                            "quantity": {
                                                "value": 0.66783860864514721367157790155033580958843231201171875,
                                                "unit": "X20Yt82uw3",
                                                "system": "uJYRyOP3D5",
                                                "code": "aAztknoBsr"
                                            },
                                            "unitPrice": {
                                                "value": 0.95405669462851194762009754413156770169734954833984375,
                                                "currency": "T2llcEgphN"
                                            },
                                            "factor": 0.1871672506916614298067003119285800494253635406494140625,
                                            "net": {
                                                "value": 0.54263963838569051478799565302324481308460235595703125,
                                                "currency": "caLbaEE_Op"
                                            },
                                            "udi": [
                                                {
                                                    "reference": "Device/aPDP1TvVMh",
                                                    "type": "Device",
                                                    "identifier": {
                                                        "use": "official",
                                                        "type": {
                                                            "coding": [
                                                                {
                                                                    "system": "f2ml41QG4D",
                                                                    "version": "Ol_lxMmTKo",
                                                                    "code": "nuYoVE2sBr",
                                                                    "display": "wDMVXpPOdj",
                                                                    "userSelected": true
                                                                }
                                                            ],
                                                            "text": "mMY_gJNgGC"
                                                        },
                                                        "system": "tWChRWhsN8",
                                                        "value": "efCBZSDXKJ",
                                                        "period": {
                                                            "start": "2020-11-04T11:22:39.810986-05:00",
                                                            "end": "2020-11-04T11:22:39.811222-05:00"
                                                        }
                                                    },
                                                    "display": "P_6VVYjauP"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ],
                    "total": {
                        "value": 0.83821552268528265461355886145611293613910675048828125,
                        "currency": "Sf8RSAVPRE"
                    }
                }
            },
            "Bundle": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Resource"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "identifier": {
                                "$ref": "#/components/schemas/Identifier",
                                "description": "A persistent identifier for the bundle that won't change as a bundle is copied from server to server."
                            },
                            "type": {
                                "type": "string",
                                "enum": [
                                    "document",
                                    "message",
                                    "transaction",
                                    "transaction-response",
                                    "batch",
                                    "batch-response",
                                    "history",
                                    "searchset",
                                    "collection"
                                ],
                                "description": "Indicates the purpose of this bundle &ndash; how it is intended to be used."
                            },
                            "timestamp": {
                                "type": "string",
                                "pattern": "([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))",
                                "description": "The date/time that the bundle was assembled &ndash; i.e. when the resources were placed in the bundle."
                            },
                            "total": {
                                "type": "integer",
                                "format": "int32",
                                "description": "If a set of search matches, this is the total number of entries of type 'match' across all pages in the search.  It does not include search.mode = 'include' or 'outcome' entries and it does not provide a count of the number of entries in the Bundle."
                            },
                            "link": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Bundle_Link",
                                    "description": "A series of links that provide context to this bundle."
                                }
                            },
                            "entry": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Bundle_Entry",
                                    "description": "An entry in a bundle resource &ndash; will either contain a resource or information about a resource (transactions and history only)."
                                }
                            },
                            "signature": {
                                "$ref": "#/components/schemas/Signature",
                                "description": "Digital Signature &ndash; base64 encoded. XML&ndash;DSig or a JWT."
                            }
                        },
                        "required": [
                            "type"
                        ]
                    }
                ],
                "example": {
                    "resourceType": "Bundle",
                    "meta": {
                        "versionId": "F7bitzw1Hj",
                        "lastUpdated": "2020-11-04T11:22:43.502316-05:00",
                        "source": "JRkgOa8bwm",
                        "profile": [
                            "i4gpGowr6Y"
                        ],
                        "security": [
                            {
                                "system": "lTnQF4OV3w",
                                "version": "hTth0i4Ivs",
                                "code": "P6iXDX6DcV",
                                "display": "rMonvtKiO8",
                                "userSelected": true
                            }
                        ],
                        "tag": [
                            {
                                "system": "4HA_3UN6ab",
                                "version": "FvMU1dv9n6",
                                "code": "AjrpSN9l0q",
                                "display": "V3cjH6t7zX",
                                "userSelected": true
                            },
                            {
                                "code": "ibm/complete-mock"
                            }
                        ]
                    },
                    "implicitRules": "IUOLjdM2gr",
                    "language": "en-US",
                    "identifier": {
                        "use": "temp",
                        "type": {
                            "coding": [
                                {
                                    "system": "GG7NhXNGqZ",
                                    "version": "hTXMVyhLkS",
                                    "code": "fimixp8PMa",
                                    "display": "aYmxIkjI7w",
                                    "userSelected": true
                                }
                            ],
                            "text": "znbNwNNzOo"
                        },
                        "system": "zxGBnkW0WU",
                        "value": "lpcL4XUHKZ",
                        "period": {
                            "start": "2020-11-04T11:22:43.507146-05:00",
                            "end": "2020-11-04T11:22:43.507335-05:00"
                        }
                    },
                    "type": "document",
                    "timestamp": "2020-11-04T11:22:43.507779-05:00",
                    "total": 804618139,
                    "link": [
                        {
                            "relation": "0h9oqVMQIt",
                            "url": "N6t6uzHuIy"
                        }
                    ],
                    "entry": [
                        {
                            "link": [
                                {
                                    "relation": "IWG3UO5Awa",
                                    "url": "MJBFG1zxnb"
                                }
                            ],
                            "fullUrl": "PKkErHU9RX",
                            "search": {
                                "mode": "match",
                                "score": 0.78276202450637411001110876895836554467678070068359375
                            },
                            "request": {
                                "method": "DELETE",
                                "url": "EX5t3mSMJh",
                                "ifNoneMatch": "TXPgvN30LK",
                                "ifModifiedSince": "2020-11-04T11:22:43.514903-05:00",
                                "ifMatch": "ESkJi0jaVC",
                                "ifNoneExist": "fuSskChKIq"
                            },
                            "response": {
                                "status": "avVXy1xkRq",
                                "location": "v0Ub50vvWL",
                                "etag": "BmCLcXDNuX",
                                "lastModified": "2020-11-04T11:22:43.516375-05:00"
                            }
                        }
                    ],
                    "signature": {
                        "type": [
                            {
                                "system": "YievdsQnmM",
                                "version": "3um1GW4GVD",
                                "code": "sNUnxWccmG",
                                "display": "pqCTozifNV",
                                "userSelected": true
                            }
                        ],
                        "when": "2020-11-04T11:22:43.518017-05:00",
                        "who": {
                            "reference": "Practitioner/7tLbieRmnA",
                            "type": "Practitioner",
                            "identifier": {
                                "use": "secondary",
                                "type": {
                                    "coding": [
                                        {
                                            "system": "9BzciHf_0T",
                                            "version": "em1dSVwNdC",
                                            "code": "LD7gU1VdIa",
                                            "display": "l_je45PsqP",
                                            "userSelected": true
                                        }
                                    ],
                                    "text": "Kd2TxyCZR7"
                                },
                                "system": "pACafNTDh7",
                                "value": "_hcXO_NlZg",
                                "period": {
                                    "start": "2020-11-04T11:22:43.519783-05:00",
                                    "end": "2020-11-04T11:22:43.520066-05:00"
                                }
                            },
                            "display": "l79nsD4sN6"
                        },
                        "onBehalfOf": {
                            "reference": "Practitioner/LiWB2VJ2UG",
                            "type": "Practitioner",
                            "identifier": {
                                "use": "official",
                                "type": {
                                    "coding": [
                                        {
                                            "system": "64W3kvPnCz",
                                            "version": "1LnrLVgWre",
                                            "code": "oHtu3WoiKi",
                                            "display": "gMKD8fdCjt",
                                            "userSelected": true
                                        }
                                    ],
                                    "text": "bu5V13p166"
                                },
                                "system": "Graf7De_yt",
                                "value": "UWJRgHe9wr",
                                "period": {
                                    "start": "2020-11-04T11:22:43.544663-05:00",
                                    "end": "2020-11-04T11:22:43.545138-05:00"
                                }
                            },
                            "display": "kQ5612idGd"
                        },
                        "targetFormat": "AQCVaUpSER",
                        "sigFormat": "FxtGIjypV6",
                        "data": "dUUnF3I="
                    }
                }
            },
            "OperationOutcome": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/DomainResource"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "issue": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/OperationOutcome_Issue",
                                    "description": "An error, warning, or information message that results from a system action."
                                },
                                "minItems": 1
                            }
                        },
                        "required": [
                            "issue"
                        ]
                    }
                ],
                "example": {
                    "resourceType": "OperationOutcome",
                    "meta": {
                        "versionId": "q63JAUPuUM",
                        "lastUpdated": "2020-11-04T11:22:40.494613-05:00",
                        "source": "lwnaIGbKJn",
                        "profile": [
                            "XGQPxL1j9k"
                        ],
                        "security": [
                            {
                                "system": "sPgaKWp0jQ",
                                "version": "wZHLBfjatw",
                                "code": "DMQqy4R3E8",
                                "display": "mmxOeLn3hG",
                                "userSelected": true
                            }
                        ],
                        "tag": [
                            {
                                "system": "MtLYCBYPWS",
                                "version": "8Ak7HZQrke",
                                "code": "0DRWc7UuJB",
                                "display": "6NXvm6cEoG",
                                "userSelected": true
                            },
                            {
                                "code": "ibm/complete-mock"
                            }
                        ]
                    },
                    "implicitRules": "siFyYo720q",
                    "language": "en-US",
                    "text": {
                        "status": "generated",
                        "div": "<div xmlns=\"http://www.w3.org/1999/xhtml\"></div>"
                    },
                    "issue": [
                        {
                            "severity": "fatal",
                            "code": "required",
                            "details": {
                                "coding": [
                                    {
                                        "system": "YAwo1XN_fv",
                                        "version": "9ycWn1vQBR",
                                        "code": "Y4ci7ASL_1",
                                        "display": "lq_CJ5bq6Z",
                                        "userSelected": true
                                    }
                                ],
                                "text": "aWHd4ZkhaW"
                            },
                            "diagnostics": "yew1JE2w0X",
                            "location": [
                                "ZDqBVS3Xgx"
                            ],
                            "expression": [
                                "yYfbNaNi8V"
                            ]
                        }
                    ]
                }
            },
            "Bundle_Entry": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BackboneElement"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "link": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Bundle_Link",
                                    "description": "A series of links that provide context to this entry."
                                }
                            },
                            "fullUrl": {
                                "type": "string",
                                "pattern": "\\S*",
                                "description": "The Absolute URL for the resource.  The fullUrl SHALL NOT disagree with the id in the resource &ndash; i.e. if the fullUrl is not a urn:uuid, the URL shall be version&ndash;independent URL consistent with the Resource.id. The fullUrl is a version independent reference to the resource. The fullUrl element SHALL have a value except that: \n* fullUrl can be empty on a POST (although it does not need to when specifying a temporary id for reference in the bundle)\n* Results from operations might involve resources that are not identified."
                            },
                            "resource": {
                                "$ref": "#/components/schemas/Resource",
                                "description": "The Resource for the entry. The purpose/meaning of the resource is determined by the Bundle.type."
                            },
                            "search": {
                                "$ref": "#/components/schemas/Bundle_Entry_Search",
                                "description": "Information about the search process that lead to the creation of this entry."
                            },
                            "request": {
                                "$ref": "#/components/schemas/Bundle_Entry_Request",
                                "description": "Additional information about how this entry should be processed as part of a transaction or batch.  For history, it shows how the entry was processed to create the version contained in the entry."
                            },
                            "response": {
                                "$ref": "#/components/schemas/Bundle_Entry_Response",
                                "description": "Indicates the results of processing the corresponding 'request' entry in the batch or transaction being responded to or what the results of an operation where when returning history."
                            }
                        }
                    }
                ]
            },
            "Bundle_Entry_Response": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BackboneElement"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "status": {
                                "type": "string",
                                "pattern": "[ \\r\\n\\t\\S]+",
                                "description": "The status code returned by processing this entry. The status SHALL start with a 3 digit HTTP code (e.g. 404) and may contain the standard HTTP description associated with the status code."
                            },
                            "location": {
                                "type": "string",
                                "pattern": "\\S*",
                                "description": "The location header created by processing this operation, populated if the operation returns a location."
                            },
                            "etag": {
                                "type": "string",
                                "pattern": "[ \\r\\n\\t\\S]+",
                                "description": "The Etag for the resource, if the operation for the entry produced a versioned resource (see [Resource Metadata and Versioning](http.html#versioning) and [Managing Resource Contention](http.html#concurrency))."
                            },
                            "lastModified": {
                                "type": "string",
                                "pattern": "([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))",
                                "description": "The date/time that the resource was modified on the server."
                            },
                            "outcome": {
                                "$ref": "#/components/schemas/Resource",
                                "description": "An OperationOutcome containing hints and warnings produced as part of processing this entry in a batch or transaction."
                            }
                        },
                        "required": [
                            "status"
                        ]
                    }
                ]
            },
            "Bundle_Entry_Request": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BackboneElement"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "method": {
                                "type": "string",
                                "enum": [
                                    "GET",
                                    "HEAD",
                                    "POST",
                                    "PUT",
                                    "DELETE",
                                    "PATCH"
                                ],
                                "description": "In a transaction or batch, this is the HTTP action to be executed for this entry. In a history bundle, this indicates the HTTP action that occurred."
                            },
                            "url": {
                                "type": "string",
                                "pattern": "\\S*",
                                "description": "The URL for this entry, relative to the root (the address to which the request is posted)."
                            },
                            "ifNoneMatch": {
                                "type": "string",
                                "pattern": "[ \\r\\n\\t\\S]+",
                                "description": "If the ETag values match, return a 304 Not Modified status. See the API documentation for [\"Conditional Read\"](http.html#cread)."
                            },
                            "ifModifiedSince": {
                                "type": "string",
                                "pattern": "([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))",
                                "description": "Only perform the operation if the last updated date matches. See the API documentation for [\"Conditional Read\"](http.html#cread)."
                            },
                            "ifMatch": {
                                "type": "string",
                                "pattern": "[ \\r\\n\\t\\S]+",
                                "description": "Only perform the operation if the Etag value matches. For more information, see the API section [\"Managing Resource Contention\"](http.html#concurrency)."
                            },
                            "ifNoneExist": {
                                "type": "string",
                                "pattern": "[ \\r\\n\\t\\S]+",
                                "description": "Instruct the server not to perform the create if a specified resource already exists. For further information, see the API documentation for [\"Conditional Create\"](http.html#ccreate). This is just the query portion of the URL &ndash; what follows the \"?\" (not including the \"?\")."
                            }
                        },
                        "required": [
                            "method",
                            "url"
                        ]
                    }
                ]
            },
            "Bundle_Entry_Search": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BackboneElement"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "mode": {
                                "type": "string",
                                "enum": [
                                    "match",
                                    "include",
                                    "outcome"
                                ],
                                "description": "Why this entry is in the result set &ndash; whether it's included as a match or because of an _include requirement, or to convey information or warning information about the search process."
                            },
                            "score": {
                                "type": "number",
                                "description": "When searching, the server's search ranking score for the entry."
                            }
                        }
                    }
                ]
            },
            "Bundle_Link": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BackboneElement"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "relation": {
                                "type": "string",
                                "pattern": "[ \\r\\n\\t\\S]+",
                                "description": "A name which details the functional use for this link &ndash; see [http://www.iana.org/assignments/link&ndash;relations/link&ndash;relations.xhtml#link&ndash;relations&ndash;1](http://www.iana.org/assignments/link&ndash;relations/link&ndash;relations.xhtml#link&ndash;relations&ndash;1)."
                            },
                            "url": {
                                "type": "string",
                                "pattern": "\\S*",
                                "description": "The reference details for the link."
                            }
                        },
                        "required": [
                            "relation",
                            "url"
                        ]
                    }
                ]
            },
            "Claim_Item": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BackboneElement"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "sequence": {
                                "type": "integer",
                                "format": "int32",
                                "description": "A number to uniquely identify item entries."
                            },
                            "careTeamSequence": {
                                "type": "array",
                                "items": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "CareTeam members related to this service or product."
                                }
                            },
                            "diagnosisSequence": {
                                "type": "array",
                                "items": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "Diagnosis applicable for this service or product."
                                }
                            },
                            "procedureSequence": {
                                "type": "array",
                                "items": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "Procedures applicable for this service or product."
                                }
                            },
                            "informationSequence": {
                                "type": "array",
                                "items": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "Exceptions, special conditions and supporting information applicable for this service or product."
                                }
                            },
                            "revenue": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "The type of revenue or cost center providing the product and/or service."
                            },
                            "category": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "Code to identify the general type of benefits under which products and services are provided."
                            },
                            "productOrService": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "When the value is a group code then this item collects a set of related claim details, otherwise this contains the product, service, drug or other billing code for the item."
                            },
                            "modifier": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/CodeableConcept",
                                    "description": "Item typification or modifiers codes to convey additional context for the product or service."
                                }
                            },
                            "programCode": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/CodeableConcept",
                                    "description": "Identifies the program under which this may be recovered."
                                }
                            },
                            "servicedDate": {
                                "type": "string",
                                "pattern": "([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?",
                                "description": "The date or dates when the service or product was supplied, performed or completed."
                            },
                            "servicedPeriod": {
                                "$ref": "#/components/schemas/Period",
                                "description": "The date or dates when the service or product was supplied, performed or completed."
                            },
                            "locationCodeableConcept": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "Where the product or service was provided."
                            },
                            "locationAddress": {
                                "$ref": "#/components/schemas/Address",
                                "description": "Where the product or service was provided."
                            },
                            "locationReference": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "Where the product or service was provided."
                            },
                            "quantity": {
                                "$ref": "#/components/schemas/SimpleQuantity",
                                "description": "The number of repetitions of a service or product."
                            },
                            "unitPrice": {
                                "$ref": "#/components/schemas/Money",
                                "description": "If the item is not a group then this is the fee for the product or service, otherwise this is the total of the fees for the details of the group."
                            },
                            "factor": {
                                "type": "number",
                                "description": "A real number that represents a multiplier used in determining the overall value of services delivered and/or goods received. The concept of a Factor allows for a discount or surcharge multiplier to be applied to a monetary amount."
                            },
                            "net": {
                                "$ref": "#/components/schemas/Money",
                                "description": "The quantity times the unit price for an additional service or product or charge."
                            },
                            "udi": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Reference",
                                    "description": "Unique Device Identifiers associated with this line item."
                                }
                            },
                            "bodySite": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "Physical service site on the patient (limb, tooth, etc.)."
                            },
                            "subSite": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/CodeableConcept",
                                    "description": "A region or surface of the bodySite, e.g. limb region or tooth surface(s)."
                                }
                            },
                            "encounter": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Reference",
                                    "description": "The Encounters during which this Claim was created or to which the creation of this record is tightly associated."
                                }
                            },
                            "detail": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Claim_Item_Detail",
                                    "description": "A claim detail line. Either a simple (a product or service) or a 'group' of sub&ndash;details which are simple items."
                                }
                            }
                        },
                        "required": [
                            "sequence",
                            "productOrService"
                        ]
                    }
                ]
            },
            "Claim_Item_Detail": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BackboneElement"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "sequence": {
                                "type": "integer",
                                "format": "int32",
                                "description": "A number to uniquely identify item entries."
                            },
                            "revenue": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "The type of revenue or cost center providing the product and/or service."
                            },
                            "category": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "Code to identify the general type of benefits under which products and services are provided."
                            },
                            "productOrService": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "When the value is a group code then this item collects a set of related claim details, otherwise this contains the product, service, drug or other billing code for the item."
                            },
                            "modifier": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/CodeableConcept",
                                    "description": "Item typification or modifiers codes to convey additional context for the product or service."
                                }
                            },
                            "programCode": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/CodeableConcept",
                                    "description": "Identifies the program under which this may be recovered."
                                }
                            },
                            "quantity": {
                                "$ref": "#/components/schemas/SimpleQuantity",
                                "description": "The number of repetitions of a service or product."
                            },
                            "unitPrice": {
                                "$ref": "#/components/schemas/Money",
                                "description": "If the item is not a group then this is the fee for the product or service, otherwise this is the total of the fees for the details of the group."
                            },
                            "factor": {
                                "type": "number",
                                "description": "A real number that represents a multiplier used in determining the overall value of services delivered and/or goods received. The concept of a Factor allows for a discount or surcharge multiplier to be applied to a monetary amount."
                            },
                            "net": {
                                "$ref": "#/components/schemas/Money",
                                "description": "The quantity times the unit price for an additional service or product or charge."
                            },
                            "udi": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Reference",
                                    "description": "Unique Device Identifiers associated with this line item."
                                }
                            },
                            "subDetail": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Claim_Item_Detail_SubDetail",
                                    "description": "A claim detail line. Either a simple (a product or service) or a 'group' of sub&ndash;details which are simple items."
                                }
                            }
                        },
                        "required": [
                            "sequence",
                            "productOrService"
                        ]
                    }
                ]
            },
            "Claim_Item_Detail_SubDetail": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BackboneElement"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "sequence": {
                                "type": "integer",
                                "format": "int32",
                                "description": "A number to uniquely identify item entries."
                            },
                            "revenue": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "The type of revenue or cost center providing the product and/or service."
                            },
                            "category": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "Code to identify the general type of benefits under which products and services are provided."
                            },
                            "productOrService": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "When the value is a group code then this item collects a set of related claim details, otherwise this contains the product, service, drug or other billing code for the item."
                            },
                            "modifier": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/CodeableConcept",
                                    "description": "Item typification or modifiers codes to convey additional context for the product or service."
                                }
                            },
                            "programCode": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/CodeableConcept",
                                    "description": "Identifies the program under which this may be recovered."
                                }
                            },
                            "quantity": {
                                "$ref": "#/components/schemas/SimpleQuantity",
                                "description": "The number of repetitions of a service or product."
                            },
                            "unitPrice": {
                                "$ref": "#/components/schemas/Money",
                                "description": "If the item is not a group then this is the fee for the product or service, otherwise this is the total of the fees for the details of the group."
                            },
                            "factor": {
                                "type": "number",
                                "description": "A real number that represents a multiplier used in determining the overall value of services delivered and/or goods received. The concept of a Factor allows for a discount or surcharge multiplier to be applied to a monetary amount."
                            },
                            "net": {
                                "$ref": "#/components/schemas/Money",
                                "description": "The quantity times the unit price for an additional service or product or charge."
                            },
                            "udi": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Reference",
                                    "description": "Unique Device Identifiers associated with this line item."
                                }
                            }
                        },
                        "required": [
                            "sequence",
                            "productOrService"
                        ]
                    }
                ]
            },
            "Claim_Accident": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BackboneElement"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "date": {
                                "type": "string",
                                "pattern": "([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?",
                                "description": "Date of an accident event  related to the products and services contained in the claim."
                            },
                            "type": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "The type or context of the accident event for the purposes of selection of potential insurance coverages and determination of coordination between insurers."
                            },
                            "locationAddress": {
                                "$ref": "#/components/schemas/Address",
                                "description": "The physical location of the accident event."
                            },
                            "locationReference": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "The physical location of the accident event."
                            }
                        },
                        "required": [
                            "date"
                        ]
                    }
                ]
            },
            "Claim_Insurance": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BackboneElement"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "sequence": {
                                "type": "integer",
                                "format": "int32",
                                "description": "A number to uniquely identify insurance entries and provide a sequence of coverages to convey coordination of benefit order."
                            },
                            "focal": {
                                "type": "boolean",
                                "description": "A flag to indicate that this Coverage is to be used for adjudication of this claim when set to true."
                            },
                            "identifier": {
                                "$ref": "#/components/schemas/Identifier",
                                "description": "The business identifier to be used when the claim is sent for adjudication against this insurance policy."
                            },
                            "coverage": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "Reference to the insurance card level information contained in the Coverage resource. The coverage issuing insurer will use these details to locate the patient's actual coverage within the insurer's information system."
                            },
                            "businessArrangement": {
                                "type": "string",
                                "pattern": "[ \\r\\n\\t\\S]+",
                                "description": "A business agreement number established between the provider and the insurer for special business processing purposes."
                            },
                            "preAuthRef": {
                                "type": "array",
                                "items": {
                                    "type": "string",
                                    "pattern": "[ \\r\\n\\t\\S]+",
                                    "description": "Reference numbers previously provided by the insurer to the provider to be quoted on subsequent claims containing services or products related to the prior authorization."
                                }
                            },
                            "claimResponse": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "The result of the adjudication of the line items for the Coverage specified in this insurance."
                            }
                        },
                        "required": [
                            "sequence",
                            "focal",
                            "coverage"
                        ]
                    }
                ]
            },
            "Claim_Procedure": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BackboneElement"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "sequence": {
                                "type": "integer",
                                "format": "int32",
                                "description": "A number to uniquely identify procedure entries."
                            },
                            "type": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/CodeableConcept",
                                    "description": "When the condition was observed or the relative ranking."
                                }
                            },
                            "date": {
                                "type": "string",
                                "pattern": "([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?",
                                "description": "Date and optionally time the procedure was performed."
                            },
                            "procedureCodeableConcept": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "The code or reference to a Procedure resource which identifies the clinical intervention performed."
                            },
                            "procedureReference": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "The code or reference to a Procedure resource which identifies the clinical intervention performed."
                            },
                            "udi": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Reference",
                                    "description": "Unique Device Identifiers associated with this line item."
                                }
                            }
                        },
                        "required": [
                            "sequence"
                        ]
                    }
                ]
            },
            "Claim_Diagnosis": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BackboneElement"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "sequence": {
                                "type": "integer",
                                "format": "int32",
                                "description": "A number to uniquely identify diagnosis entries."
                            },
                            "diagnosisCodeableConcept": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "The nature of illness or problem in a coded form or as a reference to an external defined Condition."
                            },
                            "diagnosisReference": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "The nature of illness or problem in a coded form or as a reference to an external defined Condition."
                            },
                            "type": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/CodeableConcept",
                                    "description": "When the condition was observed or the relative ranking."
                                }
                            },
                            "onAdmission": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "Indication of whether the diagnosis was present on admission to a facility."
                            },
                            "packageCode": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "A package billing code or bundle code used to group products and services to a particular health condition (such as heart attack) which is based on a predetermined grouping code system."
                            }
                        },
                        "required": [
                            "sequence"
                        ]
                    }
                ]
            },
            "Claim_SupportingInfo": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BackboneElement"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "sequence": {
                                "type": "integer",
                                "format": "int32",
                                "description": "A number to uniquely identify supporting information entries."
                            },
                            "category": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "The general class of the information supplied: information; exception; accident, employment; onset, etc."
                            },
                            "code": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "System and code pertaining to the specific information regarding special conditions relating to the setting, treatment or patient  for which care is sought."
                            },
                            "timingDate": {
                                "type": "string",
                                "pattern": "([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?",
                                "description": "The date when or period to which this information refers."
                            },
                            "timingPeriod": {
                                "$ref": "#/components/schemas/Period",
                                "description": "The date when or period to which this information refers."
                            },
                            "valueBoolean": {
                                "type": "boolean",
                                "description": "Additional data or information such as resources, documents, images etc. including references to the data or the actual inclusion of the data."
                            },
                            "valueString": {
                                "type": "string",
                                "pattern": "[ \\r\\n\\t\\S]+",
                                "description": "Additional data or information such as resources, documents, images etc. including references to the data or the actual inclusion of the data."
                            },
                            "valueQuantity": {
                                "$ref": "#/components/schemas/Quantity",
                                "description": "Additional data or information such as resources, documents, images etc. including references to the data or the actual inclusion of the data."
                            },
                            "valueAttachment": {
                                "$ref": "#/components/schemas/Attachment",
                                "description": "Additional data or information such as resources, documents, images etc. including references to the data or the actual inclusion of the data."
                            },
                            "valueReference": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "Additional data or information such as resources, documents, images etc. including references to the data or the actual inclusion of the data."
                            },
                            "reason": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "Provides the reason in the situation where a reason code is required in addition to the content."
                            }
                        },
                        "required": [
                            "sequence",
                            "category"
                        ]
                    }
                ]
            },
            "Claim_CareTeam": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BackboneElement"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "sequence": {
                                "type": "integer",
                                "format": "int32",
                                "description": "A number to uniquely identify care team entries."
                            },
                            "provider": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "Member of the team who provided the product or service."
                            },
                            "responsible": {
                                "type": "boolean",
                                "description": "The party who is billing and/or responsible for the claimed products or services."
                            },
                            "role": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "The lead, assisting or supervising practitioner and their discipline if a multidisciplinary team."
                            },
                            "qualification": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "The qualification of the practitioner which is applicable for this service."
                            }
                        },
                        "required": [
                            "sequence",
                            "provider"
                        ]
                    }
                ]
            },
            "Claim_Payee": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BackboneElement"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "type": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "Type of Party to be reimbursed: subscriber, provider, other."
                            },
                            "party": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "Reference to the individual or organization to whom any payment will be made."
                            }
                        },
                        "required": [
                            "type"
                        ]
                    }
                ]
            },
            "Claim_Related": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BackboneElement"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "claim": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "Reference to a related claim."
                            },
                            "relationship": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "A code to convey how the claims are related."
                            },
                            "reference": {
                                "$ref": "#/components/schemas/Identifier",
                                "description": "An alternate organizational reference to the case or file to which this particular claim pertains."
                            }
                        }
                    }
                ]
            },
            "OperationOutcome_Issue": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BackboneElement"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "severity": {
                                "type": "string",
                                "enum": [
                                    "fatal",
                                    "error",
                                    "warning",
                                    "information"
                                ],
                                "description": "Indicates whether the issue indicates a variation from successful processing."
                            },
                            "code": {
                                "type": "string",
                                "enum": [
                                    "invalid",
                                    "structure",
                                    "required",
                                    "value",
                                    "invariant",
                                    "security",
                                    "login",
                                    "unknown",
                                    "expired",
                                    "forbidden",
                                    "suppressed",
                                    "processing",
                                    "not-supported",
                                    "duplicate",
                                    "multiple-matches",
                                    "not-found",
                                    "deleted",
                                    "too-long",
                                    "code-invalid",
                                    "extension",
                                    "too-costly",
                                    "business-rule",
                                    "conflict",
                                    "transient",
                                    "lock-error",
                                    "no-store",
                                    "exception",
                                    "timeout",
                                    "incomplete",
                                    "throttled",
                                    "informational"
                                ],
                                "description": "Describes the type of the issue. The system that creates an OperationOutcome SHALL choose the most applicable code from the IssueType value set, and may additional provide its own code for the error in the details element."
                            },
                            "details": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "Additional details about the error. This may be a text description of the error or a system code that identifies the error."
                            },
                            "diagnostics": {
                                "type": "string",
                                "pattern": "[ \\r\\n\\t\\S]+",
                                "description": "Additional diagnostic information about the issue."
                            },
                            "location": {
                                "type": "array",
                                "items": {
                                    "type": "string",
                                    "pattern": "[ \\r\\n\\t\\S]+",
                                    "description": "This element is deprecated because it is XML specific. It is replaced by issue.expression, which is format independent, and simpler to parse. \n\nFor resource issues, this will be a simple XPath limited to element names, repetition indicators and the default child accessor that identifies one of the elements in the resource that caused this issue to be raised.  For HTTP errors, will be \"http.\" + the parameter name."
                                }
                            },
                            "expression": {
                                "type": "array",
                                "items": {
                                    "type": "string",
                                    "pattern": "[ \\r\\n\\t\\S]+",
                                    "description": "A [simple subset of FHIRPath](fhirpath.html#simple) limited to element names, repetition indicators and the default child accessor that identifies one of the elements in the resource that caused this issue to be raised."
                                }
                            }
                        },
                        "required": [
                            "severity",
                            "code"
                        ]
                    }
                ]
            },
            "Element": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "pattern": "[A-Za-z0-9\\-\\.]{1,64}",
                        "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                    },
                    "extension": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Extension",
                            "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
                        },
                        "example": [
                            {
                                "url": "http://example.com",
                                "valueString": "text value"
                            }
                        ]
                    }
                }
            },
            "BackboneElement": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Element"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "modifierExtension": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Extension",
                                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
                                }
                            }
                        }
                    }
                ]
            },
            "Address": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Element"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "use": {
                                "type": "string",
                                "enum": [
                                    "home",
                                    "work",
                                    "temp",
                                    "old",
                                    "billing"
                                ],
                                "description": "The purpose of this address."
                            },
                            "type": {
                                "type": "string",
                                "enum": [
                                    "postal",
                                    "physical",
                                    "both"
                                ],
                                "description": "Distinguishes between physical addresses (those you can visit) and mailing addresses (e.g. PO Boxes and care&ndash;of addresses). Most addresses are both."
                            },
                            "text": {
                                "type": "string",
                                "pattern": "[ \\r\\n\\t\\S]+",
                                "description": "Specifies the entire address as it should be displayed e.g. on a postal label. This may be provided instead of or as well as the specific parts."
                            },
                            "line": {
                                "type": "array",
                                "items": {
                                    "type": "string",
                                    "pattern": "[ \\r\\n\\t\\S]+",
                                    "description": "This component contains the house number, apartment number, street name, street direction,  P.O. Box number, delivery hints, and similar address information."
                                }
                            },
                            "city": {
                                "type": "string",
                                "pattern": "[ \\r\\n\\t\\S]+",
                                "description": "The name of the city, town, suburb, village or other community or delivery center."
                            },
                            "district": {
                                "type": "string",
                                "pattern": "[ \\r\\n\\t\\S]+",
                                "description": "The name of the administrative area (county)."
                            },
                            "state": {
                                "type": "string",
                                "pattern": "[ \\r\\n\\t\\S]+",
                                "description": "Sub&ndash;unit of a country with limited sovereignty in a federally organized country. A code may be used if codes are in common use (e.g. US 2 letter state codes)."
                            },
                            "postalCode": {
                                "type": "string",
                                "pattern": "[ \\r\\n\\t\\S]+",
                                "description": "A postal code designating a region defined by the postal service."
                            },
                            "country": {
                                "type": "string",
                                "pattern": "[ \\r\\n\\t\\S]+",
                                "description": "Country &ndash; a nation as commonly understood or generally accepted."
                            },
                            "period": {
                                "$ref": "#/components/schemas/Period",
                                "description": "Time period when address was/is in use."
                            }
                        }
                    }
                ]
            },
            "Age": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Quantity"
                    },
                    {
                        "type": "object",
                        "properties": {
                        }
                    }
                ]
            },
            "Annotation": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Element"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "authorReference": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "The individual responsible for making the annotation."
                            },
                            "authorString": {
                                "type": "string",
                                "pattern": "[ \\r\\n\\t\\S]+",
                                "description": "The individual responsible for making the annotation."
                            },
                            "time": {
                                "type": "string",
                                "pattern": "([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?",
                                "description": "Indicates when this particular annotation was made."
                            },
                            "text": {
                                "type": "string",
                                "pattern": "[ \\r\\n\\t\\S]+",
                                "description": "The text of the annotation in markdown format."
                            }
                        },
                        "required": [
                            "text"
                        ]
                    }
                ]
            },
            "Attachment": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Element"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "contentType": {
                                "type": "string",
                                "pattern": "[^\\s]+(\\s[^\\s]+)*",
                                "description": "Identifies the type of the data in the attachment and allows a method to be chosen to interpret or render the data. Includes mime type parameters such as charset where appropriate."
                            },
                            "language": {
                                "type": "string",
                                "pattern": "[^\\s]+(\\s[^\\s]+)*",
                                "description": "The human language of the content. The value can be any valid value according to BCP 47."
                            },
                            "data": {
                                "type": "string",
                                "pattern": "(\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+",
                                "description": "The actual data of the attachment &ndash; a sequence of bytes, base64 encoded."
                            },
                            "url": {
                                "type": "string",
                                "pattern": "\\S*",
                                "description": "A location where the data can be accessed."
                            },
                            "size": {
                                "type": "integer",
                                "format": "int32",
                                "description": "The number of bytes of data that make up this attachment (before base64 encoding, if that is done)."
                            },
                            "hash": {
                                "type": "string",
                                "pattern": "(\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+",
                                "description": "The calculated hash of the data using SHA&ndash;1. Represented using base64."
                            },
                            "title": {
                                "type": "string",
                                "pattern": "[ \\r\\n\\t\\S]+",
                                "description": "A label or set of text to display in place of the data."
                            },
                            "creation": {
                                "type": "string",
                                "pattern": "([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?",
                                "description": "The date that the attachment was first created."
                            }
                        }
                    }
                ]
            },
            "CodeableConcept": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Element"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "coding": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Coding",
                                    "description": "A reference to a code defined by a terminology system."
                                }
                            },
                            "text": {
                                "type": "string",
                                "pattern": "[ \\r\\n\\t\\S]+",
                                "description": "A human language representation of the concept as seen/selected/uttered by the user who entered the data and/or which represents the intended meaning of the user."
                            }
                        }
                    }
                ]
            },
            "Coding": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Element"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "system": {
                                "type": "string",
                                "pattern": "\\S*",
                                "description": "The identification of the code system that defines the meaning of the symbol in the code."
                            },
                            "version": {
                                "type": "string",
                                "pattern": "[ \\r\\n\\t\\S]+",
                                "description": "The version of the code system which was used when choosing this code. Note that a well&ndash;maintained code system does not need the version reported, because the meaning of codes is consistent across versions. However this cannot consistently be assured, and when the meaning is not guaranteed to be consistent, the version SHOULD be exchanged."
                            },
                            "code": {
                                "type": "string",
                                "pattern": "[^\\s]+(\\s[^\\s]+)*",
                                "description": "A symbol in syntax defined by the system. The symbol may be a predefined code or an expression in a syntax defined by the coding system (e.g. post&ndash;coordination)."
                            },
                            "display": {
                                "type": "string",
                                "pattern": "[ \\r\\n\\t\\S]+",
                                "description": "A representation of the meaning of the code in the system, following the rules of the system."
                            },
                            "userSelected": {
                                "type": "boolean",
                                "description": "Indicates that this coding was chosen by a user directly &ndash; e.g. off a pick list of available items (codes or displays)."
                            }
                        }
                    }
                ]
            },
            "ContactPoint": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Element"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "system": {
                                "type": "string",
                                "enum": [
                                    "phone",
                                    "fax",
                                    "email",
                                    "pager",
                                    "url",
                                    "sms",
                                    "other"
                                ],
                                "description": "Telecommunications form for contact point &ndash; what communications system is required to make use of the contact."
                            },
                            "value": {
                                "type": "string",
                                "pattern": "[ \\r\\n\\t\\S]+",
                                "description": "The actual contact point details, in a form that is meaningful to the designated communication system (i.e. phone number or email address)."
                            },
                            "use": {
                                "type": "string",
                                "enum": [
                                    "home",
                                    "work",
                                    "temp",
                                    "old",
                                    "mobile"
                                ],
                                "description": "Identifies the purpose for the contact point."
                            },
                            "rank": {
                                "type": "integer",
                                "format": "int32",
                                "description": "Specifies a preferred order in which to use a set of contacts. ContactPoints with lower rank values are more preferred than those with higher rank values."
                            },
                            "period": {
                                "$ref": "#/components/schemas/Period",
                                "description": "Time period when the contact point was/is in use."
                            }
                        }
                    }
                ]
            },
            "Count": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Quantity"
                    },
                    {
                        "type": "object",
                        "properties": {
                        }
                    }
                ]
            },
            "Distance": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Quantity"
                    },
                    {
                        "type": "object",
                        "properties": {
                        }
                    }
                ]
            },
            "Duration": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Quantity"
                    },
                    {
                        "type": "object",
                        "properties": {
                        }
                    }
                ]
            },
            "HumanName": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Element"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "use": {
                                "type": "string",
                                "enum": [
                                    "usual",
                                    "official",
                                    "temp",
                                    "nickname",
                                    "anonymous",
                                    "old",
                                    "maiden"
                                ],
                                "description": "Identifies the purpose for this name."
                            },
                            "text": {
                                "type": "string",
                                "pattern": "[ \\r\\n\\t\\S]+",
                                "description": "Specifies the entire name as it should be displayed e.g. on an application UI. This may be provided instead of or as well as the specific parts."
                            },
                            "family": {
                                "type": "string",
                                "pattern": "[ \\r\\n\\t\\S]+",
                                "description": "The part of a name that links to the genealogy. In some cultures (e.g. Eritrea) the family name of a son is the first name of his father."
                            },
                            "given": {
                                "type": "array",
                                "items": {
                                    "type": "string",
                                    "pattern": "[ \\r\\n\\t\\S]+",
                                    "description": "Given name."
                                }
                            },
                            "prefix": {
                                "type": "array",
                                "items": {
                                    "type": "string",
                                    "pattern": "[ \\r\\n\\t\\S]+",
                                    "description": "Part of the name that is acquired as a title due to academic, legal, employment or nobility status, etc. and that appears at the start of the name."
                                }
                            },
                            "suffix": {
                                "type": "array",
                                "items": {
                                    "type": "string",
                                    "pattern": "[ \\r\\n\\t\\S]+",
                                    "description": "Part of the name that is acquired as a title due to academic, legal, employment or nobility status, etc. and that appears at the end of the name."
                                }
                            },
                            "period": {
                                "$ref": "#/components/schemas/Period",
                                "description": "Indicates the period of time when this name was valid for the named person."
                            }
                        }
                    }
                ]
            },
            "Identifier": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Element"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "use": {
                                "type": "string",
                                "enum": [
                                    "usual",
                                    "official",
                                    "temp",
                                    "secondary",
                                    "old"
                                ],
                                "description": "The purpose of this identifier."
                            },
                            "type": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "A coded type for the identifier that can be used to determine which identifier to use for a specific purpose."
                            },
                            "system": {
                                "type": "string",
                                "pattern": "\\S*",
                                "description": "Establishes the namespace for the value &ndash; that is, a URL that describes a set values that are unique."
                            },
                            "value": {
                                "type": "string",
                                "pattern": "[ \\r\\n\\t\\S]+",
                                "description": "The portion of the identifier typically relevant to the user and which is unique within the context of the system."
                            },
                            "period": {
                                "$ref": "#/components/schemas/Period",
                                "description": "Time period during which identifier is/was valid for use."
                            },
                            "assigner": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "Organization that issued/manages the identifier.",
                                "example": {
                                    "reference": "Organization/123",
                                    "type": "Organization",
                                    "display": "The Assigning Organization"
                                }
                            }
                        }
                    }
                ]
            },
            "Money": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Element"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "value": {
                                "type": "number",
                                "description": "Numerical value (with implicit precision)."
                            },
                            "currency": {
                                "type": "string",
                                "pattern": "[^\\s]+(\\s[^\\s]+)*",
                                "description": "ISO 4217 Currency Code."
                            }
                        }
                    }
                ]
            },
            "MoneyQuantity": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Quantity"
                    },
                    {
                        "type": "object",
                        "properties": {
                        }
                    }
                ]
            },
            "Period": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Element"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "start": {
                                "type": "string",
                                "pattern": "([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?",
                                "description": "The start of the period. The boundary is inclusive."
                            },
                            "end": {
                                "type": "string",
                                "pattern": "([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?",
                                "description": "The end of the period. If the end of the period is missing, it means no end was known or planned at the time the instance was created. The start may be in the past, and the end date in the future, which means that period is expected/planned to end at that time."
                            }
                        }
                    }
                ]
            },
            "Quantity": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Element"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "value": {
                                "type": "number",
                                "description": "The value of the measured amount. The value includes an implicit precision in the presentation of the value."
                            },
                            "comparator": {
                                "type": "string",
                                "enum": [
                                    "<",
                                    "<=",
                                    ">=",
                                    ">"
                                ],
                                "description": "How the value should be understood and represented &ndash; whether the actual value is greater or less than the stated value due to measurement issues; e.g. if the comparator is \"<\" , then the real value is < stated value."
                            },
                            "unit": {
                                "type": "string",
                                "pattern": "[ \\r\\n\\t\\S]+",
                                "description": "A human&ndash;readable form of the unit."
                            },
                            "system": {
                                "type": "string",
                                "pattern": "\\S*",
                                "description": "The identification of the system that provides the coded form of the unit."
                            },
                            "code": {
                                "type": "string",
                                "pattern": "[^\\s]+(\\s[^\\s]+)*",
                                "description": "A computer processable form of the unit in some unit representation system."
                            }
                        }
                    }
                ]
            },
            "Range": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Element"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "low": {
                                "$ref": "#/components/schemas/SimpleQuantity",
                                "description": "The low limit. The boundary is inclusive."
                            },
                            "high": {
                                "$ref": "#/components/schemas/SimpleQuantity",
                                "description": "The high limit. The boundary is inclusive."
                            }
                        }
                    }
                ]
            },
            "Ratio": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Element"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "numerator": {
                                "$ref": "#/components/schemas/Quantity",
                                "description": "The value of the numerator."
                            },
                            "denominator": {
                                "$ref": "#/components/schemas/Quantity",
                                "description": "The value of the denominator."
                            }
                        }
                    }
                ]
            },
            "Reference": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Element"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "reference": {
                                "type": "string",
                                "pattern": "[ \\r\\n\\t\\S]+",
                                "description": "A reference to a location at which the other resource is found. The reference may be a relative reference, in which case it is relative to the service base URL, or an absolute URL that resolves to the location where the resource is found. The reference may be version specific or not. If the reference is not to a FHIR RESTful server, then it should be assumed to be version specific. Internal fragment references (start with '#') refer to contained resources."
                            },
                            "type": {
                                "type": "string",
                                "pattern": "\\S*",
                                "description": "The expected type of the target of the reference. If both Reference.type and Reference.reference are populated and Reference.reference is a FHIR URL, both SHALL be consistent.\n\nThe type is the Canonical URL of Resource Definition that is the type this reference refers to. References are URLs that are relative to http://hl7.org/fhir/StructureDefinition/ e.g. \"Patient\" is a reference to http://hl7.org/fhir/StructureDefinition/Patient. Absolute URLs are only allowed for logical models (and can only be used in references in logical models, not resources)."
                            },
                            "identifier": {
                                "$ref": "#/components/schemas/Identifier",
                                "description": "An identifier for the target resource. This is used when there is no way to reference the other resource directly, either because the entity it represents is not available through a FHIR server, or because there is no way for the author of the resource to convert a known identifier to an actual location. There is no requirement that a Reference.identifier point to something that is actually exposed as a FHIR instance, but it SHALL point to a business concept that would be expected to be exposed as a FHIR instance, and that instance would need to be of a FHIR resource type allowed by the reference."
                            },
                            "display": {
                                "type": "string",
                                "pattern": "[ \\r\\n\\t\\S]+",
                                "description": "Plain text narrative that identifies the resource in addition to the resource reference."
                            }
                        }
                    }
                ]
            },
            "SampledData": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Element"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "origin": {
                                "$ref": "#/components/schemas/SimpleQuantity",
                                "description": "The base quantity that a measured value of zero represents. In addition, this provides the units of the entire measurement series."
                            },
                            "period": {
                                "type": "number",
                                "description": "The length of time between sampling times, measured in milliseconds."
                            },
                            "factor": {
                                "type": "number",
                                "description": "A correction factor that is applied to the sampled data points before they are added to the origin."
                            },
                            "lowerLimit": {
                                "type": "number",
                                "description": "The lower limit of detection of the measured points. This is needed if any of the data points have the value \"L\" (lower than detection limit)."
                            },
                            "upperLimit": {
                                "type": "number",
                                "description": "The upper limit of detection of the measured points. This is needed if any of the data points have the value \"U\" (higher than detection limit)."
                            },
                            "dimensions": {
                                "type": "integer",
                                "format": "int32",
                                "description": "The number of sample points at each time point. If this value is greater than one, then the dimensions will be interlaced &ndash; all the sample points for a point in time will be recorded at once."
                            },
                            "data": {
                                "type": "string",
                                "pattern": "[ \\r\\n\\t\\S]+",
                                "description": "A series of data points which are decimal values separated by a single space (character u20). The special values \"E\" (error), \"L\" (below detection limit) and \"U\" (above detection limit) can also be used in place of a decimal value."
                            }
                        },
                        "required": [
                            "origin",
                            "period",
                            "dimensions"
                        ]
                    }
                ]
            },
            "SimpleQuantity": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Quantity"
                    },
                    {
                        "type": "object",
                        "properties": {
                        }
                    }
                ]
            },
            "Signature": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Element"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "type": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Coding",
                                    "description": "An indication of the reason that the entity signed this document. This may be explicitly included as part of the signature information and can be used when determining accountability for various actions concerning the document."
                                },
                                "minItems": 1
                            },
                            "when": {
                                "type": "string",
                                "pattern": "([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))",
                                "description": "When the digital signature was signed."
                            },
                            "who": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "A reference to an application&ndash;usable description of the identity that signed  (e.g. the signature used their private key)."
                            },
                            "onBehalfOf": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "A reference to an application&ndash;usable description of the identity that is represented by the signature."
                            },
                            "targetFormat": {
                                "type": "string",
                                "pattern": "[^\\s]+(\\s[^\\s]+)*",
                                "description": "A mime type that indicates the technical format of the target resources signed by the signature."
                            },
                            "sigFormat": {
                                "type": "string",
                                "pattern": "[^\\s]+(\\s[^\\s]+)*",
                                "description": "A mime type that indicates the technical format of the signature. Important mime types are application/signature+xml for X ML DigSig, application/jose for JWS, and image/* for a graphical image of a signature, etc."
                            },
                            "data": {
                                "type": "string",
                                "pattern": "(\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+",
                                "description": "The base64 encoding of the Signature content. When signature is not recorded electronically this element would be empty."
                            }
                        },
                        "required": [
                            "type",
                            "when",
                            "who"
                        ]
                    }
                ]
            },
            "Timing": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BackboneElement"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "event": {
                                "type": "array",
                                "items": {
                                    "type": "string",
                                    "pattern": "([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?",
                                    "description": "Identifies specific times when the event occurs."
                                }
                            },
                            "repeat": {
                                "$ref": "#/components/schemas/Timing_Repeat",
                                "description": "A set of rules that describe when the event is scheduled."
                            },
                            "code": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "A code for the timing schedule (or just text in code.text). Some codes such as BID are ubiquitous, but many institutions define their own additional codes. If a code is provided, the code is understood to be a complete statement of whatever is specified in the structured timing data, and either the code or the data may be used to interpret the Timing, with the exception that .repeat.bounds still applies over the code (and is not contained in the code)."
                            }
                        }
                    }
                ]
            },
            "Timing_Repeat": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BackboneElement"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "boundsDuration": {
                                "$ref": "#/components/schemas/Duration",
                                "description": "Either a duration for the length of the timing schedule, a range of possible length, or outer bounds for start and/or end limits of the timing schedule."
                            },
                            "boundsRange": {
                                "$ref": "#/components/schemas/Range",
                                "description": "Either a duration for the length of the timing schedule, a range of possible length, or outer bounds for start and/or end limits of the timing schedule."
                            },
                            "boundsPeriod": {
                                "$ref": "#/components/schemas/Period",
                                "description": "Either a duration for the length of the timing schedule, a range of possible length, or outer bounds for start and/or end limits of the timing schedule."
                            },
                            "count": {
                                "type": "integer",
                                "format": "int32",
                                "description": "A total count of the desired number of repetitions across the duration of the entire timing specification. If countMax is present, this element indicates the lower bound of the allowed range of count values."
                            },
                            "countMax": {
                                "type": "integer",
                                "format": "int32",
                                "description": "If present, indicates that the count is a range &ndash; so to perform the action between [count] and [countMax] times."
                            },
                            "duration": {
                                "type": "number",
                                "description": "How long this thing happens for when it happens. If durationMax is present, this element indicates the lower bound of the allowed range of the duration."
                            },
                            "durationMax": {
                                "type": "number",
                                "description": "If present, indicates that the duration is a range &ndash; so to perform the action between [duration] and [durationMax] time length."
                            },
                            "durationUnit": {
                                "type": "string",
                                "enum": [
                                    "s",
                                    "min",
                                    "h",
                                    "d",
                                    "wk",
                                    "mo",
                                    "a"
                                ],
                                "description": "The units of time for the duration, in UCUM units."
                            },
                            "frequency": {
                                "type": "integer",
                                "format": "int32",
                                "description": "The number of times to repeat the action within the specified period. If frequencyMax is present, this element indicates the lower bound of the allowed range of the frequency."
                            },
                            "frequencyMax": {
                                "type": "integer",
                                "format": "int32",
                                "description": "If present, indicates that the frequency is a range &ndash; so to repeat between [frequency] and [frequencyMax] times within the period or period range."
                            },
                            "period": {
                                "type": "number",
                                "description": "Indicates the duration of time over which repetitions are to occur; e.g. to express \"3 times per day\", 3 would be the frequency and \"1 day\" would be the period. If periodMax is present, this element indicates the lower bound of the allowed range of the period length."
                            },
                            "periodMax": {
                                "type": "number",
                                "description": "If present, indicates that the period is a range from [period] to [periodMax], allowing expressing concepts such as \"do this once every 3&ndash;5 days."
                            },
                            "periodUnit": {
                                "type": "string",
                                "enum": [
                                    "s",
                                    "min",
                                    "h",
                                    "d",
                                    "wk",
                                    "mo",
                                    "a"
                                ],
                                "description": "The units of time for the period in UCUM units."
                            },
                            "dayOfWeek": {
                                "type": "array",
                                "items": {
                                    "type": "string",
                                    "enum": [
                                        "mon",
                                        "tue",
                                        "wed",
                                        "thu",
                                        "fri",
                                        "sat",
                                        "sun"
                                    ],
                                    "description": "If one or more days of week is provided, then the action happens only on the specified day(s)."
                                }
                            },
                            "timeOfDay": {
                                "type": "array",
                                "items": {
                                    "type": "string",
                                    "pattern": "([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?",
                                    "description": "Specified time of day for action to take place."
                                }
                            },
                            "when": {
                                "type": "array",
                                "items": {
                                    "type": "string",
                                    "enum": [
                                        "MORN",
                                        "MORN.early",
                                        "MORN.late",
                                        "NOON",
                                        "AFT",
                                        "AFT.early",
                                        "AFT.late",
                                        "EVE",
                                        "EVE.early",
                                        "EVE.late",
                                        "NIGHT",
                                        "PHS",
                                        "HS",
                                        "WAKE",
                                        "C",
                                        "CM",
                                        "CD",
                                        "CV",
                                        "AC",
                                        "ACM",
                                        "ACD",
                                        "ACV",
                                        "PC",
                                        "PCM",
                                        "PCD",
                                        "PCV"
                                    ],
                                    "description": "An approximate time period during the day, potentially linked to an event of daily living that indicates when the action should occur."
                                }
                            },
                            "offset": {
                                "type": "integer",
                                "format": "int32",
                                "description": "The number of minutes from the event. If the event code does not indicate whether the minutes is before or after the event, then the offset is assumed to be after the event."
                            }
                        }
                    }
                ]
            },
            "ContactDetail": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Element"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "name": {
                                "type": "string",
                                "pattern": "[ \\r\\n\\t\\S]+",
                                "description": "The name of an individual to contact."
                            },
                            "telecom": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/ContactPoint",
                                    "description": "The contact details for the individual (if a name was provided) or the organization."
                                }
                            }
                        }
                    }
                ]
            },
            "RelatedArtifact": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Element"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "type": {
                                "type": "string",
                                "enum": [
                                    "documentation",
                                    "justification",
                                    "citation",
                                    "predecessor",
                                    "successor",
                                    "derived-from",
                                    "depends-on",
                                    "composed-of"
                                ],
                                "description": "The type of relationship to the related artifact."
                            },
                            "label": {
                                "type": "string",
                                "pattern": "[ \\r\\n\\t\\S]+",
                                "description": "A short label that can be used to reference the citation from elsewhere in the containing artifact, such as a footnote index."
                            },
                            "display": {
                                "type": "string",
                                "pattern": "[ \\r\\n\\t\\S]+",
                                "description": "A brief description of the document or knowledge resource being referenced, suitable for display to a consumer."
                            },
                            "citation": {
                                "type": "string",
                                "pattern": "[ \\r\\n\\t\\S]+",
                                "description": "A bibliographic citation for the related artifact. This text SHOULD be formatted according to an accepted citation format."
                            },
                            "url": {
                                "type": "string",
                                "pattern": "\\S*",
                                "description": "A url for the artifact that can be followed to access the actual content."
                            },
                            "document": {
                                "$ref": "#/components/schemas/Attachment",
                                "description": "The document being referenced, represented as an attachment. This is exclusive with the resource element."
                            },
                            "resource": {
                                "type": "string",
                                "pattern": "\\S*",
                                "description": "The related resource, such as a library, value set, profile, or other knowledge resource."
                            }
                        },
                        "required": [
                            "type"
                        ]
                    }
                ]
            },
            "UsageContext": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Element"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "code": {
                                "$ref": "#/components/schemas/Coding",
                                "description": "A code that identifies the type of context being specified by this usage context."
                            },
                            "valueCodeableConcept": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "A value that defines the context specified in this context of use. The interpretation of the value is defined by the code."
                            },
                            "valueQuantity": {
                                "$ref": "#/components/schemas/Quantity",
                                "description": "A value that defines the context specified in this context of use. The interpretation of the value is defined by the code."
                            },
                            "valueRange": {
                                "$ref": "#/components/schemas/Range",
                                "description": "A value that defines the context specified in this context of use. The interpretation of the value is defined by the code."
                            },
                            "valueReference": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "A value that defines the context specified in this context of use. The interpretation of the value is defined by the code."
                            }
                        },
                        "required": [
                            "code"
                        ]
                    }
                ]
            },
            "Meta": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Element"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "versionId": {
                                "type": "string",
                                "pattern": "[A-Za-z0-9\\-\\.]{1,64}",
                                "description": "The version specific identifier, as it appears in the version portion of the URL. This value changes when the resource is created, updated, or deleted."
                            },
                            "lastUpdated": {
                                "type": "string",
                                "pattern": "([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))",
                                "description": "When the resource last changed &ndash; e.g. when the version changed."
                            },
                            "source": {
                                "type": "string",
                                "pattern": "\\S*",
                                "description": "A uri that identifies the source system of the resource. This provides a minimal amount of [Provenance](provenance.html#) information that can be used to track or differentiate the source of information in the resource. The source may identify another FHIR server, document, message, database, etc."
                            },
                            "profile": {
                                "type": "array",
                                "items": {
                                    "type": "string",
                                    "pattern": "\\S*",
                                    "description": "A list of profiles (references to [StructureDefinition](structuredefinition.html#) resources) that this resource claims to conform to. The URL is a reference to [StructureDefinition.url](structuredefinition&ndash;definitions.html#StructureDefinition.url)."
                                }
                            },
                            "security": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Coding",
                                    "description": "Security labels applied to this resource. These tags connect specific resources to the overall security policy and infrastructure."
                                }
                            },
                            "tag": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Coding",
                                    "description": "Tags applied to this resource. Tags are intended to be used to identify and relate resources to process and workflow, and applications are not required to consider the tags when interpreting the meaning of a resource."
                                }
                            }
                        }
                    }
                ]
            },
            "Narrative": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Element"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "status": {
                                "type": "string",
                                "enum": [
                                    "generated",
                                    "extensions",
                                    "additional",
                                    "empty"
                                ],
                                "description": "The status of the narrative &ndash; whether it's entirely generated (from just the defined data or the extensions too), or whether a human authored it and it may contain additional data."
                            },
                            "div": {
                                "type": "string",
                                "description": "The actual narrative content, a stripped down version of XHTML."
                            }
                        },
                        "required": [
                            "status",
                            "div"
                        ]
                    }
                ]
            },
            "Extension": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Element"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "url": {
                                "type": "string",
                                "pattern": "\\S*",
                                "description": "Source of the definition for the extension code &ndash; a logical name or a URL."
                            },
                            "valueBase64Binary": {
                                "type": "string",
                                "pattern": "(\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+",
                                "description": "Value of extension &ndash; must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                            },
                            "valueBoolean": {
                                "type": "boolean",
                                "description": "Value of extension &ndash; must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                            },
                            "valueCanonical": {
                                "type": "string",
                                "pattern": "\\S*",
                                "description": "Value of extension &ndash; must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                            },
                            "valueCode": {
                                "type": "string",
                                "pattern": "[^\\s]+(\\s[^\\s]+)*",
                                "description": "Value of extension &ndash; must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                            },
                            "valueDate": {
                                "type": "string",
                                "pattern": "([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?",
                                "description": "Value of extension &ndash; must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                            },
                            "valueDateTime": {
                                "type": "string",
                                "pattern": "([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?",
                                "description": "Value of extension &ndash; must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                            },
                            "valueDecimal": {
                                "type": "number",
                                "description": "Value of extension &ndash; must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                            },
                            "valueId": {
                                "type": "string",
                                "pattern": "[A-Za-z0-9\\-\\.]{1,64}",
                                "description": "Value of extension &ndash; must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                            },
                            "valueInstant": {
                                "type": "string",
                                "pattern": "([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))",
                                "description": "Value of extension &ndash; must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                            },
                            "valueInteger": {
                                "type": "integer",
                                "format": "int32",
                                "description": "Value of extension &ndash; must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                            },
                            "valueMarkdown": {
                                "type": "string",
                                "pattern": "[ \\r\\n\\t\\S]+",
                                "description": "Value of extension &ndash; must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                            },
                            "valueOid": {
                                "type": "string",
                                "pattern": "urn:oid:[0-2](\\.(0|[1-9][0-9]*))+",
                                "description": "Value of extension &ndash; must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                            },
                            "valuePositiveInt": {
                                "type": "integer",
                                "format": "int32",
                                "description": "Value of extension &ndash; must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                            },
                            "valueString": {
                                "type": "string",
                                "pattern": "[ \\r\\n\\t\\S]+",
                                "description": "Value of extension &ndash; must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                            },
                            "valueTime": {
                                "type": "string",
                                "pattern": "([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?",
                                "description": "Value of extension &ndash; must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                            },
                            "valueUnsignedInt": {
                                "type": "integer",
                                "format": "int32",
                                "description": "Value of extension &ndash; must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                            },
                            "valueUri": {
                                "type": "string",
                                "pattern": "\\S*",
                                "description": "Value of extension &ndash; must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                            },
                            "valueUrl": {
                                "type": "string",
                                "pattern": "\\S*",
                                "description": "Value of extension &ndash; must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                            },
                            "valueUuid": {
                                "type": "string",
                                "pattern": "urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}",
                                "description": "Value of extension &ndash; must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                            },
                            "valueAddress": {
                                "$ref": "#/components/schemas/Address",
                                "description": "Value of extension &ndash; must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                            },
                            "valueAge": {
                                "$ref": "#/components/schemas/Age",
                                "description": "Value of extension &ndash; must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                            },
                            "valueAnnotation": {
                                "$ref": "#/components/schemas/Annotation",
                                "description": "Value of extension &ndash; must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                            },
                            "valueAttachment": {
                                "$ref": "#/components/schemas/Attachment",
                                "description": "Value of extension &ndash; must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                            },
                            "valueCodeableConcept": {
                                "$ref": "#/components/schemas/CodeableConcept",
                                "description": "Value of extension &ndash; must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                            },
                            "valueCoding": {
                                "$ref": "#/components/schemas/Coding",
                                "description": "Value of extension &ndash; must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                            },
                            "valueContactPoint": {
                                "$ref": "#/components/schemas/ContactPoint",
                                "description": "Value of extension &ndash; must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                            },
                            "valueCount": {
                                "$ref": "#/components/schemas/Count",
                                "description": "Value of extension &ndash; must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                            },
                            "valueDistance": {
                                "$ref": "#/components/schemas/Distance",
                                "description": "Value of extension &ndash; must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                            },
                            "valueDuration": {
                                "$ref": "#/components/schemas/Duration",
                                "description": "Value of extension &ndash; must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                            },
                            "valueHumanName": {
                                "$ref": "#/components/schemas/HumanName",
                                "description": "Value of extension &ndash; must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                            },
                            "valueIdentifier": {
                                "$ref": "#/components/schemas/Identifier",
                                "description": "Value of extension &ndash; must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                            },
                            "valueMoney": {
                                "$ref": "#/components/schemas/Money",
                                "description": "Value of extension &ndash; must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                            },
                            "valuePeriod": {
                                "$ref": "#/components/schemas/Period",
                                "description": "Value of extension &ndash; must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                            },
                            "valueQuantity": {
                                "$ref": "#/components/schemas/Quantity",
                                "description": "Value of extension &ndash; must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                            },
                            "valueRange": {
                                "$ref": "#/components/schemas/Range",
                                "description": "Value of extension &ndash; must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                            },
                            "valueRatio": {
                                "$ref": "#/components/schemas/Ratio",
                                "description": "Value of extension &ndash; must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                            },
                            "valueReference": {
                                "$ref": "#/components/schemas/Reference",
                                "description": "Value of extension &ndash; must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                            },
                            "valueSampledData": {
                                "$ref": "#/components/schemas/SampledData",
                                "description": "Value of extension &ndash; must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                            },
                            "valueSignature": {
                                "$ref": "#/components/schemas/Signature",
                                "description": "Value of extension &ndash; must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                            },
                            "valueTiming": {
                                "$ref": "#/components/schemas/Timing",
                                "description": "Value of extension &ndash; must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                            },
                            "valueContactDetail": {
                                "$ref": "#/components/schemas/ContactDetail",
                                "description": "Value of extension &ndash; must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                            },
                            "valueRelatedArtifact": {
                                "$ref": "#/components/schemas/RelatedArtifact",
                                "description": "Value of extension &ndash; must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                            },
                            "valueUsageContext": {
                                "$ref": "#/components/schemas/UsageContext",
                                "description": "Value of extension &ndash; must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                            },
                            "valueMeta": {
                                "$ref": "#/components/schemas/Meta",
                                "description": "Value of extension &ndash; must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                            }
                        },
                        "required": [
                            "url"
                        ]
                    }
                ]
            }
        }
    }
}