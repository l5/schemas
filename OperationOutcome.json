{
    "$schema": "http://json-schema.org/draft-06/schema#",
    "id": "http://hl7.org/fhir/json-schema/4.0",
    "description": "FHIR OperationOutcome schema",
    "OperationOutcome": {
    "description": "A collection of error, warning, or information messages that result from a system action.",
    "properties": {
      "resourceType": {
        "description": "This is a OperationOutcome resource",
        "const": "OperationOutcome"
      },
      "id": {
        "description": "The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.",
        "$ref": "#/definitions/id"
      },
      "meta": {
        "description": "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
        "$ref": "#/definitions/Meta"
      },
      "text": {
        "description": "A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it \"clinically safe\" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.",
        "$ref": "#/definitions/Narrative"
      },
      "issue": {
        "description": "An error, warning, or information message that results from a system action.",
        "items": {
          "$ref": "#/definitions/OperationOutcome_Issue"
        },
        "type": "array"
      }
    },
    "additionalProperties": false,
    "required": [
      "issue",
      "resourceType"
    ]
  },
  "definitions": {
    "OperationOutcome_Issue": {
        "description": "A collection of error, warning, or information messages that result from a system action.",
        "properties": {
          "id": {
            "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            "$ref": "#/definitions/string"
          },
          "extension": {
            "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            "items": {
              "$ref": "#/definitions/Extension"
            },
            "type": "array"
          },
          "modifierExtension": {
            "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            "items": {
              "$ref": "#/definitions/Extension"
            },
            "type": "array"
          },
          "severity": {
            "description": "Indicates whether the issue indicates a variation from successful processing.",
            "enum": [
              "fatal",
              "error",
              "warning",
              "information"
            ]
          },
          "code": {
            "description": "Describes the type of the issue. The system that creates an OperationOutcome SHALL choose the most applicable code from the IssueType value set, and may additional provide its own code for the error in the details element.",
            "enum": [
              "invalid",
              "structure",
              "required",
              "value",
              "invariant",
              "security",
              "login",
              "unknown",
              "expired",
              "forbidden",
              "suppressed",
              "processing",
              "not-supported",
              "duplicate",
              "multiple-matches",
              "not-found",
              "deleted",
              "too-long",
              "code-invalid",
              "extension",
              "too-costly",
              "business-rule",
              "conflict",
              "transient",
              "lock-error",
              "no-store",
              "exception",
              "timeout",
              "incomplete",
              "throttled",
              "informational"
            ]
          },
          "details": {
            "description": "Additional details about the error. This may be a text description of the error or a system code that identifies the error.",
            "$ref": "#/definitions/CodeableConcept"
          },
          "diagnostics": {
            "description": "Additional diagnostic information about the issue.",
            "$ref": "#/definitions/string"
          },
          "location": {
            "description": "This element is deprecated because it is XML specific. It is replaced by issue.expression, which is format independent, and simpler to parse. \n\nFor resource issues, this will be a simple XPath limited to element names, repetition indicators and the default child accessor that identifies one of the elements in the resource that caused this issue to be raised.  For HTTP errors, will be \"http.\" + the parameter name.",
            "items": {
              "$ref": "#/definitions/string"
            },
            "type": "array"
          },
          "expression": {
            "description": "A [simple subset of FHIRPath](fhirpath.html#simple) limited to element names, repetition indicators and the default child accessor that identifies one of the elements in the resource that caused this issue to be raised.",
            "items": {
              "$ref": "#/definitions/string"
            },
            "type": "array"
          }
        },
        "additionalProperties": false
      },
      "id": {
        "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
        "type": "string",
        "description": "Any combination of letters, numerals, \"-\" and \".\", with a length limit of 64 characters.  (This might be an integer, an unprefixed OID, UUID or any other identifier pattern that meets these constraints.)  Ids are case-insensitive."
      },
      "Meta": {
        "description": "The metadata about a resource. This is content in the resource that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
        "properties": {
          "id": {
            "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            "$ref": "#/definitions/string"
          },
          "extension": {
            "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            "items": {
              "$ref": "#/definitions/Extension"
            },
            "type": "array"
          },
          "versionId": {
            "description": "The version specific identifier, as it appears in the version portion of the URL. This value changes when the resource is created, updated, or deleted.",
            "$ref": "#/definitions/id"
          },
          "lastUpdated": {
            "description": "When the resource last changed - e.g. when the version changed.",
            "$ref": "#/definitions/instant"
          },
          "source": {
            "description": "A uri that identifies the source system of the resource. This provides a minimal amount of [[[Provenance]]] information that can be used to track or differentiate the source of information in the resource. The source may identify another FHIR server, document, message, database, etc.",
            "$ref": "#/definitions/uri"
          },
          "profile": {
            "description": "A list of profiles (references to [[[StructureDefinition]]] resources) that this resource claims to conform to. The URL is a reference to [[[StructureDefinition.url]]].",
            "items": {
              "$ref": "#/definitions/canonical"
            },
            "type": "array"
          },
          "security": {
            "description": "Security labels applied to this resource. These tags connect specific resources to the overall security policy and infrastructure.",
            "items": {
              "$ref": "#/definitions/Coding"
            },
            "type": "array"
          },
          "tag": {
            "description": "Tags applied to this resource. Tags are intended to be used to identify and relate resources to process and workflow, and applications are not required to consider the tags when interpreting the meaning of a resource.",
            "items": {
              "$ref": "#/definitions/Coding"
            },
            "type": "array"
          }
        },
        "additionalProperties": false
      },
      "string": {
        "pattern": "^[ \\r\\n\\t\\S]+$",
        "type": "string",
        "description": "A sequence of Unicode characters"
      },
      "Extension": {
        "description": "Optional Extension Element - found in all resources.",
        "properties": {
          "id": {
            "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            "$ref": "#/definitions/string"
          },
          "extension": {
            "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            "items": {
              "$ref": "#/definitions/Extension"
            },
            "type": "array"
          },
          "url": {
            "description": "Source of the definition for the extension code - a logical name or a URL.",
            "$ref": "#/definitions/uri"
          },
          "valueBase64Binary": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
            "pattern": "^(\\s*([0-9a-zA-Z\\+/\u003d]){4}\\s*)+$",
            "type": "string"
          },
          "valueBoolean": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
            "pattern": "^true|false$",
            "type": "boolean"
          },
          "valueCanonical": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
            "pattern": "^\\S*$",
            "type": "string"
          },
          "valueCode": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
            "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
            "type": "string"
          },
          "valueDate": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
            "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
            "type": "string"
          },
          "valueDateTime": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
            "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
            "type": "string"
          },
          "valueDecimal": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
            "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
            "type": "number"
          },
          "valueId": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
            "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
            "type": "string"
          },
          "valueInstant": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
            "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
            "type": "string"
          },
          "valueInteger": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
            "pattern": "^-?([0]|([1-9][0-9]*))$",
            "type": "number"
          },
          "valueMarkdown": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
            "pattern": "^[ \\r\\n\\t\\S]+$",
            "type": "string"
          },
          "valueOid": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
            "pattern": "^urn:oid:[0-2](\\.(0|[1-9][0-9]*))+$",
            "type": "string"
          },
          "valuePositiveInt": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
            "pattern": "^[1-9][0-9]*$",
            "type": "number"
          },
          "valueString": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
            "pattern": "^[ \\r\\n\\t\\S]+$",
            "type": "string"
          },
          "valueTime": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
            "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$",
            "type": "string"
          },
          "valueUnsignedInt": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
            "pattern": "^[0]|([1-9][0-9]*)$",
            "type": "number"
          },
          "valueUri": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
            "pattern": "^\\S*$",
            "type": "string"
          },
          "valueUrl": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
            "pattern": "^\\S*$",
            "type": "string"
          },
          "valueUuid": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
            "pattern": "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
            "type": "string"
          },
          "valueCodeableConcept": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
            "$ref": "#/definitions/CodeableConcept"
          },
          "valueCoding": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
            "$ref": "#/definitions/Coding"
          },
          "valueIdentifier": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
            "$ref": "#/definitions/Identifier"
          },
          "valueReference": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
            "$ref": "#/definitions/Reference"
          },
          "valueMeta": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
            "$ref": "#/definitions/Meta"
          }
        },
        "additionalProperties": false
      },
      "instant": {
        "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
        "type": "string",
        "description": "An instant in time - known at least to the second"
      },
      "integer": {
        "pattern": "^-?([0]|([1-9][0-9]*))$",
        "type": "number",
        "description": "A whole number"
      },
      "uri": {
        "pattern": "^\\S*$",
        "type": "string",
        "description": "String of characters used to identify a name or a resource"
      },
      "url": {
        "pattern": "^\\S*$",
        "type": "string",
        "description": "A URI that is a literal reference"
      },
      "uuid": {
        "pattern": "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
        "type": "string",
        "description": "A UUID, represented as a URI"
      },
      "canonical": {
        "pattern": "^\\S*$",
        "type": "string",
        "description": "A URI that is a reference to a canonical URL on a FHIR resource"
      },
      "Coding": {
        "description": "A reference to a code defined by a terminology system.",
        "properties": {
          "id": {
            "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            "$ref": "#/definitions/string"
          },
          "extension": {
            "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            "items": {
              "$ref": "#/definitions/Extension"
            },
            "type": "array"
          },
          "system": {
            "description": "The identification of the code system that defines the meaning of the symbol in the code.",
            "$ref": "#/definitions/uri"
          },
          "version": {
            "description": "The version of the code system which was used when choosing this code. Note that a well-maintained code system does not need the version reported, because the meaning of codes is consistent across versions. However this cannot consistently be assured, and when the meaning is not guaranteed to be consistent, the version SHOULD be exchanged.",
            "$ref": "#/definitions/string"
          },
          "code": {
            "description": "A symbol in syntax defined by the system. The symbol may be a predefined code or an expression in a syntax defined by the coding system (e.g. post-coordination).",
            "$ref": "#/definitions/code"
          },
          "display": {
            "description": "A representation of the meaning of the code in the system, following the rules of the system.",
            "$ref": "#/definitions/string"
          },
          "userSelected": {
            "description": "Indicates that this coding was chosen by a user directly - e.g. off a pick list of available items (codes or displays).",
            "$ref": "#/definitions/boolean"
          }
        },
        "additionalProperties": false
      },
      "boolean": {
        "pattern": "^true|false$",
        "type": "boolean",
        "description": "Value of \"true\" or \"false\""
      },
      "Narrative": {
        "description": "A human-readable summary of the resource conveying the essential clinical and business information for the resource.",
        "properties": {
          "id": {
            "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            "$ref": "#/definitions/string"
          },
          "extension": {
            "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            "items": {
              "$ref": "#/definitions/Extension"
            },
            "type": "array"
          },
          "status": {
            "description": "The status of the narrative - whether it\u0027s entirely generated (from just the defined data or the extensions too), or whether a human authored it and it may contain additional data.",
            "enum": [
              "generated",
              "extensions",
              "additional",
              "empty"
            ]
          },
          "div": {
            "description": "The actual narrative content, a stripped down version of XHTML.",
            "$ref": "#/definitions/xhtml"
          }
        },
        "additionalProperties": false,
        "required": [
          "div"
        ]
      },
      "xhtml": {
        "description": "xhtml - escaped html (see specfication)"
      },
      "code": {
        "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
        "type": "string",
        "description": "A string which has at least one character and no leading or trailing whitespace and where there is no whitespace other than single spaces in the contents"
      },
      "CodeableConcept": {
        "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
        "properties": {
          "id": {
            "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            "$ref": "#/definitions/string"
          },
          "extension": {
            "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            "items": {
              "$ref": "#/definitions/Extension"
            },
            "type": "array"
          },
          "coding": {
            "description": "A reference to a code defined by a terminology system.",
            "items": {
              "$ref": "#/definitions/Coding"
            },
            "type": "array"
          },
          "text": {
            "description": "A human language representation of the concept as seen/selected/uttered by the user who entered the data and/or which represents the intended meaning of the user.",
            "$ref": "#/definitions/string"
          }
        },
        "additionalProperties": false
      },
      "Identifier": {
        "description": "An identifier - identifies some entity uniquely and unambiguously. Typically this is used for business identifiers.",
        "properties": {
          "id": {
            "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            "$ref": "#/definitions/string"
          },
          "extension": {
            "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            "items": {
              "$ref": "#/definitions/Extension"
            },
            "type": "array"
          },
          "use": {
            "description": "The purpose of this identifier.",
            "enum": [
              "usual",
              "official",
              "temp",
              "secondary",
              "old"
            ]
          },
          "type": {
            "description": "A coded type for the identifier that can be used to determine which identifier to use for a specific purpose.",
            "$ref": "#/definitions/CodeableConcept"
          },
          "system": {
            "description": "Establishes the namespace for the value - that is, a URL that describes a set values that are unique.",
            "$ref": "#/definitions/uri"
          },
          "value": {
            "description": "The portion of the identifier typically relevant to the user and which is unique within the context of the system.",
            "$ref": "#/definitions/string"
          },
          "assigner": {
            "description": "Organization that issued/manages the identifier.",
            "$ref": "#/definitions/Reference"
          }
        },
        "additionalProperties": false
      },
      "Reference": {
        "description": "A reference from one resource to another.",
        "properties": {
          "id": {
            "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            "$ref": "#/definitions/string"
          },
          "extension": {
            "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            "items": {
              "$ref": "#/definitions/Extension"
            },
            "type": "array"
          },
          "reference": {
            "description": "A reference to a location at which the other resource is found. The reference may be a relative reference, in which case it is relative to the service base URL, or an absolute URL that resolves to the location where the resource is found. The reference may be version specific or not. If the reference is not to a FHIR RESTful server, then it should be assumed to be version specific. Internal fragment references (start with \u0027#\u0027) refer to contained resources.",
            "$ref": "#/definitions/string"
          },
          "type": {
            "description": "The expected type of the target of the reference. If both Reference.type and Reference.reference are populated and Reference.reference is a FHIR URL, both SHALL be consistent.\n\nThe type is the Canonical URL of Resource Definition that is the type this reference refers to. References are URLs that are relative to http://hl7.org/fhir/StructureDefinition/ e.g. \"Patient\" is a reference to http://hl7.org/fhir/StructureDefinition/Patient. Absolute URLs are only allowed for logical models (and can only be used in references in logical models, not resources).",
            "$ref": "#/definitions/uri"
          },
          "identifier": {
            "description": "An identifier for the target resource. This is used when there is no way to reference the other resource directly, either because the entity it represents is not available through a FHIR server, or because there is no way for the author of the resource to convert a known identifier to an actual location. There is no requirement that a Reference.identifier point to something that is actually exposed as a FHIR instance, but it SHALL point to a business concept that would be expected to be exposed as a FHIR instance, and that instance would need to be of a FHIR resource type allowed by the reference.",
            "$ref": "#/definitions/Identifier"
          },
          "display": {
            "description": "Plain text narrative that identifies the resource in addition to the resource reference.",
            "$ref": "#/definitions/string"
          }
        },
        "additionalProperties": false
      }
  }
}