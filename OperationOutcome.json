{
    "$schema": "http://json-schema.org/draft-06/schema#",
    "id": "http://hl7.org/fhir/json-schema/4.0",
    "description": "FHIR OperationOutcome schema",
    "OperationOutcome": {
    "description": "A collection of error, warning, or information messages that result from a system action.",
    "properties": {
      "resourceType": {
        "description": "This is a OperationOutcome resource",
        "const": "OperationOutcome"
      },
      "id": {
        "description": "The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.",
        "$ref": "#/definitions/id"
      },
      "meta": {
        "description": "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
        "$ref": "#/definitions/Meta"
      },
      "text": {
        "description": "A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it \"clinically safe\" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.",
        "$ref": "#/definitions/Narrative"
      },
      "issue": {
        "description": "An error, warning, or information message that results from a system action.",
        "items": {
          "$ref": "#/definitions/OperationOutcome_Issue"
        },
        "type": "array"
      }
    },
    "additionalProperties": false,
    "required": [
      "issue",
      "resourceType"
    ]
  },
  "definitions": {
    "OperationOutcome_Issue": {
        "description": "A collection of error, warning, or information messages that result from a system action.",
        "properties": {
          "id": {
            "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            "$ref": "#/definitions/string"
          },
          "extension": {
            "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            "items": {
              "$ref": "#/definitions/Extension"
            },
            "type": "array"
          },
          "modifierExtension": {
            "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            "items": {
              "$ref": "#/definitions/Extension"
            },
            "type": "array"
          },
          "severity": {
            "description": "Indicates whether the issue indicates a variation from successful processing.",
            "enum": [
              "fatal",
              "error",
              "warning",
              "information"
            ]
          },
          "_severity": {
            "description": "Extensions for severity",
            "$ref": "#/definitions/Element"
          },
          "code": {
            "description": "Describes the type of the issue. The system that creates an OperationOutcome SHALL choose the most applicable code from the IssueType value set, and may additional provide its own code for the error in the details element.",
            "enum": [
              "invalid",
              "structure",
              "required",
              "value",
              "invariant",
              "security",
              "login",
              "unknown",
              "expired",
              "forbidden",
              "suppressed",
              "processing",
              "not-supported",
              "duplicate",
              "multiple-matches",
              "not-found",
              "deleted",
              "too-long",
              "code-invalid",
              "extension",
              "too-costly",
              "business-rule",
              "conflict",
              "transient",
              "lock-error",
              "no-store",
              "exception",
              "timeout",
              "incomplete",
              "throttled",
              "informational"
            ]
          },
          "_code": {
            "description": "Extensions for code",
            "$ref": "#/definitions/Element"
          },
          "details": {
            "description": "Additional details about the error. This may be a text description of the error or a system code that identifies the error.",
            "$ref": "#/definitions/CodeableConcept"
          },
          "diagnostics": {
            "description": "Additional diagnostic information about the issue.",
            "$ref": "#/definitions/string"
          },
          "_diagnostics": {
            "description": "Extensions for diagnostics",
            "$ref": "#/definitions/Element"
          },
          "location": {
            "description": "This element is deprecated because it is XML specific. It is replaced by issue.expression, which is format independent, and simpler to parse. \n\nFor resource issues, this will be a simple XPath limited to element names, repetition indicators and the default child accessor that identifies one of the elements in the resource that caused this issue to be raised.  For HTTP errors, will be \"http.\" + the parameter name.",
            "items": {
              "$ref": "#/definitions/string"
            },
            "type": "array"
          },
          "_location": {
            "description": "Extensions for location",
            "items": {
              "$ref": "#/definitions/Element"
            },
            "type": "array"
          },
          "expression": {
            "description": "A [simple subset of FHIRPath](fhirpath.html#simple) limited to element names, repetition indicators and the default child accessor that identifies one of the elements in the resource that caused this issue to be raised.",
            "items": {
              "$ref": "#/definitions/string"
            },
            "type": "array"
          },
          "_expression": {
            "description": "Extensions for expression",
            "items": {
              "$ref": "#/definitions/Element"
            },
            "type": "array"
          }
        },
        "additionalProperties": false
      },
      "id": {
        "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
        "type": "string",
        "description": "Any combination of letters, numerals, \"-\" and \".\", with a length limit of 64 characters.  (This might be an integer, an unprefixed OID, UUID or any other identifier pattern that meets these constraints.)  Ids are case-insensitive."
      },
      "Meta": {
        "description": "The metadata about a resource. This is content in the resource that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
        "properties": {
          "id": {
            "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            "$ref": "#/definitions/string"
          },
          "extension": {
            "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            "items": {
              "$ref": "#/definitions/Extension"
            },
            "type": "array"
          },
          "versionId": {
            "description": "The version specific identifier, as it appears in the version portion of the URL. This value changes when the resource is created, updated, or deleted.",
            "$ref": "#/definitions/id"
          },
          "lastUpdated": {
            "description": "When the resource last changed - e.g. when the version changed.",
            "$ref": "#/definitions/instant"
          },
          "source": {
            "description": "A uri that identifies the source system of the resource. This provides a minimal amount of [[[Provenance]]] information that can be used to track or differentiate the source of information in the resource. The source may identify another FHIR server, document, message, database, etc.",
            "$ref": "#/definitions/uri"
          },
          "profile": {
            "description": "A list of profiles (references to [[[StructureDefinition]]] resources) that this resource claims to conform to. The URL is a reference to [[[StructureDefinition.url]]].",
            "items": {
              "$ref": "#/definitions/canonical"
            },
            "type": "array"
          },
          "security": {
            "description": "Security labels applied to this resource. These tags connect specific resources to the overall security policy and infrastructure.",
            "items": {
              "$ref": "#/definitions/Coding"
            },
            "type": "array"
          },
          "tag": {
            "description": "Tags applied to this resource. Tags are intended to be used to identify and relate resources to process and workflow, and applications are not required to consider the tags when interpreting the meaning of a resource.",
            "items": {
              "$ref": "#/definitions/Coding"
            },
            "type": "array"
          }
        },
        "additionalProperties": false
      },
      "string": {
        "pattern": "^[ \\r\\n\\t\\S]+$",
        "type": "string",
        "description": "A sequence of Unicode characters"
      },
      "Extension": {
        "description": "Optional Extension Element - found in all resources.",
        "properties": {
          "id": {
            "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            "$ref": "#/definitions/string"
          },
          "extension": {
            "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            "items": {
              "$ref": "#/definitions/Extension"
            },
            "type": "array"
          },
          "url": {
            "description": "Source of the definition for the extension code - a logical name or a URL.",
            "$ref": "#/definitions/uri"
          },
          "_url": {
            "description": "Extensions for url",
            "$ref": "#/definitions/Element"
          },
          "valueBase64Binary": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
            "pattern": "^(\\s*([0-9a-zA-Z\\+/\u003d]){4}\\s*)+$",
            "type": "string"
          },
          "_valueBase64Binary": {
            "description": "Extensions for valueBase64Binary",
            "$ref": "#/definitions/Element"
          },
          "valueBoolean": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
            "pattern": "^true|false$",
            "type": "boolean"
          },
          "_valueBoolean": {
            "description": "Extensions for valueBoolean",
            "$ref": "#/definitions/Element"
          },
          "valueCanonical": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
            "pattern": "^\\S*$",
            "type": "string"
          },
          "_valueCanonical": {
            "description": "Extensions for valueCanonical",
            "$ref": "#/definitions/Element"
          },
          "valueCode": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
            "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
            "type": "string"
          },
          "_valueCode": {
            "description": "Extensions for valueCode",
            "$ref": "#/definitions/Element"
          },
          "valueDate": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
            "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
            "type": "string"
          },
          "_valueDate": {
            "description": "Extensions for valueDate",
            "$ref": "#/definitions/Element"
          },
          "valueDateTime": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
            "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
            "type": "string"
          },
          "_valueDateTime": {
            "description": "Extensions for valueDateTime",
            "$ref": "#/definitions/Element"
          },
          "valueDecimal": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
            "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
            "type": "number"
          },
          "_valueDecimal": {
            "description": "Extensions for valueDecimal",
            "$ref": "#/definitions/Element"
          },
          "valueId": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
            "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
            "type": "string"
          },
          "_valueId": {
            "description": "Extensions for valueId",
            "$ref": "#/definitions/Element"
          },
          "valueInstant": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
            "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
            "type": "string"
          },
          "_valueInstant": {
            "description": "Extensions for valueInstant",
            "$ref": "#/definitions/Element"
          },
          "valueInteger": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
            "pattern": "^-?([0]|([1-9][0-9]*))$",
            "type": "number"
          },
          "_valueInteger": {
            "description": "Extensions for valueInteger",
            "$ref": "#/definitions/Element"
          },
          "valueMarkdown": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
            "pattern": "^[ \\r\\n\\t\\S]+$",
            "type": "string"
          },
          "_valueMarkdown": {
            "description": "Extensions for valueMarkdown",
            "$ref": "#/definitions/Element"
          },
          "valueOid": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
            "pattern": "^urn:oid:[0-2](\\.(0|[1-9][0-9]*))+$",
            "type": "string"
          },
          "_valueOid": {
            "description": "Extensions for valueOid",
            "$ref": "#/definitions/Element"
          },
          "valuePositiveInt": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
            "pattern": "^[1-9][0-9]*$",
            "type": "number"
          },
          "_valuePositiveInt": {
            "description": "Extensions for valuePositiveInt",
            "$ref": "#/definitions/Element"
          },
          "valueString": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
            "pattern": "^[ \\r\\n\\t\\S]+$",
            "type": "string"
          },
          "_valueString": {
            "description": "Extensions for valueString",
            "$ref": "#/definitions/Element"
          },
          "valueTime": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
            "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$",
            "type": "string"
          },
          "_valueTime": {
            "description": "Extensions for valueTime",
            "$ref": "#/definitions/Element"
          },
          "valueUnsignedInt": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
            "pattern": "^[0]|([1-9][0-9]*)$",
            "type": "number"
          },
          "_valueUnsignedInt": {
            "description": "Extensions for valueUnsignedInt",
            "$ref": "#/definitions/Element"
          },
          "valueUri": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
            "pattern": "^\\S*$",
            "type": "string"
          },
          "_valueUri": {
            "description": "Extensions for valueUri",
            "$ref": "#/definitions/Element"
          },
          "valueUrl": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
            "pattern": "^\\S*$",
            "type": "string"
          },
          "_valueUrl": {
            "description": "Extensions for valueUrl",
            "$ref": "#/definitions/Element"
          },
          "valueUuid": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
            "pattern": "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
            "type": "string"
          },
          "_valueUuid": {
            "description": "Extensions for valueUuid",
            "$ref": "#/definitions/Element"
          },
          "valueAddress": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
            "$ref": "#/definitions/Address"
          },
          "valueAge": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
            "$ref": "#/definitions/Age"
          },
          "valueAnnotation": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
            "$ref": "#/definitions/Annotation"
          },
          "valueAttachment": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
            "$ref": "#/definitions/Attachment"
          },
          "valueCodeableConcept": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
            "$ref": "#/definitions/CodeableConcept"
          },
          "valueCoding": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
            "$ref": "#/definitions/Coding"
          },
          "valueContactPoint": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
            "$ref": "#/definitions/ContactPoint"
          },
          "valueCount": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
            "$ref": "#/definitions/Count"
          },
          "valueDistance": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
            "$ref": "#/definitions/Distance"
          },
          "valueDuration": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
            "$ref": "#/definitions/Duration"
          },
          "valueHumanName": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
            "$ref": "#/definitions/HumanName"
          },
          "valueIdentifier": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
            "$ref": "#/definitions/Identifier"
          },
          "valueMoney": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
            "$ref": "#/definitions/Money"
          },
          "valuePeriod": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
            "$ref": "#/definitions/Period"
          },
          "valueQuantity": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
            "$ref": "#/definitions/Quantity"
          },
          "valueRange": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
            "$ref": "#/definitions/Range"
          },
          "valueRatio": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
            "$ref": "#/definitions/Ratio"
          },
          "valueReference": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
            "$ref": "#/definitions/Reference"
          },
          "valueSampledData": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
            "$ref": "#/definitions/SampledData"
          },
          "valueSignature": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
            "$ref": "#/definitions/Signature"
          },
          "valueTiming": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
            "$ref": "#/definitions/Timing"
          },
          "valueContactDetail": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
            "$ref": "#/definitions/ContactDetail"
          },
          "valueContributor": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
            "$ref": "#/definitions/Contributor"
          },
          "valueDataRequirement": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
            "$ref": "#/definitions/DataRequirement"
          },
          "valueExpression": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
            "$ref": "#/definitions/Expression"
          },
          "valueParameterDefinition": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
            "$ref": "#/definitions/ParameterDefinition"
          },
          "valueRelatedArtifact": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
            "$ref": "#/definitions/RelatedArtifact"
          },
          "valueTriggerDefinition": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
            "$ref": "#/definitions/TriggerDefinition"
          },
          "valueUsageContext": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
            "$ref": "#/definitions/UsageContext"
          },
          "valueDosage": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
            "$ref": "#/definitions/Dosage"
          },
          "valueMeta": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
            "$ref": "#/definitions/Meta"
          }
        },
        "additionalProperties": false
      },
      "instant": {
        "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
        "type": "string",
        "description": "An instant in time - known at least to the second"
      },
      "integer": {
        "pattern": "^-?([0]|([1-9][0-9]*))$",
        "type": "number",
        "description": "A whole number"
      },
      "uri": {
        "pattern": "^\\S*$",
        "type": "string",
        "description": "String of characters used to identify a name or a resource"
      },
      "url": {
        "pattern": "^\\S*$",
        "type": "string",
        "description": "A URI that is a literal reference"
      },
      "uuid": {
        "pattern": "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
        "type": "string",
        "description": "A UUID, represented as a URI"
      },
      "canonical": {
        "pattern": "^\\S*$",
        "type": "string",
        "description": "A URI that is a reference to a canonical URL on a FHIR resource"
      },
      "Coding": {
        "description": "A reference to a code defined by a terminology system.",
        "properties": {
          "id": {
            "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            "$ref": "#/definitions/string"
          },
          "extension": {
            "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            "items": {
              "$ref": "#/definitions/Extension"
            },
            "type": "array"
          },
          "system": {
            "description": "The identification of the code system that defines the meaning of the symbol in the code.",
            "$ref": "#/definitions/uri"
          },
          "version": {
            "description": "The version of the code system which was used when choosing this code. Note that a well-maintained code system does not need the version reported, because the meaning of codes is consistent across versions. However this cannot consistently be assured, and when the meaning is not guaranteed to be consistent, the version SHOULD be exchanged.",
            "$ref": "#/definitions/string"
          },
          "code": {
            "description": "A symbol in syntax defined by the system. The symbol may be a predefined code or an expression in a syntax defined by the coding system (e.g. post-coordination).",
            "$ref": "#/definitions/code"
          },
          "display": {
            "description": "A representation of the meaning of the code in the system, following the rules of the system.",
            "$ref": "#/definitions/string"
          },
          "userSelected": {
            "description": "Indicates that this coding was chosen by a user directly - e.g. off a pick list of available items (codes or displays).",
            "$ref": "#/definitions/boolean"
          }
        },
        "additionalProperties": false
      },
      "boolean": {
        "pattern": "^true|false$",
        "type": "boolean",
        "description": "Value of \"true\" or \"false\""
      }
  }
}