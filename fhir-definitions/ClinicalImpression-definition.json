{
  "description": "A record of a clinical assessment performed to determine what problem(s) may affect the patient and before planning the treatments or management strategies that are best to manage a patient's condition. Assessments are often 1:1 with a clinical consultation / encounter,  but this varies greatly depending on the clinical workflow. This resource is called \"ClinicalImpression\" rather than \"ClinicalAssessment\" to avoid confusion with the recording of assessment tools such as Apgar score.",
  "properties": {
    "resourceType": {
      "description": "This is a ClinicalImpression resource",
      "const": "ClinicalImpression"
    },
    "id": {
      "description": "The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.",
      "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
      "type": "string"
    },
    "meta": {
      "description": "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "pattern": "^[ \\r\\n\\t\\S]+$",
          "type": "string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "description": "Optional Extension Element - found in all resources.",
            "properties": {
              "id": {
                "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string"
              },
              "extension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                "type": "array"
              },
              "url": {
                "description": "Source of the definition for the extension code - a logical name or a URL.",
                "pattern": "^\\S*$",
                "type": "string"
              },
              "_url": {
                "description": "Extensions for url",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
                    "pattern": "^[ \\r\\n\\t\\S]+$",
                    "type": "string"
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "type": "array"
                  }
                },
                "additionalProperties": false
              },
              "valueBase64Binary": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^(\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+$",
                "type": "string"
              },
              "_valueBase64Binary": {
                "description": "Extensions for valueBase64Binary",
                "additionalProperties": false
              },
              "valueBoolean": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^true|false$",
                "type": "boolean"
              },
              "_valueBoolean": {
                "description": "Extensions for valueBoolean",
                "additionalProperties": false
              },
              "valueCanonical": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^\\S*$",
                "type": "string"
              },
              "_valueCanonical": {
                "description": "Extensions for valueCanonical",
                "additionalProperties": false
              },
              "valueCode": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                "type": "string"
              },
              "_valueCode": {
                "description": "Extensions for valueCode",
                "additionalProperties": false
              },
              "valueDate": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                "type": "string"
              },
              "_valueDate": {
                "description": "Extensions for valueDate",
                "additionalProperties": false
              },
              "valueDateTime": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                "type": "string"
              },
              "_valueDateTime": {
                "description": "Extensions for valueDateTime",
                "additionalProperties": false
              },
              "valueDecimal": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                "type": "number"
              },
              "_valueDecimal": {
                "description": "Extensions for valueDecimal",
                "additionalProperties": false
              },
              "valueId": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                "type": "string"
              },
              "_valueId": {
                "description": "Extensions for valueId",
                "additionalProperties": false
              },
              "valueInstant": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
                "type": "string"
              },
              "_valueInstant": {
                "description": "Extensions for valueInstant",
                "additionalProperties": false
              },
              "valueInteger": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^-?([0]|([1-9][0-9]*))$",
                "type": "number"
              },
              "_valueInteger": {
                "description": "Extensions for valueInteger",
                "additionalProperties": false
              },
              "valueMarkdown": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string"
              },
              "_valueMarkdown": {
                "description": "Extensions for valueMarkdown",
                "additionalProperties": false
              },
              "valueOid": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^urn:oid:[0-2](\\.(0|[1-9][0-9]*))+$",
                "type": "string"
              },
              "_valueOid": {
                "description": "Extensions for valueOid",
                "additionalProperties": false
              },
              "valuePositiveInt": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[1-9][0-9]*$",
                "type": "number"
              },
              "_valuePositiveInt": {
                "description": "Extensions for valuePositiveInt",
                "additionalProperties": false
              },
              "valueString": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string"
              },
              "_valueString": {
                "description": "Extensions for valueString",
                "additionalProperties": false
              },
              "valueTime": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$",
                "type": "string"
              },
              "_valueTime": {
                "description": "Extensions for valueTime",
                "additionalProperties": false
              },
              "valueUnsignedInt": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[0]|([1-9][0-9]*)$",
                "type": "number"
              },
              "_valueUnsignedInt": {
                "description": "Extensions for valueUnsignedInt",
                "additionalProperties": false
              },
              "valueUri": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^\\S*$",
                "type": "string"
              },
              "_valueUri": {
                "description": "Extensions for valueUri",
                "additionalProperties": false
              },
              "valueUrl": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^\\S*$",
                "type": "string"
              },
              "_valueUrl": {
                "description": "Extensions for valueUrl",
                "additionalProperties": false
              },
              "valueUuid": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                "type": "string"
              },
              "_valueUuid": {
                "description": "Extensions for valueUuid",
                "additionalProperties": false
              },
              "valueAddress": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
                    "pattern": "^[ \\r\\n\\t\\S]+$",
                    "type": "string"
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "type": "array"
                  },
                  "use": {
                    "description": "The purpose of this address.",
                    "enum": [
                      "home",
                      "work",
                      "temp",
                      "old",
                      "billing"
                    ]
                  },
                  "_use": {
                    "description": "Extensions for use",
                    "additionalProperties": false
                  },
                  "type": {
                    "description": "Distinguishes between physical addresses (those you can visit) and mailing addresses (e.g. PO Boxes and care-of addresses). Most addresses are both.",
                    "enum": [
                      "postal",
                      "physical",
                      "both"
                    ]
                  },
                  "_type": {
                    "description": "Extensions for type",
                    "additionalProperties": false
                  },
                  "text": {
                    "description": "Specifies the entire address as it should be displayed e.g. on a postal label. This may be provided instead of or as well as the specific parts.",
                    "pattern": "^[ \\r\\n\\t\\S]+$",
                    "type": "string"
                  },
                  "_text": {
                    "description": "Extensions for text",
                    "additionalProperties": false
                  },
                  "line": {
                    "description": "This component contains the house number, apartment number, street name, street direction,  P.O. Box number, delivery hints, and similar address information.",
                    "items": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "type": "array"
                  },
                  "_line": {
                    "description": "Extensions for line",
                    "items": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "type": "array"
                  },
                  "city": {
                    "pattern": "^[ \\r\\n\\t\\S]+$",
                    "type": "string",
                    "description": "A sequence of Unicode characters"
                  },
                  "_city": {
                    "description": "Base definition for all elements in a resource.",
                    "additionalProperties": false
                  },
                  "district": {
                    "pattern": "^[ \\r\\n\\t\\S]+$",
                    "type": "string",
                    "description": "A sequence of Unicode characters"
                  },
                  "_district": {
                    "description": "Base definition for all elements in a resource.",
                    "additionalProperties": false
                  },
                  "state": {
                    "pattern": "^[ \\r\\n\\t\\S]+$",
                    "type": "string",
                    "description": "A sequence of Unicode characters"
                  },
                  "_state": {
                    "description": "Base definition for all elements in a resource.",
                    "additionalProperties": false
                  },
                  "postalCode": {
                    "pattern": "^[ \\r\\n\\t\\S]+$",
                    "type": "string",
                    "description": "A sequence of Unicode characters"
                  },
                  "_postalCode": {
                    "description": "Base definition for all elements in a resource.",
                    "additionalProperties": false
                  },
                  "country": {
                    "pattern": "^[ \\r\\n\\t\\S]+$",
                    "type": "string",
                    "description": "A sequence of Unicode characters"
                  },
                  "_country": {
                    "description": "Base definition for all elements in a resource.",
                    "additionalProperties": false
                  },
                  "period": {
                    "description": "Time period when address was/is in use.",
                    "properties": {
                      "id": {
                        "pattern": "^[ \\r\\n\\t\\S]+$",
                        "type": "string",
                        "description": "A sequence of Unicode characters"
                      },
                      "extension": {
                        "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                        "type": "array"
                      },
                      "start": {
                        "description": "The start of the period. The boundary is inclusive.",
                        "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                        "type": "string"
                      },
                      "_start": {
                        "description": "Base definition for all elements in a resource.",
                        "additionalProperties": false
                      },
                      "end": {
                        "description": "The end of the period. If the end of the period is missing, it means no end was known or planned at the time the instance was created. The start may be in the past, and the end date in the future, which means that period is expected/planned to end at that time.",
                        "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                        "type": "string"
                      },
                      "_end": {
                        "description": "Base definition for all elements in a resource.",
                        "additionalProperties": false
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "additionalProperties": false
              },
              "valueAge": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "properties": {
                  "id": {
                    "pattern": "^[ \\r\\n\\t\\S]+$",
                    "type": "string",
                    "description": "A sequence of Unicode characters"
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "type": "array"
                  },
                  "value": {
                    "description": "The value of the measured amount. The value includes an implicit precision in the presentation of the value.",
                    "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                    "type": "number"
                  },
                  "_value": {
                    "description": "Base definition for all elements in a resource.",
                    "additionalProperties": false
                  },
                  "comparator": {
                    "description": "How the value should be understood and represented - whether the actual value is greater or less than the stated value due to measurement issues; e.g. if the comparator is \"<\" , then the real value is < stated value.",
                    "enum": [
                      "<",
                      "<=",
                      ">=",
                      ">"
                    ]
                  },
                  "_comparator": {
                    "description": "Base definition for all elements in a resource.",
                    "additionalProperties": false
                  },
                  "unit": {
                    "pattern": "^[ \\r\\n\\t\\S]+$",
                    "type": "string",
                    "description": "A sequence of Unicode characters"
                  },
                  "_unit": {
                    "description": "Base definition for all elements in a resource.",
                    "additionalProperties": false
                  },
                  "system": {
                    "description": "The identification of the system that provides the coded form of the unit.",
                    "pattern": "^\\S*$",
                    "type": "string"
                  },
                  "_system": {
                    "description": "Base definition for all elements in a resource.",
                    "additionalProperties": false
                  },
                  "code": {
                    "description": "A computer processable form of the unit in some unit representation system.",
                    "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                    "type": "string"
                  },
                  "_code": {
                    "description": "Base definition for all elements in a resource.",
                    "additionalProperties": false
                  }
                },
                "additionalProperties": false
              },
              "valueAnnotation": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "properties": {
                  "id": {
                    "pattern": "^[ \\r\\n\\t\\S]+$",
                    "type": "string",
                    "description": "A sequence of Unicode characters"
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "type": "array"
                  },
                  "authorReference": {
                    "description": "The individual responsible for making the annotation.",
                    "properties": {
                      "id": {
                        "pattern": "^[ \\r\\n\\t\\S]+$",
                        "type": "string",
                        "description": "A sequence of Unicode characters"
                      },
                      "extension": {
                        "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                        "type": "array"
                      },
                      "reference": {
                        "pattern": "^[ \\r\\n\\t\\S]+$",
                        "type": "string",
                        "description": "A sequence of Unicode characters"
                      },
                      "_reference": {
                        "description": "Base definition for all elements in a resource.",
                        "additionalProperties": false
                      },
                      "type": {
                        "description": "The expected type of the target of the reference. If both Reference.type and Reference.reference are populated and Reference.reference is a FHIR URL, both SHALL be consistent.\n\nThe type is the Canonical URL of Resource Definition that is the type this reference refers to. References are URLs that are relative to http://hl7.org/fhir/StructureDefinition/ e.g. \"Patient\" is a reference to http://hl7.org/fhir/StructureDefinition/Patient. Absolute URLs are only allowed for logical models (and can only be used in references in logical models, not resources).",
                        "pattern": "^\\S*$",
                        "type": "string"
                      },
                      "_type": {
                        "description": "Base definition for all elements in a resource.",
                        "additionalProperties": false
                      },
                      "identifier": {
                        "description": "An identifier for the target resource. This is used when there is no way to reference the other resource directly, either because the entity it represents is not available through a FHIR server, or because there is no way for the author of the resource to convert a known identifier to an actual location. There is no requirement that a Reference.identifier point to something that is actually exposed as a FHIR instance, but it SHALL point to a business concept that would be expected to be exposed as a FHIR instance, and that instance would need to be of a FHIR resource type allowed by the reference.",
                        "properties": {
                          "id": {
                            "pattern": "^[ \\r\\n\\t\\S]+$",
                            "type": "string",
                            "description": "A sequence of Unicode characters"
                          },
                          "extension": {
                            "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                            "type": "array"
                          },
                          "use": {
                            "description": "The purpose of this identifier.",
                            "enum": [
                              "usual",
                              "official",
                              "temp",
                              "secondary",
                              "old"
                            ]
                          },
                          "_use": {
                            "description": "Base definition for all elements in a resource.",
                            "additionalProperties": false
                          },
                          "type": {
                            "description": "A coded type for the identifier that can be used to determine which identifier to use for a specific purpose.",
                            "properties": {
                              "id": {
                                "pattern": "^[ \\r\\n\\t\\S]+$",
                                "type": "string",
                                "description": "A sequence of Unicode characters"
                              },
                              "extension": {
                                "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                                "type": "array"
                              },
                              "coding": {
                                "description": "A reference to a code defined by a terminology system.",
                                "items": {
                                  "description": "A reference to a code defined by a terminology system.",
                                  "properties": {
                                    "id": {
                                      "pattern": "^[ \\r\\n\\t\\S]+$",
                                      "type": "string",
                                      "description": "A sequence of Unicode characters"
                                    },
                                    "extension": {
                                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                                      "type": "array"
                                    },
                                    "system": {
                                      "description": "The identification of the code system that defines the meaning of the symbol in the code.",
                                      "pattern": "^\\S*$",
                                      "type": "string"
                                    },
                                    "_system": {
                                      "description": "Base definition for all elements in a resource.",
                                      "additionalProperties": false
                                    },
                                    "version": {
                                      "pattern": "^[ \\r\\n\\t\\S]+$",
                                      "type": "string",
                                      "description": "A sequence of Unicode characters"
                                    },
                                    "_version": {
                                      "description": "Base definition for all elements in a resource.",
                                      "additionalProperties": false
                                    },
                                    "code": {
                                      "description": "A symbol in syntax defined by the system. The symbol may be a predefined code or an expression in a syntax defined by the coding system (e.g. post-coordination).",
                                      "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                                      "type": "string"
                                    },
                                    "_code": {
                                      "description": "Base definition for all elements in a resource.",
                                      "additionalProperties": false
                                    },
                                    "display": {
                                      "pattern": "^[ \\r\\n\\t\\S]+$",
                                      "type": "string",
                                      "description": "A sequence of Unicode characters"
                                    },
                                    "_display": {
                                      "description": "Base definition for all elements in a resource.",
                                      "additionalProperties": false
                                    },
                                    "userSelected": {
                                      "description": "Indicates that this coding was chosen by a user directly - e.g. off a pick list of available items (codes or displays).",
                                      "pattern": "^true|false$",
                                      "type": "boolean"
                                    },
                                    "_userSelected": {
                                      "description": "Base definition for all elements in a resource.",
                                      "additionalProperties": false
                                    }
                                  },
                                  "additionalProperties": false
                                },
                                "type": "array"
                              },
                              "text": {
                                "pattern": "^[ \\r\\n\\t\\S]+$",
                                "type": "string",
                                "description": "A sequence of Unicode characters"
                              },
                              "_text": {
                                "description": "Base definition for all elements in a resource.",
                                "additionalProperties": false
                              }
                            },
                            "additionalProperties": false
                          },
                          "system": {
                            "description": "Establishes the namespace for the value - that is, a URL that describes a set values that are unique.",
                            "pattern": "^\\S*$",
                            "type": "string"
                          },
                          "_system": {
                            "description": "Base definition for all elements in a resource.",
                            "additionalProperties": false
                          },
                          "value": {
                            "pattern": "^[ \\r\\n\\t\\S]+$",
                            "type": "string",
                            "description": "A sequence of Unicode characters"
                          },
                          "_value": {
                            "description": "Base definition for all elements in a resource.",
                            "additionalProperties": false
                          },
                          "period": {
                            "description": "Time period during which identifier is/was valid for use.",
                            "additionalProperties": false
                          },
                          "assigner": {
                            "description": "Organization that issued/manages the identifier.",
                            "additionalProperties": false
                          }
                        },
                        "additionalProperties": false
                      },
                      "display": {
                        "pattern": "^[ \\r\\n\\t\\S]+$",
                        "type": "string",
                        "description": "A sequence of Unicode characters"
                      },
                      "_display": {
                        "description": "Base definition for all elements in a resource.",
                        "additionalProperties": false
                      }
                    },
                    "additionalProperties": false
                  },
                  "authorString": {
                    "description": "The individual responsible for making the annotation.",
                    "pattern": "^[ \\r\\n\\t\\S]+$",
                    "type": "string"
                  },
                  "_authorString": {
                    "description": "Base definition for all elements in a resource.",
                    "additionalProperties": false
                  },
                  "time": {
                    "description": "Indicates when this particular annotation was made.",
                    "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                    "type": "string"
                  },
                  "_time": {
                    "description": "Base definition for all elements in a resource.",
                    "additionalProperties": false
                  },
                  "text": {
                    "description": "The text of the annotation in markdown format.",
                    "pattern": "^[ \\r\\n\\t\\S]+$",
                    "type": "string"
                  },
                  "_text": {
                    "description": "Base definition for all elements in a resource.",
                    "additionalProperties": false
                  }
                },
                "additionalProperties": false
              },
              "valueAttachment": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "properties": {
                  "id": {
                    "pattern": "^[ \\r\\n\\t\\S]+$",
                    "type": "string",
                    "description": "A sequence of Unicode characters"
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "type": "array"
                  },
                  "contentType": {
                    "description": "Identifies the type of the data in the attachment and allows a method to be chosen to interpret or render the data. Includes mime type parameters such as charset where appropriate.",
                    "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                    "type": "string"
                  },
                  "_contentType": {
                    "description": "Base definition for all elements in a resource.",
                    "additionalProperties": false
                  },
                  "language": {
                    "description": "The human language of the content. The value can be any valid value according to BCP 47.",
                    "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                    "type": "string"
                  },
                  "_language": {
                    "description": "Base definition for all elements in a resource.",
                    "additionalProperties": false
                  },
                  "data": {
                    "description": "The actual data of the attachment - a sequence of bytes, base64 encoded.",
                    "type": "string"
                  },
                  "_data": {
                    "description": "Base definition for all elements in a resource.",
                    "additionalProperties": false
                  },
                  "url": {
                    "description": "A location where the data can be accessed.",
                    "pattern": "^\\S*$",
                    "type": "string"
                  },
                  "_url": {
                    "description": "Base definition for all elements in a resource.",
                    "additionalProperties": false
                  },
                  "size": {
                    "description": "The number of bytes of data that make up this attachment (before base64 encoding, if that is done).",
                    "pattern": "^[0]|([1-9][0-9]*)$",
                    "type": "number"
                  },
                  "_size": {
                    "description": "Base definition for all elements in a resource.",
                    "additionalProperties": false
                  },
                  "hash": {
                    "description": "The calculated hash of the data using SHA-1. Represented using base64.",
                    "type": "string"
                  },
                  "_hash": {
                    "description": "Base definition for all elements in a resource.",
                    "additionalProperties": false
                  },
                  "title": {
                    "pattern": "^[ \\r\\n\\t\\S]+$",
                    "type": "string",
                    "description": "A sequence of Unicode characters"
                  },
                  "_title": {
                    "description": "Base definition for all elements in a resource.",
                    "additionalProperties": false
                  },
                  "creation": {
                    "description": "The date that the attachment was first created.",
                    "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                    "type": "string"
                  },
                  "_creation": {
                    "description": "Base definition for all elements in a resource.",
                    "additionalProperties": false
                  }
                },
                "additionalProperties": false
              },
              "valueCodeableConcept": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "additionalProperties": false
              },
              "valueCoding": {
                "description": "A reference to a code defined by a terminology system.",
                "additionalProperties": false
              },
              "valueContactPoint": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "properties": {
                  "id": {
                    "pattern": "^[ \\r\\n\\t\\S]+$",
                    "type": "string",
                    "description": "A sequence of Unicode characters"
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "type": "array"
                  },
                  "system": {
                    "description": "Telecommunications form for contact point - what communications system is required to make use of the contact.",
                    "enum": [
                      "phone",
                      "fax",
                      "email",
                      "pager",
                      "url",
                      "sms",
                      "other"
                    ]
                  },
                  "_system": {
                    "description": "Base definition for all elements in a resource.",
                    "additionalProperties": false
                  },
                  "value": {
                    "pattern": "^[ \\r\\n\\t\\S]+$",
                    "type": "string",
                    "description": "A sequence of Unicode characters"
                  },
                  "_value": {
                    "description": "Base definition for all elements in a resource.",
                    "additionalProperties": false
                  },
                  "use": {
                    "description": "Identifies the purpose for the contact point.",
                    "enum": [
                      "home",
                      "work",
                      "temp",
                      "old",
                      "mobile"
                    ]
                  },
                  "_use": {
                    "description": "Base definition for all elements in a resource.",
                    "additionalProperties": false
                  },
                  "rank": {
                    "description": "Specifies a preferred order in which to use a set of contacts. ContactPoints with lower rank values are more preferred than those with higher rank values.",
                    "pattern": "^[1-9][0-9]*$",
                    "type": "number"
                  },
                  "_rank": {
                    "description": "Base definition for all elements in a resource.",
                    "additionalProperties": false
                  },
                  "period": {
                    "description": "Time period when the contact point was/is in use.",
                    "additionalProperties": false
                  }
                },
                "additionalProperties": false
              },
              "valueCount": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "properties": {
                  "id": {
                    "pattern": "^[ \\r\\n\\t\\S]+$",
                    "type": "string",
                    "description": "A sequence of Unicode characters"
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "type": "array"
                  },
                  "value": {
                    "description": "The value of the measured amount. The value includes an implicit precision in the presentation of the value.",
                    "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                    "type": "number"
                  },
                  "_value": {
                    "description": "Base definition for all elements in a resource.",
                    "additionalProperties": false
                  },
                  "comparator": {
                    "description": "How the value should be understood and represented - whether the actual value is greater or less than the stated value due to measurement issues; e.g. if the comparator is \"<\" , then the real value is < stated value.",
                    "enum": [
                      "<",
                      "<=",
                      ">=",
                      ">"
                    ]
                  },
                  "_comparator": {
                    "description": "Base definition for all elements in a resource.",
                    "additionalProperties": false
                  },
                  "unit": {
                    "pattern": "^[ \\r\\n\\t\\S]+$",
                    "type": "string",
                    "description": "A sequence of Unicode characters"
                  },
                  "_unit": {
                    "description": "Base definition for all elements in a resource.",
                    "additionalProperties": false
                  },
                  "system": {
                    "description": "The identification of the system that provides the coded form of the unit.",
                    "pattern": "^\\S*$",
                    "type": "string"
                  },
                  "_system": {
                    "description": "Base definition for all elements in a resource.",
                    "additionalProperties": false
                  },
                  "code": {
                    "description": "A computer processable form of the unit in some unit representation system.",
                    "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                    "type": "string"
                  },
                  "_code": {
                    "description": "Base definition for all elements in a resource.",
                    "additionalProperties": false
                  }
                },
                "additionalProperties": false
              },
              "valueDistance": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "properties": {
                  "id": {
                    "pattern": "^[ \\r\\n\\t\\S]+$",
                    "type": "string",
                    "description": "A sequence of Unicode characters"
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "type": "array"
                  },
                  "value": {
                    "description": "The value of the measured amount. The value includes an implicit precision in the presentation of the value.",
                    "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                    "type": "number"
                  },
                  "_value": {
                    "description": "Base definition for all elements in a resource.",
                    "additionalProperties": false
                  },
                  "comparator": {
                    "description": "How the value should be understood and represented - whether the actual value is greater or less than the stated value due to measurement issues; e.g. if the comparator is \"<\" , then the real value is < stated value.",
                    "enum": [
                      "<",
                      "<=",
                      ">=",
                      ">"
                    ]
                  },
                  "_comparator": {
                    "description": "Base definition for all elements in a resource.",
                    "additionalProperties": false
                  },
                  "unit": {
                    "pattern": "^[ \\r\\n\\t\\S]+$",
                    "type": "string",
                    "description": "A sequence of Unicode characters"
                  },
                  "_unit": {
                    "description": "Base definition for all elements in a resource.",
                    "additionalProperties": false
                  },
                  "system": {
                    "description": "The identification of the system that provides the coded form of the unit.",
                    "pattern": "^\\S*$",
                    "type": "string"
                  },
                  "_system": {
                    "description": "Base definition for all elements in a resource.",
                    "additionalProperties": false
                  },
                  "code": {
                    "description": "A computer processable form of the unit in some unit representation system.",
                    "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                    "type": "string"
                  },
                  "_code": {
                    "description": "Base definition for all elements in a resource.",
                    "additionalProperties": false
                  }
                },
                "additionalProperties": false
              },
              "valueDuration": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "properties": {
                  "id": {
                    "pattern": "^[ \\r\\n\\t\\S]+$",
                    "type": "string",
                    "description": "A sequence of Unicode characters"
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "type": "array"
                  },
                  "value": {
                    "description": "The value of the measured amount. The value includes an implicit precision in the presentation of the value.",
                    "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                    "type": "number"
                  },
                  "_value": {
                    "description": "Base definition for all elements in a resource.",
                    "additionalProperties": false
                  },
                  "comparator": {
                    "description": "How the value should be understood and represented - whether the actual value is greater or less than the stated value due to measurement issues; e.g. if the comparator is \"<\" , then the real value is < stated value.",
                    "enum": [
                      "<",
                      "<=",
                      ">=",
                      ">"
                    ]
                  },
                  "_comparator": {
                    "description": "Base definition for all elements in a resource.",
                    "additionalProperties": false
                  },
                  "unit": {
                    "pattern": "^[ \\r\\n\\t\\S]+$",
                    "type": "string",
                    "description": "A sequence of Unicode characters"
                  },
                  "_unit": {
                    "description": "Base definition for all elements in a resource.",
                    "additionalProperties": false
                  },
                  "system": {
                    "description": "The identification of the system that provides the coded form of the unit.",
                    "pattern": "^\\S*$",
                    "type": "string"
                  },
                  "_system": {
                    "description": "Base definition for all elements in a resource.",
                    "additionalProperties": false
                  },
                  "code": {
                    "description": "A computer processable form of the unit in some unit representation system.",
                    "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                    "type": "string"
                  },
                  "_code": {
                    "description": "Base definition for all elements in a resource.",
                    "additionalProperties": false
                  }
                },
                "additionalProperties": false
              },
              "valueHumanName": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "properties": {
                  "id": {
                    "pattern": "^[ \\r\\n\\t\\S]+$",
                    "type": "string",
                    "description": "A sequence of Unicode characters"
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "type": "array"
                  },
                  "use": {
                    "description": "Identifies the purpose for this name.",
                    "enum": [
                      "usual",
                      "official",
                      "temp",
                      "nickname",
                      "anonymous",
                      "old",
                      "maiden"
                    ]
                  },
                  "_use": {
                    "description": "Base definition for all elements in a resource.",
                    "additionalProperties": false
                  },
                  "text": {
                    "pattern": "^[ \\r\\n\\t\\S]+$",
                    "type": "string",
                    "description": "A sequence of Unicode characters"
                  },
                  "_text": {
                    "description": "Base definition for all elements in a resource.",
                    "additionalProperties": false
                  },
                  "family": {
                    "pattern": "^[ \\r\\n\\t\\S]+$",
                    "type": "string",
                    "description": "A sequence of Unicode characters"
                  },
                  "_family": {
                    "description": "Base definition for all elements in a resource.",
                    "additionalProperties": false
                  },
                  "given": {
                    "description": "Given name.",
                    "type": "array"
                  },
                  "_given": {
                    "description": "Extensions for given",
                    "type": "array"
                  },
                  "prefix": {
                    "description": "Part of the name that is acquired as a title due to academic, legal, employment or nobility status, etc. and that appears at the start of the name.",
                    "type": "array"
                  },
                  "_prefix": {
                    "description": "Extensions for prefix",
                    "type": "array"
                  },
                  "suffix": {
                    "description": "Part of the name that is acquired as a title due to academic, legal, employment or nobility status, etc. and that appears at the end of the name.",
                    "type": "array"
                  },
                  "_suffix": {
                    "description": "Extensions for suffix",
                    "type": "array"
                  },
                  "period": {
                    "description": "Indicates the period of time when this name was valid for the named person.",
                    "additionalProperties": false
                  }
                },
                "additionalProperties": false
              },
              "valueIdentifier": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "additionalProperties": false
              },
              "valueMoney": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "properties": {
                  "id": {
                    "pattern": "^[ \\r\\n\\t\\S]+$",
                    "type": "string",
                    "description": "A sequence of Unicode characters"
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "type": "array"
                  },
                  "value": {
                    "description": "Numerical value (with implicit precision).",
                    "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                    "type": "number"
                  },
                  "_value": {
                    "description": "Base definition for all elements in a resource.",
                    "additionalProperties": false
                  },
                  "currency": {
                    "description": "ISO 4217 Currency Code.",
                    "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                    "type": "string"
                  },
                  "_currency": {
                    "description": "Base definition for all elements in a resource.",
                    "additionalProperties": false
                  }
                },
                "additionalProperties": false
              },
              "valuePeriod": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "additionalProperties": false
              },
              "valueQuantity": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "properties": {
                  "id": {
                    "pattern": "^[ \\r\\n\\t\\S]+$",
                    "type": "string",
                    "description": "A sequence of Unicode characters"
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "type": "array"
                  },
                  "value": {
                    "description": "The value of the measured amount. The value includes an implicit precision in the presentation of the value.",
                    "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                    "type": "number"
                  },
                  "_value": {
                    "description": "Base definition for all elements in a resource.",
                    "additionalProperties": false
                  },
                  "comparator": {
                    "description": "How the value should be understood and represented - whether the actual value is greater or less than the stated value due to measurement issues; e.g. if the comparator is \"<\" , then the real value is < stated value.",
                    "enum": [
                      "<",
                      "<=",
                      ">=",
                      ">"
                    ]
                  },
                  "_comparator": {
                    "description": "Base definition for all elements in a resource.",
                    "additionalProperties": false
                  },
                  "unit": {
                    "pattern": "^[ \\r\\n\\t\\S]+$",
                    "type": "string",
                    "description": "A sequence of Unicode characters"
                  },
                  "_unit": {
                    "description": "Base definition for all elements in a resource.",
                    "additionalProperties": false
                  },
                  "system": {
                    "description": "The identification of the system that provides the coded form of the unit.",
                    "pattern": "^\\S*$",
                    "type": "string"
                  },
                  "_system": {
                    "description": "Base definition for all elements in a resource.",
                    "additionalProperties": false
                  },
                  "code": {
                    "description": "A computer processable form of the unit in some unit representation system.",
                    "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                    "type": "string"
                  },
                  "_code": {
                    "description": "Base definition for all elements in a resource.",
                    "additionalProperties": false
                  }
                },
                "additionalProperties": false
              },
              "valueRange": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "properties": {
                  "id": {
                    "pattern": "^[ \\r\\n\\t\\S]+$",
                    "type": "string",
                    "description": "A sequence of Unicode characters"
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "type": "array"
                  },
                  "low": {
                    "description": "The low limit. The boundary is inclusive.",
                    "additionalProperties": false
                  },
                  "high": {
                    "description": "The high limit. The boundary is inclusive.",
                    "additionalProperties": false
                  }
                },
                "additionalProperties": false
              },
              "valueRatio": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "properties": {
                  "id": {
                    "pattern": "^[ \\r\\n\\t\\S]+$",
                    "type": "string",
                    "description": "A sequence of Unicode characters"
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "type": "array"
                  },
                  "numerator": {
                    "description": "The value of the numerator.",
                    "additionalProperties": false
                  },
                  "denominator": {
                    "description": "The value of the denominator.",
                    "additionalProperties": false
                  }
                },
                "additionalProperties": false
              },
              "valueReference": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "additionalProperties": false
              },
              "valueSampledData": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "properties": {
                  "id": {
                    "pattern": "^[ \\r\\n\\t\\S]+$",
                    "type": "string",
                    "description": "A sequence of Unicode characters"
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "type": "array"
                  },
                  "origin": {
                    "description": "The base quantity that a measured value of zero represents. In addition, this provides the units of the entire measurement series.",
                    "additionalProperties": false
                  },
                  "period": {
                    "description": "The length of time between sampling times, measured in milliseconds.",
                    "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                    "type": "number"
                  },
                  "_period": {
                    "description": "Base definition for all elements in a resource.",
                    "additionalProperties": false
                  },
                  "factor": {
                    "description": "A correction factor that is applied to the sampled data points before they are added to the origin.",
                    "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                    "type": "number"
                  },
                  "_factor": {
                    "description": "Base definition for all elements in a resource.",
                    "additionalProperties": false
                  },
                  "lowerLimit": {
                    "description": "The lower limit of detection of the measured points. This is needed if any of the data points have the value \"L\" (lower than detection limit).",
                    "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                    "type": "number"
                  },
                  "_lowerLimit": {
                    "description": "Base definition for all elements in a resource.",
                    "additionalProperties": false
                  },
                  "upperLimit": {
                    "description": "The upper limit of detection of the measured points. This is needed if any of the data points have the value \"U\" (higher than detection limit).",
                    "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                    "type": "number"
                  },
                  "_upperLimit": {
                    "description": "Base definition for all elements in a resource.",
                    "additionalProperties": false
                  },
                  "dimensions": {
                    "description": "The number of sample points at each time point. If this value is greater than one, then the dimensions will be interlaced - all the sample points for a point in time will be recorded at once.",
                    "pattern": "^[1-9][0-9]*$",
                    "type": "number"
                  },
                  "_dimensions": {
                    "description": "Base definition for all elements in a resource.",
                    "additionalProperties": false
                  },
                  "data": {
                    "pattern": "^[ \\r\\n\\t\\S]+$",
                    "type": "string",
                    "description": "A sequence of Unicode characters"
                  },
                  "_data": {
                    "description": "Base definition for all elements in a resource.",
                    "additionalProperties": false
                  }
                },
                "additionalProperties": false,
                "required": [
                  "origin"
                ]
              },
              "valueSignature": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "properties": {
                  "id": {
                    "pattern": "^[ \\r\\n\\t\\S]+$",
                    "type": "string",
                    "description": "A sequence of Unicode characters"
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "type": "array"
                  },
                  "type": {
                    "description": "An indication of the reason that the entity signed this document. This may be explicitly included as part of the signature information and can be used when determining accountability for various actions concerning the document.",
                    "type": "array"
                  },
                  "when": {
                    "description": "When the digital signature was signed.",
                    "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
                    "type": "string"
                  },
                  "_when": {
                    "description": "Base definition for all elements in a resource.",
                    "additionalProperties": false
                  },
                  "who": {
                    "description": "A reference to an application-usable description of the identity that signed  (e.g. the signature used their private key).",
                    "additionalProperties": false
                  },
                  "onBehalfOf": {
                    "description": "A reference to an application-usable description of the identity that is represented by the signature.",
                    "additionalProperties": false
                  },
                  "targetFormat": {
                    "description": "A mime type that indicates the technical format of the target resources signed by the signature.",
                    "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                    "type": "string"
                  },
                  "_targetFormat": {
                    "description": "Base definition for all elements in a resource.",
                    "additionalProperties": false
                  },
                  "sigFormat": {
                    "description": "A mime type that indicates the technical format of the signature. Important mime types are application/signature+xml for X ML DigSig, application/jose for JWS, and image/* for a graphical image of a signature, etc.",
                    "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                    "type": "string"
                  },
                  "_sigFormat": {
                    "description": "Base definition for all elements in a resource.",
                    "additionalProperties": false
                  },
                  "data": {
                    "description": "The base64 encoding of the Signature content. When signature is not recorded electronically this element would be empty.",
                    "type": "string"
                  },
                  "_data": {
                    "description": "Base definition for all elements in a resource.",
                    "additionalProperties": false
                  }
                },
                "additionalProperties": false,
                "required": [
                  "type",
                  "who"
                ]
              },
              "valueTiming": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "properties": {
                  "id": {
                    "pattern": "^[ \\r\\n\\t\\S]+$",
                    "type": "string",
                    "description": "A sequence of Unicode characters"
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "type": "array"
                  },
                  "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                    "type": "array"
                  },
                  "event": {
                    "description": "Identifies specific times when the event occurs.",
                    "items": {
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                      "type": "string",
                      "description": "A date, date-time or partial date (e.g. just year or year + month).  If hours and minutes are specified, a time zone SHALL be populated. The format is a union of the schema types gYear, gYearMonth, date and dateTime. Seconds must be provided due to schema type constraints but may be zero-filled and may be ignored.                 Dates SHALL be valid dates."
                    },
                    "type": "array"
                  },
                  "_event": {
                    "description": "Extensions for event",
                    "type": "array"
                  },
                  "repeat": {
                    "description": "A set of rules that describe when the event is scheduled.",
                    "properties": {
                      "id": {
                        "pattern": "^[ \\r\\n\\t\\S]+$",
                        "type": "string",
                        "description": "A sequence of Unicode characters"
                      },
                      "extension": {
                        "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                        "type": "array"
                      },
                      "modifierExtension": {
                        "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                        "type": "array"
                      },
                      "boundsDuration": {
                        "description": "Either a duration for the length of the timing schedule, a range of possible length, or outer bounds for start and/or end limits of the timing schedule.",
                        "additionalProperties": false
                      },
                      "boundsRange": {
                        "description": "Either a duration for the length of the timing schedule, a range of possible length, or outer bounds for start and/or end limits of the timing schedule.",
                        "additionalProperties": false
                      },
                      "boundsPeriod": {
                        "description": "Either a duration for the length of the timing schedule, a range of possible length, or outer bounds for start and/or end limits of the timing schedule.",
                        "additionalProperties": false
                      },
                      "count": {
                        "description": "A total count of the desired number of repetitions across the duration of the entire timing specification. If countMax is present, this element indicates the lower bound of the allowed range of count values.",
                        "pattern": "^[1-9][0-9]*$",
                        "type": "number"
                      },
                      "_count": {
                        "description": "Base definition for all elements in a resource.",
                        "additionalProperties": false
                      },
                      "countMax": {
                        "description": "If present, indicates that the count is a range - so to perform the action between [count] and [countMax] times.",
                        "pattern": "^[1-9][0-9]*$",
                        "type": "number"
                      },
                      "_countMax": {
                        "description": "Base definition for all elements in a resource.",
                        "additionalProperties": false
                      },
                      "duration": {
                        "description": "How long this thing happens for when it happens. If durationMax is present, this element indicates the lower bound of the allowed range of the duration.",
                        "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                        "type": "number"
                      },
                      "_duration": {
                        "description": "Base definition for all elements in a resource.",
                        "additionalProperties": false
                      },
                      "durationMax": {
                        "description": "If present, indicates that the duration is a range - so to perform the action between [duration] and [durationMax] time length.",
                        "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                        "type": "number"
                      },
                      "_durationMax": {
                        "description": "Base definition for all elements in a resource.",
                        "additionalProperties": false
                      },
                      "durationUnit": {
                        "description": "The units of time for the duration, in UCUM units.",
                        "enum": [
                          "s",
                          "min",
                          "h",
                          "d",
                          "wk",
                          "mo",
                          "a"
                        ]
                      },
                      "_durationUnit": {
                        "description": "Base definition for all elements in a resource.",
                        "additionalProperties": false
                      },
                      "frequency": {
                        "description": "The number of times to repeat the action within the specified period. If frequencyMax is present, this element indicates the lower bound of the allowed range of the frequency.",
                        "pattern": "^[1-9][0-9]*$",
                        "type": "number"
                      },
                      "_frequency": {
                        "description": "Base definition for all elements in a resource.",
                        "additionalProperties": false
                      },
                      "frequencyMax": {
                        "description": "If present, indicates that the frequency is a range - so to repeat between [frequency] and [frequencyMax] times within the period or period range.",
                        "pattern": "^[1-9][0-9]*$",
                        "type": "number"
                      },
                      "_frequencyMax": {
                        "description": "Base definition for all elements in a resource.",
                        "additionalProperties": false
                      },
                      "period": {
                        "description": "Indicates the duration of time over which repetitions are to occur; e.g. to express \"3 times per day\", 3 would be the frequency and \"1 day\" would be the period. If periodMax is present, this element indicates the lower bound of the allowed range of the period length.",
                        "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                        "type": "number"
                      },
                      "_period": {
                        "description": "Base definition for all elements in a resource.",
                        "additionalProperties": false
                      },
                      "periodMax": {
                        "description": "If present, indicates that the period is a range from [period] to [periodMax], allowing expressing concepts such as \"do this once every 3-5 days.",
                        "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                        "type": "number"
                      },
                      "_periodMax": {
                        "description": "Base definition for all elements in a resource.",
                        "additionalProperties": false
                      },
                      "periodUnit": {
                        "description": "The units of time for the period in UCUM units.",
                        "enum": [
                          "s",
                          "min",
                          "h",
                          "d",
                          "wk",
                          "mo",
                          "a"
                        ]
                      },
                      "_periodUnit": {
                        "description": "Base definition for all elements in a resource.",
                        "additionalProperties": false
                      },
                      "dayOfWeek": {
                        "description": "If one or more days of week is provided, then the action happens only on the specified day(s).",
                        "items": {
                          "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                          "type": "string",
                          "description": "A string which has at least one character and no leading or trailing whitespace and where there is no whitespace other than single spaces in the contents"
                        },
                        "type": "array"
                      },
                      "_dayOfWeek": {
                        "description": "Extensions for dayOfWeek",
                        "type": "array"
                      },
                      "timeOfDay": {
                        "description": "Specified time of day for action to take place.",
                        "items": {
                          "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$",
                          "type": "string",
                          "description": "A time during the day, with no date specified"
                        },
                        "type": "array"
                      },
                      "_timeOfDay": {
                        "description": "Extensions for timeOfDay",
                        "type": "array"
                      },
                      "when": {
                        "description": "An approximate time period during the day, potentially linked to an event of daily living that indicates when the action should occur.",
                        "items": {
                          "enum": [
                            "MORN",
                            "MORN.early",
                            "MORN.late",
                            "NOON",
                            "AFT",
                            "AFT.early",
                            "AFT.late",
                            "EVE",
                            "EVE.early",
                            "EVE.late",
                            "NIGHT",
                            "PHS",
                            "HS",
                            "WAKE",
                            "C",
                            "CM",
                            "CD",
                            "CV",
                            "AC",
                            "ACM",
                            "ACD",
                            "ACV",
                            "PC",
                            "PCM",
                            "PCD",
                            "PCV"
                          ]
                        },
                        "type": "array"
                      },
                      "_when": {
                        "description": "Extensions for when",
                        "type": "array"
                      },
                      "offset": {
                        "description": "The number of minutes from the event. If the event code does not indicate whether the minutes is before or after the event, then the offset is assumed to be after the event.",
                        "pattern": "^[0]|([1-9][0-9]*)$",
                        "type": "number"
                      },
                      "_offset": {
                        "description": "Base definition for all elements in a resource.",
                        "additionalProperties": false
                      }
                    },
                    "additionalProperties": false
                  },
                  "code": {
                    "description": "A code for the timing schedule (or just text in code.text). Some codes such as BID are ubiquitous, but many institutions define their own additional codes. If a code is provided, the code is understood to be a complete statement of whatever is specified in the structured timing data, and either the code or the data may be used to interpret the Timing, with the exception that .repeat.bounds still applies over the code (and is not contained in the code).",
                    "additionalProperties": false
                  }
                },
                "additionalProperties": false
              },
              "valueContactDetail": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "properties": {
                  "id": {
                    "pattern": "^[ \\r\\n\\t\\S]+$",
                    "type": "string",
                    "description": "A sequence of Unicode characters"
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "type": "array"
                  },
                  "name": {
                    "pattern": "^[ \\r\\n\\t\\S]+$",
                    "type": "string",
                    "description": "A sequence of Unicode characters"
                  },
                  "_name": {
                    "description": "Base definition for all elements in a resource.",
                    "additionalProperties": false
                  },
                  "telecom": {
                    "description": "The contact details for the individual (if a name was provided) or the organization.",
                    "items": {
                      "description": "Details for all kinds of technology mediated contact points for a person or organization, including telephone, email, etc.",
                      "additionalProperties": false
                    },
                    "type": "array"
                  }
                },
                "additionalProperties": false
              },
              "valueContributor": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "properties": {
                  "id": {
                    "pattern": "^[ \\r\\n\\t\\S]+$",
                    "type": "string",
                    "description": "A sequence of Unicode characters"
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "type": "array"
                  },
                  "type": {
                    "description": "The type of contributor.",
                    "enum": [
                      "author",
                      "editor",
                      "reviewer",
                      "endorser"
                    ]
                  },
                  "_type": {
                    "description": "Base definition for all elements in a resource.",
                    "additionalProperties": false
                  },
                  "name": {
                    "pattern": "^[ \\r\\n\\t\\S]+$",
                    "type": "string",
                    "description": "A sequence of Unicode characters"
                  },
                  "_name": {
                    "description": "Base definition for all elements in a resource.",
                    "additionalProperties": false
                  },
                  "contact": {
                    "description": "Contact details to assist a user in finding and communicating with the contributor.",
                    "items": {
                      "description": "Specifies contact information for a person or organization.",
                      "additionalProperties": false
                    },
                    "type": "array"
                  }
                },
                "additionalProperties": false
              },
              "valueDataRequirement": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "properties": {
                  "id": {
                    "pattern": "^[ \\r\\n\\t\\S]+$",
                    "type": "string",
                    "description": "A sequence of Unicode characters"
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "type": "array"
                  },
                  "type": {
                    "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                    "type": "string",
                    "description": "A string which has at least one character and no leading or trailing whitespace and where there is no whitespace other than single spaces in the contents"
                  },
                  "_type": {
                    "description": "Base definition for all elements in a resource.",
                    "additionalProperties": false
                  },
                  "profile": {
                    "description": "The profile of the required data, specified as the uri of the profile definition.",
                    "items": {
                      "pattern": "^\\S*$",
                      "type": "string",
                      "description": "A URI that is a reference to a canonical URL on a FHIR resource"
                    },
                    "type": "array"
                  },
                  "subjectCodeableConcept": {
                    "description": "The intended subjects of the data requirement. If this element is not provided, a Patient subject is assumed.",
                    "additionalProperties": false
                  },
                  "subjectReference": {
                    "description": "The intended subjects of the data requirement. If this element is not provided, a Patient subject is assumed.",
                    "additionalProperties": false
                  },
                  "mustSupport": {
                    "description": "Indicates that specific elements of the type are referenced by the knowledge module and must be supported by the consumer in order to obtain an effective evaluation. This does not mean that a value is required for this element, only that the consuming system must understand the element and be able to provide values for it if they are available. \n\nThe value of mustSupport SHALL be a FHIRPath resolveable on the type of the DataRequirement. The path SHALL consist only of identifiers, constant indexers, and .resolve() (see the [Simple FHIRPath Profile](fhirpath.html#simple) for full details).",
                    "type": "array"
                  },
                  "_mustSupport": {
                    "description": "Extensions for mustSupport",
                    "type": "array"
                  },
                  "codeFilter": {
                    "description": "Code filters specify additional constraints on the data, specifying the value set of interest for a particular element of the data. Each code filter defines an additional constraint on the data, i.e. code filters are AND'ed, not OR'ed.",
                    "items": {
                      "description": "Describes a required data item for evaluation in terms of the type of data, and optional code or date-based filters of the data.",
                      "properties": {
                        "id": {
                          "pattern": "^[ \\r\\n\\t\\S]+$",
                          "type": "string",
                          "description": "A sequence of Unicode characters"
                        },
                        "extension": {
                          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                          "type": "array"
                        },
                        "modifierExtension": {
                          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                          "type": "array"
                        },
                        "path": {
                          "pattern": "^[ \\r\\n\\t\\S]+$",
                          "type": "string",
                          "description": "A sequence of Unicode characters"
                        },
                        "_path": {
                          "description": "Base definition for all elements in a resource.",
                          "additionalProperties": false
                        },
                        "searchParam": {
                          "pattern": "^[ \\r\\n\\t\\S]+$",
                          "type": "string",
                          "description": "A sequence of Unicode characters"
                        },
                        "_searchParam": {
                          "description": "Base definition for all elements in a resource.",
                          "additionalProperties": false
                        },
                        "valueSet": {
                          "pattern": "^\\S*$",
                          "type": "string",
                          "description": "A URI that is a reference to a canonical URL on a FHIR resource"
                        },
                        "code": {
                          "description": "The codes for the code filter. If values are given, the filter will return only those data items for which the code-valued attribute specified by the path has a value that is one of the specified codes. If codes are specified in addition to a value set, the filter returns items matching a code in the value set or one of the specified codes.",
                          "type": "array"
                        }
                      },
                      "additionalProperties": false
                    },
                    "type": "array"
                  },
                  "dateFilter": {
                    "description": "Date filters specify additional constraints on the data in terms of the applicable date range for specific elements. Each date filter specifies an additional constraint on the data, i.e. date filters are AND'ed, not OR'ed.",
                    "items": {
                      "description": "Describes a required data item for evaluation in terms of the type of data, and optional code or date-based filters of the data.",
                      "properties": {
                        "id": {
                          "pattern": "^[ \\r\\n\\t\\S]+$",
                          "type": "string",
                          "description": "A sequence of Unicode characters"
                        },
                        "extension": {
                          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                          "type": "array"
                        },
                        "modifierExtension": {
                          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                          "type": "array"
                        },
                        "path": {
                          "pattern": "^[ \\r\\n\\t\\S]+$",
                          "type": "string",
                          "description": "A sequence of Unicode characters"
                        },
                        "_path": {
                          "description": "Base definition for all elements in a resource.",
                          "additionalProperties": false
                        },
                        "searchParam": {
                          "pattern": "^[ \\r\\n\\t\\S]+$",
                          "type": "string",
                          "description": "A sequence of Unicode characters"
                        },
                        "_searchParam": {
                          "description": "Base definition for all elements in a resource.",
                          "additionalProperties": false
                        },
                        "valueDateTime": {
                          "description": "The value of the filter. If period is specified, the filter will return only those data items that fall within the bounds determined by the Period, inclusive of the period boundaries. If dateTime is specified, the filter will return only those data items that are equal to the specified dateTime. If a Duration is specified, the filter will return only those data items that fall within Duration before now.",
                          "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                          "type": "string"
                        },
                        "_valueDateTime": {
                          "description": "Base definition for all elements in a resource.",
                          "additionalProperties": false
                        },
                        "valuePeriod": {
                          "description": "The value of the filter. If period is specified, the filter will return only those data items that fall within the bounds determined by the Period, inclusive of the period boundaries. If dateTime is specified, the filter will return only those data items that are equal to the specified dateTime. If a Duration is specified, the filter will return only those data items that fall within Duration before now.",
                          "additionalProperties": false
                        },
                        "valueDuration": {
                          "description": "The value of the filter. If period is specified, the filter will return only those data items that fall within the bounds determined by the Period, inclusive of the period boundaries. If dateTime is specified, the filter will return only those data items that are equal to the specified dateTime. If a Duration is specified, the filter will return only those data items that fall within Duration before now.",
                          "additionalProperties": false
                        }
                      },
                      "additionalProperties": false
                    },
                    "type": "array"
                  },
                  "limit": {
                    "description": "Specifies a maximum number of results that are required (uses the _count search parameter).",
                    "pattern": "^[1-9][0-9]*$",
                    "type": "number"
                  },
                  "_limit": {
                    "description": "Base definition for all elements in a resource.",
                    "additionalProperties": false
                  },
                  "sort": {
                    "description": "Specifies the order of the results to be returned.",
                    "items": {
                      "description": "Describes a required data item for evaluation in terms of the type of data, and optional code or date-based filters of the data.",
                      "properties": {
                        "id": {
                          "pattern": "^[ \\r\\n\\t\\S]+$",
                          "type": "string",
                          "description": "A sequence of Unicode characters"
                        },
                        "extension": {
                          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                          "type": "array"
                        },
                        "modifierExtension": {
                          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                          "type": "array"
                        },
                        "path": {
                          "pattern": "^[ \\r\\n\\t\\S]+$",
                          "type": "string",
                          "description": "A sequence of Unicode characters"
                        },
                        "_path": {
                          "description": "Base definition for all elements in a resource.",
                          "additionalProperties": false
                        },
                        "direction": {
                          "description": "The direction of the sort, ascending or descending.",
                          "enum": [
                            "ascending",
                            "descending"
                          ]
                        },
                        "_direction": {
                          "description": "Base definition for all elements in a resource.",
                          "additionalProperties": false
                        }
                      },
                      "additionalProperties": false
                    },
                    "type": "array"
                  }
                },
                "additionalProperties": false
              },
              "valueExpression": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "properties": {
                  "id": {
                    "pattern": "^[ \\r\\n\\t\\S]+$",
                    "type": "string",
                    "description": "A sequence of Unicode characters"
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "type": "array"
                  },
                  "description": {
                    "pattern": "^[ \\r\\n\\t\\S]+$",
                    "type": "string",
                    "description": "A sequence of Unicode characters"
                  },
                  "_description": {
                    "description": "Base definition for all elements in a resource.",
                    "additionalProperties": false
                  },
                  "name": {
                    "description": "A short name assigned to the expression to allow for multiple reuse of the expression in the context where it is defined.",
                    "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                    "type": "string"
                  },
                  "_name": {
                    "description": "Base definition for all elements in a resource.",
                    "additionalProperties": false
                  },
                  "language": {
                    "description": "The media type of the language for the expression.",
                    "enum": [
                      "text/cql",
                      "text/fhirpath",
                      "application/x-fhir-query"
                    ]
                  },
                  "_language": {
                    "description": "Base definition for all elements in a resource.",
                    "additionalProperties": false
                  },
                  "expression": {
                    "pattern": "^[ \\r\\n\\t\\S]+$",
                    "type": "string",
                    "description": "A sequence of Unicode characters"
                  },
                  "_expression": {
                    "description": "Base definition for all elements in a resource.",
                    "additionalProperties": false
                  },
                  "reference": {
                    "description": "A URI that defines where the expression is found.",
                    "pattern": "^\\S*$",
                    "type": "string"
                  },
                  "_reference": {
                    "description": "Base definition for all elements in a resource.",
                    "additionalProperties": false
                  }
                },
                "additionalProperties": false
              },
              "valueParameterDefinition": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "properties": {
                  "id": {
                    "pattern": "^[ \\r\\n\\t\\S]+$",
                    "type": "string",
                    "description": "A sequence of Unicode characters"
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "type": "array"
                  },
                  "name": {
                    "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                    "type": "string",
                    "description": "A string which has at least one character and no leading or trailing whitespace and where there is no whitespace other than single spaces in the contents"
                  },
                  "_name": {
                    "description": "Base definition for all elements in a resource.",
                    "additionalProperties": false
                  },
                  "use": {
                    "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                    "type": "string",
                    "description": "A string which has at least one character and no leading or trailing whitespace and where there is no whitespace other than single spaces in the contents"
                  },
                  "_use": {
                    "description": "Base definition for all elements in a resource.",
                    "additionalProperties": false
                  },
                  "min": {
                    "description": "The minimum number of times this parameter SHALL appear in the request or response.",
                    "pattern": "^-?([0]|([1-9][0-9]*))$",
                    "type": "number"
                  },
                  "_min": {
                    "description": "Base definition for all elements in a resource.",
                    "additionalProperties": false
                  },
                  "max": {
                    "pattern": "^[ \\r\\n\\t\\S]+$",
                    "type": "string",
                    "description": "A sequence of Unicode characters"
                  },
                  "_max": {
                    "description": "Base definition for all elements in a resource.",
                    "additionalProperties": false
                  },
                  "documentation": {
                    "pattern": "^[ \\r\\n\\t\\S]+$",
                    "type": "string",
                    "description": "A sequence of Unicode characters"
                  },
                  "_documentation": {
                    "description": "Base definition for all elements in a resource.",
                    "additionalProperties": false
                  },
                  "type": {
                    "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                    "type": "string",
                    "description": "A string which has at least one character and no leading or trailing whitespace and where there is no whitespace other than single spaces in the contents"
                  },
                  "_type": {
                    "description": "Base definition for all elements in a resource.",
                    "additionalProperties": false
                  },
                  "profile": {
                    "pattern": "^\\S*$",
                    "type": "string",
                    "description": "A URI that is a reference to a canonical URL on a FHIR resource"
                  }
                },
                "additionalProperties": false
              },
              "valueRelatedArtifact": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "properties": {
                  "id": {
                    "pattern": "^[ \\r\\n\\t\\S]+$",
                    "type": "string",
                    "description": "A sequence of Unicode characters"
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "type": "array"
                  },
                  "type": {
                    "description": "The type of relationship to the related artifact.",
                    "enum": [
                      "documentation",
                      "justification",
                      "citation",
                      "predecessor",
                      "successor",
                      "derived-from",
                      "depends-on",
                      "composed-of"
                    ]
                  },
                  "_type": {
                    "description": "Base definition for all elements in a resource.",
                    "additionalProperties": false
                  },
                  "label": {
                    "pattern": "^[ \\r\\n\\t\\S]+$",
                    "type": "string",
                    "description": "A sequence of Unicode characters"
                  },
                  "_label": {
                    "description": "Base definition for all elements in a resource.",
                    "additionalProperties": false
                  },
                  "display": {
                    "pattern": "^[ \\r\\n\\t\\S]+$",
                    "type": "string",
                    "description": "A sequence of Unicode characters"
                  },
                  "_display": {
                    "description": "Base definition for all elements in a resource.",
                    "additionalProperties": false
                  },
                  "citation": {
                    "description": "A bibliographic citation for the related artifact. This text SHOULD be formatted according to an accepted citation format.",
                    "pattern": "^[ \\r\\n\\t\\S]+$",
                    "type": "string"
                  },
                  "_citation": {
                    "description": "Base definition for all elements in a resource.",
                    "additionalProperties": false
                  },
                  "url": {
                    "description": "A url for the artifact that can be followed to access the actual content.",
                    "pattern": "^\\S*$",
                    "type": "string"
                  },
                  "_url": {
                    "description": "Base definition for all elements in a resource.",
                    "additionalProperties": false
                  },
                  "document": {
                    "description": "The document being referenced, represented as an attachment. This is exclusive with the resource element.",
                    "additionalProperties": false
                  },
                  "resource": {
                    "pattern": "^\\S*$",
                    "type": "string",
                    "description": "A URI that is a reference to a canonical URL on a FHIR resource"
                  }
                },
                "additionalProperties": false
              },
              "valueTriggerDefinition": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "properties": {
                  "id": {
                    "pattern": "^[ \\r\\n\\t\\S]+$",
                    "type": "string",
                    "description": "A sequence of Unicode characters"
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "type": "array"
                  },
                  "type": {
                    "description": "The type of triggering event.",
                    "enum": [
                      "named-event",
                      "periodic",
                      "data-changed",
                      "data-added",
                      "data-modified",
                      "data-removed",
                      "data-accessed",
                      "data-access-ended"
                    ]
                  },
                  "_type": {
                    "description": "Base definition for all elements in a resource.",
                    "additionalProperties": false
                  },
                  "name": {
                    "pattern": "^[ \\r\\n\\t\\S]+$",
                    "type": "string",
                    "description": "A sequence of Unicode characters"
                  },
                  "_name": {
                    "description": "Base definition for all elements in a resource.",
                    "additionalProperties": false
                  },
                  "timingTiming": {
                    "description": "The timing of the event (if this is a periodic trigger).",
                    "additionalProperties": false
                  },
                  "timingReference": {
                    "description": "The timing of the event (if this is a periodic trigger).",
                    "additionalProperties": false
                  },
                  "timingDate": {
                    "description": "The timing of the event (if this is a periodic trigger).",
                    "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                    "type": "string"
                  },
                  "_timingDate": {
                    "description": "Base definition for all elements in a resource.",
                    "additionalProperties": false
                  },
                  "timingDateTime": {
                    "description": "The timing of the event (if this is a periodic trigger).",
                    "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                    "type": "string"
                  },
                  "_timingDateTime": {
                    "description": "Base definition for all elements in a resource.",
                    "additionalProperties": false
                  },
                  "data": {
                    "description": "The triggering data of the event (if this is a data trigger). If more than one data is requirement is specified, then all the data requirements must be true.",
                    "items": {
                      "description": "Describes a required data item for evaluation in terms of the type of data, and optional code or date-based filters of the data.",
                      "additionalProperties": false
                    },
                    "type": "array"
                  },
                  "condition": {
                    "description": "A boolean-valued expression that is evaluated in the context of the container of the trigger definition and returns whether or not the trigger fires.",
                    "additionalProperties": false
                  }
                },
                "additionalProperties": false
              },
              "valueUsageContext": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "properties": {
                  "id": {
                    "pattern": "^[ \\r\\n\\t\\S]+$",
                    "type": "string",
                    "description": "A sequence of Unicode characters"
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "type": "array"
                  },
                  "code": {
                    "description": "A reference to a code defined by a terminology system.",
                    "additionalProperties": false
                  },
                  "valueCodeableConcept": {
                    "description": "A value that defines the context specified in this context of use. The interpretation of the value is defined by the code.",
                    "additionalProperties": false
                  },
                  "valueQuantity": {
                    "description": "A value that defines the context specified in this context of use. The interpretation of the value is defined by the code.",
                    "additionalProperties": false
                  },
                  "valueRange": {
                    "description": "A value that defines the context specified in this context of use. The interpretation of the value is defined by the code.",
                    "additionalProperties": false
                  },
                  "valueReference": {
                    "description": "A value that defines the context specified in this context of use. The interpretation of the value is defined by the code.",
                    "additionalProperties": false
                  }
                },
                "additionalProperties": false,
                "required": [
                  "code"
                ]
              },
              "valueDosage": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "properties": {
                  "id": {
                    "pattern": "^[ \\r\\n\\t\\S]+$",
                    "type": "string",
                    "description": "A sequence of Unicode characters"
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "type": "array"
                  },
                  "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                    "type": "array"
                  },
                  "sequence": {
                    "description": "Indicates the order in which the dosage instructions should be applied or interpreted.",
                    "pattern": "^-?([0]|([1-9][0-9]*))$",
                    "type": "number"
                  },
                  "_sequence": {
                    "description": "Base definition for all elements in a resource.",
                    "additionalProperties": false
                  },
                  "text": {
                    "pattern": "^[ \\r\\n\\t\\S]+$",
                    "type": "string",
                    "description": "A sequence of Unicode characters"
                  },
                  "_text": {
                    "description": "Base definition for all elements in a resource.",
                    "additionalProperties": false
                  },
                  "additionalInstruction": {
                    "description": "Supplemental instructions to the patient on how to take the medication  (e.g. \"with meals\" or\"take half to one hour before food\") or warnings for the patient about the medication (e.g. \"may cause drowsiness\" or \"avoid exposure of skin to direct sunlight or sunlamps\").",
                    "items": {
                      "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                      "additionalProperties": false
                    },
                    "type": "array"
                  },
                  "patientInstruction": {
                    "pattern": "^[ \\r\\n\\t\\S]+$",
                    "type": "string",
                    "description": "A sequence of Unicode characters"
                  },
                  "_patientInstruction": {
                    "description": "Base definition for all elements in a resource.",
                    "additionalProperties": false
                  },
                  "timing": {
                    "description": "When medication should be administered.",
                    "additionalProperties": false
                  },
                  "asNeededBoolean": {
                    "description": "Indicates whether the Medication is only taken when needed within a specific dosing schedule (Boolean option), or it indicates the precondition for taking the Medication (CodeableConcept).",
                    "pattern": "^true|false$",
                    "type": "boolean"
                  },
                  "_asNeededBoolean": {
                    "description": "Base definition for all elements in a resource.",
                    "additionalProperties": false
                  },
                  "asNeededCodeableConcept": {
                    "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                    "additionalProperties": false
                  },
                  "site": {
                    "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                    "additionalProperties": false
                  },
                  "route": {
                    "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                    "additionalProperties": false
                  },
                  "method": {
                    "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                    "additionalProperties": false
                  },
                  "doseAndRate": {
                    "description": "The amount of medication administered.",
                    "items": {
                      "description": "Indicates how the medication is/was taken or should be taken by the patient.",
                      "properties": {
                        "id": {
                          "pattern": "^[ \\r\\n\\t\\S]+$",
                          "type": "string",
                          "description": "A sequence of Unicode characters"
                        },
                        "extension": {
                          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                          "type": "array"
                        },
                        "modifierExtension": {
                          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                          "type": "array"
                        },
                        "type": {
                          "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                          "additionalProperties": false
                        },
                        "doseRange": {
                          "description": "Amount of medication per dose.",
                          "additionalProperties": false
                        },
                        "doseQuantity": {
                          "description": "Amount of medication per dose.",
                          "additionalProperties": false
                        },
                        "rateRatio": {
                          "description": "Amount of medication per unit of time.",
                          "additionalProperties": false
                        },
                        "rateRange": {
                          "description": "Amount of medication per unit of time.",
                          "additionalProperties": false
                        },
                        "rateQuantity": {
                          "description": "Amount of medication per unit of time.",
                          "additionalProperties": false
                        }
                      },
                      "additionalProperties": false
                    },
                    "type": "array"
                  },
                  "maxDosePerPeriod": {
                    "description": "Upper limit on medication per unit of time.",
                    "additionalProperties": false
                  },
                  "maxDosePerAdministration": {
                    "description": "Upper limit on medication per administration.",
                    "additionalProperties": false
                  },
                  "maxDosePerLifetime": {
                    "description": "Upper limit on medication per lifetime of the patient.",
                    "additionalProperties": false
                  }
                },
                "additionalProperties": false
              },
              "valueMeta": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "additionalProperties": false
              }
            },
            "additionalProperties": false
          },
          "type": "array"
        },
        "versionId": {
          "description": "The version specific identifier, as it appears in the version portion of the URL. This value changes when the resource is created, updated, or deleted.",
          "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
          "type": "string"
        },
        "_versionId": {
          "description": "Base definition for all elements in a resource.",
          "additionalProperties": false
        },
        "lastUpdated": {
          "description": "When the resource last changed - e.g. when the version changed.",
          "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
          "type": "string"
        },
        "_lastUpdated": {
          "description": "Base definition for all elements in a resource.",
          "additionalProperties": false
        },
        "source": {
          "description": "A uri that identifies the source system of the resource. This provides a minimal amount of [[[Provenance]]] information that can be used to track or differentiate the source of information in the resource. The source may identify another FHIR server, document, message, database, etc.",
          "pattern": "^\\S*$",
          "type": "string"
        },
        "_source": {
          "description": "Base definition for all elements in a resource.",
          "additionalProperties": false
        },
        "profile": {
          "description": "A list of profiles (references to [[[StructureDefinition]]] resources) that this resource claims to conform to. The URL is a reference to [[[StructureDefinition.url]]].",
          "type": "array"
        },
        "security": {
          "description": "Security labels applied to this resource. These tags connect specific resources to the overall security policy and infrastructure.",
          "type": "array"
        },
        "tag": {
          "description": "Tags applied to this resource. Tags are intended to be used to identify and relate resources to process and workflow, and applications are not required to consider the tags when interpreting the meaning of a resource.",
          "type": "array"
        }
      },
      "additionalProperties": false
    },
    "implicitRules": {
      "pattern": "^\\S*$",
      "type": "string",
      "description": "String of characters used to identify a name or a resource"
    },
    "_implicitRules": {
      "description": "Base definition for all elements in a resource.",
      "additionalProperties": false
    },
    "language": {
      "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
      "type": "string",
      "description": "A string which has at least one character and no leading or trailing whitespace and where there is no whitespace other than single spaces in the contents"
    },
    "_language": {
      "description": "Base definition for all elements in a resource.",
      "additionalProperties": false
    },
    "text": {
      "description": "A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it \"clinically safe\" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.",
      "properties": {
        "id": {
          "pattern": "^[ \\r\\n\\t\\S]+$",
          "type": "string",
          "description": "A sequence of Unicode characters"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "type": "array"
        },
        "status": {
          "description": "The status of the narrative - whether it's entirely generated (from just the defined data or the extensions too), or whether a human authored it and it may contain additional data.",
          "enum": [
            "generated",
            "extensions",
            "additional",
            "empty"
          ]
        },
        "_status": {
          "description": "Base definition for all elements in a resource.",
          "additionalProperties": false
        },
        "div": {
          "description": "The actual narrative content, a stripped down version of XHTML."
        }
      },
      "additionalProperties": false,
      "required": [
        "div"
      ]
    },
    "contained": {
      "description": "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope.",
      "items": {
        "oneOf": [
          {
            "description": "A financial tool for tracking value accrued for a particular purpose.  In the healthcare field, used to track charges for a patient, cost centers, etc.",
            "properties": {
              "resourceType": {
                "description": "This is a Account resource",
                "const": "Account"
              },
              "id": {
                "description": "The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.",
                "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                "type": "string"
              },
              "meta": {
                "description": "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
                "additionalProperties": false
              },
              "implicitRules": {
                "description": "A reference to a set of rules that were followed when the resource was constructed, and which must be understood when processing the content. Often, this is a reference to an implementation guide that defines the special rules along with other profiles etc.",
                "pattern": "^\\S*$",
                "type": "string"
              },
              "_implicitRules": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "language": {
                "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                "type": "string",
                "description": "A string which has at least one character and no leading or trailing whitespace and where there is no whitespace other than single spaces in the contents"
              },
              "_language": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "text": {
                "description": "A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it \"clinically safe\" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.",
                "additionalProperties": false
              },
              "contained": {
                "description": "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope.",
                "type": "array"
              },
              "extension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                "type": "array"
              },
              "modifierExtension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                "type": "array"
              },
              "identifier": {
                "description": "Unique identifier used to reference the account.  Might or might not be intended for human use (e.g. credit card number).",
                "items": {
                  "description": "An identifier - identifies some entity uniquely and unambiguously. Typically this is used for business identifiers.",
                  "additionalProperties": false
                },
                "type": "array"
              },
              "status": {
                "description": "Indicates whether the account is presently used/usable or not.",
                "enum": [
                  "active",
                  "inactive",
                  "entered-in-error",
                  "on-hold",
                  "unknown"
                ]
              },
              "_status": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "type": {
                "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                "additionalProperties": false
              },
              "name": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "_name": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "subject": {
                "description": "Identifies the entity which incurs the expenses. While the immediate recipients of services or goods might be entities related to the subject, the expenses were ultimately incurred by the subject of the Account.",
                "items": {
                  "description": "A reference from one resource to another.",
                  "additionalProperties": false
                },
                "type": "array"
              },
              "servicePeriod": {
                "description": "A time period defined by a start and end date and optionally time.",
                "additionalProperties": false
              },
              "coverage": {
                "description": "The party(s) that are responsible for covering the payment of this account, and what order should they be applied to the account.",
                "items": {
                  "description": "A financial tool for tracking value accrued for a particular purpose.  In the healthcare field, used to track charges for a patient, cost centers, etc.",
                  "properties": {
                    "id": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "type": "array"
                    },
                    "modifierExtension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                      "type": "array"
                    },
                    "coverage": {
                      "description": "A reference from one resource to another.",
                      "additionalProperties": false
                    },
                    "priority": {
                      "pattern": "^[1-9][0-9]*$",
                      "type": "number",
                      "description": "An integer with a value that is positive (e.g. >0)"
                    },
                    "_priority": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false,
                  "required": [
                    "coverage"
                  ]
                },
                "type": "array"
              },
              "owner": {
                "description": "A reference from one resource to another.",
                "additionalProperties": false
              },
              "description": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "_description": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "guarantor": {
                "description": "The parties responsible for balancing the account if other payment options fall short.",
                "items": {
                  "description": "A financial tool for tracking value accrued for a particular purpose.  In the healthcare field, used to track charges for a patient, cost centers, etc.",
                  "properties": {
                    "id": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "type": "array"
                    },
                    "modifierExtension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                      "type": "array"
                    },
                    "party": {
                      "description": "A reference from one resource to another.",
                      "additionalProperties": false
                    },
                    "onHold": {
                      "description": "A guarantor may be placed on credit hold or otherwise have their role temporarily suspended.",
                      "pattern": "^true|false$",
                      "type": "boolean"
                    },
                    "_onHold": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "period": {
                      "description": "A time period defined by a start and end date and optionally time.",
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false,
                  "required": [
                    "party"
                  ]
                },
                "type": "array"
              },
              "partOf": {
                "description": "A reference from one resource to another.",
                "additionalProperties": false
              }
            },
            "additionalProperties": false,
            "required": [
              "resourceType"
            ]
          },
          {
            "description": "This resource allows for the definition of some activity to be performed, independent of a particular patient, practitioner, or other performance context.",
            "properties": {
              "resourceType": {
                "description": "This is a ActivityDefinition resource",
                "const": "ActivityDefinition"
              },
              "id": {
                "description": "The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.",
                "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                "type": "string"
              },
              "meta": {
                "description": "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
                "additionalProperties": false
              },
              "implicitRules": {
                "description": "A reference to a set of rules that were followed when the resource was constructed, and which must be understood when processing the content. Often, this is a reference to an implementation guide that defines the special rules along with other profiles etc.",
                "pattern": "^\\S*$",
                "type": "string"
              },
              "_implicitRules": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "language": {
                "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                "type": "string",
                "description": "A string which has at least one character and no leading or trailing whitespace and where there is no whitespace other than single spaces in the contents"
              },
              "_language": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "text": {
                "description": "A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it \"clinically safe\" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.",
                "additionalProperties": false
              },
              "contained": {
                "description": "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope.",
                "type": "array"
              },
              "extension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                "type": "array"
              },
              "modifierExtension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                "type": "array"
              },
              "url": {
                "description": "An absolute URI that is used to identify this activity definition when it is referenced in a specification, model, design or an instance; also called its canonical identifier. This SHOULD be globally unique and SHOULD be a literal address at which at which an authoritative instance of this activity definition is (or will be) published. This URL can be the target of a canonical reference. It SHALL remain the same when the activity definition is stored on different servers.",
                "pattern": "^\\S*$",
                "type": "string"
              },
              "_url": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "identifier": {
                "description": "A formal identifier that is used to identify this activity definition when it is represented in other formats, or referenced in a specification, model, design or an instance.",
                "type": "array"
              },
              "version": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "_version": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "name": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "_name": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "title": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "_title": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "subtitle": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "_subtitle": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "status": {
                "description": "The status of this activity definition. Enables tracking the life-cycle of the content.",
                "enum": [
                  "draft",
                  "active",
                  "retired",
                  "unknown"
                ]
              },
              "_status": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "experimental": {
                "description": "A Boolean value to indicate that this activity definition is authored for testing purposes (or education/evaluation/marketing) and is not intended to be used for genuine usage.",
                "pattern": "^true|false$",
                "type": "boolean"
              },
              "_experimental": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "subjectCodeableConcept": {
                "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                "additionalProperties": false
              },
              "subjectReference": {
                "description": "A code or group definition that describes the intended subject of the activity being defined.",
                "additionalProperties": false
              },
              "date": {
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                "type": "string",
                "description": "A date, date-time or partial date (e.g. just year or year + month).  If hours and minutes are specified, a time zone SHALL be populated. The format is a union of the schema types gYear, gYearMonth, date and dateTime. Seconds must be provided due to schema type constraints but may be zero-filled and may be ignored.                 Dates SHALL be valid dates."
              },
              "_date": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "publisher": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "_publisher": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "contact": {
                "description": "Contact details to assist a user in finding and communicating with the publisher.",
                "type": "array"
              },
              "description": {
                "description": "A free text natural language description of the activity definition from a consumer's perspective.",
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string"
              },
              "_description": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "useContext": {
                "description": "The content was developed with a focus and intent of supporting the contexts that are listed. These contexts may be general categories (gender, age, ...) or may be references to specific programs (insurance plans, studies, ...) and may be used to assist with indexing and searching for appropriate activity definition instances.",
                "items": {
                  "description": "Specifies clinical/business/etc. metadata that can be used to retrieve, index and/or categorize an artifact. This metadata can either be specific to the applicable population (e.g., age category, DRG) or the specific context of care (e.g., venue, care setting, provider of care).",
                  "additionalProperties": false
                },
                "type": "array"
              },
              "jurisdiction": {
                "description": "A legal or geographic region in which the activity definition is intended to be used.",
                "type": "array"
              },
              "purpose": {
                "description": "Explanation of why this activity definition is needed and why it has been designed as it has.",
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string"
              },
              "_purpose": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "usage": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "_usage": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "copyright": {
                "description": "A copyright statement relating to the activity definition and/or its contents. Copyright statements are generally legal restrictions on the use and publishing of the activity definition.",
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string"
              },
              "_copyright": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "approvalDate": {
                "description": "The date on which the resource content was approved by the publisher. Approval happens once when the content is officially approved for usage.",
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                "type": "string"
              },
              "_approvalDate": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "lastReviewDate": {
                "description": "The date on which the resource content was last reviewed. Review happens periodically after approval but does not change the original approval date.",
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                "type": "string"
              },
              "_lastReviewDate": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "effectivePeriod": {
                "description": "The period during which the activity definition content was or is planned to be in active use.",
                "additionalProperties": false
              },
              "topic": {
                "description": "Descriptive topics related to the content of the activity. Topics provide a high-level categorization of the activity that can be useful for filtering and searching.",
                "type": "array"
              },
              "author": {
                "description": "An individiual or organization primarily involved in the creation and maintenance of the content.",
                "type": "array"
              },
              "editor": {
                "description": "An individual or organization primarily responsible for internal coherence of the content.",
                "type": "array"
              },
              "reviewer": {
                "description": "An individual or organization primarily responsible for review of some aspect of the content.",
                "type": "array"
              },
              "endorser": {
                "description": "An individual or organization responsible for officially endorsing the content for use in some setting.",
                "type": "array"
              },
              "relatedArtifact": {
                "description": "Related artifacts such as additional documentation, justification, or bibliographic references.",
                "items": {
                  "description": "Related artifacts such as additional documentation, justification, or bibliographic references.",
                  "additionalProperties": false
                },
                "type": "array"
              },
              "library": {
                "description": "A reference to a Library resource containing any formal logic used by the activity definition.",
                "type": "array"
              },
              "kind": {
                "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                "type": "string",
                "description": "A string which has at least one character and no leading or trailing whitespace and where there is no whitespace other than single spaces in the contents"
              },
              "_kind": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "profile": {
                "pattern": "^\\S*$",
                "type": "string",
                "description": "A URI that is a reference to a canonical URL on a FHIR resource"
              },
              "code": {
                "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                "additionalProperties": false
              },
              "intent": {
                "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                "type": "string",
                "description": "A string which has at least one character and no leading or trailing whitespace and where there is no whitespace other than single spaces in the contents"
              },
              "_intent": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "priority": {
                "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                "type": "string",
                "description": "A string which has at least one character and no leading or trailing whitespace and where there is no whitespace other than single spaces in the contents"
              },
              "_priority": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "doNotPerform": {
                "description": "Set this to true if the definition is to indicate that a particular activity should NOT be performed. If true, this element should be interpreted to reinforce a negative coding. For example NPO as a code with a doNotPerform of true would still indicate to NOT perform the action.",
                "pattern": "^true|false$",
                "type": "boolean"
              },
              "_doNotPerform": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "timingTiming": {
                "description": "The period, timing or frequency upon which the described activity is to occur.",
                "additionalProperties": false
              },
              "timingDateTime": {
                "description": "The period, timing or frequency upon which the described activity is to occur.",
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                "type": "string"
              },
              "_timingDateTime": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "timingAge": {
                "description": "The period, timing or frequency upon which the described activity is to occur.",
                "additionalProperties": false
              },
              "timingPeriod": {
                "description": "The period, timing or frequency upon which the described activity is to occur.",
                "additionalProperties": false
              },
              "timingRange": {
                "description": "The period, timing or frequency upon which the described activity is to occur.",
                "additionalProperties": false
              },
              "timingDuration": {
                "description": "The period, timing or frequency upon which the described activity is to occur.",
                "additionalProperties": false
              },
              "location": {
                "description": "Identifies the facility where the activity will occur; e.g. home, hospital, specific clinic, etc.",
                "additionalProperties": false
              },
              "participant": {
                "description": "Indicates who should participate in performing the action described.",
                "items": {
                  "description": "This resource allows for the definition of some activity to be performed, independent of a particular patient, practitioner, or other performance context.",
                  "properties": {
                    "id": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "type": "array"
                    },
                    "modifierExtension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                      "type": "array"
                    },
                    "type": {
                      "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                      "type": "string",
                      "description": "A string which has at least one character and no leading or trailing whitespace and where there is no whitespace other than single spaces in the contents"
                    },
                    "_type": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "role": {
                      "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                },
                "type": "array"
              },
              "productReference": {
                "description": "Identifies the food, drug or other product being consumed or supplied in the activity.",
                "additionalProperties": false
              },
              "productCodeableConcept": {
                "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                "additionalProperties": false
              },
              "quantity": {
                "description": "Identifies the quantity expected to be consumed at once (per dose, per meal, etc.).",
                "additionalProperties": false
              },
              "dosage": {
                "description": "Provides detailed dosage instructions in the same way that they are described for MedicationRequest resources.",
                "items": {
                  "description": "Indicates how the medication is/was taken or should be taken by the patient.",
                  "additionalProperties": false
                },
                "type": "array"
              },
              "bodySite": {
                "description": "Indicates the sites on the subject's body where the procedure should be performed (I.e. the target sites).",
                "type": "array"
              },
              "specimenRequirement": {
                "description": "Defines specimen requirements for the action to be performed, such as required specimens for a lab test.",
                "type": "array"
              },
              "observationRequirement": {
                "description": "Defines observation requirements for the action to be performed, such as body weight or surface area.",
                "type": "array"
              },
              "observationResultRequirement": {
                "description": "Defines the observations that are expected to be produced by the action.",
                "type": "array"
              },
              "transform": {
                "pattern": "^\\S*$",
                "type": "string",
                "description": "A URI that is a reference to a canonical URL on a FHIR resource"
              },
              "dynamicValue": {
                "description": "Dynamic values that will be evaluated to produce values for elements of the resulting resource. For example, if the dosage of a medication must be computed based on the patient's weight, a dynamic value would be used to specify an expression that calculated the weight, and the path on the request resource that would contain the result.",
                "items": {
                  "description": "This resource allows for the definition of some activity to be performed, independent of a particular patient, practitioner, or other performance context.",
                  "properties": {
                    "id": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "type": "array"
                    },
                    "modifierExtension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                      "type": "array"
                    },
                    "path": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "_path": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "expression": {
                      "description": "An expression specifying the value of the customized element.",
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false,
                  "required": [
                    "expression"
                  ]
                },
                "type": "array"
              }
            },
            "additionalProperties": false,
            "required": [
              "resourceType"
            ]
          },
          {
            "description": "Actual or  potential/avoided event causing unintended physical injury resulting from or contributed to by medical care, a research study or other healthcare setting factors that requires additional monitoring, treatment, or hospitalization, or that results in death.",
            "properties": {
              "resourceType": {
                "description": "This is a AdverseEvent resource",
                "const": "AdverseEvent"
              },
              "id": {
                "description": "The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.",
                "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                "type": "string"
              },
              "meta": {
                "description": "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
                "additionalProperties": false
              },
              "implicitRules": {
                "description": "A reference to a set of rules that were followed when the resource was constructed, and which must be understood when processing the content. Often, this is a reference to an implementation guide that defines the special rules along with other profiles etc.",
                "pattern": "^\\S*$",
                "type": "string"
              },
              "_implicitRules": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "language": {
                "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                "type": "string",
                "description": "A string which has at least one character and no leading or trailing whitespace and where there is no whitespace other than single spaces in the contents"
              },
              "_language": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "text": {
                "description": "A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it \"clinically safe\" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.",
                "additionalProperties": false
              },
              "contained": {
                "description": "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope.",
                "type": "array"
              },
              "extension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                "type": "array"
              },
              "modifierExtension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                "type": "array"
              },
              "identifier": {
                "description": "An identifier - identifies some entity uniquely and unambiguously. Typically this is used for business identifiers.",
                "additionalProperties": false
              },
              "actuality": {
                "description": "Whether the event actually happened, or just had the potential to. Note that this is independent of whether anyone was affected or harmed or how severely.",
                "enum": [
                  "actual",
                  "potential"
                ]
              },
              "_actuality": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "category": {
                "description": "The overall type of event, intended for search and filtering purposes.",
                "type": "array"
              },
              "event": {
                "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                "additionalProperties": false
              },
              "subject": {
                "description": "A reference from one resource to another.",
                "additionalProperties": false
              },
              "encounter": {
                "description": "A reference from one resource to another.",
                "additionalProperties": false
              },
              "date": {
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                "type": "string",
                "description": "A date, date-time or partial date (e.g. just year or year + month).  If hours and minutes are specified, a time zone SHALL be populated. The format is a union of the schema types gYear, gYearMonth, date and dateTime. Seconds must be provided due to schema type constraints but may be zero-filled and may be ignored.                 Dates SHALL be valid dates."
              },
              "_date": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "detected": {
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                "type": "string",
                "description": "A date, date-time or partial date (e.g. just year or year + month).  If hours and minutes are specified, a time zone SHALL be populated. The format is a union of the schema types gYear, gYearMonth, date and dateTime. Seconds must be provided due to schema type constraints but may be zero-filled and may be ignored.                 Dates SHALL be valid dates."
              },
              "_detected": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "recordedDate": {
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                "type": "string",
                "description": "A date, date-time or partial date (e.g. just year or year + month).  If hours and minutes are specified, a time zone SHALL be populated. The format is a union of the schema types gYear, gYearMonth, date and dateTime. Seconds must be provided due to schema type constraints but may be zero-filled and may be ignored.                 Dates SHALL be valid dates."
              },
              "_recordedDate": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "resultingCondition": {
                "description": "Includes information about the reaction that occurred as a result of exposure to a substance (for example, a drug or a chemical).",
                "type": "array"
              },
              "location": {
                "description": "A reference from one resource to another.",
                "additionalProperties": false
              },
              "seriousness": {
                "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                "additionalProperties": false
              },
              "severity": {
                "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                "additionalProperties": false
              },
              "outcome": {
                "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                "additionalProperties": false
              },
              "recorder": {
                "description": "A reference from one resource to another.",
                "additionalProperties": false
              },
              "contributor": {
                "description": "Parties that may or should contribute or have contributed information to the adverse event, which can consist of one or more activities.  Such information includes information leading to the decision to perform the activity and how to perform the activity (e.g. consultant), information that the activity itself seeks to reveal (e.g. informant of clinical history), or information about what activity was performed (e.g. informant witness).",
                "type": "array"
              },
              "suspectEntity": {
                "description": "Describes the entity that is suspected to have caused the adverse event.",
                "items": {
                  "description": "Actual or  potential/avoided event causing unintended physical injury resulting from or contributed to by medical care, a research study or other healthcare setting factors that requires additional monitoring, treatment, or hospitalization, or that results in death.",
                  "properties": {
                    "id": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "type": "array"
                    },
                    "modifierExtension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                      "type": "array"
                    },
                    "instance": {
                      "description": "A reference from one resource to another.",
                      "additionalProperties": false
                    },
                    "causality": {
                      "description": "Information on the possible cause of the event.",
                      "items": {
                        "description": "Actual or  potential/avoided event causing unintended physical injury resulting from or contributed to by medical care, a research study or other healthcare setting factors that requires additional monitoring, treatment, or hospitalization, or that results in death.",
                        "properties": {
                          "id": {
                            "pattern": "^[ \\r\\n\\t\\S]+$",
                            "type": "string",
                            "description": "A sequence of Unicode characters"
                          },
                          "extension": {
                            "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                            "type": "array"
                          },
                          "modifierExtension": {
                            "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                            "type": "array"
                          },
                          "assessment": {
                            "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                            "additionalProperties": false
                          },
                          "productRelatedness": {
                            "pattern": "^[ \\r\\n\\t\\S]+$",
                            "type": "string",
                            "description": "A sequence of Unicode characters"
                          },
                          "_productRelatedness": {
                            "description": "Base definition for all elements in a resource.",
                            "additionalProperties": false
                          },
                          "author": {
                            "description": "A reference from one resource to another.",
                            "additionalProperties": false
                          },
                          "method": {
                            "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                            "additionalProperties": false
                          }
                        },
                        "additionalProperties": false
                      },
                      "type": "array"
                    }
                  },
                  "additionalProperties": false,
                  "required": [
                    "instance"
                  ]
                },
                "type": "array"
              },
              "subjectMedicalHistory": {
                "description": "AdverseEvent.subjectMedicalHistory.",
                "type": "array"
              },
              "referenceDocument": {
                "description": "AdverseEvent.referenceDocument.",
                "type": "array"
              },
              "study": {
                "description": "AdverseEvent.study.",
                "type": "array"
              }
            },
            "additionalProperties": false,
            "required": [
              "subject",
              "resourceType"
            ]
          },
          {
            "description": "Risk of harmful or undesirable, physiological response which is unique to an individual and associated with exposure to a substance.",
            "properties": {
              "resourceType": {
                "description": "This is a AllergyIntolerance resource",
                "const": "AllergyIntolerance"
              },
              "id": {
                "description": "The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.",
                "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                "type": "string"
              },
              "meta": {
                "description": "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
                "additionalProperties": false
              },
              "implicitRules": {
                "description": "A reference to a set of rules that were followed when the resource was constructed, and which must be understood when processing the content. Often, this is a reference to an implementation guide that defines the special rules along with other profiles etc.",
                "pattern": "^\\S*$",
                "type": "string"
              },
              "_implicitRules": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "language": {
                "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                "type": "string",
                "description": "A string which has at least one character and no leading or trailing whitespace and where there is no whitespace other than single spaces in the contents"
              },
              "_language": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "text": {
                "description": "A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it \"clinically safe\" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.",
                "additionalProperties": false
              },
              "contained": {
                "description": "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope.",
                "type": "array"
              },
              "extension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                "type": "array"
              },
              "modifierExtension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                "type": "array"
              },
              "identifier": {
                "description": "Business identifiers assigned to this AllergyIntolerance by the performer or other systems which remain constant as the resource is updated and propagates from server to server.",
                "type": "array"
              },
              "clinicalStatus": {
                "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                "additionalProperties": false
              },
              "verificationStatus": {
                "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                "additionalProperties": false
              },
              "type": {
                "description": "Identification of the underlying physiological mechanism for the reaction risk.",
                "enum": [
                  "allergy",
                  "intolerance"
                ]
              },
              "_type": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "category": {
                "description": "Category of the identified substance.",
                "items": {
                  "enum": [
                    "food",
                    "medication",
                    "environment",
                    "biologic"
                  ]
                },
                "type": "array"
              },
              "_category": {
                "description": "Extensions for category",
                "type": "array"
              },
              "criticality": {
                "description": "Estimate of the potential clinical harm, or seriousness, of the reaction to the identified substance.",
                "enum": [
                  "low",
                  "high",
                  "unable-to-assess"
                ]
              },
              "_criticality": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "code": {
                "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                "additionalProperties": false
              },
              "patient": {
                "description": "A reference from one resource to another.",
                "additionalProperties": false
              },
              "encounter": {
                "description": "A reference from one resource to another.",
                "additionalProperties": false
              },
              "onsetDateTime": {
                "description": "Estimated or actual date,  date-time, or age when allergy or intolerance was identified.",
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                "type": "string"
              },
              "_onsetDateTime": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "onsetAge": {
                "description": "Estimated or actual date,  date-time, or age when allergy or intolerance was identified.",
                "additionalProperties": false
              },
              "onsetPeriod": {
                "description": "Estimated or actual date,  date-time, or age when allergy or intolerance was identified.",
                "additionalProperties": false
              },
              "onsetRange": {
                "description": "Estimated or actual date,  date-time, or age when allergy or intolerance was identified.",
                "additionalProperties": false
              },
              "onsetString": {
                "description": "Estimated or actual date,  date-time, or age when allergy or intolerance was identified.",
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string"
              },
              "_onsetString": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "recordedDate": {
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                "type": "string",
                "description": "A date, date-time or partial date (e.g. just year or year + month).  If hours and minutes are specified, a time zone SHALL be populated. The format is a union of the schema types gYear, gYearMonth, date and dateTime. Seconds must be provided due to schema type constraints but may be zero-filled and may be ignored.                 Dates SHALL be valid dates."
              },
              "_recordedDate": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "recorder": {
                "description": "A reference from one resource to another.",
                "additionalProperties": false
              },
              "asserter": {
                "description": "A reference from one resource to another.",
                "additionalProperties": false
              },
              "lastOccurrence": {
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                "type": "string",
                "description": "A date, date-time or partial date (e.g. just year or year + month).  If hours and minutes are specified, a time zone SHALL be populated. The format is a union of the schema types gYear, gYearMonth, date and dateTime. Seconds must be provided due to schema type constraints but may be zero-filled and may be ignored.                 Dates SHALL be valid dates."
              },
              "_lastOccurrence": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "note": {
                "description": "Additional narrative about the propensity for the Adverse Reaction, not captured in other fields.",
                "items": {
                  "description": "A  text note which also  contains information about who made the statement and when.",
                  "additionalProperties": false
                },
                "type": "array"
              },
              "reaction": {
                "description": "Details about each adverse reaction event linked to exposure to the identified substance.",
                "items": {
                  "description": "Risk of harmful or undesirable, physiological response which is unique to an individual and associated with exposure to a substance.",
                  "properties": {
                    "id": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "type": "array"
                    },
                    "modifierExtension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                      "type": "array"
                    },
                    "substance": {
                      "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                      "additionalProperties": false
                    },
                    "manifestation": {
                      "description": "Clinical symptoms and/or signs that are observed or associated with the adverse reaction event.",
                      "type": "array"
                    },
                    "description": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "_description": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "onset": {
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                      "type": "string",
                      "description": "A date, date-time or partial date (e.g. just year or year + month).  If hours and minutes are specified, a time zone SHALL be populated. The format is a union of the schema types gYear, gYearMonth, date and dateTime. Seconds must be provided due to schema type constraints but may be zero-filled and may be ignored.                 Dates SHALL be valid dates."
                    },
                    "_onset": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "severity": {
                      "description": "Clinical assessment of the severity of the reaction event as a whole, potentially considering multiple different manifestations.",
                      "enum": [
                        "mild",
                        "moderate",
                        "severe"
                      ]
                    },
                    "_severity": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "exposureRoute": {
                      "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                      "additionalProperties": false
                    },
                    "note": {
                      "description": "Additional text about the adverse reaction event not captured in other fields.",
                      "type": "array"
                    }
                  },
                  "additionalProperties": false,
                  "required": [
                    "manifestation"
                  ]
                },
                "type": "array"
              }
            },
            "additionalProperties": false,
            "required": [
              "patient",
              "resourceType"
            ]
          },
          {
            "description": "A booking of a healthcare event among patient(s), practitioner(s), related person(s) and/or device(s) for a specific date/time. This may result in one or more Encounter(s).",
            "properties": {
              "resourceType": {
                "description": "This is a Appointment resource",
                "const": "Appointment"
              },
              "id": {
                "description": "The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.",
                "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                "type": "string"
              },
              "meta": {
                "description": "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
                "additionalProperties": false
              },
              "implicitRules": {
                "description": "A reference to a set of rules that were followed when the resource was constructed, and which must be understood when processing the content. Often, this is a reference to an implementation guide that defines the special rules along with other profiles etc.",
                "pattern": "^\\S*$",
                "type": "string"
              },
              "_implicitRules": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "language": {
                "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                "type": "string",
                "description": "A string which has at least one character and no leading or trailing whitespace and where there is no whitespace other than single spaces in the contents"
              },
              "_language": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "text": {
                "description": "A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it \"clinically safe\" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.",
                "additionalProperties": false
              },
              "contained": {
                "description": "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope.",
                "type": "array"
              },
              "extension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                "type": "array"
              },
              "modifierExtension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                "type": "array"
              },
              "identifier": {
                "description": "This records identifiers associated with this appointment concern that are defined by business processes and/or used to refer to it when a direct URL reference to the resource itself is not appropriate (e.g. in CDA documents, or in written / printed documentation).",
                "type": "array"
              },
              "status": {
                "description": "The overall status of the Appointment. Each of the participants has their own participation status which indicates their involvement in the process, however this status indicates the shared status.",
                "enum": [
                  "proposed",
                  "pending",
                  "booked",
                  "arrived",
                  "fulfilled",
                  "cancelled",
                  "noshow",
                  "entered-in-error",
                  "checked-in",
                  "waitlist"
                ]
              },
              "_status": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "cancelationReason": {
                "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                "additionalProperties": false
              },
              "serviceCategory": {
                "description": "A broad categorization of the service that is to be performed during this appointment.",
                "type": "array"
              },
              "serviceType": {
                "description": "The specific service that is to be performed during this appointment.",
                "type": "array"
              },
              "specialty": {
                "description": "The specialty of a practitioner that would be required to perform the service requested in this appointment.",
                "type": "array"
              },
              "appointmentType": {
                "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                "additionalProperties": false
              },
              "reasonCode": {
                "description": "The coded reason that this appointment is being scheduled. This is more clinical than administrative.",
                "type": "array"
              },
              "reasonReference": {
                "description": "Reason the appointment has been scheduled to take place, as specified using information from another resource. When the patient arrives and the encounter begins it may be used as the admission diagnosis. The indication will typically be a Condition (with other resources referenced in the evidence.detail), or a Procedure.",
                "type": "array"
              },
              "priority": {
                "description": "The priority of the appointment. Can be used to make informed decisions if needing to re-prioritize appointments. (The iCal Standard specifies 0 as undefined, 1 as highest, 9 as lowest priority).",
                "pattern": "^[0]|([1-9][0-9]*)$",
                "type": "number"
              },
              "_priority": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "description": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "_description": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "supportingInformation": {
                "description": "Additional information to support the appointment provided when making the appointment.",
                "type": "array"
              },
              "start": {
                "description": "Date/Time that the appointment is to take place.",
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
                "type": "string"
              },
              "_start": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "end": {
                "description": "Date/Time that the appointment is to conclude.",
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
                "type": "string"
              },
              "_end": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "minutesDuration": {
                "description": "Number of minutes that the appointment is to take. This can be less than the duration between the start and end times.  For example, where the actual time of appointment is only an estimate or if a 30 minute appointment is being requested, but any time would work.  Also, if there is, for example, a planned 15 minute break in the middle of a long appointment, the duration may be 15 minutes less than the difference between the start and end.",
                "pattern": "^[1-9][0-9]*$",
                "type": "number"
              },
              "_minutesDuration": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "slot": {
                "description": "The slots from the participants' schedules that will be filled by the appointment.",
                "type": "array"
              },
              "created": {
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                "type": "string",
                "description": "A date, date-time or partial date (e.g. just year or year + month).  If hours and minutes are specified, a time zone SHALL be populated. The format is a union of the schema types gYear, gYearMonth, date and dateTime. Seconds must be provided due to schema type constraints but may be zero-filled and may be ignored.                 Dates SHALL be valid dates."
              },
              "_created": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "comment": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "_comment": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "patientInstruction": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "_patientInstruction": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "basedOn": {
                "description": "The service request this appointment is allocated to assess (e.g. incoming referral or procedure request).",
                "type": "array"
              },
              "participant": {
                "description": "List of participants involved in the appointment.",
                "items": {
                  "description": "A booking of a healthcare event among patient(s), practitioner(s), related person(s) and/or device(s) for a specific date/time. This may result in one or more Encounter(s).",
                  "properties": {
                    "id": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "type": "array"
                    },
                    "modifierExtension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                      "type": "array"
                    },
                    "type": {
                      "description": "Role of participant in the appointment.",
                      "type": "array"
                    },
                    "actor": {
                      "description": "A reference from one resource to another.",
                      "additionalProperties": false
                    },
                    "required": {
                      "description": "Whether this participant is required to be present at the meeting. This covers a use-case where two doctors need to meet to discuss the results for a specific patient, and the patient is not required to be present.",
                      "enum": [
                        "required",
                        "optional",
                        "information-only"
                      ]
                    },
                    "_required": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "status": {
                      "description": "Participation status of the actor.",
                      "enum": [
                        "accepted",
                        "declined",
                        "tentative",
                        "needs-action"
                      ]
                    },
                    "_status": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "period": {
                      "description": "Participation period of the actor.",
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                },
                "type": "array"
              },
              "requestedPeriod": {
                "description": "A set of date ranges (potentially including times) that the appointment is preferred to be scheduled within.\n\nThe duration (usually in minutes) could also be provided to indicate the length of the appointment to fill and populate the start/end times for the actual allocated time. However, in other situations the duration may be calculated by the scheduling system.",
                "items": {
                  "description": "A time period defined by a start and end date and optionally time.",
                  "additionalProperties": false
                },
                "type": "array"
              }
            },
            "additionalProperties": false,
            "required": [
              "participant",
              "resourceType"
            ]
          },
          {
            "description": "A reply to an appointment request for a patient and/or practitioner(s), such as a confirmation or rejection.",
            "properties": {
              "resourceType": {
                "description": "This is a AppointmentResponse resource",
                "const": "AppointmentResponse"
              },
              "id": {
                "description": "The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.",
                "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                "type": "string"
              },
              "meta": {
                "description": "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
                "additionalProperties": false
              },
              "implicitRules": {
                "description": "A reference to a set of rules that were followed when the resource was constructed, and which must be understood when processing the content. Often, this is a reference to an implementation guide that defines the special rules along with other profiles etc.",
                "pattern": "^\\S*$",
                "type": "string"
              },
              "_implicitRules": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "language": {
                "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                "type": "string",
                "description": "A string which has at least one character and no leading or trailing whitespace and where there is no whitespace other than single spaces in the contents"
              },
              "_language": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "text": {
                "description": "A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it \"clinically safe\" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.",
                "additionalProperties": false
              },
              "contained": {
                "description": "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope.",
                "type": "array"
              },
              "extension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                "type": "array"
              },
              "modifierExtension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                "type": "array"
              },
              "identifier": {
                "description": "This records identifiers associated with this appointment response concern that are defined by business processes and/ or used to refer to it when a direct URL reference to the resource itself is not appropriate.",
                "type": "array"
              },
              "appointment": {
                "description": "A reference from one resource to another.",
                "additionalProperties": false
              },
              "start": {
                "description": "Date/Time that the appointment is to take place, or requested new start time.",
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
                "type": "string"
              },
              "_start": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "end": {
                "description": "This may be either the same as the appointment request to confirm the details of the appointment, or alternately a new time to request a re-negotiation of the end time.",
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
                "type": "string"
              },
              "_end": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "participantType": {
                "description": "Role of participant in the appointment.",
                "type": "array"
              },
              "actor": {
                "description": "A reference from one resource to another.",
                "additionalProperties": false
              },
              "participantStatus": {
                "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                "type": "string",
                "description": "A string which has at least one character and no leading or trailing whitespace and where there is no whitespace other than single spaces in the contents"
              },
              "_participantStatus": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "comment": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "_comment": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              }
            },
            "additionalProperties": false,
            "required": [
              "appointment",
              "resourceType"
            ]
          },
          {
            "description": "A record of an event made for purposes of maintaining a security log. Typical uses include detection of intrusion attempts and monitoring for inappropriate usage.",
            "properties": {
              "resourceType": {
                "description": "This is a AuditEvent resource",
                "const": "AuditEvent"
              },
              "id": {
                "description": "The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.",
                "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                "type": "string"
              },
              "meta": {
                "description": "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
                "additionalProperties": false
              },
              "implicitRules": {
                "description": "A reference to a set of rules that were followed when the resource was constructed, and which must be understood when processing the content. Often, this is a reference to an implementation guide that defines the special rules along with other profiles etc.",
                "pattern": "^\\S*$",
                "type": "string"
              },
              "_implicitRules": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "language": {
                "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                "type": "string",
                "description": "A string which has at least one character and no leading or trailing whitespace and where there is no whitespace other than single spaces in the contents"
              },
              "_language": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "text": {
                "description": "A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it \"clinically safe\" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.",
                "additionalProperties": false
              },
              "contained": {
                "description": "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope.",
                "type": "array"
              },
              "extension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                "type": "array"
              },
              "modifierExtension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                "type": "array"
              },
              "type": {
                "description": "A reference to a code defined by a terminology system.",
                "additionalProperties": false
              },
              "subtype": {
                "description": "Identifier for the category of event.",
                "type": "array"
              },
              "action": {
                "description": "Indicator for type of action performed during the event that generated the audit.",
                "enum": [
                  "C",
                  "R",
                  "U",
                  "D",
                  "E"
                ]
              },
              "_action": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "period": {
                "description": "A time period defined by a start and end date and optionally time.",
                "additionalProperties": false
              },
              "recorded": {
                "description": "The time when the event was recorded.",
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
                "type": "string"
              },
              "_recorded": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "outcome": {
                "description": "Indicates whether the event succeeded or failed.",
                "enum": [
                  "0",
                  "4",
                  "8",
                  "12"
                ]
              },
              "_outcome": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "outcomeDesc": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "_outcomeDesc": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "purposeOfEvent": {
                "description": "The purposeOfUse (reason) that was used during the event being recorded.",
                "type": "array"
              },
              "agent": {
                "description": "An actor taking an active role in the event or activity that is logged.",
                "items": {
                  "description": "A record of an event made for purposes of maintaining a security log. Typical uses include detection of intrusion attempts and monitoring for inappropriate usage.",
                  "properties": {
                    "id": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "type": "array"
                    },
                    "modifierExtension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                      "type": "array"
                    },
                    "type": {
                      "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                      "additionalProperties": false
                    },
                    "role": {
                      "description": "The security role that the user was acting under, that come from local codes defined by the access control security system (e.g. RBAC, ABAC) used in the local context.",
                      "type": "array"
                    },
                    "who": {
                      "description": "A reference from one resource to another.",
                      "additionalProperties": false
                    },
                    "altId": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "_altId": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "name": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "_name": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "requestor": {
                      "description": "Indicator that the user is or is not the requestor, or initiator, for the event being audited.",
                      "pattern": "^true|false$",
                      "type": "boolean"
                    },
                    "_requestor": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "location": {
                      "description": "A reference from one resource to another.",
                      "additionalProperties": false
                    },
                    "policy": {
                      "description": "The policy or plan that authorized the activity being recorded. Typically, a single activity may have multiple applicable policies, such as patient consent, guarantor funding, etc. The policy would also indicate the security token used.",
                      "items": {
                        "pattern": "^\\S*$",
                        "type": "string",
                        "description": "String of characters used to identify a name or a resource"
                      },
                      "type": "array"
                    },
                    "_policy": {
                      "description": "Extensions for policy",
                      "type": "array"
                    },
                    "media": {
                      "description": "A reference to a code defined by a terminology system.",
                      "additionalProperties": false
                    },
                    "network": {
                      "description": "Logical network location for application activity, if the activity has a network location.",
                      "properties": {
                        "id": {
                          "pattern": "^[ \\r\\n\\t\\S]+$",
                          "type": "string",
                          "description": "A sequence of Unicode characters"
                        },
                        "extension": {
                          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                          "type": "array"
                        },
                        "modifierExtension": {
                          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                          "type": "array"
                        },
                        "address": {
                          "pattern": "^[ \\r\\n\\t\\S]+$",
                          "type": "string",
                          "description": "A sequence of Unicode characters"
                        },
                        "_address": {
                          "description": "Base definition for all elements in a resource.",
                          "additionalProperties": false
                        },
                        "type": {
                          "description": "An identifier for the type of network access point that originated the audit event.",
                          "enum": [
                            "1",
                            "2",
                            "3",
                            "4",
                            "5"
                          ]
                        },
                        "_type": {
                          "description": "Base definition for all elements in a resource.",
                          "additionalProperties": false
                        }
                      },
                      "additionalProperties": false
                    },
                    "purposeOfUse": {
                      "description": "The reason (purpose of use), specific to this agent, that was used during the event being recorded.",
                      "type": "array"
                    }
                  },
                  "additionalProperties": false
                },
                "type": "array"
              },
              "source": {
                "description": "The system that is reporting the event.",
                "properties": {
                  "id": {
                    "pattern": "^[ \\r\\n\\t\\S]+$",
                    "type": "string",
                    "description": "A sequence of Unicode characters"
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "type": "array"
                  },
                  "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                    "type": "array"
                  },
                  "site": {
                    "pattern": "^[ \\r\\n\\t\\S]+$",
                    "type": "string",
                    "description": "A sequence of Unicode characters"
                  },
                  "_site": {
                    "description": "Base definition for all elements in a resource.",
                    "additionalProperties": false
                  },
                  "observer": {
                    "description": "A reference from one resource to another.",
                    "additionalProperties": false
                  },
                  "type": {
                    "description": "Code specifying the type of source where event originated.",
                    "type": "array"
                  }
                },
                "additionalProperties": false,
                "required": [
                  "observer"
                ]
              },
              "entity": {
                "description": "Specific instances of data or objects that have been accessed.",
                "items": {
                  "description": "A record of an event made for purposes of maintaining a security log. Typical uses include detection of intrusion attempts and monitoring for inappropriate usage.",
                  "properties": {
                    "id": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "type": "array"
                    },
                    "modifierExtension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                      "type": "array"
                    },
                    "what": {
                      "description": "A reference from one resource to another.",
                      "additionalProperties": false
                    },
                    "type": {
                      "description": "A reference to a code defined by a terminology system.",
                      "additionalProperties": false
                    },
                    "role": {
                      "description": "A reference to a code defined by a terminology system.",
                      "additionalProperties": false
                    },
                    "lifecycle": {
                      "description": "A reference to a code defined by a terminology system.",
                      "additionalProperties": false
                    },
                    "securityLabel": {
                      "description": "Security labels for the identified entity.",
                      "type": "array"
                    },
                    "name": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "_name": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "description": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "_description": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "query": {
                      "description": "The query parameters for a query-type entities.",
                      "type": "string"
                    },
                    "_query": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "detail": {
                      "description": "Tagged value pairs for conveying additional information about the entity.",
                      "items": {
                        "description": "A record of an event made for purposes of maintaining a security log. Typical uses include detection of intrusion attempts and monitoring for inappropriate usage.",
                        "properties": {
                          "id": {
                            "pattern": "^[ \\r\\n\\t\\S]+$",
                            "type": "string",
                            "description": "A sequence of Unicode characters"
                          },
                          "extension": {
                            "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                            "type": "array"
                          },
                          "modifierExtension": {
                            "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                            "type": "array"
                          },
                          "type": {
                            "pattern": "^[ \\r\\n\\t\\S]+$",
                            "type": "string",
                            "description": "A sequence of Unicode characters"
                          },
                          "_type": {
                            "description": "Base definition for all elements in a resource.",
                            "additionalProperties": false
                          },
                          "valueString": {
                            "description": "The  value of the extra detail.",
                            "pattern": "^[ \\r\\n\\t\\S]+$",
                            "type": "string"
                          },
                          "_valueString": {
                            "description": "Base definition for all elements in a resource.",
                            "additionalProperties": false
                          },
                          "valueBase64Binary": {
                            "description": "The  value of the extra detail.",
                            "pattern": "^(\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+$",
                            "type": "string"
                          },
                          "_valueBase64Binary": {
                            "description": "Base definition for all elements in a resource.",
                            "additionalProperties": false
                          }
                        },
                        "additionalProperties": false
                      },
                      "type": "array"
                    }
                  },
                  "additionalProperties": false
                },
                "type": "array"
              }
            },
            "additionalProperties": false,
            "required": [
              "agent",
              "source",
              "type",
              "resourceType"
            ]
          },
          {
            "description": "Basic is used for handling concepts not yet defined in FHIR, narrative-only resources that don't map to an existing resource, and custom resources not appropriate for inclusion in the FHIR specification.",
            "properties": {
              "resourceType": {
                "description": "This is a Basic resource",
                "const": "Basic"
              },
              "id": {
                "description": "The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.",
                "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                "type": "string"
              },
              "meta": {
                "description": "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
                "additionalProperties": false
              },
              "implicitRules": {
                "pattern": "^\\S*$",
                "type": "string",
                "description": "String of characters used to identify a name or a resource"
              },
              "_implicitRules": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "language": {
                "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                "type": "string",
                "description": "A string which has at least one character and no leading or trailing whitespace and where there is no whitespace other than single spaces in the contents"
              },
              "_language": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "text": {
                "description": "A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it \"clinically safe\" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.",
                "additionalProperties": false
              },
              "contained": {
                "description": "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope.",
                "type": "array"
              },
              "extension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                "type": "array"
              },
              "modifierExtension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                "type": "array"
              },
              "identifier": {
                "description": "Identifier assigned to the resource for business purposes, outside the context of FHIR.",
                "type": "array"
              },
              "code": {
                "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                "additionalProperties": false
              },
              "subject": {
                "description": "A reference from one resource to another.",
                "additionalProperties": false
              },
              "created": {
                "description": "Identifies when the resource was first created.",
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                "type": "string"
              },
              "_created": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "author": {
                "description": "A reference from one resource to another.",
                "additionalProperties": false
              }
            },
            "additionalProperties": false,
            "required": [
              "code",
              "resourceType"
            ]
          },
          {
            "description": "A resource that represents the data of a single raw artifact as digital content accessible in its native format.  A Binary resource can contain any content, whether text, image, pdf, zip archive, etc.",
            "properties": {
              "resourceType": {
                "description": "This is a Binary resource",
                "const": "Binary"
              },
              "id": {
                "description": "The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.",
                "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                "type": "string"
              },
              "meta": {
                "description": "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
                "additionalProperties": false
              },
              "implicitRules": {
                "pattern": "^\\S*$",
                "type": "string",
                "description": "String of characters used to identify a name or a resource"
              },
              "_implicitRules": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "language": {
                "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                "type": "string",
                "description": "A string which has at least one character and no leading or trailing whitespace and where there is no whitespace other than single spaces in the contents"
              },
              "_language": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "contentType": {
                "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                "type": "string",
                "description": "A string which has at least one character and no leading or trailing whitespace and where there is no whitespace other than single spaces in the contents"
              },
              "_contentType": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "securityContext": {
                "description": "A reference from one resource to another.",
                "additionalProperties": false
              },
              "data": {
                "description": "The actual content, base64 encoded.",
                "type": "string"
              },
              "_data": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              }
            },
            "additionalProperties": false,
            "required": [
              "resourceType"
            ]
          },
          {
            "description": "A material substance originating from a biological entity intended to be transplanted or infused\ninto another (possibly the same) biological entity.",
            "properties": {
              "resourceType": {
                "description": "This is a BiologicallyDerivedProduct resource",
                "const": "BiologicallyDerivedProduct"
              },
              "id": {
                "description": "The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.",
                "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                "type": "string"
              },
              "meta": {
                "description": "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
                "additionalProperties": false
              },
              "implicitRules": {
                "pattern": "^\\S*$",
                "type": "string",
                "description": "String of characters used to identify a name or a resource"
              },
              "_implicitRules": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "language": {
                "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                "type": "string",
                "description": "A string which has at least one character and no leading or trailing whitespace and where there is no whitespace other than single spaces in the contents"
              },
              "_language": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "text": {
                "description": "A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it \"clinically safe\" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.",
                "additionalProperties": false
              },
              "contained": {
                "description": "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope.",
                "type": "array"
              },
              "extension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                "type": "array"
              },
              "modifierExtension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                "type": "array"
              },
              "identifier": {
                "description": "This records identifiers associated with this biologically derived product instance that are defined by business processes and/or used to refer to it when a direct URL reference to the resource itself is not appropriate (e.g. in CDA documents, or in written / printed documentation).",
                "type": "array"
              },
              "productCategory": {
                "description": "Broad category of this product.",
                "enum": [
                  "organ",
                  "tissue",
                  "fluid",
                  "cells",
                  "biologicalAgent"
                ]
              },
              "_productCategory": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "productCode": {
                "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                "additionalProperties": false
              },
              "status": {
                "description": "Whether the product is currently available.",
                "enum": [
                  "available",
                  "unavailable"
                ]
              },
              "_status": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "request": {
                "description": "Procedure request to obtain this biologically derived product.",
                "type": "array"
              },
              "quantity": {
                "description": "Number of discrete units within this product.",
                "pattern": "^-?([0]|([1-9][0-9]*))$",
                "type": "number"
              },
              "_quantity": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "parent": {
                "description": "Parent product (if any).",
                "type": "array"
              },
              "collection": {
                "description": "How this product was collected.",
                "properties": {
                  "id": {
                    "pattern": "^[ \\r\\n\\t\\S]+$",
                    "type": "string",
                    "description": "A sequence of Unicode characters"
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "type": "array"
                  },
                  "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                    "type": "array"
                  },
                  "collector": {
                    "description": "A reference from one resource to another.",
                    "additionalProperties": false
                  },
                  "source": {
                    "description": "A reference from one resource to another.",
                    "additionalProperties": false
                  },
                  "collectedDateTime": {
                    "description": "Time of product collection.",
                    "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                    "type": "string"
                  },
                  "_collectedDateTime": {
                    "description": "Base definition for all elements in a resource.",
                    "additionalProperties": false
                  },
                  "collectedPeriod": {
                    "description": "A time period defined by a start and end date and optionally time.",
                    "additionalProperties": false
                  }
                },
                "additionalProperties": false
              },
              "processing": {
                "description": "Any processing of the product during collection that does not change the fundamental nature of the product. For example adding anti-coagulants during the collection of Peripheral Blood Stem Cells.",
                "items": {
                  "description": "A material substance originating from a biological entity intended to be transplanted or infused\ninto another (possibly the same) biological entity.",
                  "properties": {
                    "id": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "type": "array"
                    },
                    "modifierExtension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                      "type": "array"
                    },
                    "description": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "_description": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "procedure": {
                      "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                      "additionalProperties": false
                    },
                    "additive": {
                      "description": "A reference from one resource to another.",
                      "additionalProperties": false
                    },
                    "timeDateTime": {
                      "description": "Time of processing.",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                      "type": "string"
                    },
                    "_timeDateTime": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "timePeriod": {
                      "description": "A time period defined by a start and end date and optionally time.",
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                },
                "type": "array"
              },
              "manipulation": {
                "description": "Any manipulation of product post-collection that is intended to alter the product.  For example a buffy-coat enrichment or CD8 reduction of Peripheral Blood Stem Cells to make it more suitable for infusion.",
                "properties": {
                  "id": {
                    "pattern": "^[ \\r\\n\\t\\S]+$",
                    "type": "string",
                    "description": "A sequence of Unicode characters"
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "type": "array"
                  },
                  "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                    "type": "array"
                  },
                  "description": {
                    "pattern": "^[ \\r\\n\\t\\S]+$",
                    "type": "string",
                    "description": "A sequence of Unicode characters"
                  },
                  "_description": {
                    "description": "Base definition for all elements in a resource.",
                    "additionalProperties": false
                  },
                  "timeDateTime": {
                    "description": "Time of manipulation.",
                    "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                    "type": "string"
                  },
                  "_timeDateTime": {
                    "description": "Base definition for all elements in a resource.",
                    "additionalProperties": false
                  },
                  "timePeriod": {
                    "description": "A time period defined by a start and end date and optionally time.",
                    "additionalProperties": false
                  }
                },
                "additionalProperties": false
              },
              "storage": {
                "description": "Product storage.",
                "items": {
                  "description": "A material substance originating from a biological entity intended to be transplanted or infused\ninto another (possibly the same) biological entity.",
                  "properties": {
                    "id": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "type": "array"
                    },
                    "modifierExtension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                      "type": "array"
                    },
                    "description": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "_description": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "temperature": {
                      "description": "Storage temperature.",
                      "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                      "type": "number"
                    },
                    "_temperature": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "scale": {
                      "description": "Temperature scale used.",
                      "enum": [
                        "farenheit",
                        "celsius",
                        "kelvin"
                      ]
                    },
                    "_scale": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "duration": {
                      "description": "A time period defined by a start and end date and optionally time.",
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                },
                "type": "array"
              }
            },
            "additionalProperties": false,
            "required": [
              "resourceType"
            ]
          },
          {
            "description": "Record details about an anatomical structure.  This resource may be used when a coded concept does not provide the necessary detail needed for the use case.",
            "properties": {
              "resourceType": {
                "description": "This is a BodyStructure resource",
                "const": "BodyStructure"
              },
              "id": {
                "description": "The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.",
                "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                "type": "string"
              },
              "meta": {
                "description": "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
                "additionalProperties": false
              },
              "implicitRules": {
                "pattern": "^\\S*$",
                "type": "string",
                "description": "String of characters used to identify a name or a resource"
              },
              "_implicitRules": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "language": {
                "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                "type": "string",
                "description": "A string which has at least one character and no leading or trailing whitespace and where there is no whitespace other than single spaces in the contents"
              },
              "_language": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "text": {
                "description": "A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it \"clinically safe\" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.",
                "additionalProperties": false
              },
              "contained": {
                "description": "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope.",
                "type": "array"
              },
              "extension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                "type": "array"
              },
              "modifierExtension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                "type": "array"
              },
              "identifier": {
                "description": "Identifier for this instance of the anatomical structure.",
                "type": "array"
              },
              "active": {
                "description": "Whether this body site is in active use.",
                "pattern": "^true|false$",
                "type": "boolean"
              },
              "_active": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "morphology": {
                "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                "additionalProperties": false
              },
              "location": {
                "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                "additionalProperties": false
              },
              "locationQualifier": {
                "description": "Qualifier to refine the anatomical location.  These include qualifiers for laterality, relative location, directionality, number, and plane.",
                "type": "array"
              },
              "description": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "_description": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "image": {
                "description": "Image or images used to identify a location.",
                "items": {
                  "description": "For referring to data content defined in other formats.",
                  "additionalProperties": false
                },
                "type": "array"
              },
              "patient": {
                "description": "A reference from one resource to another.",
                "additionalProperties": false
              }
            },
            "additionalProperties": false,
            "required": [
              "patient",
              "resourceType"
            ]
          },
          {
            "description": "A container for a collection of resources.",
            "properties": {
              "resourceType": {
                "description": "This is a Bundle resource",
                "const": "Bundle"
              },
              "id": {
                "description": "The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.",
                "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                "type": "string"
              },
              "meta": {
                "description": "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
                "additionalProperties": false
              },
              "implicitRules": {
                "pattern": "^\\S*$",
                "type": "string",
                "description": "String of characters used to identify a name or a resource"
              },
              "_implicitRules": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "language": {
                "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                "type": "string",
                "description": "A string which has at least one character and no leading or trailing whitespace and where there is no whitespace other than single spaces in the contents"
              },
              "_language": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "identifier": {
                "description": "An identifier - identifies some entity uniquely and unambiguously. Typically this is used for business identifiers.",
                "additionalProperties": false
              },
              "type": {
                "description": "Indicates the purpose of this bundle - how it is intended to be used.",
                "enum": [
                  "document",
                  "message",
                  "transaction",
                  "transaction-response",
                  "batch",
                  "batch-response",
                  "history",
                  "searchset",
                  "collection"
                ]
              },
              "_type": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "timestamp": {
                "description": "The date/time that the bundle was assembled - i.e. when the resources were placed in the bundle.",
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
                "type": "string"
              },
              "_timestamp": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "total": {
                "description": "If a set of search matches, this is the total number of entries of type 'match' across all pages in the search.  It does not include search.mode = 'include' or 'outcome' entries and it does not provide a count of the number of entries in the Bundle.",
                "pattern": "^[0]|([1-9][0-9]*)$",
                "type": "number"
              },
              "_total": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "link": {
                "description": "A series of links that provide context to this bundle.",
                "items": {
                  "description": "A container for a collection of resources.",
                  "properties": {
                    "id": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "type": "array"
                    },
                    "modifierExtension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                      "type": "array"
                    },
                    "relation": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "_relation": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "url": {
                      "pattern": "^\\S*$",
                      "type": "string",
                      "description": "String of characters used to identify a name or a resource"
                    },
                    "_url": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                },
                "type": "array"
              },
              "entry": {
                "description": "An entry in a bundle resource - will either contain a resource or information about a resource (transactions and history only).",
                "items": {
                  "description": "A container for a collection of resources.",
                  "properties": {
                    "id": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "type": "array"
                    },
                    "modifierExtension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                      "type": "array"
                    },
                    "link": {
                      "description": "A series of links that provide context to this entry.",
                      "type": "array"
                    },
                    "fullUrl": {
                      "pattern": "^\\S*$",
                      "type": "string",
                      "description": "String of characters used to identify a name or a resource"
                    },
                    "_fullUrl": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "resource": {
                      "description": "The Resource for the entry. The purpose/meaning of the resource is determined by the Bundle.type."
                    },
                    "search": {
                      "description": "Information about the search process that lead to the creation of this entry.",
                      "properties": {
                        "id": {
                          "pattern": "^[ \\r\\n\\t\\S]+$",
                          "type": "string",
                          "description": "A sequence of Unicode characters"
                        },
                        "extension": {
                          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                          "type": "array"
                        },
                        "modifierExtension": {
                          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                          "type": "array"
                        },
                        "mode": {
                          "description": "Why this entry is in the result set - whether it's included as a match or because of an _include requirement, or to convey information or warning information about the search process.",
                          "enum": [
                            "match",
                            "include",
                            "outcome"
                          ]
                        },
                        "_mode": {
                          "description": "Base definition for all elements in a resource.",
                          "additionalProperties": false
                        },
                        "score": {
                          "description": "When searching, the server's search ranking score for the entry.",
                          "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                          "type": "number"
                        },
                        "_score": {
                          "description": "Base definition for all elements in a resource.",
                          "additionalProperties": false
                        }
                      },
                      "additionalProperties": false
                    },
                    "request": {
                      "description": "Additional information about how this entry should be processed as part of a transaction or batch.  For history, it shows how the entry was processed to create the version contained in the entry.",
                      "properties": {
                        "id": {
                          "pattern": "^[ \\r\\n\\t\\S]+$",
                          "type": "string",
                          "description": "A sequence of Unicode characters"
                        },
                        "extension": {
                          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                          "type": "array"
                        },
                        "modifierExtension": {
                          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                          "type": "array"
                        },
                        "method": {
                          "description": "In a transaction or batch, this is the HTTP action to be executed for this entry. In a history bundle, this indicates the HTTP action that occurred.",
                          "enum": [
                            "GET",
                            "HEAD",
                            "POST",
                            "PUT",
                            "DELETE",
                            "PATCH"
                          ]
                        },
                        "_method": {
                          "description": "Base definition for all elements in a resource.",
                          "additionalProperties": false
                        },
                        "url": {
                          "pattern": "^\\S*$",
                          "type": "string",
                          "description": "String of characters used to identify a name or a resource"
                        },
                        "_url": {
                          "description": "Base definition for all elements in a resource.",
                          "additionalProperties": false
                        },
                        "ifNoneMatch": {
                          "pattern": "^[ \\r\\n\\t\\S]+$",
                          "type": "string",
                          "description": "A sequence of Unicode characters"
                        },
                        "_ifNoneMatch": {
                          "description": "Base definition for all elements in a resource.",
                          "additionalProperties": false
                        },
                        "ifModifiedSince": {
                          "description": "Only perform the operation if the last updated date matches. See the API documentation for [\"Conditional Read\"](http.html#cread).",
                          "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
                          "type": "string"
                        },
                        "_ifModifiedSince": {
                          "description": "Base definition for all elements in a resource.",
                          "additionalProperties": false
                        },
                        "ifMatch": {
                          "pattern": "^[ \\r\\n\\t\\S]+$",
                          "type": "string",
                          "description": "A sequence of Unicode characters"
                        },
                        "_ifMatch": {
                          "description": "Base definition for all elements in a resource.",
                          "additionalProperties": false
                        },
                        "ifNoneExist": {
                          "pattern": "^[ \\r\\n\\t\\S]+$",
                          "type": "string",
                          "description": "A sequence of Unicode characters"
                        },
                        "_ifNoneExist": {
                          "description": "Base definition for all elements in a resource.",
                          "additionalProperties": false
                        }
                      },
                      "additionalProperties": false
                    },
                    "response": {
                      "description": "Indicates the results of processing the corresponding 'request' entry in the batch or transaction being responded to or what the results of an operation where when returning history.",
                      "properties": {
                        "id": {
                          "pattern": "^[ \\r\\n\\t\\S]+$",
                          "type": "string",
                          "description": "A sequence of Unicode characters"
                        },
                        "extension": {
                          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                          "type": "array"
                        },
                        "modifierExtension": {
                          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                          "type": "array"
                        },
                        "status": {
                          "pattern": "^[ \\r\\n\\t\\S]+$",
                          "type": "string",
                          "description": "A sequence of Unicode characters"
                        },
                        "_status": {
                          "description": "Base definition for all elements in a resource.",
                          "additionalProperties": false
                        },
                        "location": {
                          "pattern": "^\\S*$",
                          "type": "string",
                          "description": "String of characters used to identify a name or a resource"
                        },
                        "_location": {
                          "description": "Base definition for all elements in a resource.",
                          "additionalProperties": false
                        },
                        "etag": {
                          "pattern": "^[ \\r\\n\\t\\S]+$",
                          "type": "string",
                          "description": "A sequence of Unicode characters"
                        },
                        "_etag": {
                          "description": "Base definition for all elements in a resource.",
                          "additionalProperties": false
                        },
                        "lastModified": {
                          "description": "The date/time that the resource was modified on the server.",
                          "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
                          "type": "string"
                        },
                        "_lastModified": {
                          "description": "Base definition for all elements in a resource.",
                          "additionalProperties": false
                        },
                        "outcome": {
                          "description": "An OperationOutcome containing hints and warnings produced as part of processing this entry in a batch or transaction."
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                },
                "type": "array"
              },
              "signature": {
                "description": "Digital Signature - base64 encoded. XML-DSig or a JWT.",
                "additionalProperties": false
              }
            },
            "additionalProperties": false,
            "required": [
              "resourceType"
            ]
          },
          {
            "description": "A Capability Statement documents a set of capabilities (behaviors) of a FHIR Server for a particular version of FHIR that may be used as a statement of actual server functionality or a statement of required or desired server implementation.",
            "properties": {
              "resourceType": {
                "description": "This is a CapabilityStatement resource",
                "const": "CapabilityStatement"
              },
              "id": {
                "description": "The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.",
                "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                "type": "string"
              },
              "meta": {
                "description": "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
                "additionalProperties": false
              },
              "implicitRules": {
                "pattern": "^\\S*$",
                "type": "string",
                "description": "String of characters used to identify a name or a resource"
              },
              "_implicitRules": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "language": {
                "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                "type": "string",
                "description": "A string which has at least one character and no leading or trailing whitespace and where there is no whitespace other than single spaces in the contents"
              },
              "_language": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "text": {
                "description": "A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it \"clinically safe\" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.",
                "additionalProperties": false
              },
              "contained": {
                "description": "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope.",
                "type": "array"
              },
              "extension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                "type": "array"
              },
              "modifierExtension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                "type": "array"
              },
              "url": {
                "pattern": "^\\S*$",
                "type": "string",
                "description": "String of characters used to identify a name or a resource"
              },
              "_url": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "version": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "_version": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "name": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "_name": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "title": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "_title": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "status": {
                "description": "The status of this capability statement. Enables tracking the life-cycle of the content.",
                "enum": [
                  "draft",
                  "active",
                  "retired",
                  "unknown"
                ]
              },
              "_status": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "experimental": {
                "description": "A Boolean value to indicate that this capability statement is authored for testing purposes (or education/evaluation/marketing) and is not intended to be used for genuine usage.",
                "pattern": "^true|false$",
                "type": "boolean"
              },
              "_experimental": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "date": {
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                "type": "string",
                "description": "A date, date-time or partial date (e.g. just year or year + month).  If hours and minutes are specified, a time zone SHALL be populated. The format is a union of the schema types gYear, gYearMonth, date and dateTime. Seconds must be provided due to schema type constraints but may be zero-filled and may be ignored.                 Dates SHALL be valid dates."
              },
              "_date": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "publisher": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "_publisher": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "contact": {
                "description": "Contact details to assist a user in finding and communicating with the publisher.",
                "type": "array"
              },
              "description": {
                "description": "A free text natural language description of the capability statement from a consumer's perspective. Typically, this is used when the capability statement describes a desired rather than an actual solution, for example as a formal expression of requirements as part of an RFP.",
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string"
              },
              "_description": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "useContext": {
                "description": "The content was developed with a focus and intent of supporting the contexts that are listed. These contexts may be general categories (gender, age, ...) or may be references to specific programs (insurance plans, studies, ...) and may be used to assist with indexing and searching for appropriate capability statement instances.",
                "type": "array"
              },
              "jurisdiction": {
                "description": "A legal or geographic region in which the capability statement is intended to be used.",
                "type": "array"
              },
              "purpose": {
                "description": "Explanation of why this capability statement is needed and why it has been designed as it has.",
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string"
              },
              "_purpose": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "copyright": {
                "description": "A copyright statement relating to the capability statement and/or its contents. Copyright statements are generally legal restrictions on the use and publishing of the capability statement.",
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string"
              },
              "_copyright": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "kind": {
                "description": "The way that this statement is intended to be used, to describe an actual running instance of software, a particular product (kind, not instance of software) or a class of implementation (e.g. a desired purchase).",
                "enum": [
                  "instance",
                  "capability",
                  "requirements"
                ]
              },
              "_kind": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "instantiates": {
                "description": "Reference to a canonical URL of another CapabilityStatement that this software implements. This capability statement is a published API description that corresponds to a business service. The server may actually implement a subset of the capability statement it claims to implement, so the capability statement must specify the full capability details.",
                "type": "array"
              },
              "imports": {
                "description": "Reference to a canonical URL of another CapabilityStatement that this software adds to. The capability statement automatically includes everything in the other statement, and it is not duplicated, though the server may repeat the same resources, interactions and operations to add additional details to them.",
                "type": "array"
              },
              "software": {
                "description": "Software that is covered by this capability statement.  It is used when the capability statement describes the capabilities of a particular software version, independent of an installation.",
                "properties": {
                  "id": {
                    "pattern": "^[ \\r\\n\\t\\S]+$",
                    "type": "string",
                    "description": "A sequence of Unicode characters"
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "type": "array"
                  },
                  "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                    "type": "array"
                  },
                  "name": {
                    "pattern": "^[ \\r\\n\\t\\S]+$",
                    "type": "string",
                    "description": "A sequence of Unicode characters"
                  },
                  "_name": {
                    "description": "Base definition for all elements in a resource.",
                    "additionalProperties": false
                  },
                  "version": {
                    "pattern": "^[ \\r\\n\\t\\S]+$",
                    "type": "string",
                    "description": "A sequence of Unicode characters"
                  },
                  "_version": {
                    "description": "Base definition for all elements in a resource.",
                    "additionalProperties": false
                  },
                  "releaseDate": {
                    "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                    "type": "string",
                    "description": "A date, date-time or partial date (e.g. just year or year + month).  If hours and minutes are specified, a time zone SHALL be populated. The format is a union of the schema types gYear, gYearMonth, date and dateTime. Seconds must be provided due to schema type constraints but may be zero-filled and may be ignored.                 Dates SHALL be valid dates."
                  },
                  "_releaseDate": {
                    "description": "Base definition for all elements in a resource.",
                    "additionalProperties": false
                  }
                },
                "additionalProperties": false
              },
              "implementation": {
                "description": "Identifies a specific implementation instance that is described by the capability statement - i.e. a particular installation, rather than the capabilities of a software program.",
                "properties": {
                  "id": {
                    "pattern": "^[ \\r\\n\\t\\S]+$",
                    "type": "string",
                    "description": "A sequence of Unicode characters"
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "type": "array"
                  },
                  "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                    "type": "array"
                  },
                  "description": {
                    "pattern": "^[ \\r\\n\\t\\S]+$",
                    "type": "string",
                    "description": "A sequence of Unicode characters"
                  },
                  "_description": {
                    "description": "Base definition for all elements in a resource.",
                    "additionalProperties": false
                  },
                  "url": {
                    "description": "An absolute base URL for the implementation.  This forms the base for REST interfaces as well as the mailbox and document interfaces.",
                    "pattern": "^\\S*$",
                    "type": "string"
                  },
                  "_url": {
                    "description": "Base definition for all elements in a resource.",
                    "additionalProperties": false
                  },
                  "custodian": {
                    "description": "A reference from one resource to another.",
                    "additionalProperties": false
                  }
                },
                "additionalProperties": false
              },
              "fhirVersion": {
                "description": "The version of the FHIR specification that this CapabilityStatement describes (which SHALL be the same as the FHIR version of the CapabilityStatement itself). There is no default value.",
                "enum": [
                  "0.01",
                  "0.05",
                  "0.06",
                  "0.11",
                  "0.0.80",
                  "0.0.81",
                  "0.0.82",
                  "0.4.0",
                  "0.5.0",
                  "1.0.0",
                  "1.0.1",
                  "1.0.2",
                  "1.1.0",
                  "1.4.0",
                  "1.6.0",
                  "1.8.0",
                  "3.0.0",
                  "3.0.1",
                  "3.3.0",
                  "3.5.0",
                  "4.0.0",
                  "4.0.1"
                ]
              },
              "_fhirVersion": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "format": {
                "description": "A list of the formats supported by this implementation using their content types.",
                "type": "array"
              },
              "_format": {
                "description": "Extensions for format",
                "type": "array"
              },
              "patchFormat": {
                "description": "A list of the patch formats supported by this implementation using their content types.",
                "type": "array"
              },
              "_patchFormat": {
                "description": "Extensions for patchFormat",
                "type": "array"
              },
              "implementationGuide": {
                "description": "A list of implementation guides that the server does (or should) support in their entirety.",
                "type": "array"
              },
              "rest": {
                "description": "A definition of the restful capabilities of the solution, if any.",
                "items": {
                  "description": "A Capability Statement documents a set of capabilities (behaviors) of a FHIR Server for a particular version of FHIR that may be used as a statement of actual server functionality or a statement of required or desired server implementation.",
                  "properties": {
                    "id": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "type": "array"
                    },
                    "modifierExtension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                      "type": "array"
                    },
                    "mode": {
                      "description": "Identifies whether this portion of the statement is describing the ability to initiate or receive restful operations.",
                      "enum": [
                        "client",
                        "server"
                      ]
                    },
                    "_mode": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "documentation": {
                      "description": "Information about the system's restful capabilities that apply across all applications, such as security.",
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string"
                    },
                    "_documentation": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "security": {
                      "description": "Information about security implementation from an interface perspective - what a client needs to know.",
                      "properties": {
                        "id": {
                          "pattern": "^[ \\r\\n\\t\\S]+$",
                          "type": "string",
                          "description": "A sequence of Unicode characters"
                        },
                        "extension": {
                          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                          "type": "array"
                        },
                        "modifierExtension": {
                          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                          "type": "array"
                        },
                        "cors": {
                          "description": "Server adds CORS headers when responding to requests - this enables Javascript applications to use the server.",
                          "pattern": "^true|false$",
                          "type": "boolean"
                        },
                        "_cors": {
                          "description": "Base definition for all elements in a resource.",
                          "additionalProperties": false
                        },
                        "service": {
                          "description": "Types of security services that are supported/required by the system.",
                          "type": "array"
                        },
                        "description": {
                          "description": "General description of how security works.",
                          "pattern": "^[ \\r\\n\\t\\S]+$",
                          "type": "string"
                        },
                        "_description": {
                          "description": "Base definition for all elements in a resource.",
                          "additionalProperties": false
                        }
                      },
                      "additionalProperties": false
                    },
                    "resource": {
                      "description": "A specification of the restful capabilities of the solution for a specific resource type.",
                      "items": {
                        "description": "A Capability Statement documents a set of capabilities (behaviors) of a FHIR Server for a particular version of FHIR that may be used as a statement of actual server functionality or a statement of required or desired server implementation.",
                        "properties": {
                          "id": {
                            "pattern": "^[ \\r\\n\\t\\S]+$",
                            "type": "string",
                            "description": "A sequence of Unicode characters"
                          },
                          "extension": {
                            "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                            "type": "array"
                          },
                          "modifierExtension": {
                            "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                            "type": "array"
                          },
                          "type": {
                            "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                            "type": "string",
                            "description": "A string which has at least one character and no leading or trailing whitespace and where there is no whitespace other than single spaces in the contents"
                          },
                          "_type": {
                            "description": "Base definition for all elements in a resource.",
                            "additionalProperties": false
                          },
                          "profile": {
                            "pattern": "^\\S*$",
                            "type": "string",
                            "description": "A URI that is a reference to a canonical URL on a FHIR resource"
                          },
                          "supportedProfile": {
                            "description": "A list of profiles that represent different use cases supported by the system. For a server, \"supported by the system\" means the system hosts/produces a set of resources that are conformant to a particular profile, and allows clients that use its services to search using this profile and to find appropriate data. For a client, it means the system will search by this profile and process data according to the guidance implicit in the profile. See further discussion in [Using Profiles](profiling.html#profile-uses).",
                            "type": "array"
                          },
                          "documentation": {
                            "description": "Additional information about the resource type used by the system.",
                            "pattern": "^[ \\r\\n\\t\\S]+$",
                            "type": "string"
                          },
                          "_documentation": {
                            "description": "Base definition for all elements in a resource.",
                            "additionalProperties": false
                          },
                          "interaction": {
                            "description": "Identifies a restful operation supported by the solution.",
                            "items": {
                              "description": "A Capability Statement documents a set of capabilities (behaviors) of a FHIR Server for a particular version of FHIR that may be used as a statement of actual server functionality or a statement of required or desired server implementation.",
                              "properties": {
                                "id": {
                                  "pattern": "^[ \\r\\n\\t\\S]+$",
                                  "type": "string",
                                  "description": "A sequence of Unicode characters"
                                },
                                "extension": {
                                  "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                                  "type": "array"
                                },
                                "modifierExtension": {
                                  "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                                  "type": "array"
                                },
                                "code": {
                                  "description": "Coded identifier of the operation, supported by the system resource.",
                                  "enum": [
                                    "read",
                                    "vread",
                                    "update",
                                    "patch",
                                    "delete",
                                    "history-instance",
                                    "history-type",
                                    "create",
                                    "search-type"
                                  ]
                                },
                                "_code": {
                                  "description": "Base definition for all elements in a resource.",
                                  "additionalProperties": false
                                },
                                "documentation": {
                                  "description": "Guidance specific to the implementation of this operation, such as 'delete is a logical delete' or 'updates are only allowed with version id' or 'creates permitted from pre-authorized certificates only'.",
                                  "pattern": "^[ \\r\\n\\t\\S]+$",
                                  "type": "string"
                                },
                                "_documentation": {
                                  "description": "Base definition for all elements in a resource.",
                                  "additionalProperties": false
                                }
                              },
                              "additionalProperties": false
                            },
                            "type": "array"
                          },
                          "versioning": {
                            "description": "This field is set to no-version to specify that the system does not support (server) or use (client) versioning for this resource type. If this has some other value, the server must at least correctly track and populate the versionId meta-property on resources. If the value is 'versioned-update', then the server supports all the versioning features, including using e-tags for version integrity in the API.",
                            "enum": [
                              "no-version",
                              "versioned",
                              "versioned-update"
                            ]
                          },
                          "_versioning": {
                            "description": "Base definition for all elements in a resource.",
                            "additionalProperties": false
                          },
                          "readHistory": {
                            "description": "A flag for whether the server is able to return past versions as part of the vRead operation.",
                            "pattern": "^true|false$",
                            "type": "boolean"
                          },
                          "_readHistory": {
                            "description": "Base definition for all elements in a resource.",
                            "additionalProperties": false
                          },
                          "updateCreate": {
                            "description": "A flag to indicate that the server allows or needs to allow the client to create new identities on the server (that is, the client PUTs to a location where there is no existing resource). Allowing this operation means that the server allows the client to create new identities on the server.",
                            "pattern": "^true|false$",
                            "type": "boolean"
                          },
                          "_updateCreate": {
                            "description": "Base definition for all elements in a resource.",
                            "additionalProperties": false
                          },
                          "conditionalCreate": {
                            "description": "A flag that indicates that the server supports conditional create.",
                            "pattern": "^true|false$",
                            "type": "boolean"
                          },
                          "_conditionalCreate": {
                            "description": "Base definition for all elements in a resource.",
                            "additionalProperties": false
                          },
                          "conditionalRead": {
                            "description": "A code that indicates how the server supports conditional read.",
                            "enum": [
                              "not-supported",
                              "modified-since",
                              "not-match",
                              "full-support"
                            ]
                          },
                          "_conditionalRead": {
                            "description": "Base definition for all elements in a resource.",
                            "additionalProperties": false
                          },
                          "conditionalUpdate": {
                            "description": "A flag that indicates that the server supports conditional update.",
                            "pattern": "^true|false$",
                            "type": "boolean"
                          },
                          "_conditionalUpdate": {
                            "description": "Base definition for all elements in a resource.",
                            "additionalProperties": false
                          },
                          "conditionalDelete": {
                            "description": "A code that indicates how the server supports conditional delete.",
                            "enum": [
                              "not-supported",
                              "single",
                              "multiple"
                            ]
                          },
                          "_conditionalDelete": {
                            "description": "Base definition for all elements in a resource.",
                            "additionalProperties": false
                          },
                          "referencePolicy": {
                            "description": "A set of flags that defines how references are supported.",
                            "items": {
                              "enum": [
                                "literal",
                                "logical",
                                "resolves",
                                "enforced",
                                "local"
                              ]
                            },
                            "type": "array"
                          },
                          "_referencePolicy": {
                            "description": "Extensions for referencePolicy",
                            "type": "array"
                          },
                          "searchInclude": {
                            "description": "A list of _include values supported by the server.",
                            "type": "array"
                          },
                          "_searchInclude": {
                            "description": "Extensions for searchInclude",
                            "type": "array"
                          },
                          "searchRevInclude": {
                            "description": "A list of _revinclude (reverse include) values supported by the server.",
                            "type": "array"
                          },
                          "_searchRevInclude": {
                            "description": "Extensions for searchRevInclude",
                            "type": "array"
                          },
                          "searchParam": {
                            "description": "Search parameters for implementations to support and/or make use of - either references to ones defined in the specification, or additional ones defined for/by the implementation.",
                            "items": {
                              "description": "A Capability Statement documents a set of capabilities (behaviors) of a FHIR Server for a particular version of FHIR that may be used as a statement of actual server functionality or a statement of required or desired server implementation.",
                              "properties": {
                                "id": {
                                  "pattern": "^[ \\r\\n\\t\\S]+$",
                                  "type": "string",
                                  "description": "A sequence of Unicode characters"
                                },
                                "extension": {
                                  "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                                  "type": "array"
                                },
                                "modifierExtension": {
                                  "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                                  "type": "array"
                                },
                                "name": {
                                  "pattern": "^[ \\r\\n\\t\\S]+$",
                                  "type": "string",
                                  "description": "A sequence of Unicode characters"
                                },
                                "_name": {
                                  "description": "Base definition for all elements in a resource.",
                                  "additionalProperties": false
                                },
                                "definition": {
                                  "pattern": "^\\S*$",
                                  "type": "string",
                                  "description": "A URI that is a reference to a canonical URL on a FHIR resource"
                                },
                                "type": {
                                  "description": "The type of value a search parameter refers to, and how the content is interpreted.",
                                  "enum": [
                                    "number",
                                    "date",
                                    "string",
                                    "token",
                                    "reference",
                                    "composite",
                                    "quantity",
                                    "uri",
                                    "special"
                                  ]
                                },
                                "_type": {
                                  "description": "Base definition for all elements in a resource.",
                                  "additionalProperties": false
                                },
                                "documentation": {
                                  "description": "This allows documentation of any distinct behaviors about how the search parameter is used.  For example, text matching algorithms.",
                                  "pattern": "^[ \\r\\n\\t\\S]+$",
                                  "type": "string"
                                },
                                "_documentation": {
                                  "description": "Base definition for all elements in a resource.",
                                  "additionalProperties": false
                                }
                              },
                              "additionalProperties": false
                            },
                            "type": "array"
                          },
                          "operation": {
                            "description": "Definition of an operation or a named query together with its parameters and their meaning and type. Consult the definition of the operation for details about how to invoke the operation, and the parameters.",
                            "items": {
                              "description": "A Capability Statement documents a set of capabilities (behaviors) of a FHIR Server for a particular version of FHIR that may be used as a statement of actual server functionality or a statement of required or desired server implementation.",
                              "properties": {
                                "id": {
                                  "pattern": "^[ \\r\\n\\t\\S]+$",
                                  "type": "string",
                                  "description": "A sequence of Unicode characters"
                                },
                                "extension": {
                                  "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                                  "type": "array"
                                },
                                "modifierExtension": {
                                  "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                                  "type": "array"
                                },
                                "name": {
                                  "pattern": "^[ \\r\\n\\t\\S]+$",
                                  "type": "string",
                                  "description": "A sequence of Unicode characters"
                                },
                                "_name": {
                                  "description": "Base definition for all elements in a resource.",
                                  "additionalProperties": false
                                },
                                "definition": {
                                  "pattern": "^\\S*$",
                                  "type": "string",
                                  "description": "A URI that is a reference to a canonical URL on a FHIR resource"
                                },
                                "documentation": {
                                  "description": "Documentation that describes anything special about the operation behavior, possibly detailing different behavior for system, type and instance-level invocation of the operation.",
                                  "pattern": "^[ \\r\\n\\t\\S]+$",
                                  "type": "string"
                                },
                                "_documentation": {
                                  "description": "Base definition for all elements in a resource.",
                                  "additionalProperties": false
                                }
                              },
                              "additionalProperties": false,
                              "required": [
                                "definition"
                              ]
                            },
                            "type": "array"
                          }
                        },
                        "additionalProperties": false
                      },
                      "type": "array"
                    },
                    "interaction": {
                      "description": "A specification of restful operations supported by the system.",
                      "items": {
                        "description": "A Capability Statement documents a set of capabilities (behaviors) of a FHIR Server for a particular version of FHIR that may be used as a statement of actual server functionality or a statement of required or desired server implementation.",
                        "properties": {
                          "id": {
                            "pattern": "^[ \\r\\n\\t\\S]+$",
                            "type": "string",
                            "description": "A sequence of Unicode characters"
                          },
                          "extension": {
                            "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                            "type": "array"
                          },
                          "modifierExtension": {
                            "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                            "type": "array"
                          },
                          "code": {
                            "description": "A coded identifier of the operation, supported by the system.",
                            "enum": [
                              "transaction",
                              "batch",
                              "search-system",
                              "history-system"
                            ]
                          },
                          "_code": {
                            "description": "Base definition for all elements in a resource.",
                            "additionalProperties": false
                          },
                          "documentation": {
                            "description": "Guidance specific to the implementation of this operation, such as limitations on the kind of transactions allowed, or information about system wide search is implemented.",
                            "pattern": "^[ \\r\\n\\t\\S]+$",
                            "type": "string"
                          },
                          "_documentation": {
                            "description": "Base definition for all elements in a resource.",
                            "additionalProperties": false
                          }
                        },
                        "additionalProperties": false
                      },
                      "type": "array"
                    },
                    "searchParam": {
                      "description": "Search parameters that are supported for searching all resources for implementations to support and/or make use of - either references to ones defined in the specification, or additional ones defined for/by the implementation.",
                      "type": "array"
                    },
                    "operation": {
                      "description": "Definition of an operation or a named query together with its parameters and their meaning and type.",
                      "type": "array"
                    },
                    "compartment": {
                      "description": "An absolute URI which is a reference to the definition of a compartment that the system supports. The reference is to a CompartmentDefinition resource by its canonical URL .",
                      "type": "array"
                    }
                  },
                  "additionalProperties": false
                },
                "type": "array"
              },
              "messaging": {
                "description": "A description of the messaging capabilities of the solution.",
                "items": {
                  "description": "A Capability Statement documents a set of capabilities (behaviors) of a FHIR Server for a particular version of FHIR that may be used as a statement of actual server functionality or a statement of required or desired server implementation.",
                  "properties": {
                    "id": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "type": "array"
                    },
                    "modifierExtension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                      "type": "array"
                    },
                    "endpoint": {
                      "description": "An endpoint (network accessible address) to which messages and/or replies are to be sent.",
                      "items": {
                        "description": "A Capability Statement documents a set of capabilities (behaviors) of a FHIR Server for a particular version of FHIR that may be used as a statement of actual server functionality or a statement of required or desired server implementation.",
                        "properties": {
                          "id": {
                            "pattern": "^[ \\r\\n\\t\\S]+$",
                            "type": "string",
                            "description": "A sequence of Unicode characters"
                          },
                          "extension": {
                            "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                            "type": "array"
                          },
                          "modifierExtension": {
                            "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                            "type": "array"
                          },
                          "protocol": {
                            "description": "A reference to a code defined by a terminology system.",
                            "additionalProperties": false
                          },
                          "address": {
                            "description": "The network address of the endpoint. For solutions that do not use network addresses for routing, it can be just an identifier.",
                            "pattern": "^\\S*$",
                            "type": "string"
                          },
                          "_address": {
                            "description": "Base definition for all elements in a resource.",
                            "additionalProperties": false
                          }
                        },
                        "additionalProperties": false,
                        "required": [
                          "protocol"
                        ]
                      },
                      "type": "array"
                    },
                    "reliableCache": {
                      "description": "Length if the receiver's reliable messaging cache in minutes (if a receiver) or how long the cache length on the receiver should be (if a sender).",
                      "pattern": "^[0]|([1-9][0-9]*)$",
                      "type": "number"
                    },
                    "_reliableCache": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "documentation": {
                      "description": "Documentation about the system's messaging capabilities for this endpoint not otherwise documented by the capability statement.  For example, the process for becoming an authorized messaging exchange partner.",
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string"
                    },
                    "_documentation": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "supportedMessage": {
                      "description": "References to message definitions for messages this system can send or receive.",
                      "items": {
                        "description": "A Capability Statement documents a set of capabilities (behaviors) of a FHIR Server for a particular version of FHIR that may be used as a statement of actual server functionality or a statement of required or desired server implementation.",
                        "properties": {
                          "id": {
                            "pattern": "^[ \\r\\n\\t\\S]+$",
                            "type": "string",
                            "description": "A sequence of Unicode characters"
                          },
                          "extension": {
                            "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                            "type": "array"
                          },
                          "modifierExtension": {
                            "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                            "type": "array"
                          },
                          "mode": {
                            "description": "The mode of this event declaration - whether application is sender or receiver.",
                            "enum": [
                              "sender",
                              "receiver"
                            ]
                          },
                          "_mode": {
                            "description": "Base definition for all elements in a resource.",
                            "additionalProperties": false
                          },
                          "definition": {
                            "pattern": "^\\S*$",
                            "type": "string",
                            "description": "A URI that is a reference to a canonical URL on a FHIR resource"
                          }
                        },
                        "additionalProperties": false,
                        "required": [
                          "definition"
                        ]
                      },
                      "type": "array"
                    }
                  },
                  "additionalProperties": false
                },
                "type": "array"
              },
              "document": {
                "description": "A document definition.",
                "items": {
                  "description": "A Capability Statement documents a set of capabilities (behaviors) of a FHIR Server for a particular version of FHIR that may be used as a statement of actual server functionality or a statement of required or desired server implementation.",
                  "properties": {
                    "id": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "type": "array"
                    },
                    "modifierExtension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                      "type": "array"
                    },
                    "mode": {
                      "description": "Mode of this document declaration - whether an application is a producer or consumer.",
                      "enum": [
                        "producer",
                        "consumer"
                      ]
                    },
                    "_mode": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "documentation": {
                      "description": "A description of how the application supports or uses the specified document profile.  For example, when documents are created, what action is taken with consumed documents, etc.",
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string"
                    },
                    "_documentation": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "profile": {
                      "pattern": "^\\S*$",
                      "type": "string",
                      "description": "A URI that is a reference to a canonical URL on a FHIR resource"
                    }
                  },
                  "additionalProperties": false,
                  "required": [
                    "profile"
                  ]
                },
                "type": "array"
              }
            },
            "additionalProperties": false,
            "required": [
              "resourceType"
            ]
          },
          {
            "description": "Describes the intention of how one or more practitioners intend to deliver care for a particular patient, group or community for a period of time, possibly limited to care for a specific condition or set of conditions.",
            "properties": {
              "resourceType": {
                "description": "This is a CarePlan resource",
                "const": "CarePlan"
              },
              "id": {
                "description": "The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.",
                "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                "type": "string"
              },
              "meta": {
                "description": "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
                "additionalProperties": false
              },
              "implicitRules": {
                "pattern": "^\\S*$",
                "type": "string",
                "description": "String of characters used to identify a name or a resource"
              },
              "_implicitRules": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "language": {
                "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                "type": "string",
                "description": "A string which has at least one character and no leading or trailing whitespace and where there is no whitespace other than single spaces in the contents"
              },
              "_language": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "text": {
                "description": "A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it \"clinically safe\" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.",
                "additionalProperties": false
              },
              "contained": {
                "description": "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope.",
                "type": "array"
              },
              "extension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                "type": "array"
              },
              "modifierExtension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                "type": "array"
              },
              "identifier": {
                "description": "Business identifiers assigned to this care plan by the performer or other systems which remain constant as the resource is updated and propagates from server to server.",
                "type": "array"
              },
              "instantiatesCanonical": {
                "description": "The URL pointing to a FHIR-defined protocol, guideline, questionnaire or other definition that is adhered to in whole or in part by this CarePlan.",
                "type": "array"
              },
              "instantiatesUri": {
                "description": "The URL pointing to an externally maintained protocol, guideline, questionnaire or other definition that is adhered to in whole or in part by this CarePlan.",
                "type": "array"
              },
              "_instantiatesUri": {
                "description": "Extensions for instantiatesUri",
                "type": "array"
              },
              "basedOn": {
                "description": "A care plan that is fulfilled in whole or in part by this care plan.",
                "type": "array"
              },
              "replaces": {
                "description": "Completed or terminated care plan whose function is taken by this new care plan.",
                "type": "array"
              },
              "partOf": {
                "description": "A larger care plan of which this particular care plan is a component or step.",
                "type": "array"
              },
              "status": {
                "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                "type": "string",
                "description": "A string which has at least one character and no leading or trailing whitespace and where there is no whitespace other than single spaces in the contents"
              },
              "_status": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "intent": {
                "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                "type": "string",
                "description": "A string which has at least one character and no leading or trailing whitespace and where there is no whitespace other than single spaces in the contents"
              },
              "_intent": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "category": {
                "description": "Identifies what \"kind\" of plan this is to support differentiation between multiple co-existing plans; e.g. \"Home health\", \"psychiatric\", \"asthma\", \"disease management\", \"wellness plan\", etc.",
                "type": "array"
              },
              "title": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "_title": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "description": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "_description": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "subject": {
                "description": "A reference from one resource to another.",
                "additionalProperties": false
              },
              "encounter": {
                "description": "A reference from one resource to another.",
                "additionalProperties": false
              },
              "period": {
                "description": "A time period defined by a start and end date and optionally time.",
                "additionalProperties": false
              },
              "created": {
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                "type": "string",
                "description": "A date, date-time or partial date (e.g. just year or year + month).  If hours and minutes are specified, a time zone SHALL be populated. The format is a union of the schema types gYear, gYearMonth, date and dateTime. Seconds must be provided due to schema type constraints but may be zero-filled and may be ignored.                 Dates SHALL be valid dates."
              },
              "_created": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "author": {
                "description": "A reference from one resource to another.",
                "additionalProperties": false
              },
              "contributor": {
                "description": "Identifies the individual(s) or organization who provided the contents of the care plan.",
                "type": "array"
              },
              "careTeam": {
                "description": "Identifies all people and organizations who are expected to be involved in the care envisioned by this plan.",
                "type": "array"
              },
              "addresses": {
                "description": "Identifies the conditions/problems/concerns/diagnoses/etc. whose management and/or mitigation are handled by this plan.",
                "type": "array"
              },
              "supportingInfo": {
                "description": "Identifies portions of the patient's record that specifically influenced the formation of the plan.  These might include comorbidities, recent procedures, limitations, recent assessments, etc.",
                "type": "array"
              },
              "goal": {
                "description": "Describes the intended objective(s) of carrying out the care plan.",
                "type": "array"
              },
              "activity": {
                "description": "Identifies a planned action to occur as part of the plan.  For example, a medication to be used, lab tests to perform, self-monitoring, education, etc.",
                "items": {
                  "description": "Describes the intention of how one or more practitioners intend to deliver care for a particular patient, group or community for a period of time, possibly limited to care for a specific condition or set of conditions.",
                  "properties": {
                    "id": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "type": "array"
                    },
                    "modifierExtension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                      "type": "array"
                    },
                    "outcomeCodeableConcept": {
                      "description": "Identifies the outcome at the point when the status of the activity is assessed.  For example, the outcome of an education activity could be patient understands (or not).",
                      "type": "array"
                    },
                    "outcomeReference": {
                      "description": "Details of the outcome or action resulting from the activity.  The reference to an \"event\" resource, such as Procedure or Encounter or Observation, is the result/outcome of the activity itself.  The activity can be conveyed using CarePlan.activity.detail OR using the CarePlan.activity.reference (a reference to a “request” resource).",
                      "type": "array"
                    },
                    "progress": {
                      "description": "Notes about the adherence/status/progress of the activity.",
                      "type": "array"
                    },
                    "reference": {
                      "description": "A reference from one resource to another.",
                      "additionalProperties": false
                    },
                    "detail": {
                      "description": "A simple summary of a planned activity suitable for a general care plan system (e.g. form driven) that doesn't know about specific resources such as procedure etc.",
                      "properties": {
                        "id": {
                          "pattern": "^[ \\r\\n\\t\\S]+$",
                          "type": "string",
                          "description": "A sequence of Unicode characters"
                        },
                        "extension": {
                          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                          "type": "array"
                        },
                        "modifierExtension": {
                          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                          "type": "array"
                        },
                        "kind": {
                          "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                          "type": "string",
                          "description": "A string which has at least one character and no leading or trailing whitespace and where there is no whitespace other than single spaces in the contents"
                        },
                        "_kind": {
                          "description": "Base definition for all elements in a resource.",
                          "additionalProperties": false
                        },
                        "instantiatesCanonical": {
                          "description": "The URL pointing to a FHIR-defined protocol, guideline, questionnaire or other definition that is adhered to in whole or in part by this CarePlan activity.",
                          "type": "array"
                        },
                        "instantiatesUri": {
                          "description": "The URL pointing to an externally maintained protocol, guideline, questionnaire or other definition that is adhered to in whole or in part by this CarePlan activity.",
                          "type": "array"
                        },
                        "_instantiatesUri": {
                          "description": "Extensions for instantiatesUri",
                          "type": "array"
                        },
                        "code": {
                          "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                          "additionalProperties": false
                        },
                        "reasonCode": {
                          "description": "Provides the rationale that drove the inclusion of this particular activity as part of the plan or the reason why the activity was prohibited.",
                          "type": "array"
                        },
                        "reasonReference": {
                          "description": "Indicates another resource, such as the health condition(s), whose existence justifies this request and drove the inclusion of this particular activity as part of the plan.",
                          "type": "array"
                        },
                        "goal": {
                          "description": "Internal reference that identifies the goals that this activity is intended to contribute towards meeting.",
                          "type": "array"
                        },
                        "status": {
                          "description": "Identifies what progress is being made for the specific activity.",
                          "enum": [
                            "not-started",
                            "scheduled",
                            "in-progress",
                            "on-hold",
                            "completed",
                            "cancelled",
                            "stopped",
                            "unknown",
                            "entered-in-error"
                          ]
                        },
                        "_status": {
                          "description": "Base definition for all elements in a resource.",
                          "additionalProperties": false
                        },
                        "statusReason": {
                          "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                          "additionalProperties": false
                        },
                        "doNotPerform": {
                          "description": "If true, indicates that the described activity is one that must NOT be engaged in when following the plan.  If false, or missing, indicates that the described activity is one that should be engaged in when following the plan.",
                          "pattern": "^true|false$",
                          "type": "boolean"
                        },
                        "_doNotPerform": {
                          "description": "Base definition for all elements in a resource.",
                          "additionalProperties": false
                        },
                        "scheduledTiming": {
                          "description": "The period, timing or frequency upon which the described activity is to occur.",
                          "additionalProperties": false
                        },
                        "scheduledPeriod": {
                          "description": "A time period defined by a start and end date and optionally time.",
                          "additionalProperties": false
                        },
                        "scheduledString": {
                          "description": "The period, timing or frequency upon which the described activity is to occur.",
                          "pattern": "^[ \\r\\n\\t\\S]+$",
                          "type": "string"
                        },
                        "_scheduledString": {
                          "description": "Base definition for all elements in a resource.",
                          "additionalProperties": false
                        },
                        "location": {
                          "description": "A reference from one resource to another.",
                          "additionalProperties": false
                        },
                        "performer": {
                          "description": "Identifies who's expected to be involved in the activity.",
                          "type": "array"
                        },
                        "productCodeableConcept": {
                          "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                          "additionalProperties": false
                        },
                        "productReference": {
                          "description": "A reference from one resource to another.",
                          "additionalProperties": false
                        },
                        "dailyAmount": {
                          "description": "Identifies the quantity expected to be consumed in a given day.",
                          "additionalProperties": false
                        },
                        "quantity": {
                          "description": "Identifies the quantity expected to be supplied, administered or consumed by the subject.",
                          "additionalProperties": false
                        },
                        "description": {
                          "pattern": "^[ \\r\\n\\t\\S]+$",
                          "type": "string",
                          "description": "A sequence of Unicode characters"
                        },
                        "_description": {
                          "description": "Base definition for all elements in a resource.",
                          "additionalProperties": false
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                },
                "type": "array"
              },
              "note": {
                "description": "General notes about the care plan not covered elsewhere.",
                "type": "array"
              }
            },
            "additionalProperties": false,
            "required": [
              "subject",
              "resourceType"
            ]
          },
          {
            "description": "The Care Team includes all the people and organizations who plan to participate in the coordination and delivery of care for a patient.",
            "properties": {
              "resourceType": {
                "description": "This is a CareTeam resource",
                "const": "CareTeam"
              },
              "id": {
                "description": "The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.",
                "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                "type": "string"
              },
              "meta": {
                "description": "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
                "additionalProperties": false
              },
              "implicitRules": {
                "pattern": "^\\S*$",
                "type": "string",
                "description": "String of characters used to identify a name or a resource"
              },
              "_implicitRules": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "language": {
                "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                "type": "string",
                "description": "A string which has at least one character and no leading or trailing whitespace and where there is no whitespace other than single spaces in the contents"
              },
              "_language": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "text": {
                "description": "A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it \"clinically safe\" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.",
                "additionalProperties": false
              },
              "contained": {
                "description": "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope.",
                "type": "array"
              },
              "extension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                "type": "array"
              },
              "modifierExtension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                "type": "array"
              },
              "identifier": {
                "description": "Business identifiers assigned to this care team by the performer or other systems which remain constant as the resource is updated and propagates from server to server.",
                "type": "array"
              },
              "status": {
                "description": "Indicates the current state of the care team.",
                "enum": [
                  "proposed",
                  "active",
                  "suspended",
                  "inactive",
                  "entered-in-error"
                ]
              },
              "_status": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "category": {
                "description": "Identifies what kind of team.  This is to support differentiation between multiple co-existing teams, such as care plan team, episode of care team, longitudinal care team.",
                "type": "array"
              },
              "name": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "_name": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "subject": {
                "description": "A reference from one resource to another.",
                "additionalProperties": false
              },
              "encounter": {
                "description": "A reference from one resource to another.",
                "additionalProperties": false
              },
              "period": {
                "description": "A time period defined by a start and end date and optionally time.",
                "additionalProperties": false
              },
              "participant": {
                "description": "Identifies all people and organizations who are expected to be involved in the care team.",
                "items": {
                  "description": "The Care Team includes all the people and organizations who plan to participate in the coordination and delivery of care for a patient.",
                  "properties": {
                    "id": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "type": "array"
                    },
                    "modifierExtension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                      "type": "array"
                    },
                    "role": {
                      "description": "Indicates specific responsibility of an individual within the care team, such as \"Primary care physician\", \"Trained social worker counselor\", \"Caregiver\", etc.",
                      "type": "array"
                    },
                    "member": {
                      "description": "A reference from one resource to another.",
                      "additionalProperties": false
                    },
                    "onBehalfOf": {
                      "description": "A reference from one resource to another.",
                      "additionalProperties": false
                    },
                    "period": {
                      "description": "A time period defined by a start and end date and optionally time.",
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                },
                "type": "array"
              },
              "reasonCode": {
                "description": "Describes why the care team exists.",
                "type": "array"
              },
              "reasonReference": {
                "description": "Condition(s) that this care team addresses.",
                "type": "array"
              },
              "managingOrganization": {
                "description": "The organization responsible for the care team.",
                "type": "array"
              },
              "telecom": {
                "description": "A central contact detail for the care team (that applies to all members).",
                "type": "array"
              },
              "note": {
                "description": "Comments made about the CareTeam.",
                "type": "array"
              }
            },
            "additionalProperties": false,
            "required": [
              "resourceType"
            ]
          },
          {
            "description": "Catalog entries are wrappers that contextualize items included in a catalog.",
            "properties": {
              "resourceType": {
                "description": "This is a CatalogEntry resource",
                "const": "CatalogEntry"
              },
              "id": {
                "description": "The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.",
                "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                "type": "string"
              },
              "meta": {
                "description": "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
                "additionalProperties": false
              },
              "implicitRules": {
                "pattern": "^\\S*$",
                "type": "string",
                "description": "String of characters used to identify a name or a resource"
              },
              "_implicitRules": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "language": {
                "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                "type": "string",
                "description": "A string which has at least one character and no leading or trailing whitespace and where there is no whitespace other than single spaces in the contents"
              },
              "_language": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "text": {
                "description": "A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it \"clinically safe\" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.",
                "additionalProperties": false
              },
              "contained": {
                "description": "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope.",
                "type": "array"
              },
              "extension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                "type": "array"
              },
              "modifierExtension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                "type": "array"
              },
              "identifier": {
                "description": "Used in supporting different identifiers for the same product, e.g. manufacturer code and retailer code.",
                "type": "array"
              },
              "type": {
                "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                "additionalProperties": false
              },
              "orderable": {
                "description": "Whether the entry represents an orderable item.",
                "pattern": "^true|false$",
                "type": "boolean"
              },
              "_orderable": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "referencedItem": {
                "description": "A reference from one resource to another.",
                "additionalProperties": false
              },
              "additionalIdentifier": {
                "description": "Used in supporting related concepts, e.g. NDC to RxNorm.",
                "type": "array"
              },
              "classification": {
                "description": "Classes of devices, or ATC for medication.",
                "type": "array"
              },
              "status": {
                "description": "Used to support catalog exchange even for unsupported products, e.g. getting list of medications even if not prescribable.",
                "enum": [
                  "draft",
                  "active",
                  "retired",
                  "unknown"
                ]
              },
              "_status": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "validityPeriod": {
                "description": "A time period defined by a start and end date and optionally time.",
                "additionalProperties": false
              },
              "validTo": {
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                "type": "string",
                "description": "A date, date-time or partial date (e.g. just year or year + month).  If hours and minutes are specified, a time zone SHALL be populated. The format is a union of the schema types gYear, gYearMonth, date and dateTime. Seconds must be provided due to schema type constraints but may be zero-filled and may be ignored.                 Dates SHALL be valid dates."
              },
              "_validTo": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "lastUpdated": {
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                "type": "string",
                "description": "A date, date-time or partial date (e.g. just year or year + month).  If hours and minutes are specified, a time zone SHALL be populated. The format is a union of the schema types gYear, gYearMonth, date and dateTime. Seconds must be provided due to schema type constraints but may be zero-filled and may be ignored.                 Dates SHALL be valid dates."
              },
              "_lastUpdated": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "additionalCharacteristic": {
                "description": "Used for examplefor Out of Formulary, or any specifics.",
                "type": "array"
              },
              "additionalClassification": {
                "description": "User for example for ATC classification, or.",
                "type": "array"
              },
              "relatedEntry": {
                "description": "Used for example, to point to a substance, or to a device used to administer a medication.",
                "items": {
                  "description": "Catalog entries are wrappers that contextualize items included in a catalog.",
                  "properties": {
                    "id": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "type": "array"
                    },
                    "modifierExtension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                      "type": "array"
                    },
                    "relationtype": {
                      "description": "The type of relation to the related item: child, parent, packageContent, containerPackage, usedIn, uses, requires, etc.",
                      "enum": [
                        "triggers",
                        "is-replaced-by"
                      ]
                    },
                    "_relationtype": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "item": {
                      "description": "A reference from one resource to another.",
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false,
                  "required": [
                    "item"
                  ]
                },
                "type": "array"
              }
            },
            "additionalProperties": false,
            "required": [
              "resourceType",
              "referencedItem"
            ]
          },
          {
            "description": "The resource ChargeItem describes the provision of healthcare provider products for a certain patient, therefore referring not only to the product, but containing in addition details of the provision, like date, time, amounts and participating organizations and persons. Main Usage of the ChargeItem is to enable the billing process and internal cost allocation.",
            "properties": {
              "resourceType": {
                "description": "This is a ChargeItem resource",
                "const": "ChargeItem"
              },
              "id": {
                "description": "The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.",
                "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                "type": "string"
              },
              "meta": {
                "description": "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
                "additionalProperties": false
              },
              "implicitRules": {
                "pattern": "^\\S*$",
                "type": "string",
                "description": "String of characters used to identify a name or a resource"
              },
              "_implicitRules": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "language": {
                "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                "type": "string",
                "description": "A string which has at least one character and no leading or trailing whitespace and where there is no whitespace other than single spaces in the contents"
              },
              "_language": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "text": {
                "description": "A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it \"clinically safe\" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.",
                "additionalProperties": false
              },
              "contained": {
                "description": "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope.",
                "type": "array"
              },
              "extension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                "type": "array"
              },
              "modifierExtension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                "type": "array"
              },
              "identifier": {
                "description": "Identifiers assigned to this event performer or other systems.",
                "type": "array"
              },
              "definitionUri": {
                "description": "References the (external) source of pricing information, rules of application for the code this ChargeItem uses.",
                "type": "array"
              },
              "_definitionUri": {
                "description": "Extensions for definitionUri",
                "type": "array"
              },
              "definitionCanonical": {
                "description": "References the source of pricing information, rules of application for the code this ChargeItem uses.",
                "type": "array"
              },
              "status": {
                "description": "The current state of the ChargeItem.",
                "enum": [
                  "planned",
                  "billable",
                  "not-billable",
                  "aborted",
                  "billed",
                  "entered-in-error",
                  "unknown"
                ]
              },
              "_status": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "partOf": {
                "description": "ChargeItems can be grouped to larger ChargeItems covering the whole set.",
                "type": "array"
              },
              "code": {
                "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                "additionalProperties": false
              },
              "subject": {
                "description": "A reference from one resource to another.",
                "additionalProperties": false
              },
              "context": {
                "description": "A reference from one resource to another.",
                "additionalProperties": false
              },
              "occurrenceDateTime": {
                "description": "Date/time(s) or duration when the charged service was applied.",
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                "type": "string"
              },
              "_occurrenceDateTime": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "occurrencePeriod": {
                "description": "A time period defined by a start and end date and optionally time.",
                "additionalProperties": false
              },
              "occurrenceTiming": {
                "description": "Date/time(s) or duration when the charged service was applied.",
                "additionalProperties": false
              },
              "performer": {
                "description": "Indicates who or what performed or participated in the charged service.",
                "items": {
                  "description": "The resource ChargeItem describes the provision of healthcare provider products for a certain patient, therefore referring not only to the product, but containing in addition details of the provision, like date, time, amounts and participating organizations and persons. Main Usage of the ChargeItem is to enable the billing process and internal cost allocation.",
                  "properties": {
                    "id": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "type": "array"
                    },
                    "modifierExtension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                      "type": "array"
                    },
                    "function": {
                      "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                      "additionalProperties": false
                    },
                    "actor": {
                      "description": "A reference from one resource to another.",
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false,
                  "required": [
                    "actor"
                  ]
                },
                "type": "array"
              },
              "performingOrganization": {
                "description": "A reference from one resource to another.",
                "additionalProperties": false
              },
              "requestingOrganization": {
                "description": "A reference from one resource to another.",
                "additionalProperties": false
              },
              "costCenter": {
                "description": "A reference from one resource to another.",
                "additionalProperties": false
              },
              "quantity": {
                "description": "Quantity of which the charge item has been serviced.",
                "additionalProperties": false
              },
              "bodysite": {
                "description": "The anatomical location where the related service has been applied.",
                "type": "array"
              },
              "factorOverride": {
                "description": "Factor overriding the factor determined by the rules associated with the code.",
                "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                "type": "number"
              },
              "_factorOverride": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "priceOverride": {
                "description": "Total price of the charge overriding the list price associated with the code.",
                "additionalProperties": false
              },
              "overrideReason": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "_overrideReason": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "enterer": {
                "description": "A reference from one resource to another.",
                "additionalProperties": false
              },
              "enteredDate": {
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                "type": "string",
                "description": "A date, date-time or partial date (e.g. just year or year + month).  If hours and minutes are specified, a time zone SHALL be populated. The format is a union of the schema types gYear, gYearMonth, date and dateTime. Seconds must be provided due to schema type constraints but may be zero-filled and may be ignored.                 Dates SHALL be valid dates."
              },
              "_enteredDate": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "reason": {
                "description": "Describes why the event occurred in coded or textual form.",
                "type": "array"
              },
              "service": {
                "description": "Indicated the rendered service that caused this charge.",
                "type": "array"
              },
              "productReference": {
                "description": "A reference from one resource to another.",
                "additionalProperties": false
              },
              "productCodeableConcept": {
                "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                "additionalProperties": false
              },
              "account": {
                "description": "Account into which this ChargeItems belongs.",
                "type": "array"
              },
              "note": {
                "description": "Comments made about the event by the performer, subject or other participants.",
                "type": "array"
              },
              "supportingInformation": {
                "description": "Further information supporting this charge.",
                "type": "array"
              }
            },
            "additionalProperties": false,
            "required": [
              "code",
              "subject",
              "resourceType"
            ]
          },
          {
            "description": "The ChargeItemDefinition resource provides the properties that apply to the (billing) codes necessary to calculate costs and prices. The properties may differ largely depending on type and realm, therefore this resource gives only a rough structure and requires profiling for each type of billing code system.",
            "properties": {
              "resourceType": {
                "description": "This is a ChargeItemDefinition resource",
                "const": "ChargeItemDefinition"
              },
              "id": {
                "description": "The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.",
                "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                "type": "string"
              },
              "meta": {
                "description": "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
                "additionalProperties": false
              },
              "implicitRules": {
                "pattern": "^\\S*$",
                "type": "string",
                "description": "String of characters used to identify a name or a resource"
              },
              "_implicitRules": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "language": {
                "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                "type": "string",
                "description": "A string which has at least one character and no leading or trailing whitespace and where there is no whitespace other than single spaces in the contents"
              },
              "_language": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "text": {
                "description": "A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it \"clinically safe\" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.",
                "additionalProperties": false
              },
              "contained": {
                "description": "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope.",
                "type": "array"
              },
              "extension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                "type": "array"
              },
              "modifierExtension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                "type": "array"
              },
              "url": {
                "pattern": "^\\S*$",
                "type": "string",
                "description": "String of characters used to identify a name or a resource"
              },
              "_url": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "identifier": {
                "description": "A formal identifier that is used to identify this charge item definition when it is represented in other formats, or referenced in a specification, model, design or an instance.",
                "type": "array"
              },
              "version": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "_version": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "title": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "_title": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "derivedFromUri": {
                "description": "The URL pointing to an externally-defined charge item definition that is adhered to in whole or in part by this definition.",
                "type": "array"
              },
              "_derivedFromUri": {
                "description": "Extensions for derivedFromUri",
                "type": "array"
              },
              "partOf": {
                "description": "A larger definition of which this particular definition is a component or step.",
                "type": "array"
              },
              "replaces": {
                "description": "As new versions of a protocol or guideline are defined, allows identification of what versions are replaced by a new instance.",
                "type": "array"
              },
              "status": {
                "description": "The current state of the ChargeItemDefinition.",
                "enum": [
                  "draft",
                  "active",
                  "retired",
                  "unknown"
                ]
              },
              "_status": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "experimental": {
                "description": "A Boolean value to indicate that this charge item definition is authored for testing purposes (or education/evaluation/marketing) and is not intended to be used for genuine usage.",
                "pattern": "^true|false$",
                "type": "boolean"
              },
              "_experimental": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "date": {
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                "type": "string",
                "description": "A date, date-time or partial date (e.g. just year or year + month).  If hours and minutes are specified, a time zone SHALL be populated. The format is a union of the schema types gYear, gYearMonth, date and dateTime. Seconds must be provided due to schema type constraints but may be zero-filled and may be ignored.                 Dates SHALL be valid dates."
              },
              "_date": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "publisher": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "_publisher": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "contact": {
                "description": "Contact details to assist a user in finding and communicating with the publisher.",
                "type": "array"
              },
              "description": {
                "description": "A free text natural language description of the charge item definition from a consumer's perspective.",
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string"
              },
              "_description": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "useContext": {
                "description": "The content was developed with a focus and intent of supporting the contexts that are listed. These contexts may be general categories (gender, age, ...) or may be references to specific programs (insurance plans, studies, ...) and may be used to assist with indexing and searching for appropriate charge item definition instances.",
                "type": "array"
              },
              "jurisdiction": {
                "description": "A legal or geographic region in which the charge item definition is intended to be used.",
                "type": "array"
              },
              "copyright": {
                "description": "A copyright statement relating to the charge item definition and/or its contents. Copyright statements are generally legal restrictions on the use and publishing of the charge item definition.",
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string"
              },
              "_copyright": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "approvalDate": {
                "description": "The date on which the resource content was approved by the publisher. Approval happens once when the content is officially approved for usage.",
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                "type": "string"
              },
              "_approvalDate": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "lastReviewDate": {
                "description": "The date on which the resource content was last reviewed. Review happens periodically after approval but does not change the original approval date.",
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                "type": "string"
              },
              "_lastReviewDate": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "effectivePeriod": {
                "description": "A time period defined by a start and end date and optionally time.",
                "additionalProperties": false
              },
              "code": {
                "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                "additionalProperties": false
              },
              "instance": {
                "description": "The defined billing details in this resource pertain to the given product instance(s).",
                "type": "array"
              },
              "applicability": {
                "description": "Expressions that describe applicability criteria for the billing code.",
                "items": {
                  "description": "The ChargeItemDefinition resource provides the properties that apply to the (billing) codes necessary to calculate costs and prices. The properties may differ largely depending on type and realm, therefore this resource gives only a rough structure and requires profiling for each type of billing code system.",
                  "properties": {
                    "id": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "type": "array"
                    },
                    "modifierExtension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                      "type": "array"
                    },
                    "description": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "_description": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "language": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "_language": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "expression": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "_expression": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                },
                "type": "array"
              },
              "propertyGroup": {
                "description": "Group of properties which are applicable under the same conditions. If no applicability rules are established for the group, then all properties always apply.",
                "items": {
                  "description": "The ChargeItemDefinition resource provides the properties that apply to the (billing) codes necessary to calculate costs and prices. The properties may differ largely depending on type and realm, therefore this resource gives only a rough structure and requires profiling for each type of billing code system.",
                  "properties": {
                    "id": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "type": "array"
                    },
                    "modifierExtension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                      "type": "array"
                    },
                    "applicability": {
                      "description": "Expressions that describe applicability criteria for the priceComponent.",
                      "type": "array"
                    },
                    "priceComponent": {
                      "description": "The price for a ChargeItem may be calculated as a base price with surcharges/deductions that apply in certain conditions. A ChargeItemDefinition resource that defines the prices, factors and conditions that apply to a billing code is currently under development. The priceComponent element can be used to offer transparency to the recipient of the Invoice of how the prices have been calculated.",
                      "items": {
                        "description": "The ChargeItemDefinition resource provides the properties that apply to the (billing) codes necessary to calculate costs and prices. The properties may differ largely depending on type and realm, therefore this resource gives only a rough structure and requires profiling for each type of billing code system.",
                        "properties": {
                          "id": {
                            "pattern": "^[ \\r\\n\\t\\S]+$",
                            "type": "string",
                            "description": "A sequence of Unicode characters"
                          },
                          "extension": {
                            "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                            "type": "array"
                          },
                          "modifierExtension": {
                            "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                            "type": "array"
                          },
                          "type": {
                            "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                            "type": "string",
                            "description": "A string which has at least one character and no leading or trailing whitespace and where there is no whitespace other than single spaces in the contents"
                          },
                          "_type": {
                            "description": "Base definition for all elements in a resource.",
                            "additionalProperties": false
                          },
                          "code": {
                            "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                            "additionalProperties": false
                          },
                          "factor": {
                            "description": "The factor that has been applied on the base price for calculating this component.",
                            "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                            "type": "number"
                          },
                          "_factor": {
                            "description": "Base definition for all elements in a resource.",
                            "additionalProperties": false
                          },
                          "amount": {
                            "description": "The amount calculated for this component.",
                            "additionalProperties": false
                          }
                        },
                        "additionalProperties": false
                      },
                      "type": "array"
                    }
                  },
                  "additionalProperties": false
                },
                "type": "array"
              }
            },
            "additionalProperties": false,
            "required": [
              "resourceType"
            ]
          },
          {
            "description": "A provider issued list of professional services and products which have been provided, or are to be provided, to a patient which is sent to an insurer for reimbursement.",
            "properties": {
              "resourceType": {
                "description": "This is a Claim resource",
                "const": "Claim"
              },
              "id": {
                "description": "The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.",
                "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                "type": "string"
              },
              "meta": {
                "description": "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
                "additionalProperties": false
              },
              "implicitRules": {
                "pattern": "^\\S*$",
                "type": "string",
                "description": "String of characters used to identify a name or a resource"
              },
              "_implicitRules": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "language": {
                "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                "type": "string",
                "description": "A string which has at least one character and no leading or trailing whitespace and where there is no whitespace other than single spaces in the contents"
              },
              "_language": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "text": {
                "description": "A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it \"clinically safe\" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.",
                "additionalProperties": false
              },
              "contained": {
                "description": "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope.",
                "type": "array"
              },
              "extension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                "type": "array"
              },
              "modifierExtension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                "type": "array"
              },
              "identifier": {
                "description": "A unique identifier assigned to this claim.",
                "type": "array"
              },
              "status": {
                "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                "type": "string",
                "description": "A string which has at least one character and no leading or trailing whitespace and where there is no whitespace other than single spaces in the contents"
              },
              "_status": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "type": {
                "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                "additionalProperties": false
              },
              "subType": {
                "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                "additionalProperties": false
              },
              "use": {
                "description": "A code to indicate whether the nature of the request is: to request adjudication of products and services previously rendered; or requesting authorization and adjudication for provision in the future; or requesting the non-binding adjudication of the listed products and services which could be provided in the future.",
                "enum": [
                  "claim",
                  "preauthorization",
                  "predetermination"
                ]
              },
              "_use": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "patient": {
                "description": "A reference from one resource to another.",
                "additionalProperties": false
              },
              "billablePeriod": {
                "description": "A time period defined by a start and end date and optionally time.",
                "additionalProperties": false
              },
              "created": {
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                "type": "string",
                "description": "A date, date-time or partial date (e.g. just year or year + month).  If hours and minutes are specified, a time zone SHALL be populated. The format is a union of the schema types gYear, gYearMonth, date and dateTime. Seconds must be provided due to schema type constraints but may be zero-filled and may be ignored.                 Dates SHALL be valid dates."
              },
              "_created": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "enterer": {
                "description": "A reference from one resource to another.",
                "additionalProperties": false
              },
              "insurer": {
                "description": "A reference from one resource to another.",
                "additionalProperties": false
              },
              "provider": {
                "description": "A reference from one resource to another.",
                "additionalProperties": false
              },
              "priority": {
                "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                "additionalProperties": false
              },
              "fundsReserve": {
                "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                "additionalProperties": false
              },
              "related": {
                "description": "Other claims which are related to this claim such as prior submissions or claims for related services or for the same event.",
                "items": {
                  "description": "A provider issued list of professional services and products which have been provided, or are to be provided, to a patient which is sent to an insurer for reimbursement.",
                  "properties": {
                    "id": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "type": "array"
                    },
                    "modifierExtension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                      "type": "array"
                    },
                    "claim": {
                      "description": "A reference from one resource to another.",
                      "additionalProperties": false
                    },
                    "relationship": {
                      "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                      "additionalProperties": false
                    },
                    "reference": {
                      "description": "An identifier - identifies some entity uniquely and unambiguously. Typically this is used for business identifiers.",
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                },
                "type": "array"
              },
              "prescription": {
                "description": "A reference from one resource to another.",
                "additionalProperties": false
              },
              "originalPrescription": {
                "description": "A reference from one resource to another.",
                "additionalProperties": false
              },
              "payee": {
                "description": "The party to be reimbursed for cost of the products and services according to the terms of the policy.",
                "properties": {
                  "id": {
                    "pattern": "^[ \\r\\n\\t\\S]+$",
                    "type": "string",
                    "description": "A sequence of Unicode characters"
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "type": "array"
                  },
                  "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                    "type": "array"
                  },
                  "type": {
                    "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                    "additionalProperties": false
                  },
                  "party": {
                    "description": "A reference from one resource to another.",
                    "additionalProperties": false
                  }
                },
                "additionalProperties": false,
                "required": [
                  "type"
                ]
              },
              "referral": {
                "description": "A reference from one resource to another.",
                "additionalProperties": false
              },
              "facility": {
                "description": "A reference from one resource to another.",
                "additionalProperties": false
              },
              "careTeam": {
                "description": "The members of the team who provided the products and services.",
                "items": {
                  "description": "A provider issued list of professional services and products which have been provided, or are to be provided, to a patient which is sent to an insurer for reimbursement.",
                  "properties": {
                    "id": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "type": "array"
                    },
                    "modifierExtension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                      "type": "array"
                    },
                    "sequence": {
                      "description": "A number to uniquely identify care team entries.",
                      "pattern": "^[1-9][0-9]*$",
                      "type": "number"
                    },
                    "_sequence": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "provider": {
                      "description": "A reference from one resource to another.",
                      "additionalProperties": false
                    },
                    "responsible": {
                      "description": "The party who is billing and/or responsible for the claimed products or services.",
                      "pattern": "^true|false$",
                      "type": "boolean"
                    },
                    "_responsible": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "role": {
                      "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                      "additionalProperties": false
                    },
                    "qualification": {
                      "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false,
                  "required": [
                    "provider"
                  ]
                },
                "type": "array"
              },
              "supportingInfo": {
                "description": "Additional information codes regarding exceptions, special considerations, the condition, situation, prior or concurrent issues.",
                "items": {
                  "description": "A provider issued list of professional services and products which have been provided, or are to be provided, to a patient which is sent to an insurer for reimbursement.",
                  "properties": {
                    "id": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "type": "array"
                    },
                    "modifierExtension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                      "type": "array"
                    },
                    "sequence": {
                      "description": "A number to uniquely identify supporting information entries.",
                      "pattern": "^[1-9][0-9]*$",
                      "type": "number"
                    },
                    "_sequence": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "category": {
                      "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                      "additionalProperties": false
                    },
                    "code": {
                      "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                      "additionalProperties": false
                    },
                    "timingDate": {
                      "description": "The date when or period to which this information refers.",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                      "type": "string"
                    },
                    "_timingDate": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "timingPeriod": {
                      "description": "A time period defined by a start and end date and optionally time.",
                      "additionalProperties": false
                    },
                    "valueBoolean": {
                      "description": "Additional data or information such as resources, documents, images etc. including references to the data or the actual inclusion of the data.",
                      "pattern": "^true|false$",
                      "type": "boolean"
                    },
                    "_valueBoolean": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "valueString": {
                      "description": "Additional data or information such as resources, documents, images etc. including references to the data or the actual inclusion of the data.",
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string"
                    },
                    "_valueString": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "valueQuantity": {
                      "description": "Additional data or information such as resources, documents, images etc. including references to the data or the actual inclusion of the data.",
                      "additionalProperties": false
                    },
                    "valueAttachment": {
                      "description": "For referring to data content defined in other formats.",
                      "additionalProperties": false
                    },
                    "valueReference": {
                      "description": "A reference from one resource to another.",
                      "additionalProperties": false
                    },
                    "reason": {
                      "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false,
                  "required": [
                    "category"
                  ]
                },
                "type": "array"
              },
              "diagnosis": {
                "description": "Information about diagnoses relevant to the claim items.",
                "items": {
                  "description": "A provider issued list of professional services and products which have been provided, or are to be provided, to a patient which is sent to an insurer for reimbursement.",
                  "properties": {
                    "id": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "type": "array"
                    },
                    "modifierExtension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                      "type": "array"
                    },
                    "sequence": {
                      "description": "A number to uniquely identify diagnosis entries.",
                      "pattern": "^[1-9][0-9]*$",
                      "type": "number"
                    },
                    "_sequence": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "diagnosisCodeableConcept": {
                      "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                      "additionalProperties": false
                    },
                    "diagnosisReference": {
                      "description": "A reference from one resource to another.",
                      "additionalProperties": false
                    },
                    "type": {
                      "description": "When the condition was observed or the relative ranking.",
                      "type": "array"
                    },
                    "onAdmission": {
                      "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                      "additionalProperties": false
                    },
                    "packageCode": {
                      "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                },
                "type": "array"
              },
              "procedure": {
                "description": "Procedures performed on the patient relevant to the billing items with the claim.",
                "items": {
                  "description": "A provider issued list of professional services and products which have been provided, or are to be provided, to a patient which is sent to an insurer for reimbursement.",
                  "properties": {
                    "id": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "type": "array"
                    },
                    "modifierExtension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                      "type": "array"
                    },
                    "sequence": {
                      "description": "A number to uniquely identify procedure entries.",
                      "pattern": "^[1-9][0-9]*$",
                      "type": "number"
                    },
                    "_sequence": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "type": {
                      "description": "When the condition was observed or the relative ranking.",
                      "type": "array"
                    },
                    "date": {
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                      "type": "string",
                      "description": "A date, date-time or partial date (e.g. just year or year + month).  If hours and minutes are specified, a time zone SHALL be populated. The format is a union of the schema types gYear, gYearMonth, date and dateTime. Seconds must be provided due to schema type constraints but may be zero-filled and may be ignored.                 Dates SHALL be valid dates."
                    },
                    "_date": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "procedureCodeableConcept": {
                      "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                      "additionalProperties": false
                    },
                    "procedureReference": {
                      "description": "A reference from one resource to another.",
                      "additionalProperties": false
                    },
                    "udi": {
                      "description": "Unique Device Identifiers associated with this line item.",
                      "type": "array"
                    }
                  },
                  "additionalProperties": false
                },
                "type": "array"
              },
              "insurance": {
                "description": "Financial instruments for reimbursement for the health care products and services specified on the claim.",
                "items": {
                  "description": "A provider issued list of professional services and products which have been provided, or are to be provided, to a patient which is sent to an insurer for reimbursement.",
                  "properties": {
                    "id": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "type": "array"
                    },
                    "modifierExtension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                      "type": "array"
                    },
                    "sequence": {
                      "description": "A number to uniquely identify insurance entries and provide a sequence of coverages to convey coordination of benefit order.",
                      "pattern": "^[1-9][0-9]*$",
                      "type": "number"
                    },
                    "_sequence": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "focal": {
                      "description": "A flag to indicate that this Coverage is to be used for adjudication of this claim when set to true.",
                      "pattern": "^true|false$",
                      "type": "boolean"
                    },
                    "_focal": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "identifier": {
                      "description": "An identifier - identifies some entity uniquely and unambiguously. Typically this is used for business identifiers.",
                      "additionalProperties": false
                    },
                    "coverage": {
                      "description": "A reference from one resource to another.",
                      "additionalProperties": false
                    },
                    "businessArrangement": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "_businessArrangement": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "preAuthRef": {
                      "description": "Reference numbers previously provided by the insurer to the provider to be quoted on subsequent claims containing services or products related to the prior authorization.",
                      "type": "array"
                    },
                    "_preAuthRef": {
                      "description": "Extensions for preAuthRef",
                      "type": "array"
                    },
                    "claimResponse": {
                      "description": "A reference from one resource to another.",
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false,
                  "required": [
                    "coverage"
                  ]
                },
                "type": "array"
              },
              "accident": {
                "description": "Details of an accident which resulted in injuries which required the products and services listed in the claim.",
                "properties": {
                  "id": {
                    "pattern": "^[ \\r\\n\\t\\S]+$",
                    "type": "string",
                    "description": "A sequence of Unicode characters"
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "type": "array"
                  },
                  "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                    "type": "array"
                  },
                  "date": {
                    "description": "Date of an accident event  related to the products and services contained in the claim.",
                    "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                    "type": "string"
                  },
                  "_date": {
                    "description": "Base definition for all elements in a resource.",
                    "additionalProperties": false
                  },
                  "type": {
                    "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                    "additionalProperties": false
                  },
                  "locationAddress": {
                    "description": "The physical location of the accident event.",
                    "additionalProperties": false
                  },
                  "locationReference": {
                    "description": "A reference from one resource to another.",
                    "additionalProperties": false
                  }
                },
                "additionalProperties": false
              },
              "item": {
                "description": "A claim line. Either a simple  product or service or a 'group' of details which can each be a simple items or groups of sub-details.",
                "items": {
                  "description": "A provider issued list of professional services and products which have been provided, or are to be provided, to a patient which is sent to an insurer for reimbursement.",
                  "properties": {
                    "id": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "type": "array"
                    },
                    "modifierExtension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                      "type": "array"
                    },
                    "sequence": {
                      "description": "A number to uniquely identify item entries.",
                      "pattern": "^[1-9][0-9]*$",
                      "type": "number"
                    },
                    "_sequence": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "careTeamSequence": {
                      "description": "CareTeam members related to this service or product.",
                      "items": {
                        "pattern": "^[1-9][0-9]*$",
                        "type": "number",
                        "description": "An integer with a value that is positive (e.g. >0)"
                      },
                      "type": "array"
                    },
                    "_careTeamSequence": {
                      "description": "Extensions for careTeamSequence",
                      "type": "array"
                    },
                    "diagnosisSequence": {
                      "description": "Diagnosis applicable for this service or product.",
                      "type": "array"
                    },
                    "_diagnosisSequence": {
                      "description": "Extensions for diagnosisSequence",
                      "type": "array"
                    },
                    "procedureSequence": {
                      "description": "Procedures applicable for this service or product.",
                      "type": "array"
                    },
                    "_procedureSequence": {
                      "description": "Extensions for procedureSequence",
                      "type": "array"
                    },
                    "informationSequence": {
                      "description": "Exceptions, special conditions and supporting information applicable for this service or product.",
                      "type": "array"
                    },
                    "_informationSequence": {
                      "description": "Extensions for informationSequence",
                      "type": "array"
                    },
                    "revenue": {
                      "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                      "additionalProperties": false
                    },
                    "category": {
                      "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                      "additionalProperties": false
                    },
                    "productOrService": {
                      "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                      "additionalProperties": false
                    },
                    "modifier": {
                      "description": "Item typification or modifiers codes to convey additional context for the product or service.",
                      "type": "array"
                    },
                    "programCode": {
                      "description": "Identifies the program under which this may be recovered.",
                      "type": "array"
                    },
                    "servicedDate": {
                      "description": "The date or dates when the service or product was supplied, performed or completed.",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                      "type": "string"
                    },
                    "_servicedDate": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "servicedPeriod": {
                      "description": "A time period defined by a start and end date and optionally time.",
                      "additionalProperties": false
                    },
                    "locationCodeableConcept": {
                      "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                      "additionalProperties": false
                    },
                    "locationAddress": {
                      "description": "Where the product or service was provided.",
                      "additionalProperties": false
                    },
                    "locationReference": {
                      "description": "A reference from one resource to another.",
                      "additionalProperties": false
                    },
                    "quantity": {
                      "description": "The number of repetitions of a service or product.",
                      "additionalProperties": false
                    },
                    "unitPrice": {
                      "description": "If the item is not a group then this is the fee for the product or service, otherwise this is the total of the fees for the details of the group.",
                      "additionalProperties": false
                    },
                    "factor": {
                      "description": "A real number that represents a multiplier used in determining the overall value of services delivered and/or goods received. The concept of a Factor allows for a discount or surcharge multiplier to be applied to a monetary amount.",
                      "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                      "type": "number"
                    },
                    "_factor": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "net": {
                      "description": "The quantity times the unit price for an additional service or product or charge.",
                      "additionalProperties": false
                    },
                    "udi": {
                      "description": "Unique Device Identifiers associated with this line item.",
                      "type": "array"
                    },
                    "bodySite": {
                      "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                      "additionalProperties": false
                    },
                    "subSite": {
                      "description": "A region or surface of the bodySite, e.g. limb region or tooth surface(s).",
                      "type": "array"
                    },
                    "encounter": {
                      "description": "The Encounters during which this Claim was created or to which the creation of this record is tightly associated.",
                      "type": "array"
                    },
                    "detail": {
                      "description": "A claim detail line. Either a simple (a product or service) or a 'group' of sub-details which are simple items.",
                      "items": {
                        "description": "A provider issued list of professional services and products which have been provided, or are to be provided, to a patient which is sent to an insurer for reimbursement.",
                        "properties": {
                          "id": {
                            "pattern": "^[ \\r\\n\\t\\S]+$",
                            "type": "string",
                            "description": "A sequence of Unicode characters"
                          },
                          "extension": {
                            "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                            "type": "array"
                          },
                          "modifierExtension": {
                            "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                            "type": "array"
                          },
                          "sequence": {
                            "pattern": "^[1-9][0-9]*$",
                            "type": "number",
                            "description": "An integer with a value that is positive (e.g. >0)"
                          },
                          "_sequence": {
                            "description": "Base definition for all elements in a resource.",
                            "additionalProperties": false
                          },
                          "revenue": {
                            "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                            "additionalProperties": false
                          },
                          "category": {
                            "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                            "additionalProperties": false
                          },
                          "productOrService": {
                            "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                            "additionalProperties": false
                          },
                          "modifier": {
                            "description": "Item typification or modifiers codes to convey additional context for the product or service.",
                            "type": "array"
                          },
                          "programCode": {
                            "description": "Identifies the program under which this may be recovered.",
                            "type": "array"
                          },
                          "quantity": {
                            "description": "The number of repetitions of a service or product.",
                            "additionalProperties": false
                          },
                          "unitPrice": {
                            "description": "If the item is not a group then this is the fee for the product or service, otherwise this is the total of the fees for the details of the group.",
                            "additionalProperties": false
                          },
                          "factor": {
                            "description": "A real number that represents a multiplier used in determining the overall value of services delivered and/or goods received. The concept of a Factor allows for a discount or surcharge multiplier to be applied to a monetary amount.",
                            "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                            "type": "number"
                          },
                          "_factor": {
                            "description": "Base definition for all elements in a resource.",
                            "additionalProperties": false
                          },
                          "net": {
                            "description": "The quantity times the unit price for an additional service or product or charge.",
                            "additionalProperties": false
                          },
                          "udi": {
                            "description": "Unique Device Identifiers associated with this line item.",
                            "type": "array"
                          },
                          "subDetail": {
                            "description": "A claim detail line. Either a simple (a product or service) or a 'group' of sub-details which are simple items.",
                            "items": {
                              "description": "A provider issued list of professional services and products which have been provided, or are to be provided, to a patient which is sent to an insurer for reimbursement.",
                              "properties": {
                                "id": {
                                  "pattern": "^[ \\r\\n\\t\\S]+$",
                                  "type": "string",
                                  "description": "A sequence of Unicode characters"
                                },
                                "extension": {
                                  "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                                  "type": "array"
                                },
                                "modifierExtension": {
                                  "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                                  "type": "array"
                                },
                                "sequence": {
                                  "pattern": "^[1-9][0-9]*$",
                                  "type": "number",
                                  "description": "An integer with a value that is positive (e.g. >0)"
                                },
                                "_sequence": {
                                  "description": "Base definition for all elements in a resource.",
                                  "additionalProperties": false
                                },
                                "revenue": {
                                  "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                                  "additionalProperties": false
                                },
                                "category": {
                                  "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                                  "additionalProperties": false
                                },
                                "productOrService": {
                                  "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                                  "additionalProperties": false
                                },
                                "modifier": {
                                  "description": "Item typification or modifiers codes to convey additional context for the product or service.",
                                  "type": "array"
                                },
                                "programCode": {
                                  "description": "Identifies the program under which this may be recovered.",
                                  "type": "array"
                                },
                                "quantity": {
                                  "description": "The number of repetitions of a service or product.",
                                  "additionalProperties": false
                                },
                                "unitPrice": {
                                  "description": "If the item is not a group then this is the fee for the product or service, otherwise this is the total of the fees for the details of the group.",
                                  "additionalProperties": false
                                },
                                "factor": {
                                  "description": "A real number that represents a multiplier used in determining the overall value of services delivered and/or goods received. The concept of a Factor allows for a discount or surcharge multiplier to be applied to a monetary amount.",
                                  "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                                  "type": "number"
                                },
                                "_factor": {
                                  "description": "Base definition for all elements in a resource.",
                                  "additionalProperties": false
                                },
                                "net": {
                                  "description": "The quantity times the unit price for an additional service or product or charge.",
                                  "additionalProperties": false
                                },
                                "udi": {
                                  "description": "Unique Device Identifiers associated with this line item.",
                                  "type": "array"
                                }
                              },
                              "additionalProperties": false,
                              "required": [
                                "productOrService"
                              ]
                            },
                            "type": "array"
                          }
                        },
                        "additionalProperties": false,
                        "required": [
                          "productOrService"
                        ]
                      },
                      "type": "array"
                    }
                  },
                  "additionalProperties": false,
                  "required": [
                    "productOrService"
                  ]
                },
                "type": "array"
              },
              "total": {
                "description": "The total value of the all the items in the claim.",
                "additionalProperties": false
              }
            },
            "additionalProperties": false,
            "required": [
              "insurance",
              "provider",
              "patient",
              "type",
              "priority",
              "resourceType"
            ]
          },
          {
            "description": "This resource provides the adjudication details from the processing of a Claim resource.",
            "properties": {
              "resourceType": {
                "description": "This is a ClaimResponse resource",
                "const": "ClaimResponse"
              },
              "id": {
                "description": "The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.",
                "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                "type": "string"
              },
              "meta": {
                "description": "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
                "additionalProperties": false
              },
              "implicitRules": {
                "pattern": "^\\S*$",
                "type": "string",
                "description": "String of characters used to identify a name or a resource"
              },
              "_implicitRules": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "language": {
                "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                "type": "string",
                "description": "A string which has at least one character and no leading or trailing whitespace and where there is no whitespace other than single spaces in the contents"
              },
              "_language": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "text": {
                "description": "A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it \"clinically safe\" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.",
                "additionalProperties": false
              },
              "contained": {
                "description": "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope.",
                "type": "array"
              },
              "extension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                "type": "array"
              },
              "modifierExtension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                "type": "array"
              },
              "identifier": {
                "description": "A unique identifier assigned to this claim response.",
                "type": "array"
              },
              "status": {
                "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                "type": "string",
                "description": "A string which has at least one character and no leading or trailing whitespace and where there is no whitespace other than single spaces in the contents"
              },
              "_status": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "type": {
                "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                "additionalProperties": false
              },
              "subType": {
                "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                "additionalProperties": false
              },
              "use": {
                "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                "type": "string",
                "description": "A string which has at least one character and no leading or trailing whitespace and where there is no whitespace other than single spaces in the contents"
              },
              "_use": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "patient": {
                "description": "A reference from one resource to another.",
                "additionalProperties": false
              },
              "created": {
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                "type": "string",
                "description": "A date, date-time or partial date (e.g. just year or year + month).  If hours and minutes are specified, a time zone SHALL be populated. The format is a union of the schema types gYear, gYearMonth, date and dateTime. Seconds must be provided due to schema type constraints but may be zero-filled and may be ignored.                 Dates SHALL be valid dates."
              },
              "_created": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "insurer": {
                "description": "A reference from one resource to another.",
                "additionalProperties": false
              },
              "requestor": {
                "description": "A reference from one resource to another.",
                "additionalProperties": false
              },
              "request": {
                "description": "A reference from one resource to another.",
                "additionalProperties": false
              },
              "outcome": {
                "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                "type": "string",
                "description": "A string which has at least one character and no leading or trailing whitespace and where there is no whitespace other than single spaces in the contents"
              },
              "_outcome": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "disposition": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "_disposition": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "preAuthRef": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "_preAuthRef": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "preAuthPeriod": {
                "description": "A time period defined by a start and end date and optionally time.",
                "additionalProperties": false
              },
              "payeeType": {
                "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                "additionalProperties": false
              },
              "item": {
                "description": "A claim line. Either a simple (a product or service) or a 'group' of details which can also be a simple items or groups of sub-details.",
                "items": {
                  "description": "This resource provides the adjudication details from the processing of a Claim resource.",
                  "properties": {
                    "id": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "type": "array"
                    },
                    "modifierExtension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                      "type": "array"
                    },
                    "itemSequence": {
                      "pattern": "^[1-9][0-9]*$",
                      "type": "number",
                      "description": "An integer with a value that is positive (e.g. >0)"
                    },
                    "_itemSequence": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "noteNumber": {
                      "description": "The numbers associated with notes below which apply to the adjudication of this item.",
                      "type": "array"
                    },
                    "_noteNumber": {
                      "description": "Extensions for noteNumber",
                      "type": "array"
                    },
                    "adjudication": {
                      "description": "If this item is a group then the values here are a summary of the adjudication of the detail items. If this item is a simple product or service then this is the result of the adjudication of this item.",
                      "items": {
                        "description": "This resource provides the adjudication details from the processing of a Claim resource.",
                        "properties": {
                          "id": {
                            "pattern": "^[ \\r\\n\\t\\S]+$",
                            "type": "string",
                            "description": "A sequence of Unicode characters"
                          },
                          "extension": {
                            "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                            "type": "array"
                          },
                          "modifierExtension": {
                            "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                            "type": "array"
                          },
                          "category": {
                            "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                            "additionalProperties": false
                          },
                          "reason": {
                            "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                            "additionalProperties": false
                          },
                          "amount": {
                            "description": "Monetary amount associated with the category.",
                            "additionalProperties": false
                          },
                          "value": {
                            "description": "A non-monetary value associated with the category. Mutually exclusive to the amount element above.",
                            "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                            "type": "number"
                          },
                          "_value": {
                            "description": "Base definition for all elements in a resource.",
                            "additionalProperties": false
                          }
                        },
                        "additionalProperties": false,
                        "required": [
                          "category"
                        ]
                      },
                      "type": "array"
                    },
                    "detail": {
                      "description": "A claim detail. Either a simple (a product or service) or a 'group' of sub-details which are simple items.",
                      "items": {
                        "description": "This resource provides the adjudication details from the processing of a Claim resource.",
                        "properties": {
                          "id": {
                            "pattern": "^[ \\r\\n\\t\\S]+$",
                            "type": "string",
                            "description": "A sequence of Unicode characters"
                          },
                          "extension": {
                            "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                            "type": "array"
                          },
                          "modifierExtension": {
                            "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                            "type": "array"
                          },
                          "detailSequence": {
                            "pattern": "^[1-9][0-9]*$",
                            "type": "number",
                            "description": "An integer with a value that is positive (e.g. >0)"
                          },
                          "_detailSequence": {
                            "description": "Base definition for all elements in a resource.",
                            "additionalProperties": false
                          },
                          "noteNumber": {
                            "description": "The numbers associated with notes below which apply to the adjudication of this item.",
                            "type": "array"
                          },
                          "_noteNumber": {
                            "description": "Extensions for noteNumber",
                            "type": "array"
                          },
                          "adjudication": {
                            "description": "The adjudication results.",
                            "type": "array"
                          },
                          "subDetail": {
                            "description": "A sub-detail adjudication of a simple product or service.",
                            "items": {
                              "description": "This resource provides the adjudication details from the processing of a Claim resource.",
                              "properties": {
                                "id": {
                                  "pattern": "^[ \\r\\n\\t\\S]+$",
                                  "type": "string",
                                  "description": "A sequence of Unicode characters"
                                },
                                "extension": {
                                  "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                                  "type": "array"
                                },
                                "modifierExtension": {
                                  "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                                  "type": "array"
                                },
                                "subDetailSequence": {
                                  "pattern": "^[1-9][0-9]*$",
                                  "type": "number",
                                  "description": "An integer with a value that is positive (e.g. >0)"
                                },
                                "_subDetailSequence": {
                                  "description": "Base definition for all elements in a resource.",
                                  "additionalProperties": false
                                },
                                "noteNumber": {
                                  "description": "The numbers associated with notes below which apply to the adjudication of this item.",
                                  "type": "array"
                                },
                                "_noteNumber": {
                                  "description": "Extensions for noteNumber",
                                  "type": "array"
                                },
                                "adjudication": {
                                  "description": "The adjudication results.",
                                  "type": "array"
                                }
                              },
                              "additionalProperties": false
                            },
                            "type": "array"
                          }
                        },
                        "additionalProperties": false,
                        "required": [
                          "adjudication"
                        ]
                      },
                      "type": "array"
                    }
                  },
                  "additionalProperties": false,
                  "required": [
                    "adjudication"
                  ]
                },
                "type": "array"
              },
              "addItem": {
                "description": "The first-tier service adjudications for payor added product or service lines.",
                "items": {
                  "description": "This resource provides the adjudication details from the processing of a Claim resource.",
                  "properties": {
                    "id": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "type": "array"
                    },
                    "modifierExtension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                      "type": "array"
                    },
                    "itemSequence": {
                      "description": "Claim items which this service line is intended to replace.",
                      "type": "array"
                    },
                    "_itemSequence": {
                      "description": "Extensions for itemSequence",
                      "type": "array"
                    },
                    "detailSequence": {
                      "description": "The sequence number of the details within the claim item which this line is intended to replace.",
                      "type": "array"
                    },
                    "_detailSequence": {
                      "description": "Extensions for detailSequence",
                      "type": "array"
                    },
                    "subdetailSequence": {
                      "description": "The sequence number of the sub-details within the details within the claim item which this line is intended to replace.",
                      "type": "array"
                    },
                    "_subdetailSequence": {
                      "description": "Extensions for subdetailSequence",
                      "type": "array"
                    },
                    "provider": {
                      "description": "The providers who are authorized for the services rendered to the patient.",
                      "type": "array"
                    },
                    "productOrService": {
                      "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                      "additionalProperties": false
                    },
                    "modifier": {
                      "description": "Item typification or modifiers codes to convey additional context for the product or service.",
                      "type": "array"
                    },
                    "programCode": {
                      "description": "Identifies the program under which this may be recovered.",
                      "type": "array"
                    },
                    "servicedDate": {
                      "description": "The date or dates when the service or product was supplied, performed or completed.",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                      "type": "string"
                    },
                    "_servicedDate": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "servicedPeriod": {
                      "description": "A time period defined by a start and end date and optionally time.",
                      "additionalProperties": false
                    },
                    "locationCodeableConcept": {
                      "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                      "additionalProperties": false
                    },
                    "locationAddress": {
                      "description": "Where the product or service was provided.",
                      "additionalProperties": false
                    },
                    "locationReference": {
                      "description": "A reference from one resource to another.",
                      "additionalProperties": false
                    },
                    "quantity": {
                      "description": "The number of repetitions of a service or product.",
                      "additionalProperties": false
                    },
                    "unitPrice": {
                      "description": "If the item is not a group then this is the fee for the product or service, otherwise this is the total of the fees for the details of the group.",
                      "additionalProperties": false
                    },
                    "factor": {
                      "description": "A real number that represents a multiplier used in determining the overall value of services delivered and/or goods received. The concept of a Factor allows for a discount or surcharge multiplier to be applied to a monetary amount.",
                      "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                      "type": "number"
                    },
                    "_factor": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "net": {
                      "description": "The quantity times the unit price for an additional service or product or charge.",
                      "additionalProperties": false
                    },
                    "bodySite": {
                      "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                      "additionalProperties": false
                    },
                    "subSite": {
                      "description": "A region or surface of the bodySite, e.g. limb region or tooth surface(s).",
                      "type": "array"
                    },
                    "noteNumber": {
                      "description": "The numbers associated with notes below which apply to the adjudication of this item.",
                      "type": "array"
                    },
                    "_noteNumber": {
                      "description": "Extensions for noteNumber",
                      "type": "array"
                    },
                    "adjudication": {
                      "description": "The adjudication results.",
                      "type": "array"
                    },
                    "detail": {
                      "description": "The second-tier service adjudications for payor added services.",
                      "items": {
                        "description": "This resource provides the adjudication details from the processing of a Claim resource.",
                        "properties": {
                          "id": {
                            "pattern": "^[ \\r\\n\\t\\S]+$",
                            "type": "string",
                            "description": "A sequence of Unicode characters"
                          },
                          "extension": {
                            "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                            "type": "array"
                          },
                          "modifierExtension": {
                            "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                            "type": "array"
                          },
                          "productOrService": {
                            "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                            "additionalProperties": false
                          },
                          "modifier": {
                            "description": "Item typification or modifiers codes to convey additional context for the product or service.",
                            "type": "array"
                          },
                          "quantity": {
                            "description": "The number of repetitions of a service or product.",
                            "additionalProperties": false
                          },
                          "unitPrice": {
                            "description": "If the item is not a group then this is the fee for the product or service, otherwise this is the total of the fees for the details of the group.",
                            "additionalProperties": false
                          },
                          "factor": {
                            "description": "A real number that represents a multiplier used in determining the overall value of services delivered and/or goods received. The concept of a Factor allows for a discount or surcharge multiplier to be applied to a monetary amount.",
                            "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                            "type": "number"
                          },
                          "_factor": {
                            "description": "Base definition for all elements in a resource.",
                            "additionalProperties": false
                          },
                          "net": {
                            "description": "The quantity times the unit price for an additional service or product or charge.",
                            "additionalProperties": false
                          },
                          "noteNumber": {
                            "description": "The numbers associated with notes below which apply to the adjudication of this item.",
                            "type": "array"
                          },
                          "_noteNumber": {
                            "description": "Extensions for noteNumber",
                            "type": "array"
                          },
                          "adjudication": {
                            "description": "The adjudication results.",
                            "type": "array"
                          },
                          "subDetail": {
                            "description": "The third-tier service adjudications for payor added services.",
                            "items": {
                              "description": "This resource provides the adjudication details from the processing of a Claim resource.",
                              "properties": {
                                "id": {
                                  "pattern": "^[ \\r\\n\\t\\S]+$",
                                  "type": "string",
                                  "description": "A sequence of Unicode characters"
                                },
                                "extension": {
                                  "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                                  "type": "array"
                                },
                                "modifierExtension": {
                                  "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                                  "type": "array"
                                },
                                "productOrService": {
                                  "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                                  "additionalProperties": false
                                },
                                "modifier": {
                                  "description": "Item typification or modifiers codes to convey additional context for the product or service.",
                                  "type": "array"
                                },
                                "quantity": {
                                  "description": "The number of repetitions of a service or product.",
                                  "additionalProperties": false
                                },
                                "unitPrice": {
                                  "description": "If the item is not a group then this is the fee for the product or service, otherwise this is the total of the fees for the details of the group.",
                                  "additionalProperties": false
                                },
                                "factor": {
                                  "description": "A real number that represents a multiplier used in determining the overall value of services delivered and/or goods received. The concept of a Factor allows for a discount or surcharge multiplier to be applied to a monetary amount.",
                                  "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                                  "type": "number"
                                },
                                "_factor": {
                                  "description": "Base definition for all elements in a resource.",
                                  "additionalProperties": false
                                },
                                "net": {
                                  "description": "The quantity times the unit price for an additional service or product or charge.",
                                  "additionalProperties": false
                                },
                                "noteNumber": {
                                  "description": "The numbers associated with notes below which apply to the adjudication of this item.",
                                  "type": "array"
                                },
                                "_noteNumber": {
                                  "description": "Extensions for noteNumber",
                                  "type": "array"
                                },
                                "adjudication": {
                                  "description": "The adjudication results.",
                                  "type": "array"
                                }
                              },
                              "additionalProperties": false,
                              "required": [
                                "adjudication",
                                "productOrService"
                              ]
                            },
                            "type": "array"
                          }
                        },
                        "additionalProperties": false,
                        "required": [
                          "adjudication",
                          "productOrService"
                        ]
                      },
                      "type": "array"
                    }
                  },
                  "additionalProperties": false,
                  "required": [
                    "adjudication",
                    "productOrService"
                  ]
                },
                "type": "array"
              },
              "adjudication": {
                "description": "The adjudication results which are presented at the header level rather than at the line-item or add-item levels.",
                "type": "array"
              },
              "total": {
                "description": "Categorized monetary totals for the adjudication.",
                "items": {
                  "description": "This resource provides the adjudication details from the processing of a Claim resource.",
                  "properties": {
                    "id": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "type": "array"
                    },
                    "modifierExtension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                      "type": "array"
                    },
                    "category": {
                      "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                      "additionalProperties": false
                    },
                    "amount": {
                      "description": "Monetary total amount associated with the category.",
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false,
                  "required": [
                    "amount",
                    "category"
                  ]
                },
                "type": "array"
              },
              "payment": {
                "description": "Payment details for the adjudication of the claim.",
                "properties": {
                  "id": {
                    "pattern": "^[ \\r\\n\\t\\S]+$",
                    "type": "string",
                    "description": "A sequence of Unicode characters"
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "type": "array"
                  },
                  "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                    "type": "array"
                  },
                  "type": {
                    "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                    "additionalProperties": false
                  },
                  "adjustment": {
                    "description": "Total amount of all adjustments to this payment included in this transaction which are not related to this claim's adjudication.",
                    "additionalProperties": false
                  },
                  "adjustmentReason": {
                    "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                    "additionalProperties": false
                  },
                  "date": {
                    "description": "Estimated date the payment will be issued or the actual issue date of payment.",
                    "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                    "type": "string"
                  },
                  "_date": {
                    "description": "Base definition for all elements in a resource.",
                    "additionalProperties": false
                  },
                  "amount": {
                    "description": "Benefits payable less any payment adjustment.",
                    "additionalProperties": false
                  },
                  "identifier": {
                    "description": "An identifier - identifies some entity uniquely and unambiguously. Typically this is used for business identifiers.",
                    "additionalProperties": false
                  }
                },
                "additionalProperties": false,
                "required": [
                  "amount",
                  "type"
                ]
              },
              "fundsReserve": {
                "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                "additionalProperties": false
              },
              "formCode": {
                "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                "additionalProperties": false
              },
              "form": {
                "description": "For referring to data content defined in other formats.",
                "additionalProperties": false
              },
              "processNote": {
                "description": "A note that describes or explains adjudication results in a human readable form.",
                "items": {
                  "description": "This resource provides the adjudication details from the processing of a Claim resource.",
                  "properties": {
                    "id": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "type": "array"
                    },
                    "modifierExtension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                      "type": "array"
                    },
                    "number": {
                      "pattern": "^[1-9][0-9]*$",
                      "type": "number",
                      "description": "An integer with a value that is positive (e.g. >0)"
                    },
                    "_number": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "type": {
                      "description": "The business purpose of the note text.",
                      "enum": [
                        "display",
                        "print",
                        "printoper"
                      ]
                    },
                    "_type": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "text": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "_text": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "language": {
                      "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                },
                "type": "array"
              },
              "communicationRequest": {
                "description": "Request for additional supporting or authorizing information.",
                "type": "array"
              },
              "insurance": {
                "description": "Financial instruments for reimbursement for the health care products and services specified on the claim.",
                "items": {
                  "description": "This resource provides the adjudication details from the processing of a Claim resource.",
                  "properties": {
                    "id": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "type": "array"
                    },
                    "modifierExtension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                      "type": "array"
                    },
                    "sequence": {
                      "pattern": "^[1-9][0-9]*$",
                      "type": "number",
                      "description": "An integer with a value that is positive (e.g. >0)"
                    },
                    "_sequence": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "focal": {
                      "description": "A flag to indicate that this Coverage is to be used for adjudication of this claim when set to true.",
                      "pattern": "^true|false$",
                      "type": "boolean"
                    },
                    "_focal": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "coverage": {
                      "description": "A reference from one resource to another.",
                      "additionalProperties": false
                    },
                    "businessArrangement": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "_businessArrangement": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "claimResponse": {
                      "description": "A reference from one resource to another.",
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false,
                  "required": [
                    "coverage"
                  ]
                },
                "type": "array"
              },
              "error": {
                "description": "Errors encountered during the processing of the adjudication.",
                "items": {
                  "description": "This resource provides the adjudication details from the processing of a Claim resource.",
                  "properties": {
                    "id": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "type": "array"
                    },
                    "modifierExtension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                      "type": "array"
                    },
                    "itemSequence": {
                      "pattern": "^[1-9][0-9]*$",
                      "type": "number",
                      "description": "An integer with a value that is positive (e.g. >0)"
                    },
                    "_itemSequence": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "detailSequence": {
                      "pattern": "^[1-9][0-9]*$",
                      "type": "number",
                      "description": "An integer with a value that is positive (e.g. >0)"
                    },
                    "_detailSequence": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "subDetailSequence": {
                      "pattern": "^[1-9][0-9]*$",
                      "type": "number",
                      "description": "An integer with a value that is positive (e.g. >0)"
                    },
                    "_subDetailSequence": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "code": {
                      "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false,
                  "required": [
                    "code"
                  ]
                },
                "type": "array"
              }
            },
            "additionalProperties": false,
            "required": [
              "patient",
              "insurer",
              "type",
              "resourceType"
            ]
          },
          null,
          {
            "description": "The CodeSystem resource is used to declare the existence of and describe a code system or code system supplement and its key properties, and optionally define a part or all of its content.",
            "properties": {
              "resourceType": {
                "description": "This is a CodeSystem resource",
                "const": "CodeSystem"
              },
              "id": {
                "description": "The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.",
                "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                "type": "string"
              },
              "meta": {
                "description": "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
                "additionalProperties": false
              },
              "implicitRules": {
                "pattern": "^\\S*$",
                "type": "string",
                "description": "String of characters used to identify a name or a resource"
              },
              "_implicitRules": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "language": {
                "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                "type": "string",
                "description": "A string which has at least one character and no leading or trailing whitespace and where there is no whitespace other than single spaces in the contents"
              },
              "_language": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "text": {
                "description": "A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it \"clinically safe\" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.",
                "additionalProperties": false
              },
              "contained": {
                "description": "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope.",
                "type": "array"
              },
              "extension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                "type": "array"
              },
              "modifierExtension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                "type": "array"
              },
              "url": {
                "pattern": "^\\S*$",
                "type": "string",
                "description": "String of characters used to identify a name or a resource"
              },
              "_url": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "identifier": {
                "description": "A formal identifier that is used to identify this code system when it is represented in other formats, or referenced in a specification, model, design or an instance.",
                "type": "array"
              },
              "version": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "_version": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "name": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "_name": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "title": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "_title": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "status": {
                "description": "The date (and optionally time) when the code system resource was created or revised.",
                "enum": [
                  "draft",
                  "active",
                  "retired",
                  "unknown"
                ]
              },
              "_status": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "experimental": {
                "description": "A Boolean value to indicate that this code system is authored for testing purposes (or education/evaluation/marketing) and is not intended to be used for genuine usage.",
                "pattern": "^true|false$",
                "type": "boolean"
              },
              "_experimental": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "date": {
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                "type": "string",
                "description": "A date, date-time or partial date (e.g. just year or year + month).  If hours and minutes are specified, a time zone SHALL be populated. The format is a union of the schema types gYear, gYearMonth, date and dateTime. Seconds must be provided due to schema type constraints but may be zero-filled and may be ignored.                 Dates SHALL be valid dates."
              },
              "_date": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "publisher": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "_publisher": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "contact": {
                "description": "Contact details to assist a user in finding and communicating with the publisher.",
                "type": "array"
              },
              "description": {
                "description": "A free text natural language description of the code system from a consumer's perspective.",
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string"
              },
              "_description": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "useContext": {
                "description": "The content was developed with a focus and intent of supporting the contexts that are listed. These contexts may be general categories (gender, age, ...) or may be references to specific programs (insurance plans, studies, ...) and may be used to assist with indexing and searching for appropriate code system instances.",
                "type": "array"
              },
              "jurisdiction": {
                "description": "A legal or geographic region in which the code system is intended to be used.",
                "type": "array"
              },
              "purpose": {
                "description": "Explanation of why this code system is needed and why it has been designed as it has.",
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string"
              },
              "_purpose": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "copyright": {
                "description": "A copyright statement relating to the code system and/or its contents. Copyright statements are generally legal restrictions on the use and publishing of the code system.",
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string"
              },
              "_copyright": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "caseSensitive": {
                "description": "If code comparison is case sensitive when codes within this system are compared to each other.",
                "pattern": "^true|false$",
                "type": "boolean"
              },
              "_caseSensitive": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "valueSet": {
                "pattern": "^\\S*$",
                "type": "string",
                "description": "A URI that is a reference to a canonical URL on a FHIR resource"
              },
              "hierarchyMeaning": {
                "description": "The meaning of the hierarchy of concepts as represented in this resource.",
                "enum": [
                  "grouped-by",
                  "is-a",
                  "part-of",
                  "classified-with"
                ]
              },
              "_hierarchyMeaning": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "compositional": {
                "description": "The code system defines a compositional (post-coordination) grammar.",
                "pattern": "^true|false$",
                "type": "boolean"
              },
              "_compositional": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "versionNeeded": {
                "description": "This flag is used to signify that the code system does not commit to concept permanence across versions. If true, a version must be specified when referencing this code system.",
                "pattern": "^true|false$",
                "type": "boolean"
              },
              "_versionNeeded": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "content": {
                "description": "The extent of the content of the code system (the concepts and codes it defines) are represented in this resource instance.",
                "enum": [
                  "not-present",
                  "example",
                  "fragment",
                  "complete",
                  "supplement"
                ]
              },
              "_content": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "supplements": {
                "pattern": "^\\S*$",
                "type": "string",
                "description": "A URI that is a reference to a canonical URL on a FHIR resource"
              },
              "count": {
                "description": "The total number of concepts defined by the code system. Where the code system has a compositional grammar, the basis of this count is defined by the system steward.",
                "pattern": "^[0]|([1-9][0-9]*)$",
                "type": "number"
              },
              "_count": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "filter": {
                "description": "A filter that can be used in a value set compose statement when selecting concepts using a filter.",
                "items": {
                  "description": "The CodeSystem resource is used to declare the existence of and describe a code system or code system supplement and its key properties, and optionally define a part or all of its content.",
                  "properties": {
                    "id": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "type": "array"
                    },
                    "modifierExtension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                      "type": "array"
                    },
                    "code": {
                      "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                      "type": "string",
                      "description": "A string which has at least one character and no leading or trailing whitespace and where there is no whitespace other than single spaces in the contents"
                    },
                    "_code": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "description": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "_description": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "operator": {
                      "description": "A list of operators that can be used with the filter.",
                      "type": "array"
                    },
                    "_operator": {
                      "description": "Extensions for operator",
                      "type": "array"
                    },
                    "value": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "_value": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                },
                "type": "array"
              },
              "property": {
                "description": "A property defines an additional slot through which additional information can be provided about a concept.",
                "items": {
                  "description": "The CodeSystem resource is used to declare the existence of and describe a code system or code system supplement and its key properties, and optionally define a part or all of its content.",
                  "properties": {
                    "id": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "type": "array"
                    },
                    "modifierExtension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                      "type": "array"
                    },
                    "code": {
                      "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                      "type": "string",
                      "description": "A string which has at least one character and no leading or trailing whitespace and where there is no whitespace other than single spaces in the contents"
                    },
                    "_code": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "uri": {
                      "pattern": "^\\S*$",
                      "type": "string",
                      "description": "String of characters used to identify a name or a resource"
                    },
                    "_uri": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "description": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "_description": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "type": {
                      "description": "The type of the property value. Properties of type \"code\" contain a code defined by the code system (e.g. a reference to another defined concept).",
                      "enum": [
                        "code",
                        "Coding",
                        "string",
                        "integer",
                        "boolean",
                        "dateTime",
                        "decimal"
                      ]
                    },
                    "_type": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                },
                "type": "array"
              },
              "concept": {
                "description": "Concepts that are in the code system. The concept definitions are inherently hierarchical, but the definitions must be consulted to determine what the meanings of the hierarchical relationships are.",
                "items": {
                  "description": "The CodeSystem resource is used to declare the existence of and describe a code system or code system supplement and its key properties, and optionally define a part or all of its content.",
                  "properties": {
                    "id": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "type": "array"
                    },
                    "modifierExtension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                      "type": "array"
                    },
                    "code": {
                      "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                      "type": "string",
                      "description": "A string which has at least one character and no leading or trailing whitespace and where there is no whitespace other than single spaces in the contents"
                    },
                    "_code": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "display": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "_display": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "definition": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "_definition": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "designation": {
                      "description": "Additional representations for the concept - other languages, aliases, specialized purposes, used for particular purposes, etc.",
                      "items": {
                        "description": "The CodeSystem resource is used to declare the existence of and describe a code system or code system supplement and its key properties, and optionally define a part or all of its content.",
                        "properties": {
                          "id": {
                            "pattern": "^[ \\r\\n\\t\\S]+$",
                            "type": "string",
                            "description": "A sequence of Unicode characters"
                          },
                          "extension": {
                            "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                            "type": "array"
                          },
                          "modifierExtension": {
                            "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                            "type": "array"
                          },
                          "language": {
                            "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                            "type": "string",
                            "description": "A string which has at least one character and no leading or trailing whitespace and where there is no whitespace other than single spaces in the contents"
                          },
                          "_language": {
                            "description": "Base definition for all elements in a resource.",
                            "additionalProperties": false
                          },
                          "use": {
                            "description": "A reference to a code defined by a terminology system.",
                            "additionalProperties": false
                          },
                          "value": {
                            "pattern": "^[ \\r\\n\\t\\S]+$",
                            "type": "string",
                            "description": "A sequence of Unicode characters"
                          },
                          "_value": {
                            "description": "Base definition for all elements in a resource.",
                            "additionalProperties": false
                          }
                        },
                        "additionalProperties": false
                      },
                      "type": "array"
                    },
                    "property": {
                      "description": "A property value for this concept.",
                      "items": {
                        "description": "The CodeSystem resource is used to declare the existence of and describe a code system or code system supplement and its key properties, and optionally define a part or all of its content.",
                        "properties": {
                          "id": {
                            "pattern": "^[ \\r\\n\\t\\S]+$",
                            "type": "string",
                            "description": "A sequence of Unicode characters"
                          },
                          "extension": {
                            "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                            "type": "array"
                          },
                          "modifierExtension": {
                            "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                            "type": "array"
                          },
                          "code": {
                            "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                            "type": "string",
                            "description": "A string which has at least one character and no leading or trailing whitespace and where there is no whitespace other than single spaces in the contents"
                          },
                          "_code": {
                            "description": "Base definition for all elements in a resource.",
                            "additionalProperties": false
                          },
                          "valueCode": {
                            "description": "The value of this property.",
                            "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                            "type": "string"
                          },
                          "_valueCode": {
                            "description": "Base definition for all elements in a resource.",
                            "additionalProperties": false
                          },
                          "valueCoding": {
                            "description": "A reference to a code defined by a terminology system.",
                            "additionalProperties": false
                          },
                          "valueString": {
                            "description": "The value of this property.",
                            "pattern": "^[ \\r\\n\\t\\S]+$",
                            "type": "string"
                          },
                          "_valueString": {
                            "description": "Base definition for all elements in a resource.",
                            "additionalProperties": false
                          },
                          "valueInteger": {
                            "description": "The value of this property.",
                            "pattern": "^-?([0]|([1-9][0-9]*))$",
                            "type": "number"
                          },
                          "_valueInteger": {
                            "description": "Base definition for all elements in a resource.",
                            "additionalProperties": false
                          },
                          "valueBoolean": {
                            "description": "The value of this property.",
                            "pattern": "^true|false$",
                            "type": "boolean"
                          },
                          "_valueBoolean": {
                            "description": "Base definition for all elements in a resource.",
                            "additionalProperties": false
                          },
                          "valueDateTime": {
                            "description": "The value of this property.",
                            "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                            "type": "string"
                          },
                          "_valueDateTime": {
                            "description": "Base definition for all elements in a resource.",
                            "additionalProperties": false
                          },
                          "valueDecimal": {
                            "description": "The value of this property.",
                            "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                            "type": "number"
                          },
                          "_valueDecimal": {
                            "description": "Base definition for all elements in a resource.",
                            "additionalProperties": false
                          }
                        },
                        "additionalProperties": false
                      },
                      "type": "array"
                    },
                    "concept": {
                      "description": "Defines children of a concept to produce a hierarchy of concepts. The nature of the relationships is variable (is-a/contains/categorizes) - see hierarchyMeaning.",
                      "type": "array"
                    }
                  },
                  "additionalProperties": false
                },
                "type": "array"
              }
            },
            "additionalProperties": false,
            "required": [
              "resourceType"
            ]
          },
          {
            "description": "An occurrence of information being transmitted; e.g. an alert that was sent to a responsible provider, a public health agency that was notified about a reportable condition.",
            "properties": {
              "resourceType": {
                "description": "This is a Communication resource",
                "const": "Communication"
              },
              "id": {
                "description": "The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.",
                "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                "type": "string"
              },
              "meta": {
                "description": "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
                "additionalProperties": false
              },
              "implicitRules": {
                "pattern": "^\\S*$",
                "type": "string",
                "description": "String of characters used to identify a name or a resource"
              },
              "_implicitRules": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "language": {
                "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                "type": "string",
                "description": "A string which has at least one character and no leading or trailing whitespace and where there is no whitespace other than single spaces in the contents"
              },
              "_language": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "text": {
                "description": "A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it \"clinically safe\" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.",
                "additionalProperties": false
              },
              "contained": {
                "description": "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope.",
                "type": "array"
              },
              "extension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                "type": "array"
              },
              "modifierExtension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                "type": "array"
              },
              "identifier": {
                "description": "Business identifiers assigned to this communication by the performer or other systems which remain constant as the resource is updated and propagates from server to server.",
                "type": "array"
              },
              "instantiatesCanonical": {
                "description": "The URL pointing to a FHIR-defined protocol, guideline, orderset or other definition that is adhered to in whole or in part by this Communication.",
                "type": "array"
              },
              "instantiatesUri": {
                "description": "The URL pointing to an externally maintained protocol, guideline, orderset or other definition that is adhered to in whole or in part by this Communication.",
                "type": "array"
              },
              "_instantiatesUri": {
                "description": "Extensions for instantiatesUri",
                "type": "array"
              },
              "basedOn": {
                "description": "An order, proposal or plan fulfilled in whole or in part by this Communication.",
                "type": "array"
              },
              "partOf": {
                "description": "Part of this action.",
                "type": "array"
              },
              "inResponseTo": {
                "description": "Prior communication that this communication is in response to.",
                "type": "array"
              },
              "status": {
                "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                "type": "string",
                "description": "A string which has at least one character and no leading or trailing whitespace and where there is no whitespace other than single spaces in the contents"
              },
              "_status": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "statusReason": {
                "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                "additionalProperties": false
              },
              "category": {
                "description": "The type of message conveyed such as alert, notification, reminder, instruction, etc.",
                "type": "array"
              },
              "priority": {
                "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                "type": "string",
                "description": "A string which has at least one character and no leading or trailing whitespace and where there is no whitespace other than single spaces in the contents"
              },
              "_priority": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "medium": {
                "description": "A channel that was used for this communication (e.g. email, fax).",
                "type": "array"
              },
              "subject": {
                "description": "A reference from one resource to another.",
                "additionalProperties": false
              },
              "topic": {
                "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                "additionalProperties": false
              },
              "about": {
                "description": "Other resources that pertain to this communication and to which this communication should be associated.",
                "type": "array"
              },
              "encounter": {
                "description": "A reference from one resource to another.",
                "additionalProperties": false
              },
              "sent": {
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                "type": "string",
                "description": "A date, date-time or partial date (e.g. just year or year + month).  If hours and minutes are specified, a time zone SHALL be populated. The format is a union of the schema types gYear, gYearMonth, date and dateTime. Seconds must be provided due to schema type constraints but may be zero-filled and may be ignored.                 Dates SHALL be valid dates."
              },
              "_sent": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "received": {
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                "type": "string",
                "description": "A date, date-time or partial date (e.g. just year or year + month).  If hours and minutes are specified, a time zone SHALL be populated. The format is a union of the schema types gYear, gYearMonth, date and dateTime. Seconds must be provided due to schema type constraints but may be zero-filled and may be ignored.                 Dates SHALL be valid dates."
              },
              "_received": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "recipient": {
                "description": "The entity (e.g. person, organization, clinical information system, care team or device) which was the target of the communication. If receipts need to be tracked by an individual, a separate resource instance will need to be created for each recipient.  Multiple recipient communications are intended where either receipts are not tracked (e.g. a mass mail-out) or a receipt is captured in aggregate (all emails confirmed received by a particular time).",
                "type": "array"
              },
              "sender": {
                "description": "A reference from one resource to another.",
                "additionalProperties": false
              },
              "reasonCode": {
                "description": "The reason or justification for the communication.",
                "type": "array"
              },
              "reasonReference": {
                "description": "Indicates another resource whose existence justifies this communication.",
                "type": "array"
              },
              "payload": {
                "description": "Text, attachment(s), or resource(s) that was communicated to the recipient.",
                "items": {
                  "description": "An occurrence of information being transmitted; e.g. an alert that was sent to a responsible provider, a public health agency that was notified about a reportable condition.",
                  "properties": {
                    "id": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "type": "array"
                    },
                    "modifierExtension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                      "type": "array"
                    },
                    "contentString": {
                      "description": "A communicated content (or for multi-part communications, one portion of the communication).",
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string"
                    },
                    "_contentString": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "contentAttachment": {
                      "description": "For referring to data content defined in other formats.",
                      "additionalProperties": false
                    },
                    "contentReference": {
                      "description": "A reference from one resource to another.",
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                },
                "type": "array"
              },
              "note": {
                "description": "Additional notes or commentary about the communication by the sender, receiver or other interested parties.",
                "type": "array"
              }
            },
            "additionalProperties": false,
            "required": [
              "resourceType"
            ]
          },
          {
            "description": "A request to convey information; e.g. the CDS system proposes that an alert be sent to a responsible provider, the CDS system proposes that the public health agency be notified about a reportable condition.",
            "properties": {
              "resourceType": {
                "description": "This is a CommunicationRequest resource",
                "const": "CommunicationRequest"
              },
              "id": {
                "description": "The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.",
                "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                "type": "string"
              },
              "meta": {
                "description": "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
                "additionalProperties": false
              },
              "implicitRules": {
                "pattern": "^\\S*$",
                "type": "string",
                "description": "String of characters used to identify a name or a resource"
              },
              "_implicitRules": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "language": {
                "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                "type": "string",
                "description": "A string which has at least one character and no leading or trailing whitespace and where there is no whitespace other than single spaces in the contents"
              },
              "_language": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "text": {
                "description": "A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it \"clinically safe\" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.",
                "additionalProperties": false
              },
              "contained": {
                "description": "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope.",
                "type": "array"
              },
              "extension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                "type": "array"
              },
              "modifierExtension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                "type": "array"
              },
              "identifier": {
                "description": "Business identifiers assigned to this communication request by the performer or other systems which remain constant as the resource is updated and propagates from server to server.",
                "type": "array"
              },
              "basedOn": {
                "description": "A plan or proposal that is fulfilled in whole or in part by this request.",
                "type": "array"
              },
              "replaces": {
                "description": "Completed or terminated request(s) whose function is taken by this new request.",
                "type": "array"
              },
              "groupIdentifier": {
                "description": "An identifier - identifies some entity uniquely and unambiguously. Typically this is used for business identifiers.",
                "additionalProperties": false
              },
              "status": {
                "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                "type": "string",
                "description": "A string which has at least one character and no leading or trailing whitespace and where there is no whitespace other than single spaces in the contents"
              },
              "_status": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "statusReason": {
                "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                "additionalProperties": false
              },
              "category": {
                "description": "The type of message to be sent such as alert, notification, reminder, instruction, etc.",
                "type": "array"
              },
              "priority": {
                "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                "type": "string",
                "description": "A string which has at least one character and no leading or trailing whitespace and where there is no whitespace other than single spaces in the contents"
              },
              "_priority": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "doNotPerform": {
                "description": "If true indicates that the CommunicationRequest is asking for the specified action to *not* occur.",
                "pattern": "^true|false$",
                "type": "boolean"
              },
              "_doNotPerform": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "medium": {
                "description": "A channel that was used for this communication (e.g. email, fax).",
                "type": "array"
              },
              "subject": {
                "description": "A reference from one resource to another.",
                "additionalProperties": false
              },
              "about": {
                "description": "Other resources that pertain to this communication request and to which this communication request should be associated.",
                "type": "array"
              },
              "encounter": {
                "description": "A reference from one resource to another.",
                "additionalProperties": false
              },
              "payload": {
                "description": "Text, attachment(s), or resource(s) to be communicated to the recipient.",
                "items": {
                  "description": "A request to convey information; e.g. the CDS system proposes that an alert be sent to a responsible provider, the CDS system proposes that the public health agency be notified about a reportable condition.",
                  "properties": {
                    "id": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "type": "array"
                    },
                    "modifierExtension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                      "type": "array"
                    },
                    "contentString": {
                      "description": "The communicated content (or for multi-part communications, one portion of the communication).",
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string"
                    },
                    "_contentString": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "contentAttachment": {
                      "description": "For referring to data content defined in other formats.",
                      "additionalProperties": false
                    },
                    "contentReference": {
                      "description": "A reference from one resource to another.",
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                },
                "type": "array"
              },
              "occurrenceDateTime": {
                "description": "The time when this communication is to occur.",
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                "type": "string"
              },
              "_occurrenceDateTime": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "occurrencePeriod": {
                "description": "A time period defined by a start and end date and optionally time.",
                "additionalProperties": false
              },
              "authoredOn": {
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                "type": "string",
                "description": "A date, date-time or partial date (e.g. just year or year + month).  If hours and minutes are specified, a time zone SHALL be populated. The format is a union of the schema types gYear, gYearMonth, date and dateTime. Seconds must be provided due to schema type constraints but may be zero-filled and may be ignored.                 Dates SHALL be valid dates."
              },
              "_authoredOn": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "requester": {
                "description": "A reference from one resource to another.",
                "additionalProperties": false
              },
              "recipient": {
                "description": "The entity (e.g. person, organization, clinical information system, device, group, or care team) which is the intended target of the communication.",
                "type": "array"
              },
              "sender": {
                "description": "A reference from one resource to another.",
                "additionalProperties": false
              },
              "reasonCode": {
                "description": "Describes why the request is being made in coded or textual form.",
                "type": "array"
              },
              "reasonReference": {
                "description": "Indicates another resource whose existence justifies this request.",
                "type": "array"
              },
              "note": {
                "description": "Comments made about the request by the requester, sender, recipient, subject or other participants.",
                "type": "array"
              }
            },
            "additionalProperties": false,
            "required": [
              "resourceType"
            ]
          },
          {
            "description": "A compartment definition that defines how resources are accessed on a server.",
            "properties": {
              "resourceType": {
                "description": "This is a CompartmentDefinition resource",
                "const": "CompartmentDefinition"
              },
              "id": {
                "description": "The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.",
                "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                "type": "string"
              },
              "meta": {
                "description": "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
                "additionalProperties": false
              },
              "implicitRules": {
                "pattern": "^\\S*$",
                "type": "string",
                "description": "String of characters used to identify a name or a resource"
              },
              "_implicitRules": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "language": {
                "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                "type": "string",
                "description": "A string which has at least one character and no leading or trailing whitespace and where there is no whitespace other than single spaces in the contents"
              },
              "_language": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "text": {
                "description": "A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it \"clinically safe\" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.",
                "additionalProperties": false
              },
              "contained": {
                "description": "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope.",
                "type": "array"
              },
              "extension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                "type": "array"
              },
              "modifierExtension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                "type": "array"
              },
              "url": {
                "pattern": "^\\S*$",
                "type": "string",
                "description": "String of characters used to identify a name or a resource"
              },
              "_url": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "version": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "_version": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "name": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "_name": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "status": {
                "description": "The status of this compartment definition. Enables tracking the life-cycle of the content.",
                "enum": [
                  "draft",
                  "active",
                  "retired",
                  "unknown"
                ]
              },
              "_status": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "experimental": {
                "description": "A Boolean value to indicate that this compartment definition is authored for testing purposes (or education/evaluation/marketing) and is not intended to be used for genuine usage.",
                "pattern": "^true|false$",
                "type": "boolean"
              },
              "_experimental": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "date": {
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                "type": "string",
                "description": "A date, date-time or partial date (e.g. just year or year + month).  If hours and minutes are specified, a time zone SHALL be populated. The format is a union of the schema types gYear, gYearMonth, date and dateTime. Seconds must be provided due to schema type constraints but may be zero-filled and may be ignored.                 Dates SHALL be valid dates."
              },
              "_date": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "publisher": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "_publisher": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "contact": {
                "description": "Contact details to assist a user in finding and communicating with the publisher.",
                "type": "array"
              },
              "description": {
                "description": "A free text natural language description of the compartment definition from a consumer's perspective.",
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string"
              },
              "_description": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "useContext": {
                "description": "The content was developed with a focus and intent of supporting the contexts that are listed. These contexts may be general categories (gender, age, ...) or may be references to specific programs (insurance plans, studies, ...) and may be used to assist with indexing and searching for appropriate compartment definition instances.",
                "type": "array"
              },
              "purpose": {
                "description": "Explanation of why this compartment definition is needed and why it has been designed as it has.",
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string"
              },
              "_purpose": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "code": {
                "description": "Which compartment this definition describes.",
                "enum": [
                  "Patient",
                  "Encounter",
                  "RelatedPerson",
                  "Practitioner",
                  "Device"
                ]
              },
              "_code": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "search": {
                "description": "Whether the search syntax is supported,.",
                "pattern": "^true|false$",
                "type": "boolean"
              },
              "_search": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "resource": {
                "description": "Information about how a resource is related to the compartment.",
                "items": {
                  "description": "A compartment definition that defines how resources are accessed on a server.",
                  "properties": {
                    "id": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "type": "array"
                    },
                    "modifierExtension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                      "type": "array"
                    },
                    "code": {
                      "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                      "type": "string",
                      "description": "A string which has at least one character and no leading or trailing whitespace and where there is no whitespace other than single spaces in the contents"
                    },
                    "_code": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "param": {
                      "description": "The name of a search parameter that represents the link to the compartment. More than one may be listed because a resource may be linked to a compartment in more than one way,.",
                      "type": "array"
                    },
                    "_param": {
                      "description": "Extensions for param",
                      "type": "array"
                    },
                    "documentation": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "_documentation": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                },
                "type": "array"
              }
            },
            "additionalProperties": false,
            "required": [
              "resourceType"
            ]
          },
          {
            "description": "A set of healthcare-related information that is assembled together into a single logical package that provides a single coherent statement of meaning, establishes its own context and that has clinical attestation with regard to who is making the statement. A Composition defines the structure and narrative content necessary for a document. However, a Composition alone does not constitute a document. Rather, the Composition must be the first entry in a Bundle where Bundle.type=document, and any other resources referenced from Composition must be included as subsequent entries in the Bundle (for example Patient, Practitioner, Encounter, etc.).",
            "properties": {
              "resourceType": {
                "description": "This is a Composition resource",
                "const": "Composition"
              },
              "id": {
                "description": "The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.",
                "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                "type": "string"
              },
              "meta": {
                "description": "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
                "additionalProperties": false
              },
              "implicitRules": {
                "pattern": "^\\S*$",
                "type": "string",
                "description": "String of characters used to identify a name or a resource"
              },
              "_implicitRules": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "language": {
                "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                "type": "string",
                "description": "A string which has at least one character and no leading or trailing whitespace and where there is no whitespace other than single spaces in the contents"
              },
              "_language": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "text": {
                "description": "A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it \"clinically safe\" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.",
                "additionalProperties": false
              },
              "contained": {
                "description": "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope.",
                "type": "array"
              },
              "extension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                "type": "array"
              },
              "modifierExtension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                "type": "array"
              },
              "identifier": {
                "description": "An identifier - identifies some entity uniquely and unambiguously. Typically this is used for business identifiers.",
                "additionalProperties": false
              },
              "status": {
                "description": "The workflow/clinical status of this composition. The status is a marker for the clinical standing of the document.",
                "enum": [
                  "preliminary",
                  "final",
                  "amended",
                  "entered-in-error"
                ]
              },
              "_status": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "type": {
                "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                "additionalProperties": false
              },
              "category": {
                "description": "A categorization for the type of the composition - helps for indexing and searching. This may be implied by or derived from the code specified in the Composition Type.",
                "type": "array"
              },
              "subject": {
                "description": "A reference from one resource to another.",
                "additionalProperties": false
              },
              "encounter": {
                "description": "A reference from one resource to another.",
                "additionalProperties": false
              },
              "date": {
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                "type": "string",
                "description": "A date, date-time or partial date (e.g. just year or year + month).  If hours and minutes are specified, a time zone SHALL be populated. The format is a union of the schema types gYear, gYearMonth, date and dateTime. Seconds must be provided due to schema type constraints but may be zero-filled and may be ignored.                 Dates SHALL be valid dates."
              },
              "_date": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "author": {
                "description": "Identifies who is responsible for the information in the composition, not necessarily who typed it in.",
                "type": "array"
              },
              "title": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "_title": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "confidentiality": {
                "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                "type": "string",
                "description": "A string which has at least one character and no leading or trailing whitespace and where there is no whitespace other than single spaces in the contents"
              },
              "_confidentiality": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "attester": {
                "description": "A participant who has attested to the accuracy of the composition/document.",
                "items": {
                  "description": "A set of healthcare-related information that is assembled together into a single logical package that provides a single coherent statement of meaning, establishes its own context and that has clinical attestation with regard to who is making the statement. A Composition defines the structure and narrative content necessary for a document. However, a Composition alone does not constitute a document. Rather, the Composition must be the first entry in a Bundle where Bundle.type=document, and any other resources referenced from Composition must be included as subsequent entries in the Bundle (for example Patient, Practitioner, Encounter, etc.).",
                  "properties": {
                    "id": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "type": "array"
                    },
                    "modifierExtension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                      "type": "array"
                    },
                    "mode": {
                      "description": "The type of attestation the authenticator offers.",
                      "enum": [
                        "personal",
                        "professional",
                        "legal",
                        "official"
                      ]
                    },
                    "_mode": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "time": {
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                      "type": "string",
                      "description": "A date, date-time or partial date (e.g. just year or year + month).  If hours and minutes are specified, a time zone SHALL be populated. The format is a union of the schema types gYear, gYearMonth, date and dateTime. Seconds must be provided due to schema type constraints but may be zero-filled and may be ignored.                 Dates SHALL be valid dates."
                    },
                    "_time": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "party": {
                      "description": "A reference from one resource to another.",
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                },
                "type": "array"
              },
              "custodian": {
                "description": "A reference from one resource to another.",
                "additionalProperties": false
              },
              "relatesTo": {
                "description": "Relationships that this composition has with other compositions or documents that already exist.",
                "items": {
                  "description": "A set of healthcare-related information that is assembled together into a single logical package that provides a single coherent statement of meaning, establishes its own context and that has clinical attestation with regard to who is making the statement. A Composition defines the structure and narrative content necessary for a document. However, a Composition alone does not constitute a document. Rather, the Composition must be the first entry in a Bundle where Bundle.type=document, and any other resources referenced from Composition must be included as subsequent entries in the Bundle (for example Patient, Practitioner, Encounter, etc.).",
                  "properties": {
                    "id": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "type": "array"
                    },
                    "modifierExtension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                      "type": "array"
                    },
                    "code": {
                      "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                      "type": "string",
                      "description": "A string which has at least one character and no leading or trailing whitespace and where there is no whitespace other than single spaces in the contents"
                    },
                    "_code": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "targetIdentifier": {
                      "description": "An identifier - identifies some entity uniquely and unambiguously. Typically this is used for business identifiers.",
                      "additionalProperties": false
                    },
                    "targetReference": {
                      "description": "A reference from one resource to another.",
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                },
                "type": "array"
              },
              "event": {
                "description": "The clinical service, such as a colonoscopy or an appendectomy, being documented.",
                "items": {
                  "description": "A set of healthcare-related information that is assembled together into a single logical package that provides a single coherent statement of meaning, establishes its own context and that has clinical attestation with regard to who is making the statement. A Composition defines the structure and narrative content necessary for a document. However, a Composition alone does not constitute a document. Rather, the Composition must be the first entry in a Bundle where Bundle.type=document, and any other resources referenced from Composition must be included as subsequent entries in the Bundle (for example Patient, Practitioner, Encounter, etc.).",
                  "properties": {
                    "id": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "type": "array"
                    },
                    "modifierExtension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                      "type": "array"
                    },
                    "code": {
                      "description": "This list of codes represents the main clinical acts, such as a colonoscopy or an appendectomy, being documented. In some cases, the event is inherent in the typeCode, such as a \"History and Physical Report\" in which the procedure being documented is necessarily a \"History and Physical\" act.",
                      "type": "array"
                    },
                    "period": {
                      "description": "A time period defined by a start and end date and optionally time.",
                      "additionalProperties": false
                    },
                    "detail": {
                      "description": "The description and/or reference of the event(s) being documented. For example, this could be used to document such a colonoscopy or an appendectomy.",
                      "type": "array"
                    }
                  },
                  "additionalProperties": false
                },
                "type": "array"
              },
              "section": {
                "description": "The root of the sections that make up the composition.",
                "items": {
                  "description": "A set of healthcare-related information that is assembled together into a single logical package that provides a single coherent statement of meaning, establishes its own context and that has clinical attestation with regard to who is making the statement. A Composition defines the structure and narrative content necessary for a document. However, a Composition alone does not constitute a document. Rather, the Composition must be the first entry in a Bundle where Bundle.type=document, and any other resources referenced from Composition must be included as subsequent entries in the Bundle (for example Patient, Practitioner, Encounter, etc.).",
                  "properties": {
                    "id": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "type": "array"
                    },
                    "modifierExtension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                      "type": "array"
                    },
                    "title": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "_title": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "code": {
                      "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                      "additionalProperties": false
                    },
                    "author": {
                      "description": "Identifies who is responsible for the information in this section, not necessarily who typed it in.",
                      "type": "array"
                    },
                    "focus": {
                      "description": "A reference from one resource to another.",
                      "additionalProperties": false
                    },
                    "text": {
                      "description": "A human-readable narrative that contains the attested content of the section, used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it \"clinically safe\" for a human to just read the narrative.",
                      "additionalProperties": false
                    },
                    "mode": {
                      "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                      "type": "string",
                      "description": "A string which has at least one character and no leading or trailing whitespace and where there is no whitespace other than single spaces in the contents"
                    },
                    "_mode": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "orderedBy": {
                      "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                      "additionalProperties": false
                    },
                    "entry": {
                      "description": "A reference to the actual resource from which the narrative in the section is derived.",
                      "type": "array"
                    },
                    "emptyReason": {
                      "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                      "additionalProperties": false
                    },
                    "section": {
                      "description": "A nested sub-section within this section.",
                      "type": "array"
                    }
                  },
                  "additionalProperties": false
                },
                "type": "array"
              }
            },
            "additionalProperties": false,
            "required": [
              "author",
              "type",
              "resourceType"
            ]
          },
          {
            "description": "A statement of relationships from one set of concepts to one or more other concepts - either concepts in code systems, or data element/data element concepts, or classes in class models.",
            "properties": {
              "resourceType": {
                "description": "This is a ConceptMap resource",
                "const": "ConceptMap"
              },
              "id": {
                "description": "The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.",
                "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                "type": "string"
              },
              "meta": {
                "description": "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
                "additionalProperties": false
              },
              "implicitRules": {
                "pattern": "^\\S*$",
                "type": "string",
                "description": "String of characters used to identify a name or a resource"
              },
              "_implicitRules": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "language": {
                "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                "type": "string",
                "description": "A string which has at least one character and no leading or trailing whitespace and where there is no whitespace other than single spaces in the contents"
              },
              "_language": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "text": {
                "description": "A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it \"clinically safe\" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.",
                "additionalProperties": false
              },
              "contained": {
                "description": "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope.",
                "type": "array"
              },
              "extension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                "type": "array"
              },
              "modifierExtension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                "type": "array"
              },
              "url": {
                "pattern": "^\\S*$",
                "type": "string",
                "description": "String of characters used to identify a name or a resource"
              },
              "_url": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "identifier": {
                "description": "An identifier - identifies some entity uniquely and unambiguously. Typically this is used for business identifiers.",
                "additionalProperties": false
              },
              "version": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "_version": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "name": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "_name": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "title": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "_title": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "status": {
                "description": "The status of this concept map. Enables tracking the life-cycle of the content.",
                "enum": [
                  "draft",
                  "active",
                  "retired",
                  "unknown"
                ]
              },
              "_status": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "experimental": {
                "description": "A Boolean value to indicate that this concept map is authored for testing purposes (or education/evaluation/marketing) and is not intended to be used for genuine usage.",
                "pattern": "^true|false$",
                "type": "boolean"
              },
              "_experimental": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "date": {
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                "type": "string",
                "description": "A date, date-time or partial date (e.g. just year or year + month).  If hours and minutes are specified, a time zone SHALL be populated. The format is a union of the schema types gYear, gYearMonth, date and dateTime. Seconds must be provided due to schema type constraints but may be zero-filled and may be ignored.                 Dates SHALL be valid dates."
              },
              "_date": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "publisher": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "_publisher": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "contact": {
                "description": "Contact details to assist a user in finding and communicating with the publisher.",
                "type": "array"
              },
              "description": {
                "description": "A free text natural language description of the concept map from a consumer's perspective.",
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string"
              },
              "_description": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "useContext": {
                "description": "The content was developed with a focus and intent of supporting the contexts that are listed. These contexts may be general categories (gender, age, ...) or may be references to specific programs (insurance plans, studies, ...) and may be used to assist with indexing and searching for appropriate concept map instances.",
                "type": "array"
              },
              "jurisdiction": {
                "description": "A legal or geographic region in which the concept map is intended to be used.",
                "type": "array"
              },
              "purpose": {
                "description": "Explanation of why this concept map is needed and why it has been designed as it has.",
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string"
              },
              "_purpose": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "copyright": {
                "description": "A copyright statement relating to the concept map and/or its contents. Copyright statements are generally legal restrictions on the use and publishing of the concept map.",
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string"
              },
              "_copyright": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "sourceUri": {
                "description": "Identifier for the source value set that contains the concepts that are being mapped and provides context for the mappings.",
                "pattern": "^\\S*$",
                "type": "string"
              },
              "_sourceUri": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "sourceCanonical": {
                "description": "Identifier for the source value set that contains the concepts that are being mapped and provides context for the mappings.",
                "pattern": "^\\S*$",
                "type": "string"
              },
              "_sourceCanonical": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "targetUri": {
                "description": "The target value set provides context for the mappings. Note that the mapping is made between concepts, not between value sets, but the value set provides important context about how the concept mapping choices are made.",
                "pattern": "^\\S*$",
                "type": "string"
              },
              "_targetUri": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "targetCanonical": {
                "description": "The target value set provides context for the mappings. Note that the mapping is made between concepts, not between value sets, but the value set provides important context about how the concept mapping choices are made.",
                "pattern": "^\\S*$",
                "type": "string"
              },
              "_targetCanonical": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "group": {
                "description": "A group of mappings that all have the same source and target system.",
                "items": {
                  "description": "A statement of relationships from one set of concepts to one or more other concepts - either concepts in code systems, or data element/data element concepts, or classes in class models.",
                  "properties": {
                    "id": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "type": "array"
                    },
                    "modifierExtension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                      "type": "array"
                    },
                    "source": {
                      "pattern": "^\\S*$",
                      "type": "string",
                      "description": "String of characters used to identify a name or a resource"
                    },
                    "_source": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "sourceVersion": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "_sourceVersion": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "target": {
                      "pattern": "^\\S*$",
                      "type": "string",
                      "description": "String of characters used to identify a name or a resource"
                    },
                    "_target": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "targetVersion": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "_targetVersion": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "element": {
                      "description": "Mappings for an individual concept in the source to one or more concepts in the target.",
                      "items": {
                        "description": "A statement of relationships from one set of concepts to one or more other concepts - either concepts in code systems, or data element/data element concepts, or classes in class models.",
                        "properties": {
                          "id": {
                            "pattern": "^[ \\r\\n\\t\\S]+$",
                            "type": "string",
                            "description": "A sequence of Unicode characters"
                          },
                          "extension": {
                            "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                            "type": "array"
                          },
                          "modifierExtension": {
                            "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                            "type": "array"
                          },
                          "code": {
                            "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                            "type": "string",
                            "description": "A string which has at least one character and no leading or trailing whitespace and where there is no whitespace other than single spaces in the contents"
                          },
                          "_code": {
                            "description": "Base definition for all elements in a resource.",
                            "additionalProperties": false
                          },
                          "display": {
                            "pattern": "^[ \\r\\n\\t\\S]+$",
                            "type": "string",
                            "description": "A sequence of Unicode characters"
                          },
                          "_display": {
                            "description": "Base definition for all elements in a resource.",
                            "additionalProperties": false
                          },
                          "target": {
                            "description": "A concept from the target value set that this concept maps to.",
                            "items": {
                              "description": "A statement of relationships from one set of concepts to one or more other concepts - either concepts in code systems, or data element/data element concepts, or classes in class models.",
                              "properties": {
                                "id": {
                                  "pattern": "^[ \\r\\n\\t\\S]+$",
                                  "type": "string",
                                  "description": "A sequence of Unicode characters"
                                },
                                "extension": {
                                  "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                                  "type": "array"
                                },
                                "modifierExtension": {
                                  "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                                  "type": "array"
                                },
                                "code": {
                                  "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                                  "type": "string",
                                  "description": "A string which has at least one character and no leading or trailing whitespace and where there is no whitespace other than single spaces in the contents"
                                },
                                "_code": {
                                  "description": "Base definition for all elements in a resource.",
                                  "additionalProperties": false
                                },
                                "display": {
                                  "pattern": "^[ \\r\\n\\t\\S]+$",
                                  "type": "string",
                                  "description": "A sequence of Unicode characters"
                                },
                                "_display": {
                                  "description": "Base definition for all elements in a resource.",
                                  "additionalProperties": false
                                },
                                "equivalence": {
                                  "description": "The equivalence between the source and target concepts (counting for the dependencies and products). The equivalence is read from target to source (e.g. the target is 'wider' than the source).",
                                  "enum": [
                                    "relatedto",
                                    "equivalent",
                                    "equal",
                                    "wider",
                                    "subsumes",
                                    "narrower",
                                    "specializes",
                                    "inexact",
                                    "unmatched",
                                    "disjoint"
                                  ]
                                },
                                "_equivalence": {
                                  "description": "Base definition for all elements in a resource.",
                                  "additionalProperties": false
                                },
                                "comment": {
                                  "pattern": "^[ \\r\\n\\t\\S]+$",
                                  "type": "string",
                                  "description": "A sequence of Unicode characters"
                                },
                                "_comment": {
                                  "description": "Base definition for all elements in a resource.",
                                  "additionalProperties": false
                                },
                                "dependsOn": {
                                  "description": "A set of additional dependencies for this mapping to hold. This mapping is only applicable if the specified element can be resolved, and it has the specified value.",
                                  "items": {
                                    "description": "A statement of relationships from one set of concepts to one or more other concepts - either concepts in code systems, or data element/data element concepts, or classes in class models.",
                                    "properties": {
                                      "id": {
                                        "pattern": "^[ \\r\\n\\t\\S]+$",
                                        "type": "string",
                                        "description": "A sequence of Unicode characters"
                                      },
                                      "extension": {
                                        "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                                        "type": "array"
                                      },
                                      "modifierExtension": {
                                        "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                                        "type": "array"
                                      },
                                      "property": {
                                        "pattern": "^\\S*$",
                                        "type": "string",
                                        "description": "String of characters used to identify a name or a resource"
                                      },
                                      "_property": {
                                        "description": "Base definition for all elements in a resource.",
                                        "additionalProperties": false
                                      },
                                      "system": {
                                        "pattern": "^\\S*$",
                                        "type": "string",
                                        "description": "A URI that is a reference to a canonical URL on a FHIR resource"
                                      },
                                      "value": {
                                        "pattern": "^[ \\r\\n\\t\\S]+$",
                                        "type": "string",
                                        "description": "A sequence of Unicode characters"
                                      },
                                      "_value": {
                                        "description": "Base definition for all elements in a resource.",
                                        "additionalProperties": false
                                      },
                                      "display": {
                                        "pattern": "^[ \\r\\n\\t\\S]+$",
                                        "type": "string",
                                        "description": "A sequence of Unicode characters"
                                      },
                                      "_display": {
                                        "description": "Base definition for all elements in a resource.",
                                        "additionalProperties": false
                                      }
                                    },
                                    "additionalProperties": false
                                  },
                                  "type": "array"
                                },
                                "product": {
                                  "description": "A set of additional outcomes from this mapping to other elements. To properly execute this mapping, the specified element must be mapped to some data element or source that is in context. The mapping may still be useful without a place for the additional data elements, but the equivalence cannot be relied on.",
                                  "type": "array"
                                }
                              },
                              "additionalProperties": false
                            },
                            "type": "array"
                          }
                        },
                        "additionalProperties": false
                      },
                      "type": "array"
                    },
                    "unmapped": {
                      "description": "What to do when there is no mapping for the source concept. \"Unmapped\" does not include codes that are unmatched, and the unmapped element is ignored in a code is specified to have equivalence = unmatched.",
                      "properties": {
                        "id": {
                          "pattern": "^[ \\r\\n\\t\\S]+$",
                          "type": "string",
                          "description": "A sequence of Unicode characters"
                        },
                        "extension": {
                          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                          "type": "array"
                        },
                        "modifierExtension": {
                          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                          "type": "array"
                        },
                        "mode": {
                          "description": "Defines which action to take if there is no match for the source concept in the target system designated for the group. One of 3 actions are possible: use the unmapped code (this is useful when doing a mapping between versions, and only a few codes have changed), use a fixed code (a default code), or alternatively, a reference to a different concept map can be provided (by canonical URL).",
                          "enum": [
                            "provided",
                            "fixed",
                            "other-map"
                          ]
                        },
                        "_mode": {
                          "description": "Base definition for all elements in a resource.",
                          "additionalProperties": false
                        },
                        "code": {
                          "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                          "type": "string",
                          "description": "A string which has at least one character and no leading or trailing whitespace and where there is no whitespace other than single spaces in the contents"
                        },
                        "_code": {
                          "description": "Base definition for all elements in a resource.",
                          "additionalProperties": false
                        },
                        "display": {
                          "pattern": "^[ \\r\\n\\t\\S]+$",
                          "type": "string",
                          "description": "A sequence of Unicode characters"
                        },
                        "_display": {
                          "description": "Base definition for all elements in a resource.",
                          "additionalProperties": false
                        },
                        "url": {
                          "pattern": "^\\S*$",
                          "type": "string",
                          "description": "A URI that is a reference to a canonical URL on a FHIR resource"
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false,
                  "required": [
                    "element"
                  ]
                },
                "type": "array"
              }
            },
            "additionalProperties": false,
            "required": [
              "resourceType"
            ]
          },
          {
            "description": "A clinical condition, problem, diagnosis, or other event, situation, issue, or clinical concept that has risen to a level of concern.",
            "properties": {
              "resourceType": {
                "description": "This is a Condition resource",
                "const": "Condition"
              },
              "id": {
                "description": "The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.",
                "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                "type": "string"
              },
              "meta": {
                "description": "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
                "additionalProperties": false
              },
              "implicitRules": {
                "pattern": "^\\S*$",
                "type": "string",
                "description": "String of characters used to identify a name or a resource"
              },
              "_implicitRules": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "language": {
                "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                "type": "string",
                "description": "A string which has at least one character and no leading or trailing whitespace and where there is no whitespace other than single spaces in the contents"
              },
              "_language": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "text": {
                "description": "A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it \"clinically safe\" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.",
                "additionalProperties": false
              },
              "contained": {
                "description": "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope.",
                "type": "array"
              },
              "extension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                "type": "array"
              },
              "modifierExtension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                "type": "array"
              },
              "identifier": {
                "description": "Business identifiers assigned to this condition by the performer or other systems which remain constant as the resource is updated and propagates from server to server.",
                "type": "array"
              },
              "clinicalStatus": {
                "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                "additionalProperties": false
              },
              "verificationStatus": {
                "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                "additionalProperties": false
              },
              "category": {
                "description": "A category assigned to the condition.",
                "type": "array"
              },
              "severity": {
                "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                "additionalProperties": false
              },
              "code": {
                "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                "additionalProperties": false
              },
              "bodySite": {
                "description": "The anatomical location where this condition manifests itself.",
                "type": "array"
              },
              "subject": {
                "description": "A reference from one resource to another.",
                "additionalProperties": false
              },
              "encounter": {
                "description": "A reference from one resource to another.",
                "additionalProperties": false
              },
              "onsetDateTime": {
                "description": "Estimated or actual date or date-time  the condition began, in the opinion of the clinician.",
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                "type": "string"
              },
              "_onsetDateTime": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "onsetAge": {
                "description": "Estimated or actual date or date-time  the condition began, in the opinion of the clinician.",
                "additionalProperties": false
              },
              "onsetPeriod": {
                "description": "A time period defined by a start and end date and optionally time.",
                "additionalProperties": false
              },
              "onsetRange": {
                "description": "Estimated or actual date or date-time  the condition began, in the opinion of the clinician.",
                "additionalProperties": false
              },
              "onsetString": {
                "description": "Estimated or actual date or date-time  the condition began, in the opinion of the clinician.",
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string"
              },
              "_onsetString": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "abatementDateTime": {
                "description": "The date or estimated date that the condition resolved or went into remission. This is called \"abatement\" because of the many overloaded connotations associated with \"remission\" or \"resolution\" - Conditions are never really resolved, but they can abate.",
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                "type": "string"
              },
              "_abatementDateTime": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "abatementAge": {
                "description": "The date or estimated date that the condition resolved or went into remission. This is called \"abatement\" because of the many overloaded connotations associated with \"remission\" or \"resolution\" - Conditions are never really resolved, but they can abate.",
                "additionalProperties": false
              },
              "abatementPeriod": {
                "description": "A time period defined by a start and end date and optionally time.",
                "additionalProperties": false
              },
              "abatementRange": {
                "description": "The date or estimated date that the condition resolved or went into remission. This is called \"abatement\" because of the many overloaded connotations associated with \"remission\" or \"resolution\" - Conditions are never really resolved, but they can abate.",
                "additionalProperties": false
              },
              "abatementString": {
                "description": "The date or estimated date that the condition resolved or went into remission. This is called \"abatement\" because of the many overloaded connotations associated with \"remission\" or \"resolution\" - Conditions are never really resolved, but they can abate.",
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string"
              },
              "_abatementString": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "recordedDate": {
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                "type": "string",
                "description": "A date, date-time or partial date (e.g. just year or year + month).  If hours and minutes are specified, a time zone SHALL be populated. The format is a union of the schema types gYear, gYearMonth, date and dateTime. Seconds must be provided due to schema type constraints but may be zero-filled and may be ignored.                 Dates SHALL be valid dates."
              },
              "_recordedDate": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "recorder": {
                "description": "A reference from one resource to another.",
                "additionalProperties": false
              },
              "asserter": {
                "description": "A reference from one resource to another.",
                "additionalProperties": false
              },
              "stage": {
                "description": "Clinical stage or grade of a condition. May include formal severity assessments.",
                "items": {
                  "description": "A clinical condition, problem, diagnosis, or other event, situation, issue, or clinical concept that has risen to a level of concern.",
                  "properties": {
                    "id": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "type": "array"
                    },
                    "modifierExtension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                      "type": "array"
                    },
                    "summary": {
                      "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                      "additionalProperties": false
                    },
                    "assessment": {
                      "description": "Reference to a formal record of the evidence on which the staging assessment is based.",
                      "type": "array"
                    },
                    "type": {
                      "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                },
                "type": "array"
              },
              "evidence": {
                "description": "Supporting evidence / manifestations that are the basis of the Condition's verification status, such as evidence that confirmed or refuted the condition.",
                "items": {
                  "description": "A clinical condition, problem, diagnosis, or other event, situation, issue, or clinical concept that has risen to a level of concern.",
                  "properties": {
                    "id": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "type": "array"
                    },
                    "modifierExtension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                      "type": "array"
                    },
                    "code": {
                      "description": "A manifestation or symptom that led to the recording of this condition.",
                      "type": "array"
                    },
                    "detail": {
                      "description": "Links to other relevant information, including pathology reports.",
                      "type": "array"
                    }
                  },
                  "additionalProperties": false
                },
                "type": "array"
              },
              "note": {
                "description": "Additional information about the Condition. This is a general notes/comments entry  for description of the Condition, its diagnosis and prognosis.",
                "type": "array"
              }
            },
            "additionalProperties": false,
            "required": [
              "subject",
              "resourceType"
            ]
          },
          {
            "description": "A record of a healthcare consumer’s  choices, which permits or denies identified recipient(s) or recipient role(s) to perform one or more actions within a given policy context, for specific purposes and periods of time.",
            "properties": {
              "resourceType": {
                "description": "This is a Consent resource",
                "const": "Consent"
              },
              "id": {
                "description": "The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.",
                "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                "type": "string"
              },
              "meta": {
                "description": "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
                "additionalProperties": false
              },
              "implicitRules": {
                "pattern": "^\\S*$",
                "type": "string",
                "description": "String of characters used to identify a name or a resource"
              },
              "_implicitRules": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "language": {
                "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                "type": "string",
                "description": "A string which has at least one character and no leading or trailing whitespace and where there is no whitespace other than single spaces in the contents"
              },
              "_language": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "text": {
                "description": "A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it \"clinically safe\" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.",
                "additionalProperties": false
              },
              "contained": {
                "description": "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope.",
                "type": "array"
              },
              "extension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                "type": "array"
              },
              "modifierExtension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                "type": "array"
              },
              "identifier": {
                "description": "Unique identifier for this copy of the Consent Statement.",
                "type": "array"
              },
              "status": {
                "description": "Indicates the current state of this consent.",
                "enum": [
                  "draft",
                  "proposed",
                  "active",
                  "rejected",
                  "inactive",
                  "entered-in-error"
                ]
              },
              "_status": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "scope": {
                "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                "additionalProperties": false
              },
              "category": {
                "description": "A classification of the type of consents found in the statement. This element supports indexing and retrieval of consent statements.",
                "type": "array"
              },
              "patient": {
                "description": "A reference from one resource to another.",
                "additionalProperties": false
              },
              "dateTime": {
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                "type": "string",
                "description": "A date, date-time or partial date (e.g. just year or year + month).  If hours and minutes are specified, a time zone SHALL be populated. The format is a union of the schema types gYear, gYearMonth, date and dateTime. Seconds must be provided due to schema type constraints but may be zero-filled and may be ignored.                 Dates SHALL be valid dates."
              },
              "_dateTime": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "performer": {
                "description": "Either the Grantor, which is the entity responsible for granting the rights listed in a Consent Directive or the Grantee, which is the entity responsible for complying with the Consent Directive, including any obligations or limitations on authorizations and enforcement of prohibitions.",
                "type": "array"
              },
              "organization": {
                "description": "The organization that manages the consent, and the framework within which it is executed.",
                "type": "array"
              },
              "sourceAttachment": {
                "description": "For referring to data content defined in other formats.",
                "additionalProperties": false
              },
              "sourceReference": {
                "description": "A reference from one resource to another.",
                "additionalProperties": false
              },
              "policy": {
                "description": "The references to the policies that are included in this consent scope. Policies may be organizational, but are often defined jurisdictionally, or in law.",
                "items": {
                  "description": "A record of a healthcare consumer’s  choices, which permits or denies identified recipient(s) or recipient role(s) to perform one or more actions within a given policy context, for specific purposes and periods of time.",
                  "properties": {
                    "id": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "type": "array"
                    },
                    "modifierExtension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                      "type": "array"
                    },
                    "authority": {
                      "pattern": "^\\S*$",
                      "type": "string",
                      "description": "String of characters used to identify a name or a resource"
                    },
                    "_authority": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "uri": {
                      "pattern": "^\\S*$",
                      "type": "string",
                      "description": "String of characters used to identify a name or a resource"
                    },
                    "_uri": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                },
                "type": "array"
              },
              "policyRule": {
                "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                "additionalProperties": false
              },
              "verification": {
                "description": "Whether a treatment instruction (e.g. artificial respiration yes or no) was verified with the patient, his/her family or another authorized person.",
                "items": {
                  "description": "A record of a healthcare consumer’s  choices, which permits or denies identified recipient(s) or recipient role(s) to perform one or more actions within a given policy context, for specific purposes and periods of time.",
                  "properties": {
                    "id": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "type": "array"
                    },
                    "modifierExtension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                      "type": "array"
                    },
                    "verified": {
                      "description": "Has the instruction been verified.",
                      "pattern": "^true|false$",
                      "type": "boolean"
                    },
                    "_verified": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "verifiedWith": {
                      "description": "A reference from one resource to another.",
                      "additionalProperties": false
                    },
                    "verificationDate": {
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                      "type": "string",
                      "description": "A date, date-time or partial date (e.g. just year or year + month).  If hours and minutes are specified, a time zone SHALL be populated. The format is a union of the schema types gYear, gYearMonth, date and dateTime. Seconds must be provided due to schema type constraints but may be zero-filled and may be ignored.                 Dates SHALL be valid dates."
                    },
                    "_verificationDate": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                },
                "type": "array"
              },
              "provision": {
                "description": "An exception to the base policy of this consent. An exception can be an addition or removal of access permissions.",
                "properties": {
                  "id": {
                    "pattern": "^[ \\r\\n\\t\\S]+$",
                    "type": "string",
                    "description": "A sequence of Unicode characters"
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "type": "array"
                  },
                  "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                    "type": "array"
                  },
                  "type": {
                    "description": "Action  to take - permit or deny - when the rule conditions are met.  Not permitted in root rule, required in all nested rules.",
                    "enum": [
                      "deny",
                      "permit"
                    ]
                  },
                  "_type": {
                    "description": "Base definition for all elements in a resource.",
                    "additionalProperties": false
                  },
                  "period": {
                    "description": "A time period defined by a start and end date and optionally time.",
                    "additionalProperties": false
                  },
                  "actor": {
                    "description": "Who or what is controlled by this rule. Use group to identify a set of actors by some property they share (e.g. 'admitting officers').",
                    "items": {
                      "description": "A record of a healthcare consumer’s  choices, which permits or denies identified recipient(s) or recipient role(s) to perform one or more actions within a given policy context, for specific purposes and periods of time.",
                      "properties": {
                        "id": {
                          "pattern": "^[ \\r\\n\\t\\S]+$",
                          "type": "string",
                          "description": "A sequence of Unicode characters"
                        },
                        "extension": {
                          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                          "type": "array"
                        },
                        "modifierExtension": {
                          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                          "type": "array"
                        },
                        "role": {
                          "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                          "additionalProperties": false
                        },
                        "reference": {
                          "description": "A reference from one resource to another.",
                          "additionalProperties": false
                        }
                      },
                      "additionalProperties": false,
                      "required": [
                        "reference",
                        "role"
                      ]
                    },
                    "type": "array"
                  },
                  "action": {
                    "description": "Actions controlled by this Rule.",
                    "type": "array"
                  },
                  "securityLabel": {
                    "description": "A security label, comprised of 0..* security label fields (Privacy tags), which define which resources are controlled by this exception.",
                    "type": "array"
                  },
                  "purpose": {
                    "description": "The context of the activities a user is taking - why the user is accessing the data - that are controlled by this rule.",
                    "type": "array"
                  },
                  "class": {
                    "description": "The class of information covered by this rule. The type can be a FHIR resource type, a profile on a type, or a CDA document, or some other type that indicates what sort of information the consent relates to.",
                    "type": "array"
                  },
                  "code": {
                    "description": "If this code is found in an instance, then the rule applies.",
                    "type": "array"
                  },
                  "dataPeriod": {
                    "description": "A time period defined by a start and end date and optionally time.",
                    "additionalProperties": false
                  },
                  "data": {
                    "description": "The resources controlled by this rule if specific resources are referenced.",
                    "items": {
                      "description": "A record of a healthcare consumer’s  choices, which permits or denies identified recipient(s) or recipient role(s) to perform one or more actions within a given policy context, for specific purposes and periods of time.",
                      "properties": {
                        "id": {
                          "pattern": "^[ \\r\\n\\t\\S]+$",
                          "type": "string",
                          "description": "A sequence of Unicode characters"
                        },
                        "extension": {
                          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                          "type": "array"
                        },
                        "modifierExtension": {
                          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                          "type": "array"
                        },
                        "meaning": {
                          "description": "How the resource reference is interpreted when testing consent restrictions.",
                          "enum": [
                            "instance",
                            "related",
                            "dependents",
                            "authoredby"
                          ]
                        },
                        "_meaning": {
                          "description": "Base definition for all elements in a resource.",
                          "additionalProperties": false
                        },
                        "reference": {
                          "description": "A reference from one resource to another.",
                          "additionalProperties": false
                        }
                      },
                      "additionalProperties": false,
                      "required": [
                        "reference"
                      ]
                    },
                    "type": "array"
                  },
                  "provision": {
                    "description": "Rules which provide exceptions to the base rule or subrules.",
                    "items": {
                      "description": "A record of a healthcare consumer’s  choices, which permits or denies identified recipient(s) or recipient role(s) to perform one or more actions within a given policy context, for specific purposes and periods of time.",
                      "additionalProperties": false
                    },
                    "type": "array"
                  }
                },
                "additionalProperties": false
              }
            },
            "additionalProperties": false,
            "required": [
              "scope",
              "category",
              "resourceType"
            ]
          },
          {
            "description": "Legally enforceable, formally recorded unilateral or bilateral directive i.e., a policy or agreement.",
            "properties": {
              "resourceType": {
                "description": "This is a Contract resource",
                "const": "Contract"
              },
              "id": {
                "description": "The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.",
                "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                "type": "string"
              },
              "meta": {
                "description": "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
                "additionalProperties": false
              },
              "implicitRules": {
                "pattern": "^\\S*$",
                "type": "string",
                "description": "String of characters used to identify a name or a resource"
              },
              "_implicitRules": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "language": {
                "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                "type": "string",
                "description": "A string which has at least one character and no leading or trailing whitespace and where there is no whitespace other than single spaces in the contents"
              },
              "_language": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "text": {
                "description": "A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it \"clinically safe\" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.",
                "additionalProperties": false
              },
              "contained": {
                "description": "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope.",
                "type": "array"
              },
              "extension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                "type": "array"
              },
              "modifierExtension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                "type": "array"
              },
              "identifier": {
                "description": "Unique identifier for this Contract or a derivative that references a Source Contract.",
                "type": "array"
              },
              "url": {
                "pattern": "^\\S*$",
                "type": "string",
                "description": "String of characters used to identify a name or a resource"
              },
              "_url": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "version": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "_version": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "status": {
                "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                "type": "string",
                "description": "A string which has at least one character and no leading or trailing whitespace and where there is no whitespace other than single spaces in the contents"
              },
              "_status": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "legalState": {
                "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                "additionalProperties": false
              },
              "instantiatesCanonical": {
                "description": "A reference from one resource to another.",
                "additionalProperties": false
              },
              "instantiatesUri": {
                "pattern": "^\\S*$",
                "type": "string",
                "description": "String of characters used to identify a name or a resource"
              },
              "_instantiatesUri": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "contentDerivative": {
                "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                "additionalProperties": false
              },
              "issued": {
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                "type": "string",
                "description": "A date, date-time or partial date (e.g. just year or year + month).  If hours and minutes are specified, a time zone SHALL be populated. The format is a union of the schema types gYear, gYearMonth, date and dateTime. Seconds must be provided due to schema type constraints but may be zero-filled and may be ignored.                 Dates SHALL be valid dates."
              },
              "_issued": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "applies": {
                "description": "A time period defined by a start and end date and optionally time.",
                "additionalProperties": false
              },
              "expirationType": {
                "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                "additionalProperties": false
              },
              "subject": {
                "description": "The target entity impacted by or of interest to parties to the agreement.",
                "type": "array"
              },
              "authority": {
                "description": "A formally or informally recognized grouping of people, principals, organizations, or jurisdictions formed for the purpose of achieving some form of collective action such as the promulgation, administration and enforcement of contracts and policies.",
                "type": "array"
              },
              "domain": {
                "description": "Recognized governance framework or system operating with a circumscribed scope in accordance with specified principles, policies, processes or procedures for managing rights, actions, or behaviors of parties or principals relative to resources.",
                "type": "array"
              },
              "site": {
                "description": "Sites in which the contract is complied with,  exercised, or in force.",
                "type": "array"
              },
              "name": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "_name": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "title": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "_title": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "subtitle": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "_subtitle": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "alias": {
                "description": "Alternative representation of the title for this Contract definition, derivative, or instance in any legal state., e.g., a domain specific contract number related to legislation.",
                "type": "array"
              },
              "_alias": {
                "description": "Extensions for alias",
                "type": "array"
              },
              "author": {
                "description": "A reference from one resource to another.",
                "additionalProperties": false
              },
              "scope": {
                "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                "additionalProperties": false
              },
              "topicCodeableConcept": {
                "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                "additionalProperties": false
              },
              "topicReference": {
                "description": "A reference from one resource to another.",
                "additionalProperties": false
              },
              "type": {
                "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                "additionalProperties": false
              },
              "subType": {
                "description": "Sub-category for the Contract that distinguishes the kinds of systems that would be interested in the Contract within the context of the Contract's scope.",
                "type": "array"
              },
              "contentDefinition": {
                "description": "Precusory content developed with a focus and intent of supporting the formation a Contract instance, which may be associated with and transformable into a Contract.",
                "properties": {
                  "id": {
                    "pattern": "^[ \\r\\n\\t\\S]+$",
                    "type": "string",
                    "description": "A sequence of Unicode characters"
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "type": "array"
                  },
                  "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                    "type": "array"
                  },
                  "type": {
                    "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                    "additionalProperties": false
                  },
                  "subType": {
                    "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                    "additionalProperties": false
                  },
                  "publisher": {
                    "description": "A reference from one resource to another.",
                    "additionalProperties": false
                  },
                  "publicationDate": {
                    "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                    "type": "string",
                    "description": "A date, date-time or partial date (e.g. just year or year + month).  If hours and minutes are specified, a time zone SHALL be populated. The format is a union of the schema types gYear, gYearMonth, date and dateTime. Seconds must be provided due to schema type constraints but may be zero-filled and may be ignored.                 Dates SHALL be valid dates."
                  },
                  "_publicationDate": {
                    "description": "Base definition for all elements in a resource.",
                    "additionalProperties": false
                  },
                  "publicationStatus": {
                    "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                    "type": "string",
                    "description": "A string which has at least one character and no leading or trailing whitespace and where there is no whitespace other than single spaces in the contents"
                  },
                  "_publicationStatus": {
                    "description": "Base definition for all elements in a resource.",
                    "additionalProperties": false
                  },
                  "copyright": {
                    "description": "A copyright statement relating to Contract precursor content. Copyright statements are generally legal restrictions on the use and publishing of the Contract precursor content.",
                    "pattern": "^[ \\r\\n\\t\\S]+$",
                    "type": "string"
                  },
                  "_copyright": {
                    "description": "Base definition for all elements in a resource.",
                    "additionalProperties": false
                  }
                },
                "additionalProperties": false,
                "required": [
                  "type"
                ]
              },
              "term": {
                "description": "One or more Contract Provisions, which may be related and conveyed as a group, and may contain nested groups.",
                "items": {
                  "description": "Legally enforceable, formally recorded unilateral or bilateral directive i.e., a policy or agreement.",
                  "properties": {
                    "id": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "type": "array"
                    },
                    "modifierExtension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                      "type": "array"
                    },
                    "identifier": {
                      "description": "An identifier - identifies some entity uniquely and unambiguously. Typically this is used for business identifiers.",
                      "additionalProperties": false
                    },
                    "issued": {
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                      "type": "string",
                      "description": "A date, date-time or partial date (e.g. just year or year + month).  If hours and minutes are specified, a time zone SHALL be populated. The format is a union of the schema types gYear, gYearMonth, date and dateTime. Seconds must be provided due to schema type constraints but may be zero-filled and may be ignored.                 Dates SHALL be valid dates."
                    },
                    "_issued": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "applies": {
                      "description": "A time period defined by a start and end date and optionally time.",
                      "additionalProperties": false
                    },
                    "topicCodeableConcept": {
                      "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                      "additionalProperties": false
                    },
                    "topicReference": {
                      "description": "A reference from one resource to another.",
                      "additionalProperties": false
                    },
                    "type": {
                      "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                      "additionalProperties": false
                    },
                    "subType": {
                      "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                      "additionalProperties": false
                    },
                    "text": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "_text": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "securityLabel": {
                      "description": "Security labels that protect the handling of information about the term and its elements, which may be specifically identified..",
                      "items": {
                        "description": "Legally enforceable, formally recorded unilateral or bilateral directive i.e., a policy or agreement.",
                        "properties": {
                          "id": {
                            "pattern": "^[ \\r\\n\\t\\S]+$",
                            "type": "string",
                            "description": "A sequence of Unicode characters"
                          },
                          "extension": {
                            "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                            "type": "array"
                          },
                          "modifierExtension": {
                            "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                            "type": "array"
                          },
                          "number": {
                            "description": "Number used to link this term or term element to the applicable Security Label.",
                            "items": {
                              "pattern": "^[0]|([1-9][0-9]*)$",
                              "type": "number",
                              "description": "An integer with a value that is not negative (e.g. >= 0)"
                            },
                            "type": "array"
                          },
                          "_number": {
                            "description": "Extensions for number",
                            "type": "array"
                          },
                          "classification": {
                            "description": "A reference to a code defined by a terminology system.",
                            "additionalProperties": false
                          },
                          "category": {
                            "description": "Security label privacy tag that species the applicable privacy and security policies governing this term and/or term elements.",
                            "type": "array"
                          },
                          "control": {
                            "description": "Security label privacy tag that species the manner in which term and/or term elements are to be protected.",
                            "type": "array"
                          }
                        },
                        "additionalProperties": false,
                        "required": [
                          "classification"
                        ]
                      },
                      "type": "array"
                    },
                    "offer": {
                      "description": "The matter of concern in the context of this provision of the agrement.",
                      "properties": {
                        "id": {
                          "pattern": "^[ \\r\\n\\t\\S]+$",
                          "type": "string",
                          "description": "A sequence of Unicode characters"
                        },
                        "extension": {
                          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                          "type": "array"
                        },
                        "modifierExtension": {
                          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                          "type": "array"
                        },
                        "identifier": {
                          "description": "Unique identifier for this particular Contract Provision.",
                          "type": "array"
                        },
                        "party": {
                          "description": "Offer Recipient.",
                          "items": {
                            "description": "Legally enforceable, formally recorded unilateral or bilateral directive i.e., a policy or agreement.",
                            "properties": {
                              "id": {
                                "pattern": "^[ \\r\\n\\t\\S]+$",
                                "type": "string",
                                "description": "A sequence of Unicode characters"
                              },
                              "extension": {
                                "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                                "type": "array"
                              },
                              "modifierExtension": {
                                "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                                "type": "array"
                              },
                              "reference": {
                                "description": "Participant in the offer.",
                                "type": "array"
                              },
                              "role": {
                                "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                                "additionalProperties": false
                              }
                            },
                            "additionalProperties": false,
                            "required": [
                              "reference",
                              "role"
                            ]
                          },
                          "type": "array"
                        },
                        "topic": {
                          "description": "A reference from one resource to another.",
                          "additionalProperties": false
                        },
                        "type": {
                          "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                          "additionalProperties": false
                        },
                        "decision": {
                          "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                          "additionalProperties": false
                        },
                        "decisionMode": {
                          "description": "How the decision about a Contract was conveyed.",
                          "type": "array"
                        },
                        "answer": {
                          "description": "Response to offer text.",
                          "items": {
                            "description": "Legally enforceable, formally recorded unilateral or bilateral directive i.e., a policy or agreement.",
                            "properties": {
                              "id": {
                                "pattern": "^[ \\r\\n\\t\\S]+$",
                                "type": "string",
                                "description": "A sequence of Unicode characters"
                              },
                              "extension": {
                                "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                                "type": "array"
                              },
                              "modifierExtension": {
                                "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                                "type": "array"
                              },
                              "valueBoolean": {
                                "description": "Response to an offer clause or question text,  which enables selection of values to be agreed to, e.g., the period of participation, the date of occupancy of a rental, warrently duration, or whether biospecimen may be used for further research.",
                                "pattern": "^true|false$",
                                "type": "boolean"
                              },
                              "_valueBoolean": {
                                "description": "Base definition for all elements in a resource.",
                                "additionalProperties": false
                              },
                              "valueDecimal": {
                                "description": "Response to an offer clause or question text,  which enables selection of values to be agreed to, e.g., the period of participation, the date of occupancy of a rental, warrently duration, or whether biospecimen may be used for further research.",
                                "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                                "type": "number"
                              },
                              "_valueDecimal": {
                                "description": "Base definition for all elements in a resource.",
                                "additionalProperties": false
                              },
                              "valueInteger": {
                                "description": "Response to an offer clause or question text,  which enables selection of values to be agreed to, e.g., the period of participation, the date of occupancy of a rental, warrently duration, or whether biospecimen may be used for further research.",
                                "pattern": "^-?([0]|([1-9][0-9]*))$",
                                "type": "number"
                              },
                              "_valueInteger": {
                                "description": "Base definition for all elements in a resource.",
                                "additionalProperties": false
                              },
                              "valueDate": {
                                "description": "Response to an offer clause or question text,  which enables selection of values to be agreed to, e.g., the period of participation, the date of occupancy of a rental, warrently duration, or whether biospecimen may be used for further research.",
                                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                                "type": "string"
                              },
                              "_valueDate": {
                                "description": "Base definition for all elements in a resource.",
                                "additionalProperties": false
                              },
                              "valueDateTime": {
                                "description": "Response to an offer clause or question text,  which enables selection of values to be agreed to, e.g., the period of participation, the date of occupancy of a rental, warrently duration, or whether biospecimen may be used for further research.",
                                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                                "type": "string"
                              },
                              "_valueDateTime": {
                                "description": "Base definition for all elements in a resource.",
                                "additionalProperties": false
                              },
                              "valueTime": {
                                "description": "Response to an offer clause or question text,  which enables selection of values to be agreed to, e.g., the period of participation, the date of occupancy of a rental, warrently duration, or whether biospecimen may be used for further research.",
                                "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$",
                                "type": "string"
                              },
                              "_valueTime": {
                                "description": "Base definition for all elements in a resource.",
                                "additionalProperties": false
                              },
                              "valueString": {
                                "description": "Response to an offer clause or question text,  which enables selection of values to be agreed to, e.g., the period of participation, the date of occupancy of a rental, warrently duration, or whether biospecimen may be used for further research.",
                                "pattern": "^[ \\r\\n\\t\\S]+$",
                                "type": "string"
                              },
                              "_valueString": {
                                "description": "Base definition for all elements in a resource.",
                                "additionalProperties": false
                              },
                              "valueUri": {
                                "description": "Response to an offer clause or question text,  which enables selection of values to be agreed to, e.g., the period of participation, the date of occupancy of a rental, warrently duration, or whether biospecimen may be used for further research.",
                                "pattern": "^\\S*$",
                                "type": "string"
                              },
                              "_valueUri": {
                                "description": "Base definition for all elements in a resource.",
                                "additionalProperties": false
                              },
                              "valueAttachment": {
                                "description": "For referring to data content defined in other formats.",
                                "additionalProperties": false
                              },
                              "valueCoding": {
                                "description": "A reference to a code defined by a terminology system.",
                                "additionalProperties": false
                              },
                              "valueQuantity": {
                                "description": "Response to an offer clause or question text,  which enables selection of values to be agreed to, e.g., the period of participation, the date of occupancy of a rental, warrently duration, or whether biospecimen may be used for further research.",
                                "additionalProperties": false
                              },
                              "valueReference": {
                                "description": "A reference from one resource to another.",
                                "additionalProperties": false
                              }
                            },
                            "additionalProperties": false
                          },
                          "type": "array"
                        },
                        "text": {
                          "pattern": "^[ \\r\\n\\t\\S]+$",
                          "type": "string",
                          "description": "A sequence of Unicode characters"
                        },
                        "_text": {
                          "description": "Base definition for all elements in a resource.",
                          "additionalProperties": false
                        },
                        "linkId": {
                          "description": "The id of the clause or question text of the offer in the referenced questionnaire/response.",
                          "type": "array"
                        },
                        "_linkId": {
                          "description": "Extensions for linkId",
                          "type": "array"
                        },
                        "securityLabelNumber": {
                          "description": "Security labels that protects the offer.",
                          "type": "array"
                        },
                        "_securityLabelNumber": {
                          "description": "Extensions for securityLabelNumber",
                          "type": "array"
                        }
                      },
                      "additionalProperties": false
                    },
                    "asset": {
                      "description": "Contract Term Asset List.",
                      "items": {
                        "description": "Legally enforceable, formally recorded unilateral or bilateral directive i.e., a policy or agreement.",
                        "properties": {
                          "id": {
                            "pattern": "^[ \\r\\n\\t\\S]+$",
                            "type": "string",
                            "description": "A sequence of Unicode characters"
                          },
                          "extension": {
                            "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                            "type": "array"
                          },
                          "modifierExtension": {
                            "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                            "type": "array"
                          },
                          "scope": {
                            "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                            "additionalProperties": false
                          },
                          "type": {
                            "description": "Target entity type about which the term may be concerned.",
                            "type": "array"
                          },
                          "typeReference": {
                            "description": "Associated entities.",
                            "type": "array"
                          },
                          "subtype": {
                            "description": "May be a subtype or part of an offered asset.",
                            "type": "array"
                          },
                          "relationship": {
                            "description": "A reference to a code defined by a terminology system.",
                            "additionalProperties": false
                          },
                          "context": {
                            "description": "Circumstance of the asset.",
                            "items": {
                              "description": "Legally enforceable, formally recorded unilateral or bilateral directive i.e., a policy or agreement.",
                              "properties": {
                                "id": {
                                  "pattern": "^[ \\r\\n\\t\\S]+$",
                                  "type": "string",
                                  "description": "A sequence of Unicode characters"
                                },
                                "extension": {
                                  "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                                  "type": "array"
                                },
                                "modifierExtension": {
                                  "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                                  "type": "array"
                                },
                                "reference": {
                                  "description": "A reference from one resource to another.",
                                  "additionalProperties": false
                                },
                                "code": {
                                  "description": "Coded representation of the context generally or of the Referenced entity, such as the asset holder type or location.",
                                  "type": "array"
                                },
                                "text": {
                                  "pattern": "^[ \\r\\n\\t\\S]+$",
                                  "type": "string",
                                  "description": "A sequence of Unicode characters"
                                },
                                "_text": {
                                  "description": "Base definition for all elements in a resource.",
                                  "additionalProperties": false
                                }
                              },
                              "additionalProperties": false
                            },
                            "type": "array"
                          },
                          "condition": {
                            "pattern": "^[ \\r\\n\\t\\S]+$",
                            "type": "string",
                            "description": "A sequence of Unicode characters"
                          },
                          "_condition": {
                            "description": "Base definition for all elements in a resource.",
                            "additionalProperties": false
                          },
                          "periodType": {
                            "description": "Type of Asset availability for use or ownership.",
                            "type": "array"
                          },
                          "period": {
                            "description": "Asset relevant contractual time period.",
                            "type": "array"
                          },
                          "usePeriod": {
                            "description": "Time period of asset use.",
                            "type": "array"
                          },
                          "text": {
                            "pattern": "^[ \\r\\n\\t\\S]+$",
                            "type": "string",
                            "description": "A sequence of Unicode characters"
                          },
                          "_text": {
                            "description": "Base definition for all elements in a resource.",
                            "additionalProperties": false
                          },
                          "linkId": {
                            "description": "Id [identifier??] of the clause or question text about the asset in the referenced form or QuestionnaireResponse.",
                            "type": "array"
                          },
                          "_linkId": {
                            "description": "Extensions for linkId",
                            "type": "array"
                          },
                          "answer": {
                            "description": "Response to assets.",
                            "type": "array"
                          },
                          "securityLabelNumber": {
                            "description": "Security labels that protects the asset.",
                            "type": "array"
                          },
                          "_securityLabelNumber": {
                            "description": "Extensions for securityLabelNumber",
                            "type": "array"
                          },
                          "valuedItem": {
                            "description": "Contract Valued Item List.",
                            "items": {
                              "description": "Legally enforceable, formally recorded unilateral or bilateral directive i.e., a policy or agreement.",
                              "properties": {
                                "id": {
                                  "pattern": "^[ \\r\\n\\t\\S]+$",
                                  "type": "string",
                                  "description": "A sequence of Unicode characters"
                                },
                                "extension": {
                                  "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                                  "type": "array"
                                },
                                "modifierExtension": {
                                  "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                                  "type": "array"
                                },
                                "entityCodeableConcept": {
                                  "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                                  "additionalProperties": false
                                },
                                "entityReference": {
                                  "description": "A reference from one resource to another.",
                                  "additionalProperties": false
                                },
                                "identifier": {
                                  "description": "An identifier - identifies some entity uniquely and unambiguously. Typically this is used for business identifiers.",
                                  "additionalProperties": false
                                },
                                "effectiveTime": {
                                  "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                                  "type": "string",
                                  "description": "A date, date-time or partial date (e.g. just year or year + month).  If hours and minutes are specified, a time zone SHALL be populated. The format is a union of the schema types gYear, gYearMonth, date and dateTime. Seconds must be provided due to schema type constraints but may be zero-filled and may be ignored.                 Dates SHALL be valid dates."
                                },
                                "_effectiveTime": {
                                  "description": "Base definition for all elements in a resource.",
                                  "additionalProperties": false
                                },
                                "quantity": {
                                  "description": "Specifies the units by which the Contract Valued Item is measured or counted, and quantifies the countable or measurable Contract Valued Item instances.",
                                  "additionalProperties": false
                                },
                                "unitPrice": {
                                  "description": "A Contract Valued Item unit valuation measure.",
                                  "additionalProperties": false
                                },
                                "factor": {
                                  "description": "A real number that represents a multiplier used in determining the overall value of the Contract Valued Item delivered. The concept of a Factor allows for a discount or surcharge multiplier to be applied to a monetary amount.",
                                  "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                                  "type": "number"
                                },
                                "_factor": {
                                  "description": "Base definition for all elements in a resource.",
                                  "additionalProperties": false
                                },
                                "points": {
                                  "description": "An amount that expresses the weighting (based on difficulty, cost and/or resource intensiveness) associated with the Contract Valued Item delivered. The concept of Points allows for assignment of point values for a Contract Valued Item, such that a monetary amount can be assigned to each point.",
                                  "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                                  "type": "number"
                                },
                                "_points": {
                                  "description": "Base definition for all elements in a resource.",
                                  "additionalProperties": false
                                },
                                "net": {
                                  "description": "Expresses the product of the Contract Valued Item unitQuantity and the unitPriceAmt. For example, the formula: unit Quantity * unit Price (Cost per Point) * factor Number  * points = net Amount. Quantity, factor and points are assumed to be 1 if not supplied.",
                                  "additionalProperties": false
                                },
                                "payment": {
                                  "pattern": "^[ \\r\\n\\t\\S]+$",
                                  "type": "string",
                                  "description": "A sequence of Unicode characters"
                                },
                                "_payment": {
                                  "description": "Base definition for all elements in a resource.",
                                  "additionalProperties": false
                                },
                                "paymentDate": {
                                  "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                                  "type": "string",
                                  "description": "A date, date-time or partial date (e.g. just year or year + month).  If hours and minutes are specified, a time zone SHALL be populated. The format is a union of the schema types gYear, gYearMonth, date and dateTime. Seconds must be provided due to schema type constraints but may be zero-filled and may be ignored.                 Dates SHALL be valid dates."
                                },
                                "_paymentDate": {
                                  "description": "Base definition for all elements in a resource.",
                                  "additionalProperties": false
                                },
                                "responsible": {
                                  "description": "A reference from one resource to another.",
                                  "additionalProperties": false
                                },
                                "recipient": {
                                  "description": "A reference from one resource to another.",
                                  "additionalProperties": false
                                },
                                "linkId": {
                                  "description": "Id  of the clause or question text related to the context of this valuedItem in the referenced form or QuestionnaireResponse.",
                                  "type": "array"
                                },
                                "_linkId": {
                                  "description": "Extensions for linkId",
                                  "type": "array"
                                },
                                "securityLabelNumber": {
                                  "description": "A set of security labels that define which terms are controlled by this condition.",
                                  "type": "array"
                                },
                                "_securityLabelNumber": {
                                  "description": "Extensions for securityLabelNumber",
                                  "type": "array"
                                }
                              },
                              "additionalProperties": false
                            },
                            "type": "array"
                          }
                        },
                        "additionalProperties": false
                      },
                      "type": "array"
                    },
                    "action": {
                      "description": "An actor taking a role in an activity for which it can be assigned some degree of responsibility for the activity taking place.",
                      "items": {
                        "description": "Legally enforceable, formally recorded unilateral or bilateral directive i.e., a policy or agreement.",
                        "properties": {
                          "id": {
                            "pattern": "^[ \\r\\n\\t\\S]+$",
                            "type": "string",
                            "description": "A sequence of Unicode characters"
                          },
                          "extension": {
                            "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                            "type": "array"
                          },
                          "modifierExtension": {
                            "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                            "type": "array"
                          },
                          "doNotPerform": {
                            "description": "True if the term prohibits the  action.",
                            "pattern": "^true|false$",
                            "type": "boolean"
                          },
                          "_doNotPerform": {
                            "description": "Base definition for all elements in a resource.",
                            "additionalProperties": false
                          },
                          "type": {
                            "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                            "additionalProperties": false
                          },
                          "subject": {
                            "description": "Entity of the action.",
                            "items": {
                              "description": "Legally enforceable, formally recorded unilateral or bilateral directive i.e., a policy or agreement.",
                              "properties": {
                                "id": {
                                  "pattern": "^[ \\r\\n\\t\\S]+$",
                                  "type": "string",
                                  "description": "A sequence of Unicode characters"
                                },
                                "extension": {
                                  "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                                  "type": "array"
                                },
                                "modifierExtension": {
                                  "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                                  "type": "array"
                                },
                                "reference": {
                                  "description": "The entity the action is performed or not performed on or for.",
                                  "type": "array"
                                },
                                "role": {
                                  "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                                  "additionalProperties": false
                                }
                              },
                              "additionalProperties": false,
                              "required": [
                                "reference"
                              ]
                            },
                            "type": "array"
                          },
                          "intent": {
                            "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                            "additionalProperties": false
                          },
                          "linkId": {
                            "description": "Id [identifier??] of the clause or question text related to this action in the referenced form or QuestionnaireResponse.",
                            "type": "array"
                          },
                          "_linkId": {
                            "description": "Extensions for linkId",
                            "type": "array"
                          },
                          "status": {
                            "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                            "additionalProperties": false
                          },
                          "context": {
                            "description": "A reference from one resource to another.",
                            "additionalProperties": false
                          },
                          "contextLinkId": {
                            "description": "Id [identifier??] of the clause or question text related to the requester of this action in the referenced form or QuestionnaireResponse.",
                            "type": "array"
                          },
                          "_contextLinkId": {
                            "description": "Extensions for contextLinkId",
                            "type": "array"
                          },
                          "occurrenceDateTime": {
                            "description": "When action happens.",
                            "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                            "type": "string"
                          },
                          "_occurrenceDateTime": {
                            "description": "Base definition for all elements in a resource.",
                            "additionalProperties": false
                          },
                          "occurrencePeriod": {
                            "description": "A time period defined by a start and end date and optionally time.",
                            "additionalProperties": false
                          },
                          "occurrenceTiming": {
                            "description": "When action happens.",
                            "additionalProperties": false
                          },
                          "requester": {
                            "description": "Who or what initiated the action and has responsibility for its activation.",
                            "type": "array"
                          },
                          "requesterLinkId": {
                            "description": "Id [identifier??] of the clause or question text related to the requester of this action in the referenced form or QuestionnaireResponse.",
                            "type": "array"
                          },
                          "_requesterLinkId": {
                            "description": "Extensions for requesterLinkId",
                            "type": "array"
                          },
                          "performerType": {
                            "description": "The type of individual that is desired or required to perform or not perform the action.",
                            "type": "array"
                          },
                          "performerRole": {
                            "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                            "additionalProperties": false
                          },
                          "performer": {
                            "description": "A reference from one resource to another.",
                            "additionalProperties": false
                          },
                          "performerLinkId": {
                            "description": "Id [identifier??] of the clause or question text related to the reason type or reference of this  action in the referenced form or QuestionnaireResponse.",
                            "type": "array"
                          },
                          "_performerLinkId": {
                            "description": "Extensions for performerLinkId",
                            "type": "array"
                          },
                          "reasonCode": {
                            "description": "Rationale for the action to be performed or not performed. Describes why the action is permitted or prohibited.",
                            "type": "array"
                          },
                          "reasonReference": {
                            "description": "Indicates another resource whose existence justifies permitting or not permitting this action.",
                            "type": "array"
                          },
                          "reason": {
                            "description": "Describes why the action is to be performed or not performed in textual form.",
                            "type": "array"
                          },
                          "_reason": {
                            "description": "Extensions for reason",
                            "type": "array"
                          },
                          "reasonLinkId": {
                            "description": "Id [identifier??] of the clause or question text related to the reason type or reference of this  action in the referenced form or QuestionnaireResponse.",
                            "type": "array"
                          },
                          "_reasonLinkId": {
                            "description": "Extensions for reasonLinkId",
                            "type": "array"
                          },
                          "note": {
                            "description": "Comments made about the term action made by the requester, performer, subject or other participants.",
                            "type": "array"
                          },
                          "securityLabelNumber": {
                            "description": "Security labels that protects the action.",
                            "type": "array"
                          },
                          "_securityLabelNumber": {
                            "description": "Extensions for securityLabelNumber",
                            "type": "array"
                          }
                        },
                        "additionalProperties": false,
                        "required": [
                          "type",
                          "intent",
                          "status"
                        ]
                      },
                      "type": "array"
                    },
                    "group": {
                      "description": "Nested group of Contract Provisions.",
                      "type": "array"
                    }
                  },
                  "additionalProperties": false,
                  "required": [
                    "offer"
                  ]
                },
                "type": "array"
              },
              "supportingInfo": {
                "description": "Information that may be needed by/relevant to the performer in their execution of this term action.",
                "type": "array"
              },
              "relevantHistory": {
                "description": "Links to Provenance records for past versions of this Contract definition, derivative, or instance, which identify key state transitions or updates that are likely to be relevant to a user looking at the current version of the Contract.  The Provence.entity indicates the target that was changed in the update. http://build.fhir.org/provenance-definitions.html#Provenance.entity.",
                "type": "array"
              },
              "signer": {
                "description": "Parties with legal standing in the Contract, including the principal parties, the grantor(s) and grantee(s), which are any person or organization bound by the contract, and any ancillary parties, which facilitate the execution of the contract such as a notary or witness.",
                "items": {
                  "description": "Legally enforceable, formally recorded unilateral or bilateral directive i.e., a policy or agreement.",
                  "properties": {
                    "id": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "type": "array"
                    },
                    "modifierExtension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                      "type": "array"
                    },
                    "type": {
                      "description": "A reference to a code defined by a terminology system.",
                      "additionalProperties": false
                    },
                    "party": {
                      "description": "A reference from one resource to another.",
                      "additionalProperties": false
                    },
                    "signature": {
                      "description": "Legally binding Contract DSIG signature contents in Base64.",
                      "items": {
                        "description": "A signature along with supporting context. The signature may be a digital signature that is cryptographic in nature, or some other signature acceptable to the domain. This other signature may be as simple as a graphical image representing a hand-written signature, or a signature ceremony Different signature approaches have different utilities.",
                        "additionalProperties": false
                      },
                      "type": "array"
                    }
                  },
                  "additionalProperties": false,
                  "required": [
                    "signature",
                    "type",
                    "party"
                  ]
                },
                "type": "array"
              },
              "friendly": {
                "description": "The \"patient friendly language\" versionof the Contract in whole or in parts. \"Patient friendly language\" means the representation of the Contract and Contract Provisions in a manner that is readily accessible and understandable by a layperson in accordance with best practices for communication styles that ensure that those agreeing to or signing the Contract understand the roles, actions, obligations, responsibilities, and implication of the agreement.",
                "items": {
                  "description": "Legally enforceable, formally recorded unilateral or bilateral directive i.e., a policy or agreement.",
                  "properties": {
                    "id": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "type": "array"
                    },
                    "modifierExtension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                      "type": "array"
                    },
                    "contentAttachment": {
                      "description": "For referring to data content defined in other formats.",
                      "additionalProperties": false
                    },
                    "contentReference": {
                      "description": "A reference from one resource to another.",
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                },
                "type": "array"
              },
              "legal": {
                "description": "List of Legal expressions or representations of this Contract.",
                "items": {
                  "description": "Legally enforceable, formally recorded unilateral or bilateral directive i.e., a policy or agreement.",
                  "properties": {
                    "id": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "type": "array"
                    },
                    "modifierExtension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                      "type": "array"
                    },
                    "contentAttachment": {
                      "description": "For referring to data content defined in other formats.",
                      "additionalProperties": false
                    },
                    "contentReference": {
                      "description": "A reference from one resource to another.",
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                },
                "type": "array"
              },
              "rule": {
                "description": "List of Computable Policy Rule Language Representations of this Contract.",
                "items": {
                  "description": "Legally enforceable, formally recorded unilateral or bilateral directive i.e., a policy or agreement.",
                  "properties": {
                    "id": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "type": "array"
                    },
                    "modifierExtension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                      "type": "array"
                    },
                    "contentAttachment": {
                      "description": "For referring to data content defined in other formats.",
                      "additionalProperties": false
                    },
                    "contentReference": {
                      "description": "A reference from one resource to another.",
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                },
                "type": "array"
              },
              "legallyBindingAttachment": {
                "description": "For referring to data content defined in other formats.",
                "additionalProperties": false
              },
              "legallyBindingReference": {
                "description": "A reference from one resource to another.",
                "additionalProperties": false
              }
            },
            "additionalProperties": false,
            "required": [
              "resourceType"
            ]
          },
          {
            "description": "Financial instrument which may be used to reimburse or pay for health care products and services. Includes both insurance and self-payment.",
            "properties": {
              "resourceType": {
                "description": "This is a Coverage resource",
                "const": "Coverage"
              },
              "id": {
                "description": "The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.",
                "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                "type": "string"
              },
              "meta": {
                "description": "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
                "additionalProperties": false
              },
              "implicitRules": {
                "pattern": "^\\S*$",
                "type": "string",
                "description": "String of characters used to identify a name or a resource"
              },
              "_implicitRules": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "language": {
                "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                "type": "string",
                "description": "A string which has at least one character and no leading or trailing whitespace and where there is no whitespace other than single spaces in the contents"
              },
              "_language": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "text": {
                "description": "A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it \"clinically safe\" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.",
                "additionalProperties": false
              },
              "contained": {
                "description": "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope.",
                "type": "array"
              },
              "extension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                "type": "array"
              },
              "modifierExtension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                "type": "array"
              },
              "identifier": {
                "description": "A unique identifier assigned to this coverage.",
                "type": "array"
              },
              "status": {
                "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                "type": "string",
                "description": "A string which has at least one character and no leading or trailing whitespace and where there is no whitespace other than single spaces in the contents"
              },
              "_status": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "type": {
                "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                "additionalProperties": false
              },
              "policyHolder": {
                "description": "A reference from one resource to another.",
                "additionalProperties": false
              },
              "subscriber": {
                "description": "A reference from one resource to another.",
                "additionalProperties": false
              },
              "subscriberId": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "_subscriberId": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "beneficiary": {
                "description": "A reference from one resource to another.",
                "additionalProperties": false
              },
              "dependent": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "_dependent": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "relationship": {
                "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                "additionalProperties": false
              },
              "period": {
                "description": "A time period defined by a start and end date and optionally time.",
                "additionalProperties": false
              },
              "payor": {
                "description": "The program or plan underwriter or payor including both insurance and non-insurance agreements, such as patient-pay agreements.",
                "type": "array"
              },
              "class": {
                "description": "A suite of underwriter specific classifiers.",
                "items": {
                  "description": "Financial instrument which may be used to reimburse or pay for health care products and services. Includes both insurance and self-payment.",
                  "properties": {
                    "id": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "type": "array"
                    },
                    "modifierExtension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                      "type": "array"
                    },
                    "type": {
                      "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                      "additionalProperties": false
                    },
                    "value": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "_value": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "name": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "_name": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false,
                  "required": [
                    "type"
                  ]
                },
                "type": "array"
              },
              "order": {
                "pattern": "^[1-9][0-9]*$",
                "type": "number",
                "description": "An integer with a value that is positive (e.g. >0)"
              },
              "_order": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "network": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "_network": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "costToBeneficiary": {
                "description": "A suite of codes indicating the cost category and associated amount which have been detailed in the policy and may have been  included on the health card.",
                "items": {
                  "description": "Financial instrument which may be used to reimburse or pay for health care products and services. Includes both insurance and self-payment.",
                  "properties": {
                    "id": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "type": "array"
                    },
                    "modifierExtension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                      "type": "array"
                    },
                    "type": {
                      "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                      "additionalProperties": false
                    },
                    "valueQuantity": {
                      "description": "The amount due from the patient for the cost category.",
                      "additionalProperties": false
                    },
                    "valueMoney": {
                      "description": "The amount due from the patient for the cost category.",
                      "additionalProperties": false
                    },
                    "exception": {
                      "description": "A suite of codes indicating exceptions or reductions to patient costs and their effective periods.",
                      "items": {
                        "description": "Financial instrument which may be used to reimburse or pay for health care products and services. Includes both insurance and self-payment.",
                        "properties": {
                          "id": {
                            "pattern": "^[ \\r\\n\\t\\S]+$",
                            "type": "string",
                            "description": "A sequence of Unicode characters"
                          },
                          "extension": {
                            "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                            "type": "array"
                          },
                          "modifierExtension": {
                            "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                            "type": "array"
                          },
                          "type": {
                            "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                            "additionalProperties": false
                          },
                          "period": {
                            "description": "A time period defined by a start and end date and optionally time.",
                            "additionalProperties": false
                          }
                        },
                        "additionalProperties": false,
                        "required": [
                          "type"
                        ]
                      },
                      "type": "array"
                    }
                  },
                  "additionalProperties": false
                },
                "type": "array"
              },
              "subrogation": {
                "description": "When 'subrogation=true' this insurance instance has been included not for adjudication but to provide insurers with the details to recover costs.",
                "pattern": "^true|false$",
                "type": "boolean"
              },
              "_subrogation": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "contract": {
                "description": "The policy(s) which constitute this insurance coverage.",
                "type": "array"
              }
            },
            "additionalProperties": false,
            "required": [
              "payor",
              "beneficiary",
              "resourceType"
            ]
          },
          {
            "description": "The CoverageEligibilityRequest provides patient and insurance coverage information to an insurer for them to respond, in the form of an CoverageEligibilityResponse, with information regarding whether the stated coverage is valid and in-force and optionally to provide the insurance details of the policy.",
            "properties": {
              "resourceType": {
                "description": "This is a CoverageEligibilityRequest resource",
                "const": "CoverageEligibilityRequest"
              },
              "id": {
                "description": "The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.",
                "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                "type": "string"
              },
              "meta": {
                "description": "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
                "additionalProperties": false
              },
              "implicitRules": {
                "pattern": "^\\S*$",
                "type": "string",
                "description": "String of characters used to identify a name or a resource"
              },
              "_implicitRules": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "language": {
                "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                "type": "string",
                "description": "A string which has at least one character and no leading or trailing whitespace and where there is no whitespace other than single spaces in the contents"
              },
              "_language": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "text": {
                "description": "A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it \"clinically safe\" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.",
                "additionalProperties": false
              },
              "contained": {
                "description": "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope.",
                "type": "array"
              },
              "extension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                "type": "array"
              },
              "modifierExtension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                "type": "array"
              },
              "identifier": {
                "description": "A unique identifier assigned to this coverage eligiblity request.",
                "type": "array"
              },
              "status": {
                "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                "type": "string",
                "description": "A string which has at least one character and no leading or trailing whitespace and where there is no whitespace other than single spaces in the contents"
              },
              "_status": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "priority": {
                "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                "additionalProperties": false
              },
              "purpose": {
                "description": "Code to specify whether requesting: prior authorization requirements for some service categories or billing codes; benefits for coverages specified or discovered; discovery and return of coverages for the patient; and/or validation that the specified coverage is in-force at the date/period specified or 'now' if not specified.",
                "items": {
                  "enum": [
                    "auth-requirements",
                    "benefits",
                    "discovery",
                    "validation"
                  ]
                },
                "type": "array"
              },
              "_purpose": {
                "description": "Extensions for purpose",
                "type": "array"
              },
              "patient": {
                "description": "A reference from one resource to another.",
                "additionalProperties": false
              },
              "servicedDate": {
                "description": "The date or dates when the enclosed suite of services were performed or completed.",
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                "type": "string"
              },
              "_servicedDate": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "servicedPeriod": {
                "description": "A time period defined by a start and end date and optionally time.",
                "additionalProperties": false
              },
              "created": {
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                "type": "string",
                "description": "A date, date-time or partial date (e.g. just year or year + month).  If hours and minutes are specified, a time zone SHALL be populated. The format is a union of the schema types gYear, gYearMonth, date and dateTime. Seconds must be provided due to schema type constraints but may be zero-filled and may be ignored.                 Dates SHALL be valid dates."
              },
              "_created": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "enterer": {
                "description": "A reference from one resource to another.",
                "additionalProperties": false
              },
              "provider": {
                "description": "A reference from one resource to another.",
                "additionalProperties": false
              },
              "insurer": {
                "description": "A reference from one resource to another.",
                "additionalProperties": false
              },
              "facility": {
                "description": "A reference from one resource to another.",
                "additionalProperties": false
              },
              "supportingInfo": {
                "description": "Additional information codes regarding exceptions, special considerations, the condition, situation, prior or concurrent issues.",
                "items": {
                  "description": "The CoverageEligibilityRequest provides patient and insurance coverage information to an insurer for them to respond, in the form of an CoverageEligibilityResponse, with information regarding whether the stated coverage is valid and in-force and optionally to provide the insurance details of the policy.",
                  "properties": {
                    "id": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "type": "array"
                    },
                    "modifierExtension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                      "type": "array"
                    },
                    "sequence": {
                      "pattern": "^[1-9][0-9]*$",
                      "type": "number",
                      "description": "An integer with a value that is positive (e.g. >0)"
                    },
                    "_sequence": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "information": {
                      "description": "A reference from one resource to another.",
                      "additionalProperties": false
                    },
                    "appliesToAll": {
                      "description": "The supporting materials are applicable for all detail items, product/servce categories and specific billing codes.",
                      "pattern": "^true|false$",
                      "type": "boolean"
                    },
                    "_appliesToAll": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false,
                  "required": [
                    "information"
                  ]
                },
                "type": "array"
              },
              "insurance": {
                "description": "Financial instruments for reimbursement for the health care products and services.",
                "items": {
                  "description": "The CoverageEligibilityRequest provides patient and insurance coverage information to an insurer for them to respond, in the form of an CoverageEligibilityResponse, with information regarding whether the stated coverage is valid and in-force and optionally to provide the insurance details of the policy.",
                  "properties": {
                    "id": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "type": "array"
                    },
                    "modifierExtension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                      "type": "array"
                    },
                    "focal": {
                      "description": "A flag to indicate that this Coverage is to be used for evaluation of this request when set to true.",
                      "pattern": "^true|false$",
                      "type": "boolean"
                    },
                    "_focal": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "coverage": {
                      "description": "A reference from one resource to another.",
                      "additionalProperties": false
                    },
                    "businessArrangement": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "_businessArrangement": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false,
                  "required": [
                    "coverage"
                  ]
                },
                "type": "array"
              },
              "item": {
                "description": "Service categories or billable services for which benefit details and/or an authorization prior to service delivery may be required by the payor.",
                "items": {
                  "description": "The CoverageEligibilityRequest provides patient and insurance coverage information to an insurer for them to respond, in the form of an CoverageEligibilityResponse, with information regarding whether the stated coverage is valid and in-force and optionally to provide the insurance details of the policy.",
                  "properties": {
                    "id": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "type": "array"
                    },
                    "modifierExtension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                      "type": "array"
                    },
                    "supportingInfoSequence": {
                      "description": "Exceptions, special conditions and supporting information applicable for this service or product line.",
                      "type": "array"
                    },
                    "_supportingInfoSequence": {
                      "description": "Extensions for supportingInfoSequence",
                      "type": "array"
                    },
                    "category": {
                      "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                      "additionalProperties": false
                    },
                    "productOrService": {
                      "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                      "additionalProperties": false
                    },
                    "modifier": {
                      "description": "Item typification or modifiers codes to convey additional context for the product or service.",
                      "type": "array"
                    },
                    "provider": {
                      "description": "A reference from one resource to another.",
                      "additionalProperties": false
                    },
                    "quantity": {
                      "description": "The number of repetitions of a service or product.",
                      "additionalProperties": false
                    },
                    "unitPrice": {
                      "description": "The amount charged to the patient by the provider for a single unit.",
                      "additionalProperties": false
                    },
                    "facility": {
                      "description": "A reference from one resource to another.",
                      "additionalProperties": false
                    },
                    "diagnosis": {
                      "description": "Patient diagnosis for which care is sought.",
                      "items": {
                        "description": "The CoverageEligibilityRequest provides patient and insurance coverage information to an insurer for them to respond, in the form of an CoverageEligibilityResponse, with information regarding whether the stated coverage is valid and in-force and optionally to provide the insurance details of the policy.",
                        "properties": {
                          "id": {
                            "pattern": "^[ \\r\\n\\t\\S]+$",
                            "type": "string",
                            "description": "A sequence of Unicode characters"
                          },
                          "extension": {
                            "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                            "type": "array"
                          },
                          "modifierExtension": {
                            "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                            "type": "array"
                          },
                          "diagnosisCodeableConcept": {
                            "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                            "additionalProperties": false
                          },
                          "diagnosisReference": {
                            "description": "A reference from one resource to another.",
                            "additionalProperties": false
                          }
                        },
                        "additionalProperties": false
                      },
                      "type": "array"
                    },
                    "detail": {
                      "description": "The plan/proposal/order describing the proposed service in detail.",
                      "type": "array"
                    }
                  },
                  "additionalProperties": false
                },
                "type": "array"
              }
            },
            "additionalProperties": false,
            "required": [
              "patient",
              "insurer",
              "resourceType"
            ]
          },
          {
            "description": "This resource provides eligibility and plan details from the processing of an CoverageEligibilityRequest resource.",
            "properties": {
              "resourceType": {
                "description": "This is a CoverageEligibilityResponse resource",
                "const": "CoverageEligibilityResponse"
              },
              "id": {
                "description": "The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.",
                "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                "type": "string"
              },
              "meta": {
                "description": "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
                "additionalProperties": false
              },
              "implicitRules": {
                "pattern": "^\\S*$",
                "type": "string",
                "description": "String of characters used to identify a name or a resource"
              },
              "_implicitRules": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "language": {
                "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                "type": "string",
                "description": "A string which has at least one character and no leading or trailing whitespace and where there is no whitespace other than single spaces in the contents"
              },
              "_language": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "text": {
                "description": "A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it \"clinically safe\" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.",
                "additionalProperties": false
              },
              "contained": {
                "description": "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope.",
                "type": "array"
              },
              "extension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                "type": "array"
              },
              "modifierExtension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                "type": "array"
              },
              "identifier": {
                "description": "A unique identifier assigned to this coverage eligiblity request.",
                "type": "array"
              },
              "status": {
                "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                "type": "string",
                "description": "A string which has at least one character and no leading or trailing whitespace and where there is no whitespace other than single spaces in the contents"
              },
              "_status": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "purpose": {
                "description": "Code to specify whether requesting: prior authorization requirements for some service categories or billing codes; benefits for coverages specified or discovered; discovery and return of coverages for the patient; and/or validation that the specified coverage is in-force at the date/period specified or 'now' if not specified.",
                "items": {
                  "enum": [
                    "auth-requirements",
                    "benefits",
                    "discovery",
                    "validation"
                  ]
                },
                "type": "array"
              },
              "_purpose": {
                "description": "Extensions for purpose",
                "type": "array"
              },
              "patient": {
                "description": "A reference from one resource to another.",
                "additionalProperties": false
              },
              "servicedDate": {
                "description": "The date or dates when the enclosed suite of services were performed or completed.",
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                "type": "string"
              },
              "_servicedDate": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "servicedPeriod": {
                "description": "A time period defined by a start and end date and optionally time.",
                "additionalProperties": false
              },
              "created": {
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                "type": "string",
                "description": "A date, date-time or partial date (e.g. just year or year + month).  If hours and minutes are specified, a time zone SHALL be populated. The format is a union of the schema types gYear, gYearMonth, date and dateTime. Seconds must be provided due to schema type constraints but may be zero-filled and may be ignored.                 Dates SHALL be valid dates."
              },
              "_created": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "requestor": {
                "description": "A reference from one resource to another.",
                "additionalProperties": false
              },
              "request": {
                "description": "A reference from one resource to another.",
                "additionalProperties": false
              },
              "outcome": {
                "description": "The outcome of the request processing.",
                "enum": [
                  "queued",
                  "complete",
                  "error",
                  "partial"
                ]
              },
              "_outcome": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "disposition": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "_disposition": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "insurer": {
                "description": "A reference from one resource to another.",
                "additionalProperties": false
              },
              "insurance": {
                "description": "Financial instruments for reimbursement for the health care products and services.",
                "items": {
                  "description": "This resource provides eligibility and plan details from the processing of an CoverageEligibilityRequest resource.",
                  "properties": {
                    "id": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "type": "array"
                    },
                    "modifierExtension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                      "type": "array"
                    },
                    "coverage": {
                      "description": "A reference from one resource to another.",
                      "additionalProperties": false
                    },
                    "inforce": {
                      "description": "Flag indicating if the coverage provided is inforce currently if no service date(s) specified or for the whole duration of the service dates.",
                      "pattern": "^true|false$",
                      "type": "boolean"
                    },
                    "_inforce": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "benefitPeriod": {
                      "description": "A time period defined by a start and end date and optionally time.",
                      "additionalProperties": false
                    },
                    "item": {
                      "description": "Benefits and optionally current balances, and authorization details by category or service.",
                      "items": {
                        "description": "This resource provides eligibility and plan details from the processing of an CoverageEligibilityRequest resource.",
                        "properties": {
                          "id": {
                            "pattern": "^[ \\r\\n\\t\\S]+$",
                            "type": "string",
                            "description": "A sequence of Unicode characters"
                          },
                          "extension": {
                            "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                            "type": "array"
                          },
                          "modifierExtension": {
                            "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                            "type": "array"
                          },
                          "category": {
                            "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                            "additionalProperties": false
                          },
                          "productOrService": {
                            "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                            "additionalProperties": false
                          },
                          "modifier": {
                            "description": "Item typification or modifiers codes to convey additional context for the product or service.",
                            "type": "array"
                          },
                          "provider": {
                            "description": "A reference from one resource to another.",
                            "additionalProperties": false
                          },
                          "excluded": {
                            "description": "True if the indicated class of service is excluded from the plan, missing or False indicates the product or service is included in the coverage.",
                            "pattern": "^true|false$",
                            "type": "boolean"
                          },
                          "_excluded": {
                            "description": "Base definition for all elements in a resource.",
                            "additionalProperties": false
                          },
                          "name": {
                            "pattern": "^[ \\r\\n\\t\\S]+$",
                            "type": "string",
                            "description": "A sequence of Unicode characters"
                          },
                          "_name": {
                            "description": "Base definition for all elements in a resource.",
                            "additionalProperties": false
                          },
                          "description": {
                            "pattern": "^[ \\r\\n\\t\\S]+$",
                            "type": "string",
                            "description": "A sequence of Unicode characters"
                          },
                          "_description": {
                            "description": "Base definition for all elements in a resource.",
                            "additionalProperties": false
                          },
                          "network": {
                            "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                            "additionalProperties": false
                          },
                          "unit": {
                            "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                            "additionalProperties": false
                          },
                          "term": {
                            "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                            "additionalProperties": false
                          },
                          "benefit": {
                            "description": "Benefits used to date.",
                            "items": {
                              "description": "This resource provides eligibility and plan details from the processing of an CoverageEligibilityRequest resource.",
                              "properties": {
                                "id": {
                                  "pattern": "^[ \\r\\n\\t\\S]+$",
                                  "type": "string",
                                  "description": "A sequence of Unicode characters"
                                },
                                "extension": {
                                  "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                                  "type": "array"
                                },
                                "modifierExtension": {
                                  "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                                  "type": "array"
                                },
                                "type": {
                                  "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                                  "additionalProperties": false
                                },
                                "allowedUnsignedInt": {
                                  "description": "The quantity of the benefit which is permitted under the coverage.",
                                  "pattern": "^[0]|([1-9][0-9]*)$",
                                  "type": "number"
                                },
                                "_allowedUnsignedInt": {
                                  "description": "Base definition for all elements in a resource.",
                                  "additionalProperties": false
                                },
                                "allowedString": {
                                  "description": "The quantity of the benefit which is permitted under the coverage.",
                                  "pattern": "^[ \\r\\n\\t\\S]+$",
                                  "type": "string"
                                },
                                "_allowedString": {
                                  "description": "Base definition for all elements in a resource.",
                                  "additionalProperties": false
                                },
                                "allowedMoney": {
                                  "description": "The quantity of the benefit which is permitted under the coverage.",
                                  "additionalProperties": false
                                },
                                "usedUnsignedInt": {
                                  "description": "The quantity of the benefit which have been consumed to date.",
                                  "pattern": "^[0]|([1-9][0-9]*)$",
                                  "type": "number"
                                },
                                "_usedUnsignedInt": {
                                  "description": "Base definition for all elements in a resource.",
                                  "additionalProperties": false
                                },
                                "usedString": {
                                  "description": "The quantity of the benefit which have been consumed to date.",
                                  "pattern": "^[ \\r\\n\\t\\S]+$",
                                  "type": "string"
                                },
                                "_usedString": {
                                  "description": "Base definition for all elements in a resource.",
                                  "additionalProperties": false
                                },
                                "usedMoney": {
                                  "description": "The quantity of the benefit which have been consumed to date.",
                                  "additionalProperties": false
                                }
                              },
                              "additionalProperties": false,
                              "required": [
                                "type"
                              ]
                            },
                            "type": "array"
                          },
                          "authorizationRequired": {
                            "description": "A boolean flag indicating whether a preauthorization is required prior to actual service delivery.",
                            "pattern": "^true|false$",
                            "type": "boolean"
                          },
                          "_authorizationRequired": {
                            "description": "Base definition for all elements in a resource.",
                            "additionalProperties": false
                          },
                          "authorizationSupporting": {
                            "description": "Codes or comments regarding information or actions associated with the preauthorization.",
                            "type": "array"
                          },
                          "authorizationUrl": {
                            "pattern": "^\\S*$",
                            "type": "string",
                            "description": "String of characters used to identify a name or a resource"
                          },
                          "_authorizationUrl": {
                            "description": "Base definition for all elements in a resource.",
                            "additionalProperties": false
                          }
                        },
                        "additionalProperties": false
                      },
                      "type": "array"
                    }
                  },
                  "additionalProperties": false,
                  "required": [
                    "coverage"
                  ]
                },
                "type": "array"
              },
              "preAuthRef": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "_preAuthRef": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "form": {
                "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                "additionalProperties": false
              },
              "error": {
                "description": "Errors encountered during the processing of the request.",
                "items": {
                  "description": "This resource provides eligibility and plan details from the processing of an CoverageEligibilityRequest resource.",
                  "properties": {
                    "id": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "type": "array"
                    },
                    "modifierExtension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                      "type": "array"
                    },
                    "code": {
                      "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false,
                  "required": [
                    "code"
                  ]
                },
                "type": "array"
              }
            },
            "additionalProperties": false,
            "required": [
              "request",
              "patient",
              "insurer",
              "resourceType"
            ]
          },
          {
            "description": "Indicates an actual or potential clinical issue with or between one or more active or proposed clinical actions for a patient; e.g. Drug-drug interaction, Ineffective treatment frequency, Procedure-condition conflict, etc.",
            "properties": {
              "resourceType": {
                "description": "This is a DetectedIssue resource",
                "const": "DetectedIssue"
              },
              "id": {
                "description": "The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.",
                "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                "type": "string"
              },
              "meta": {
                "description": "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
                "additionalProperties": false
              },
              "implicitRules": {
                "pattern": "^\\S*$",
                "type": "string",
                "description": "String of characters used to identify a name or a resource"
              },
              "_implicitRules": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "language": {
                "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                "type": "string",
                "description": "A string which has at least one character and no leading or trailing whitespace and where there is no whitespace other than single spaces in the contents"
              },
              "_language": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "text": {
                "description": "A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it \"clinically safe\" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.",
                "additionalProperties": false
              },
              "contained": {
                "description": "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope.",
                "type": "array"
              },
              "extension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                "type": "array"
              },
              "modifierExtension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                "type": "array"
              },
              "identifier": {
                "description": "Business identifier associated with the detected issue record.",
                "type": "array"
              },
              "status": {
                "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                "type": "string",
                "description": "A string which has at least one character and no leading or trailing whitespace and where there is no whitespace other than single spaces in the contents"
              },
              "_status": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "code": {
                "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                "additionalProperties": false
              },
              "severity": {
                "description": "Indicates the degree of importance associated with the identified issue based on the potential impact on the patient.",
                "enum": [
                  "high",
                  "moderate",
                  "low"
                ]
              },
              "_severity": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "patient": {
                "description": "A reference from one resource to another.",
                "additionalProperties": false
              },
              "identifiedDateTime": {
                "description": "The date or period when the detected issue was initially identified.",
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                "type": "string"
              },
              "_identifiedDateTime": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "identifiedPeriod": {
                "description": "A time period defined by a start and end date and optionally time.",
                "additionalProperties": false
              },
              "author": {
                "description": "A reference from one resource to another.",
                "additionalProperties": false
              },
              "implicated": {
                "description": "Indicates the resource representing the current activity or proposed activity that is potentially problematic.",
                "type": "array"
              },
              "evidence": {
                "description": "Supporting evidence or manifestations that provide the basis for identifying the detected issue such as a GuidanceResponse or MeasureReport.",
                "items": {
                  "description": "Indicates an actual or potential clinical issue with or between one or more active or proposed clinical actions for a patient; e.g. Drug-drug interaction, Ineffective treatment frequency, Procedure-condition conflict, etc.",
                  "properties": {
                    "id": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "type": "array"
                    },
                    "modifierExtension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                      "type": "array"
                    },
                    "code": {
                      "description": "A manifestation that led to the recording of this detected issue.",
                      "type": "array"
                    },
                    "detail": {
                      "description": "Links to resources that constitute evidence for the detected issue such as a GuidanceResponse or MeasureReport.",
                      "type": "array"
                    }
                  },
                  "additionalProperties": false
                },
                "type": "array"
              },
              "detail": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "_detail": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "reference": {
                "pattern": "^\\S*$",
                "type": "string",
                "description": "String of characters used to identify a name or a resource"
              },
              "_reference": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "mitigation": {
                "description": "Indicates an action that has been taken or is committed to reduce or eliminate the likelihood of the risk identified by the detected issue from manifesting.  Can also reflect an observation of known mitigating factors that may reduce/eliminate the need for any action.",
                "items": {
                  "description": "Indicates an actual or potential clinical issue with or between one or more active or proposed clinical actions for a patient; e.g. Drug-drug interaction, Ineffective treatment frequency, Procedure-condition conflict, etc.",
                  "properties": {
                    "id": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "type": "array"
                    },
                    "modifierExtension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                      "type": "array"
                    },
                    "action": {
                      "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                      "additionalProperties": false
                    },
                    "date": {
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                      "type": "string",
                      "description": "A date, date-time or partial date (e.g. just year or year + month).  If hours and minutes are specified, a time zone SHALL be populated. The format is a union of the schema types gYear, gYearMonth, date and dateTime. Seconds must be provided due to schema type constraints but may be zero-filled and may be ignored.                 Dates SHALL be valid dates."
                    },
                    "_date": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "author": {
                      "description": "A reference from one resource to another.",
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false,
                  "required": [
                    "action"
                  ]
                },
                "type": "array"
              }
            },
            "additionalProperties": false,
            "required": [
              "resourceType"
            ]
          },
          {
            "description": "A type of a manufactured item that is used in the provision of healthcare without being substantially changed through that activity. The device may be a medical or non-medical device.",
            "properties": {
              "resourceType": {
                "description": "This is a Device resource",
                "const": "Device"
              },
              "id": {
                "description": "The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.",
                "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                "type": "string"
              },
              "meta": {
                "description": "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
                "additionalProperties": false
              },
              "implicitRules": {
                "pattern": "^\\S*$",
                "type": "string",
                "description": "String of characters used to identify a name or a resource"
              },
              "_implicitRules": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "language": {
                "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                "type": "string",
                "description": "A string which has at least one character and no leading or trailing whitespace and where there is no whitespace other than single spaces in the contents"
              },
              "_language": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "text": {
                "description": "A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it \"clinically safe\" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.",
                "additionalProperties": false
              },
              "contained": {
                "description": "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope.",
                "type": "array"
              },
              "extension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                "type": "array"
              },
              "modifierExtension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                "type": "array"
              },
              "identifier": {
                "description": "Unique instance identifiers assigned to a device by manufacturers other organizations or owners.",
                "type": "array"
              },
              "definition": {
                "description": "A reference from one resource to another.",
                "additionalProperties": false
              },
              "udiCarrier": {
                "description": "Unique device identifier (UDI) assigned to device label or package.  Note that the Device may include multiple udiCarriers as it either may include just the udiCarrier for the jurisdiction it is sold, or for multiple jurisdictions it could have been sold.",
                "items": {
                  "description": "A type of a manufactured item that is used in the provision of healthcare without being substantially changed through that activity. The device may be a medical or non-medical device.",
                  "properties": {
                    "id": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "type": "array"
                    },
                    "modifierExtension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                      "type": "array"
                    },
                    "deviceIdentifier": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "_deviceIdentifier": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "issuer": {
                      "pattern": "^\\S*$",
                      "type": "string",
                      "description": "String of characters used to identify a name or a resource"
                    },
                    "_issuer": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "jurisdiction": {
                      "pattern": "^\\S*$",
                      "type": "string",
                      "description": "String of characters used to identify a name or a resource"
                    },
                    "_jurisdiction": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "carrierAIDC": {
                      "description": "The full UDI carrier of the Automatic Identification and Data Capture (AIDC) technology representation of the barcode string as printed on the packaging of the device - e.g., a barcode or RFID.   Because of limitations on character sets in XML and the need to round-trip JSON data through XML, AIDC Formats *SHALL* be base64 encoded.",
                      "type": "string"
                    },
                    "_carrierAIDC": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "carrierHRF": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "_carrierHRF": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "entryType": {
                      "description": "A coded entry to indicate how the data was entered.",
                      "enum": [
                        "barcode",
                        "rfid",
                        "manual",
                        "card",
                        "self-reported",
                        "unknown"
                      ]
                    },
                    "_entryType": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                },
                "type": "array"
              },
              "status": {
                "description": "Status of the Device availability.",
                "enum": [
                  "active",
                  "inactive",
                  "entered-in-error",
                  "unknown"
                ]
              },
              "_status": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "statusReason": {
                "description": "Reason for the dtatus of the Device availability.",
                "type": "array"
              },
              "distinctIdentifier": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "_distinctIdentifier": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "manufacturer": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "_manufacturer": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "manufactureDate": {
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                "type": "string",
                "description": "A date, date-time or partial date (e.g. just year or year + month).  If hours and minutes are specified, a time zone SHALL be populated. The format is a union of the schema types gYear, gYearMonth, date and dateTime. Seconds must be provided due to schema type constraints but may be zero-filled and may be ignored.                 Dates SHALL be valid dates."
              },
              "_manufactureDate": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "expirationDate": {
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                "type": "string",
                "description": "A date, date-time or partial date (e.g. just year or year + month).  If hours and minutes are specified, a time zone SHALL be populated. The format is a union of the schema types gYear, gYearMonth, date and dateTime. Seconds must be provided due to schema type constraints but may be zero-filled and may be ignored.                 Dates SHALL be valid dates."
              },
              "_expirationDate": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "lotNumber": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "_lotNumber": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "serialNumber": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "_serialNumber": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "deviceName": {
                "description": "This represents the manufacturer's name of the device as provided by the device, from a UDI label, or by a person describing the Device.  This typically would be used when a person provides the name(s) or when the device represents one of the names available from DeviceDefinition.",
                "items": {
                  "description": "A type of a manufactured item that is used in the provision of healthcare without being substantially changed through that activity. The device may be a medical or non-medical device.",
                  "properties": {
                    "id": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "type": "array"
                    },
                    "modifierExtension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                      "type": "array"
                    },
                    "name": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "_name": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "type": {
                      "description": "The type of deviceName.\nUDILabelName | UserFriendlyName | PatientReportedName | ManufactureDeviceName | ModelName.",
                      "enum": [
                        "udi-label-name",
                        "user-friendly-name",
                        "patient-reported-name",
                        "manufacturer-name",
                        "model-name",
                        "other"
                      ]
                    },
                    "_type": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                },
                "type": "array"
              },
              "modelNumber": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "_modelNumber": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "partNumber": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "_partNumber": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "type": {
                "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                "additionalProperties": false
              },
              "specialization": {
                "description": "The capabilities supported on a  device, the standards to which the device conforms for a particular purpose, and used for the communication.",
                "items": {
                  "description": "A type of a manufactured item that is used in the provision of healthcare without being substantially changed through that activity. The device may be a medical or non-medical device.",
                  "properties": {
                    "id": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "type": "array"
                    },
                    "modifierExtension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                      "type": "array"
                    },
                    "systemType": {
                      "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                      "additionalProperties": false
                    },
                    "version": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "_version": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false,
                  "required": [
                    "systemType"
                  ]
                },
                "type": "array"
              },
              "version": {
                "description": "The actual design of the device or software version running on the device.",
                "items": {
                  "description": "A type of a manufactured item that is used in the provision of healthcare without being substantially changed through that activity. The device may be a medical or non-medical device.",
                  "properties": {
                    "id": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "type": "array"
                    },
                    "modifierExtension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                      "type": "array"
                    },
                    "type": {
                      "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                      "additionalProperties": false
                    },
                    "component": {
                      "description": "An identifier - identifies some entity uniquely and unambiguously. Typically this is used for business identifiers.",
                      "additionalProperties": false
                    },
                    "value": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "_value": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                },
                "type": "array"
              },
              "property": {
                "description": "The actual configuration settings of a device as it actually operates, e.g., regulation status, time properties.",
                "items": {
                  "description": "A type of a manufactured item that is used in the provision of healthcare without being substantially changed through that activity. The device may be a medical or non-medical device.",
                  "properties": {
                    "id": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "type": "array"
                    },
                    "modifierExtension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                      "type": "array"
                    },
                    "type": {
                      "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                      "additionalProperties": false
                    },
                    "valueQuantity": {
                      "description": "Property value as a quantity.",
                      "items": {
                        "description": "A measured amount (or an amount that can potentially be measured). Note that measured amounts include amounts that are not precisely quantified, including amounts involving arbitrary units and floating currencies.",
                        "additionalProperties": false
                      },
                      "type": "array"
                    },
                    "valueCode": {
                      "description": "Property value as a code, e.g., NTP4 (synced to NTP).",
                      "type": "array"
                    }
                  },
                  "additionalProperties": false,
                  "required": [
                    "type"
                  ]
                },
                "type": "array"
              },
              "patient": {
                "description": "A reference from one resource to another.",
                "additionalProperties": false
              },
              "owner": {
                "description": "A reference from one resource to another.",
                "additionalProperties": false
              },
              "contact": {
                "description": "Contact details for an organization or a particular human that is responsible for the device.",
                "type": "array"
              },
              "location": {
                "description": "A reference from one resource to another.",
                "additionalProperties": false
              },
              "url": {
                "pattern": "^\\S*$",
                "type": "string",
                "description": "String of characters used to identify a name or a resource"
              },
              "_url": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "note": {
                "description": "Descriptive information, usage information or implantation information that is not captured in an existing element.",
                "type": "array"
              },
              "safety": {
                "description": "Provides additional safety characteristics about a medical device.  For example devices containing latex.",
                "type": "array"
              },
              "parent": {
                "description": "A reference from one resource to another.",
                "additionalProperties": false
              }
            },
            "additionalProperties": false,
            "required": [
              "resourceType"
            ]
          },
          {
            "description": "The characteristics, operational status and capabilities of a medical-related component of a medical device.",
            "properties": {
              "resourceType": {
                "description": "This is a DeviceDefinition resource",
                "const": "DeviceDefinition"
              },
              "id": {
                "description": "The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.",
                "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                "type": "string"
              },
              "meta": {
                "description": "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
                "additionalProperties": false
              },
              "implicitRules": {
                "pattern": "^\\S*$",
                "type": "string",
                "description": "String of characters used to identify a name or a resource"
              },
              "_implicitRules": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "language": {
                "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                "type": "string",
                "description": "A string which has at least one character and no leading or trailing whitespace and where there is no whitespace other than single spaces in the contents"
              },
              "_language": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "text": {
                "description": "A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it \"clinically safe\" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.",
                "additionalProperties": false
              },
              "contained": {
                "description": "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope.",
                "type": "array"
              },
              "extension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                "type": "array"
              },
              "modifierExtension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                "type": "array"
              },
              "identifier": {
                "description": "Unique instance identifiers assigned to a device by the software, manufacturers, other organizations or owners. For example: handle ID.",
                "type": "array"
              },
              "udiDeviceIdentifier": {
                "description": "Unique device identifier (UDI) assigned to device label or package.  Note that the Device may include multiple udiCarriers as it either may include just the udiCarrier for the jurisdiction it is sold, or for multiple jurisdictions it could have been sold.",
                "items": {
                  "description": "The characteristics, operational status and capabilities of a medical-related component of a medical device.",
                  "properties": {
                    "id": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "type": "array"
                    },
                    "modifierExtension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                      "type": "array"
                    },
                    "deviceIdentifier": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "_deviceIdentifier": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "issuer": {
                      "pattern": "^\\S*$",
                      "type": "string",
                      "description": "String of characters used to identify a name or a resource"
                    },
                    "_issuer": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "jurisdiction": {
                      "pattern": "^\\S*$",
                      "type": "string",
                      "description": "String of characters used to identify a name or a resource"
                    },
                    "_jurisdiction": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                },
                "type": "array"
              },
              "manufacturerString": {
                "description": "A name of the manufacturer.",
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string"
              },
              "_manufacturerString": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "manufacturerReference": {
                "description": "A reference from one resource to another.",
                "additionalProperties": false
              },
              "deviceName": {
                "description": "A name given to the device to identify it.",
                "items": {
                  "description": "The characteristics, operational status and capabilities of a medical-related component of a medical device.",
                  "properties": {
                    "id": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "type": "array"
                    },
                    "modifierExtension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                      "type": "array"
                    },
                    "name": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "_name": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "type": {
                      "description": "The type of deviceName.\nUDILabelName | UserFriendlyName | PatientReportedName | ManufactureDeviceName | ModelName.",
                      "enum": [
                        "udi-label-name",
                        "user-friendly-name",
                        "patient-reported-name",
                        "manufacturer-name",
                        "model-name",
                        "other"
                      ]
                    },
                    "_type": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                },
                "type": "array"
              },
              "modelNumber": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "_modelNumber": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "type": {
                "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                "additionalProperties": false
              },
              "specialization": {
                "description": "The capabilities supported on a  device, the standards to which the device conforms for a particular purpose, and used for the communication.",
                "items": {
                  "description": "The characteristics, operational status and capabilities of a medical-related component of a medical device.",
                  "properties": {
                    "id": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "type": "array"
                    },
                    "modifierExtension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                      "type": "array"
                    },
                    "systemType": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "_systemType": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "version": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "_version": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                },
                "type": "array"
              },
              "version": {
                "description": "The available versions of the device, e.g., software versions.",
                "type": "array"
              },
              "_version": {
                "description": "Extensions for version",
                "type": "array"
              },
              "safety": {
                "description": "Safety characteristics of the device.",
                "type": "array"
              },
              "shelfLifeStorage": {
                "description": "Shelf Life and storage information.",
                "items": {
                  "description": "The shelf-life and storage information for a medicinal product item or container can be described using this class.",
                  "properties": {
                    "id": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "type": "array"
                    },
                    "modifierExtension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                      "type": "array"
                    },
                    "identifier": {
                      "description": "An identifier - identifies some entity uniquely and unambiguously. Typically this is used for business identifiers.",
                      "additionalProperties": false
                    },
                    "type": {
                      "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                      "additionalProperties": false
                    },
                    "period": {
                      "description": "A measured amount (or an amount that can potentially be measured). Note that measured amounts include amounts that are not precisely quantified, including amounts involving arbitrary units and floating currencies.",
                      "additionalProperties": false
                    },
                    "specialPrecautionsForStorage": {
                      "description": "Special precautions for storage, if any, can be specified using an appropriate controlled vocabulary The controlled term and the controlled term identifier shall be specified.",
                      "type": "array"
                    }
                  },
                  "additionalProperties": false,
                  "required": [
                    "period",
                    "type"
                  ]
                },
                "type": "array"
              },
              "physicalCharacteristics": {
                "description": "Dimensions, color etc.",
                "properties": {
                  "id": {
                    "pattern": "^[ \\r\\n\\t\\S]+$",
                    "type": "string",
                    "description": "A sequence of Unicode characters"
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "type": "array"
                  },
                  "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                    "type": "array"
                  },
                  "height": {
                    "description": "A measured amount (or an amount that can potentially be measured). Note that measured amounts include amounts that are not precisely quantified, including amounts involving arbitrary units and floating currencies.",
                    "additionalProperties": false
                  },
                  "width": {
                    "description": "A measured amount (or an amount that can potentially be measured). Note that measured amounts include amounts that are not precisely quantified, including amounts involving arbitrary units and floating currencies.",
                    "additionalProperties": false
                  },
                  "depth": {
                    "description": "A measured amount (or an amount that can potentially be measured). Note that measured amounts include amounts that are not precisely quantified, including amounts involving arbitrary units and floating currencies.",
                    "additionalProperties": false
                  },
                  "weight": {
                    "description": "A measured amount (or an amount that can potentially be measured). Note that measured amounts include amounts that are not precisely quantified, including amounts involving arbitrary units and floating currencies.",
                    "additionalProperties": false
                  },
                  "nominalVolume": {
                    "description": "A measured amount (or an amount that can potentially be measured). Note that measured amounts include amounts that are not precisely quantified, including amounts involving arbitrary units and floating currencies.",
                    "additionalProperties": false
                  },
                  "externalDiameter": {
                    "description": "A measured amount (or an amount that can potentially be measured). Note that measured amounts include amounts that are not precisely quantified, including amounts involving arbitrary units and floating currencies.",
                    "additionalProperties": false
                  },
                  "shape": {
                    "pattern": "^[ \\r\\n\\t\\S]+$",
                    "type": "string",
                    "description": "A sequence of Unicode characters"
                  },
                  "_shape": {
                    "description": "Base definition for all elements in a resource.",
                    "additionalProperties": false
                  },
                  "color": {
                    "description": "Where applicable, the color can be specified An appropriate controlled vocabulary shall be used The term and the term identifier shall be used.",
                    "type": "array"
                  },
                  "_color": {
                    "description": "Extensions for color",
                    "type": "array"
                  },
                  "imprint": {
                    "description": "Where applicable, the imprint can be specified as text.",
                    "type": "array"
                  },
                  "_imprint": {
                    "description": "Extensions for imprint",
                    "type": "array"
                  },
                  "image": {
                    "description": "Where applicable, the image can be provided The format of the image attachment shall be specified by regional implementations.",
                    "type": "array"
                  },
                  "scoring": {
                    "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                    "additionalProperties": false
                  }
                },
                "additionalProperties": false
              },
              "languageCode": {
                "description": "Language code for the human-readable text strings produced by the device (all supported).",
                "type": "array"
              },
              "capability": {
                "description": "Device capabilities.",
                "items": {
                  "description": "The characteristics, operational status and capabilities of a medical-related component of a medical device.",
                  "properties": {
                    "id": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "type": "array"
                    },
                    "modifierExtension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                      "type": "array"
                    },
                    "type": {
                      "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                      "additionalProperties": false
                    },
                    "description": {
                      "description": "Description of capability.",
                      "type": "array"
                    }
                  },
                  "additionalProperties": false,
                  "required": [
                    "type"
                  ]
                },
                "type": "array"
              },
              "property": {
                "description": "The actual configuration settings of a device as it actually operates, e.g., regulation status, time properties.",
                "items": {
                  "description": "The characteristics, operational status and capabilities of a medical-related component of a medical device.",
                  "properties": {
                    "id": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "type": "array"
                    },
                    "modifierExtension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                      "type": "array"
                    },
                    "type": {
                      "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                      "additionalProperties": false
                    },
                    "valueQuantity": {
                      "description": "Property value as a quantity.",
                      "type": "array"
                    },
                    "valueCode": {
                      "description": "Property value as a code, e.g., NTP4 (synced to NTP).",
                      "type": "array"
                    }
                  },
                  "additionalProperties": false,
                  "required": [
                    "type"
                  ]
                },
                "type": "array"
              },
              "owner": {
                "description": "A reference from one resource to another.",
                "additionalProperties": false
              },
              "contact": {
                "description": "Contact details for an organization or a particular human that is responsible for the device.",
                "type": "array"
              },
              "url": {
                "pattern": "^\\S*$",
                "type": "string",
                "description": "String of characters used to identify a name or a resource"
              },
              "_url": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "onlineInformation": {
                "pattern": "^\\S*$",
                "type": "string",
                "description": "String of characters used to identify a name or a resource"
              },
              "_onlineInformation": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "note": {
                "description": "Descriptive information, usage information or implantation information that is not captured in an existing element.",
                "type": "array"
              },
              "quantity": {
                "description": "A measured amount (or an amount that can potentially be measured). Note that measured amounts include amounts that are not precisely quantified, including amounts involving arbitrary units and floating currencies.",
                "additionalProperties": false
              },
              "parentDevice": {
                "description": "A reference from one resource to another.",
                "additionalProperties": false
              },
              "material": {
                "description": "A substance used to create the material(s) of which the device is made.",
                "items": {
                  "description": "The characteristics, operational status and capabilities of a medical-related component of a medical device.",
                  "properties": {
                    "id": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "type": "array"
                    },
                    "modifierExtension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                      "type": "array"
                    },
                    "substance": {
                      "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                      "additionalProperties": false
                    },
                    "alternate": {
                      "description": "Indicates an alternative material of the device.",
                      "pattern": "^true|false$",
                      "type": "boolean"
                    },
                    "_alternate": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "allergenicIndicator": {
                      "description": "Whether the substance is a known or suspected allergen.",
                      "pattern": "^true|false$",
                      "type": "boolean"
                    },
                    "_allergenicIndicator": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false,
                  "required": [
                    "substance"
                  ]
                },
                "type": "array"
              }
            },
            "additionalProperties": false,
            "required": [
              "resourceType"
            ]
          },
          {
            "description": "Describes a measurement, calculation or setting capability of a medical device.",
            "properties": {
              "resourceType": {
                "description": "This is a DeviceMetric resource",
                "const": "DeviceMetric"
              },
              "id": {
                "description": "The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.",
                "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                "type": "string"
              },
              "meta": {
                "description": "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
                "additionalProperties": false
              },
              "implicitRules": {
                "pattern": "^\\S*$",
                "type": "string",
                "description": "String of characters used to identify a name or a resource"
              },
              "_implicitRules": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "language": {
                "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                "type": "string",
                "description": "A string which has at least one character and no leading or trailing whitespace and where there is no whitespace other than single spaces in the contents"
              },
              "_language": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "text": {
                "description": "A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it \"clinically safe\" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.",
                "additionalProperties": false
              },
              "contained": {
                "description": "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope.",
                "type": "array"
              },
              "extension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                "type": "array"
              },
              "modifierExtension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                "type": "array"
              },
              "identifier": {
                "description": "Unique instance identifiers assigned to a device by the device or gateway software, manufacturers, other organizations or owners. For example: handle ID.",
                "type": "array"
              },
              "type": {
                "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                "additionalProperties": false
              },
              "unit": {
                "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                "additionalProperties": false
              },
              "source": {
                "description": "A reference from one resource to another.",
                "additionalProperties": false
              },
              "parent": {
                "description": "A reference from one resource to another.",
                "additionalProperties": false
              },
              "operationalStatus": {
                "description": "Indicates current operational state of the device. For example: On, Off, Standby, etc.",
                "enum": [
                  "on",
                  "off",
                  "standby",
                  "entered-in-error"
                ]
              },
              "_operationalStatus": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "color": {
                "description": "Describes the color representation for the metric. This is often used to aid clinicians to track and identify parameter types by color. In practice, consider a Patient Monitor that has ECG/HR and Pleth for example; the parameters are displayed in different characteristic colors, such as HR-blue, BP-green, and PR and SpO2- magenta.",
                "enum": [
                  "black",
                  "red",
                  "green",
                  "yellow",
                  "blue",
                  "magenta",
                  "cyan",
                  "white"
                ]
              },
              "_color": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "category": {
                "description": "Indicates the category of the observation generation process. A DeviceMetric can be for example a setting, measurement, or calculation.",
                "enum": [
                  "measurement",
                  "setting",
                  "calculation",
                  "unspecified"
                ]
              },
              "_category": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "measurementPeriod": {
                "description": "Describes the measurement repetition time. This is not necessarily the same as the update period. The measurement repetition time can range from milliseconds up to hours. An example for a measurement repetition time in the range of milliseconds is the sampling rate of an ECG. An example for a measurement repetition time in the range of hours is a NIBP that is triggered automatically every hour. The update period may be different than the measurement repetition time, if the device does not update the published observed value with the same frequency as it was measured.",
                "additionalProperties": false
              },
              "calibration": {
                "description": "Describes the calibrations that have been performed or that are required to be performed.",
                "items": {
                  "description": "Describes a measurement, calculation or setting capability of a medical device.",
                  "properties": {
                    "id": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "type": "array"
                    },
                    "modifierExtension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                      "type": "array"
                    },
                    "type": {
                      "description": "Describes the type of the calibration method.",
                      "enum": [
                        "unspecified",
                        "offset",
                        "gain",
                        "two-point"
                      ]
                    },
                    "_type": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "state": {
                      "description": "Describes the state of the calibration.",
                      "enum": [
                        "not-calibrated",
                        "calibration-required",
                        "calibrated",
                        "unspecified"
                      ]
                    },
                    "_state": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "time": {
                      "description": "Describes the time last calibration has been performed.",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
                      "type": "string"
                    },
                    "_time": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                },
                "type": "array"
              }
            },
            "additionalProperties": false,
            "required": [
              "type",
              "resourceType"
            ]
          },
          {
            "description": "Represents a request for a patient to employ a medical device. The device may be an implantable device, or an external assistive device, such as a walker.",
            "properties": {
              "resourceType": {
                "description": "This is a DeviceRequest resource",
                "const": "DeviceRequest"
              },
              "id": {
                "description": "The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.",
                "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                "type": "string"
              },
              "meta": {
                "description": "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
                "additionalProperties": false
              },
              "implicitRules": {
                "pattern": "^\\S*$",
                "type": "string",
                "description": "String of characters used to identify a name or a resource"
              },
              "_implicitRules": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "language": {
                "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                "type": "string",
                "description": "A string which has at least one character and no leading or trailing whitespace and where there is no whitespace other than single spaces in the contents"
              },
              "_language": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "text": {
                "description": "A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it \"clinically safe\" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.",
                "additionalProperties": false
              },
              "contained": {
                "description": "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope.",
                "type": "array"
              },
              "extension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                "type": "array"
              },
              "modifierExtension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                "type": "array"
              },
              "identifier": {
                "description": "Identifiers assigned to this order by the orderer or by the receiver.",
                "type": "array"
              },
              "instantiatesCanonical": {
                "description": "The URL pointing to a FHIR-defined protocol, guideline, orderset or other definition that is adhered to in whole or in part by this DeviceRequest.",
                "type": "array"
              },
              "instantiatesUri": {
                "description": "The URL pointing to an externally maintained protocol, guideline, orderset or other definition that is adhered to in whole or in part by this DeviceRequest.",
                "type": "array"
              },
              "_instantiatesUri": {
                "description": "Extensions for instantiatesUri",
                "type": "array"
              },
              "basedOn": {
                "description": "Plan/proposal/order fulfilled by this request.",
                "type": "array"
              },
              "priorRequest": {
                "description": "The request takes the place of the referenced completed or terminated request(s).",
                "type": "array"
              },
              "groupIdentifier": {
                "description": "An identifier - identifies some entity uniquely and unambiguously. Typically this is used for business identifiers.",
                "additionalProperties": false
              },
              "status": {
                "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                "type": "string",
                "description": "A string which has at least one character and no leading or trailing whitespace and where there is no whitespace other than single spaces in the contents"
              },
              "_status": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "intent": {
                "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                "type": "string",
                "description": "A string which has at least one character and no leading or trailing whitespace and where there is no whitespace other than single spaces in the contents"
              },
              "_intent": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "priority": {
                "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                "type": "string",
                "description": "A string which has at least one character and no leading or trailing whitespace and where there is no whitespace other than single spaces in the contents"
              },
              "_priority": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "codeReference": {
                "description": "A reference from one resource to another.",
                "additionalProperties": false
              },
              "codeCodeableConcept": {
                "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                "additionalProperties": false
              },
              "parameter": {
                "description": "Specific parameters for the ordered item.  For example, the prism value for lenses.",
                "items": {
                  "description": "Represents a request for a patient to employ a medical device. The device may be an implantable device, or an external assistive device, such as a walker.",
                  "properties": {
                    "id": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "type": "array"
                    },
                    "modifierExtension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                      "type": "array"
                    },
                    "code": {
                      "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                      "additionalProperties": false
                    },
                    "valueCodeableConcept": {
                      "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                      "additionalProperties": false
                    },
                    "valueQuantity": {
                      "description": "A measured amount (or an amount that can potentially be measured). Note that measured amounts include amounts that are not precisely quantified, including amounts involving arbitrary units and floating currencies.",
                      "additionalProperties": false
                    },
                    "valueRange": {
                      "description": "The value of the device detail.",
                      "additionalProperties": false
                    },
                    "valueBoolean": {
                      "description": "The value of the device detail.",
                      "pattern": "^true|false$",
                      "type": "boolean"
                    },
                    "_valueBoolean": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                },
                "type": "array"
              },
              "subject": {
                "description": "A reference from one resource to another.",
                "additionalProperties": false
              },
              "encounter": {
                "description": "A reference from one resource to another.",
                "additionalProperties": false
              },
              "occurrenceDateTime": {
                "description": "The timing schedule for the use of the device. The Schedule data type allows many different expressions, for example. \"Every 8 hours\"; \"Three times a day\"; \"1/2 an hour before breakfast for 10 days from 23-Dec 2011:\"; \"15 Oct 2013, 17 Oct 2013 and 1 Nov 2013\".",
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                "type": "string"
              },
              "_occurrenceDateTime": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "occurrencePeriod": {
                "description": "A time period defined by a start and end date and optionally time.",
                "additionalProperties": false
              },
              "occurrenceTiming": {
                "description": "The timing schedule for the use of the device. The Schedule data type allows many different expressions, for example. \"Every 8 hours\"; \"Three times a day\"; \"1/2 an hour before breakfast for 10 days from 23-Dec 2011:\"; \"15 Oct 2013, 17 Oct 2013 and 1 Nov 2013\".",
                "additionalProperties": false
              },
              "authoredOn": {
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                "type": "string",
                "description": "A date, date-time or partial date (e.g. just year or year + month).  If hours and minutes are specified, a time zone SHALL be populated. The format is a union of the schema types gYear, gYearMonth, date and dateTime. Seconds must be provided due to schema type constraints but may be zero-filled and may be ignored.                 Dates SHALL be valid dates."
              },
              "_authoredOn": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "requester": {
                "description": "A reference from one resource to another.",
                "additionalProperties": false
              },
              "performerType": {
                "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                "additionalProperties": false
              },
              "performer": {
                "description": "A reference from one resource to another.",
                "additionalProperties": false
              },
              "reasonCode": {
                "description": "Reason or justification for the use of this device.",
                "type": "array"
              },
              "reasonReference": {
                "description": "Reason or justification for the use of this device.",
                "type": "array"
              },
              "insurance": {
                "description": "Insurance plans, coverage extensions, pre-authorizations and/or pre-determinations that may be required for delivering the requested service.",
                "type": "array"
              },
              "supportingInfo": {
                "description": "Additional clinical information about the patient that may influence the request fulfilment.  For example, this may include where on the subject's body the device will be used (i.e. the target site).",
                "type": "array"
              },
              "note": {
                "description": "Details about this request that were not represented at all or sufficiently in one of the attributes provided in a class. These may include for example a comment, an instruction, or a note associated with the statement.",
                "type": "array"
              },
              "relevantHistory": {
                "description": "Key events in the history of the request.",
                "type": "array"
              }
            },
            "additionalProperties": false,
            "required": [
              "subject",
              "resourceType"
            ]
          },
          {
            "description": "A record of a device being used by a patient where the record is the result of a report from the patient or another clinician.",
            "properties": {
              "resourceType": {
                "description": "This is a DeviceUseStatement resource",
                "const": "DeviceUseStatement"
              },
              "id": {
                "description": "The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.",
                "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                "type": "string"
              },
              "meta": {
                "description": "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
                "additionalProperties": false
              },
              "implicitRules": {
                "pattern": "^\\S*$",
                "type": "string",
                "description": "String of characters used to identify a name or a resource"
              },
              "_implicitRules": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "language": {
                "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                "type": "string",
                "description": "A string which has at least one character and no leading or trailing whitespace and where there is no whitespace other than single spaces in the contents"
              },
              "_language": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "text": {
                "description": "A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it \"clinically safe\" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.",
                "additionalProperties": false
              },
              "contained": {
                "description": "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope.",
                "type": "array"
              },
              "extension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                "type": "array"
              },
              "modifierExtension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                "type": "array"
              },
              "identifier": {
                "description": "An external identifier for this statement such as an IRI.",
                "type": "array"
              },
              "basedOn": {
                "description": "A plan, proposal or order that is fulfilled in whole or in part by this DeviceUseStatement.",
                "type": "array"
              },
              "status": {
                "description": "A code representing the patient or other source's judgment about the state of the device used that this statement is about.  Generally this will be active or completed.",
                "enum": [
                  "active",
                  "completed",
                  "entered-in-error",
                  "intended",
                  "stopped",
                  "on-hold"
                ]
              },
              "_status": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "subject": {
                "description": "A reference from one resource to another.",
                "additionalProperties": false
              },
              "derivedFrom": {
                "description": "Allows linking the DeviceUseStatement to the underlying Request, or to other information that supports or is used to derive the DeviceUseStatement.",
                "type": "array"
              },
              "timingTiming": {
                "description": "How often the device was used.",
                "additionalProperties": false
              },
              "timingPeriod": {
                "description": "A time period defined by a start and end date and optionally time.",
                "additionalProperties": false
              },
              "timingDateTime": {
                "description": "How often the device was used.",
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                "type": "string"
              },
              "_timingDateTime": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "recordedOn": {
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                "type": "string",
                "description": "A date, date-time or partial date (e.g. just year or year + month).  If hours and minutes are specified, a time zone SHALL be populated. The format is a union of the schema types gYear, gYearMonth, date and dateTime. Seconds must be provided due to schema type constraints but may be zero-filled and may be ignored.                 Dates SHALL be valid dates."
              },
              "_recordedOn": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "source": {
                "description": "A reference from one resource to another.",
                "additionalProperties": false
              },
              "device": {
                "description": "A reference from one resource to another.",
                "additionalProperties": false
              },
              "reasonCode": {
                "description": "Reason or justification for the use of the device.",
                "type": "array"
              },
              "reasonReference": {
                "description": "Indicates another resource whose existence justifies this DeviceUseStatement.",
                "type": "array"
              },
              "bodySite": {
                "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                "additionalProperties": false
              },
              "note": {
                "description": "Details about the device statement that were not represented at all or sufficiently in one of the attributes provided in a class. These may include for example a comment, an instruction, or a note associated with the statement.",
                "type": "array"
              }
            },
            "additionalProperties": false,
            "required": [
              "subject",
              "device",
              "resourceType"
            ]
          },
          {
            "description": "The findings and interpretation of diagnostic  tests performed on patients, groups of patients, devices, and locations, and/or specimens derived from these. The report includes clinical context such as requesting and provider information, and some mix of atomic results, images, textual and coded interpretations, and formatted representation of diagnostic reports.",
            "properties": {
              "resourceType": {
                "description": "This is a DiagnosticReport resource",
                "const": "DiagnosticReport"
              },
              "id": {
                "description": "The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.",
                "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                "type": "string"
              },
              "meta": {
                "description": "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
                "additionalProperties": false
              },
              "implicitRules": {
                "pattern": "^\\S*$",
                "type": "string",
                "description": "String of characters used to identify a name or a resource"
              },
              "_implicitRules": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "language": {
                "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                "type": "string",
                "description": "A string which has at least one character and no leading or trailing whitespace and where there is no whitespace other than single spaces in the contents"
              },
              "_language": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "text": {
                "description": "A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it \"clinically safe\" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.",
                "additionalProperties": false
              },
              "contained": {
                "description": "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope.",
                "type": "array"
              },
              "extension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                "type": "array"
              },
              "modifierExtension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                "type": "array"
              },
              "identifier": {
                "description": "Identifiers assigned to this report by the performer or other systems.",
                "type": "array"
              },
              "basedOn": {
                "description": "Details concerning a service requested.",
                "type": "array"
              },
              "status": {
                "description": "The status of the diagnostic report.",
                "enum": [
                  "registered",
                  "partial",
                  "preliminary",
                  "final",
                  "amended",
                  "corrected",
                  "appended",
                  "cancelled",
                  "entered-in-error",
                  "unknown"
                ]
              },
              "_status": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "category": {
                "description": "A code that classifies the clinical discipline, department or diagnostic service that created the report (e.g. cardiology, biochemistry, hematology, MRI). This is used for searching, sorting and display purposes.",
                "type": "array"
              },
              "code": {
                "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                "additionalProperties": false
              },
              "subject": {
                "description": "A reference from one resource to another.",
                "additionalProperties": false
              },
              "encounter": {
                "description": "A reference from one resource to another.",
                "additionalProperties": false
              },
              "effectiveDateTime": {
                "description": "The time or time-period the observed values are related to. When the subject of the report is a patient, this is usually either the time of the procedure or of specimen collection(s), but very often the source of the date/time is not known, only the date/time itself.",
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                "type": "string"
              },
              "_effectiveDateTime": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "effectivePeriod": {
                "description": "A time period defined by a start and end date and optionally time.",
                "additionalProperties": false
              },
              "issued": {
                "description": "The date and time that this version of the report was made available to providers, typically after the report was reviewed and verified.",
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
                "type": "string"
              },
              "_issued": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "performer": {
                "description": "The diagnostic service that is responsible for issuing the report.",
                "type": "array"
              },
              "resultsInterpreter": {
                "description": "The practitioner or organization that is responsible for the report's conclusions and interpretations.",
                "type": "array"
              },
              "specimen": {
                "description": "Details about the specimens on which this diagnostic report is based.",
                "type": "array"
              },
              "result": {
                "description": "[Observations](observation.html)  that are part of this diagnostic report.",
                "type": "array"
              },
              "imagingStudy": {
                "description": "One or more links to full details of any imaging performed during the diagnostic investigation. Typically, this is imaging performed by DICOM enabled modalities, but this is not required. A fully enabled PACS viewer can use this information to provide views of the source images.",
                "type": "array"
              },
              "media": {
                "description": "A list of key images associated with this report. The images are generally created during the diagnostic process, and may be directly of the patient, or of treated specimens (i.e. slides of interest).",
                "items": {
                  "description": "The findings and interpretation of diagnostic  tests performed on patients, groups of patients, devices, and locations, and/or specimens derived from these. The report includes clinical context such as requesting and provider information, and some mix of atomic results, images, textual and coded interpretations, and formatted representation of diagnostic reports.",
                  "properties": {
                    "id": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "type": "array"
                    },
                    "modifierExtension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                      "type": "array"
                    },
                    "comment": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "_comment": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "link": {
                      "description": "A reference from one resource to another.",
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false,
                  "required": [
                    "link"
                  ]
                },
                "type": "array"
              },
              "conclusion": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "_conclusion": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "conclusionCode": {
                "description": "One or more codes that represent the summary conclusion (interpretation/impression) of the diagnostic report.",
                "type": "array"
              },
              "presentedForm": {
                "description": "Rich text representation of the entire result as issued by the diagnostic service. Multiple formats are allowed but they SHALL be semantically equivalent.",
                "type": "array"
              }
            },
            "additionalProperties": false,
            "required": [
              "code",
              "resourceType"
            ]
          },
          {
            "description": "A collection of documents compiled for a purpose together with metadata that applies to the collection.",
            "properties": {
              "resourceType": {
                "description": "This is a DocumentManifest resource",
                "const": "DocumentManifest"
              },
              "id": {
                "description": "The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.",
                "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                "type": "string"
              },
              "meta": {
                "description": "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
                "additionalProperties": false
              },
              "implicitRules": {
                "pattern": "^\\S*$",
                "type": "string",
                "description": "String of characters used to identify a name or a resource"
              },
              "_implicitRules": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "language": {
                "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                "type": "string",
                "description": "A string which has at least one character and no leading or trailing whitespace and where there is no whitespace other than single spaces in the contents"
              },
              "_language": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "text": {
                "description": "A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it \"clinically safe\" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.",
                "additionalProperties": false
              },
              "contained": {
                "description": "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope.",
                "type": "array"
              },
              "extension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                "type": "array"
              },
              "modifierExtension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                "type": "array"
              },
              "masterIdentifier": {
                "description": "An identifier - identifies some entity uniquely and unambiguously. Typically this is used for business identifiers.",
                "additionalProperties": false
              },
              "identifier": {
                "description": "Other identifiers associated with the document manifest, including version independent  identifiers.",
                "type": "array"
              },
              "status": {
                "description": "The status of this document manifest.",
                "enum": [
                  "current",
                  "superseded",
                  "entered-in-error"
                ]
              },
              "_status": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "type": {
                "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                "additionalProperties": false
              },
              "subject": {
                "description": "A reference from one resource to another.",
                "additionalProperties": false
              },
              "created": {
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                "type": "string",
                "description": "A date, date-time or partial date (e.g. just year or year + month).  If hours and minutes are specified, a time zone SHALL be populated. The format is a union of the schema types gYear, gYearMonth, date and dateTime. Seconds must be provided due to schema type constraints but may be zero-filled and may be ignored.                 Dates SHALL be valid dates."
              },
              "_created": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "author": {
                "description": "Identifies who is the author of the manifest. Manifest author is not necessarly the author of the references included.",
                "type": "array"
              },
              "recipient": {
                "description": "A patient, practitioner, or organization for which this set of documents is intended.",
                "type": "array"
              },
              "source": {
                "pattern": "^\\S*$",
                "type": "string",
                "description": "String of characters used to identify a name or a resource"
              },
              "_source": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "description": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "_description": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "content": {
                "description": "The list of Resources that consist of the parts of this manifest.",
                "type": "array"
              },
              "related": {
                "description": "Related identifiers or resources associated with the DocumentManifest.",
                "items": {
                  "description": "A collection of documents compiled for a purpose together with metadata that applies to the collection.",
                  "properties": {
                    "id": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "type": "array"
                    },
                    "modifierExtension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                      "type": "array"
                    },
                    "identifier": {
                      "description": "An identifier - identifies some entity uniquely and unambiguously. Typically this is used for business identifiers.",
                      "additionalProperties": false
                    },
                    "ref": {
                      "description": "A reference from one resource to another.",
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                },
                "type": "array"
              }
            },
            "additionalProperties": false,
            "required": [
              "content",
              "resourceType"
            ]
          },
          {
            "description": "A reference to a document of any kind for any purpose. Provides metadata about the document so that the document can be discovered and managed. The scope of a document is any seralized object with a mime-type, so includes formal patient centric documents (CDA), cliical notes, scanned paper, and non-patient specific documents like policy text.",
            "properties": {
              "resourceType": {
                "description": "This is a DocumentReference resource",
                "const": "DocumentReference"
              },
              "id": {
                "description": "The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.",
                "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                "type": "string"
              },
              "meta": {
                "description": "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
                "additionalProperties": false
              },
              "implicitRules": {
                "pattern": "^\\S*$",
                "type": "string",
                "description": "String of characters used to identify a name or a resource"
              },
              "_implicitRules": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "language": {
                "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                "type": "string",
                "description": "A string which has at least one character and no leading or trailing whitespace and where there is no whitespace other than single spaces in the contents"
              },
              "_language": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "text": {
                "description": "A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it \"clinically safe\" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.",
                "additionalProperties": false
              },
              "contained": {
                "description": "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope.",
                "type": "array"
              },
              "extension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                "type": "array"
              },
              "modifierExtension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                "type": "array"
              },
              "masterIdentifier": {
                "description": "An identifier - identifies some entity uniquely and unambiguously. Typically this is used for business identifiers.",
                "additionalProperties": false
              },
              "identifier": {
                "description": "Other identifiers associated with the document, including version independent identifiers.",
                "type": "array"
              },
              "status": {
                "description": "The status of this document reference.",
                "enum": [
                  "current",
                  "superseded",
                  "entered-in-error"
                ]
              },
              "_status": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "docStatus": {
                "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                "type": "string",
                "description": "A string which has at least one character and no leading or trailing whitespace and where there is no whitespace other than single spaces in the contents"
              },
              "_docStatus": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "type": {
                "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                "additionalProperties": false
              },
              "category": {
                "description": "A categorization for the type of document referenced - helps for indexing and searching. This may be implied by or derived from the code specified in the DocumentReference.type.",
                "type": "array"
              },
              "subject": {
                "description": "A reference from one resource to another.",
                "additionalProperties": false
              },
              "date": {
                "description": "When the document reference was created.",
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
                "type": "string"
              },
              "_date": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "author": {
                "description": "Identifies who is responsible for adding the information to the document.",
                "type": "array"
              },
              "authenticator": {
                "description": "A reference from one resource to another.",
                "additionalProperties": false
              },
              "custodian": {
                "description": "A reference from one resource to another.",
                "additionalProperties": false
              },
              "relatesTo": {
                "description": "Relationships that this document has with other document references that already exist.",
                "items": {
                  "description": "A reference to a document of any kind for any purpose. Provides metadata about the document so that the document can be discovered and managed. The scope of a document is any seralized object with a mime-type, so includes formal patient centric documents (CDA), cliical notes, scanned paper, and non-patient specific documents like policy text.",
                  "properties": {
                    "id": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "type": "array"
                    },
                    "modifierExtension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                      "type": "array"
                    },
                    "code": {
                      "description": "The type of relationship that this document has with anther document.",
                      "enum": [
                        "replaces",
                        "transforms",
                        "signs",
                        "appends"
                      ]
                    },
                    "_code": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "target": {
                      "description": "A reference from one resource to another.",
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false,
                  "required": [
                    "target"
                  ]
                },
                "type": "array"
              },
              "description": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "_description": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "securityLabel": {
                "description": "A set of Security-Tag codes specifying the level of privacy/security of the Document. Note that DocumentReference.meta.security contains the security labels of the \"reference\" to the document, while DocumentReference.securityLabel contains a snapshot of the security labels on the document the reference refers to.",
                "type": "array"
              },
              "content": {
                "description": "The document and format referenced. There may be multiple content element repetitions, each with a different format.",
                "items": {
                  "description": "A reference to a document of any kind for any purpose. Provides metadata about the document so that the document can be discovered and managed. The scope of a document is any seralized object with a mime-type, so includes formal patient centric documents (CDA), cliical notes, scanned paper, and non-patient specific documents like policy text.",
                  "properties": {
                    "id": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "type": "array"
                    },
                    "modifierExtension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                      "type": "array"
                    },
                    "attachment": {
                      "description": "For referring to data content defined in other formats.",
                      "additionalProperties": false
                    },
                    "format": {
                      "description": "A reference to a code defined by a terminology system.",
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false,
                  "required": [
                    "attachment"
                  ]
                },
                "type": "array"
              },
              "context": {
                "description": "The clinical context in which the document was prepared.",
                "properties": {
                  "id": {
                    "pattern": "^[ \\r\\n\\t\\S]+$",
                    "type": "string",
                    "description": "A sequence of Unicode characters"
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "type": "array"
                  },
                  "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                    "type": "array"
                  },
                  "encounter": {
                    "description": "Describes the clinical encounter or type of care that the document content is associated with.",
                    "type": "array"
                  },
                  "event": {
                    "description": "This list of codes represents the main clinical acts, such as a colonoscopy or an appendectomy, being documented. In some cases, the event is inherent in the type Code, such as a \"History and Physical Report\" in which the procedure being documented is necessarily a \"History and Physical\" act.",
                    "type": "array"
                  },
                  "period": {
                    "description": "A time period defined by a start and end date and optionally time.",
                    "additionalProperties": false
                  },
                  "facilityType": {
                    "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                    "additionalProperties": false
                  },
                  "practiceSetting": {
                    "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                    "additionalProperties": false
                  },
                  "sourcePatientInfo": {
                    "description": "A reference from one resource to another.",
                    "additionalProperties": false
                  },
                  "related": {
                    "description": "Related identifiers or resources associated with the DocumentReference.",
                    "type": "array"
                  }
                },
                "additionalProperties": false
              }
            },
            "additionalProperties": false,
            "required": [
              "content",
              "resourceType"
            ]
          },
          {
            "description": "The EffectEvidenceSynthesis resource describes the difference in an outcome between exposures states in a population where the effect estimate is derived from a combination of research studies.",
            "properties": {
              "resourceType": {
                "description": "This is a EffectEvidenceSynthesis resource",
                "const": "EffectEvidenceSynthesis"
              },
              "id": {
                "description": "The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.",
                "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                "type": "string"
              },
              "meta": {
                "description": "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
                "additionalProperties": false
              },
              "implicitRules": {
                "pattern": "^\\S*$",
                "type": "string",
                "description": "String of characters used to identify a name or a resource"
              },
              "_implicitRules": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "language": {
                "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                "type": "string",
                "description": "A string which has at least one character and no leading or trailing whitespace and where there is no whitespace other than single spaces in the contents"
              },
              "_language": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "text": {
                "description": "A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it \"clinically safe\" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.",
                "additionalProperties": false
              },
              "contained": {
                "description": "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope.",
                "type": "array"
              },
              "extension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                "type": "array"
              },
              "modifierExtension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                "type": "array"
              },
              "url": {
                "pattern": "^\\S*$",
                "type": "string",
                "description": "String of characters used to identify a name or a resource"
              },
              "_url": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "identifier": {
                "description": "A formal identifier that is used to identify this effect evidence synthesis when it is represented in other formats, or referenced in a specification, model, design or an instance.",
                "type": "array"
              },
              "version": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "_version": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "name": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "_name": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "title": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "_title": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "status": {
                "description": "The status of this effect evidence synthesis. Enables tracking the life-cycle of the content.",
                "enum": [
                  "draft",
                  "active",
                  "retired",
                  "unknown"
                ]
              },
              "_status": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "date": {
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                "type": "string",
                "description": "A date, date-time or partial date (e.g. just year or year + month).  If hours and minutes are specified, a time zone SHALL be populated. The format is a union of the schema types gYear, gYearMonth, date and dateTime. Seconds must be provided due to schema type constraints but may be zero-filled and may be ignored.                 Dates SHALL be valid dates."
              },
              "_date": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "publisher": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "_publisher": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "contact": {
                "description": "Contact details to assist a user in finding and communicating with the publisher.",
                "type": "array"
              },
              "description": {
                "description": "A free text natural language description of the effect evidence synthesis from a consumer's perspective.",
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string"
              },
              "_description": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "note": {
                "description": "A human-readable string to clarify or explain concepts about the resource.",
                "type": "array"
              },
              "useContext": {
                "description": "The content was developed with a focus and intent of supporting the contexts that are listed. These contexts may be general categories (gender, age, ...) or may be references to specific programs (insurance plans, studies, ...) and may be used to assist with indexing and searching for appropriate effect evidence synthesis instances.",
                "type": "array"
              },
              "jurisdiction": {
                "description": "A legal or geographic region in which the effect evidence synthesis is intended to be used.",
                "type": "array"
              },
              "copyright": {
                "description": "A copyright statement relating to the effect evidence synthesis and/or its contents. Copyright statements are generally legal restrictions on the use and publishing of the effect evidence synthesis.",
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string"
              },
              "_copyright": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "approvalDate": {
                "description": "The date on which the resource content was approved by the publisher. Approval happens once when the content is officially approved for usage.",
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                "type": "string"
              },
              "_approvalDate": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "lastReviewDate": {
                "description": "The date on which the resource content was last reviewed. Review happens periodically after approval but does not change the original approval date.",
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                "type": "string"
              },
              "_lastReviewDate": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "effectivePeriod": {
                "description": "A time period defined by a start and end date and optionally time.",
                "additionalProperties": false
              },
              "topic": {
                "description": "Descriptive topics related to the content of the EffectEvidenceSynthesis. Topics provide a high-level categorization grouping types of EffectEvidenceSynthesiss that can be useful for filtering and searching.",
                "type": "array"
              },
              "author": {
                "description": "An individiual or organization primarily involved in the creation and maintenance of the content.",
                "type": "array"
              },
              "editor": {
                "description": "An individual or organization primarily responsible for internal coherence of the content.",
                "type": "array"
              },
              "reviewer": {
                "description": "An individual or organization primarily responsible for review of some aspect of the content.",
                "type": "array"
              },
              "endorser": {
                "description": "An individual or organization responsible for officially endorsing the content for use in some setting.",
                "type": "array"
              },
              "relatedArtifact": {
                "description": "Related artifacts such as additional documentation, justification, or bibliographic references.",
                "type": "array"
              },
              "synthesisType": {
                "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                "additionalProperties": false
              },
              "studyType": {
                "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                "additionalProperties": false
              },
              "population": {
                "description": "A reference from one resource to another.",
                "additionalProperties": false
              },
              "exposure": {
                "description": "A reference from one resource to another.",
                "additionalProperties": false
              },
              "exposureAlternative": {
                "description": "A reference from one resource to another.",
                "additionalProperties": false
              },
              "outcome": {
                "description": "A reference from one resource to another.",
                "additionalProperties": false
              },
              "sampleSize": {
                "description": "A description of the size of the sample involved in the synthesis.",
                "properties": {
                  "id": {
                    "pattern": "^[ \\r\\n\\t\\S]+$",
                    "type": "string",
                    "description": "A sequence of Unicode characters"
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "type": "array"
                  },
                  "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                    "type": "array"
                  },
                  "description": {
                    "pattern": "^[ \\r\\n\\t\\S]+$",
                    "type": "string",
                    "description": "A sequence of Unicode characters"
                  },
                  "_description": {
                    "description": "Base definition for all elements in a resource.",
                    "additionalProperties": false
                  },
                  "numberOfStudies": {
                    "description": "Number of studies included in this evidence synthesis.",
                    "pattern": "^-?([0]|([1-9][0-9]*))$",
                    "type": "number"
                  },
                  "_numberOfStudies": {
                    "description": "Base definition for all elements in a resource.",
                    "additionalProperties": false
                  },
                  "numberOfParticipants": {
                    "description": "Number of participants included in this evidence synthesis.",
                    "pattern": "^-?([0]|([1-9][0-9]*))$",
                    "type": "number"
                  },
                  "_numberOfParticipants": {
                    "description": "Base definition for all elements in a resource.",
                    "additionalProperties": false
                  }
                },
                "additionalProperties": false
              },
              "resultsByExposure": {
                "description": "A description of the results for each exposure considered in the effect estimate.",
                "items": {
                  "description": "The EffectEvidenceSynthesis resource describes the difference in an outcome between exposures states in a population where the effect estimate is derived from a combination of research studies.",
                  "properties": {
                    "id": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "type": "array"
                    },
                    "modifierExtension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                      "type": "array"
                    },
                    "description": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "_description": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "exposureState": {
                      "description": "Whether these results are for the exposure state or alternative exposure state.",
                      "enum": [
                        "exposure",
                        "exposure-alternative"
                      ]
                    },
                    "_exposureState": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "variantState": {
                      "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                      "additionalProperties": false
                    },
                    "riskEvidenceSynthesis": {
                      "description": "A reference from one resource to another.",
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false,
                  "required": [
                    "riskEvidenceSynthesis"
                  ]
                },
                "type": "array"
              },
              "effectEstimate": {
                "description": "The estimated effect of the exposure variant.",
                "items": {
                  "description": "The EffectEvidenceSynthesis resource describes the difference in an outcome between exposures states in a population where the effect estimate is derived from a combination of research studies.",
                  "properties": {
                    "id": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "type": "array"
                    },
                    "modifierExtension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                      "type": "array"
                    },
                    "description": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "_description": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "type": {
                      "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                      "additionalProperties": false
                    },
                    "variantState": {
                      "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                      "additionalProperties": false
                    },
                    "value": {
                      "description": "The point estimate of the effect estimate.",
                      "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                      "type": "number"
                    },
                    "_value": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "unitOfMeasure": {
                      "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                      "additionalProperties": false
                    },
                    "precisionEstimate": {
                      "description": "A description of the precision of the estimate for the effect.",
                      "items": {
                        "description": "The EffectEvidenceSynthesis resource describes the difference in an outcome between exposures states in a population where the effect estimate is derived from a combination of research studies.",
                        "properties": {
                          "id": {
                            "pattern": "^[ \\r\\n\\t\\S]+$",
                            "type": "string",
                            "description": "A sequence of Unicode characters"
                          },
                          "extension": {
                            "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                            "type": "array"
                          },
                          "modifierExtension": {
                            "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                            "type": "array"
                          },
                          "type": {
                            "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                            "additionalProperties": false
                          },
                          "level": {
                            "description": "Use 95 for a 95% confidence interval.",
                            "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                            "type": "number"
                          },
                          "_level": {
                            "description": "Base definition for all elements in a resource.",
                            "additionalProperties": false
                          },
                          "from": {
                            "description": "Lower bound of confidence interval.",
                            "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                            "type": "number"
                          },
                          "_from": {
                            "description": "Base definition for all elements in a resource.",
                            "additionalProperties": false
                          },
                          "to": {
                            "description": "Upper bound of confidence interval.",
                            "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                            "type": "number"
                          },
                          "_to": {
                            "description": "Base definition for all elements in a resource.",
                            "additionalProperties": false
                          }
                        },
                        "additionalProperties": false
                      },
                      "type": "array"
                    }
                  },
                  "additionalProperties": false
                },
                "type": "array"
              },
              "certainty": {
                "description": "A description of the certainty of the effect estimate.",
                "items": {
                  "description": "The EffectEvidenceSynthesis resource describes the difference in an outcome between exposures states in a population where the effect estimate is derived from a combination of research studies.",
                  "properties": {
                    "id": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "type": "array"
                    },
                    "modifierExtension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                      "type": "array"
                    },
                    "rating": {
                      "description": "A rating of the certainty of the effect estimate.",
                      "type": "array"
                    },
                    "note": {
                      "description": "A human-readable string to clarify or explain concepts about the resource.",
                      "type": "array"
                    },
                    "certaintySubcomponent": {
                      "description": "A description of a component of the overall certainty.",
                      "items": {
                        "description": "The EffectEvidenceSynthesis resource describes the difference in an outcome between exposures states in a population where the effect estimate is derived from a combination of research studies.",
                        "properties": {
                          "id": {
                            "pattern": "^[ \\r\\n\\t\\S]+$",
                            "type": "string",
                            "description": "A sequence of Unicode characters"
                          },
                          "extension": {
                            "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                            "type": "array"
                          },
                          "modifierExtension": {
                            "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                            "type": "array"
                          },
                          "type": {
                            "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                            "additionalProperties": false
                          },
                          "rating": {
                            "description": "A rating of a subcomponent of rating certainty.",
                            "type": "array"
                          },
                          "note": {
                            "description": "A human-readable string to clarify or explain concepts about the resource.",
                            "type": "array"
                          }
                        },
                        "additionalProperties": false
                      },
                      "type": "array"
                    }
                  },
                  "additionalProperties": false
                },
                "type": "array"
              }
            },
            "additionalProperties": false,
            "required": [
              "exposureAlternative",
              "exposure",
              "outcome",
              "resourceType",
              "population"
            ]
          },
          {
            "description": "An interaction between a patient and healthcare provider(s) for the purpose of providing healthcare service(s) or assessing the health status of a patient.",
            "properties": {
              "resourceType": {
                "description": "This is a Encounter resource",
                "const": "Encounter"
              },
              "id": {
                "description": "The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.",
                "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                "type": "string"
              },
              "meta": {
                "description": "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
                "additionalProperties": false
              },
              "implicitRules": {
                "pattern": "^\\S*$",
                "type": "string",
                "description": "String of characters used to identify a name or a resource"
              },
              "_implicitRules": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "language": {
                "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                "type": "string",
                "description": "A string which has at least one character and no leading or trailing whitespace and where there is no whitespace other than single spaces in the contents"
              },
              "_language": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "text": {
                "description": "A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it \"clinically safe\" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.",
                "additionalProperties": false
              },
              "contained": {
                "description": "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope.",
                "type": "array"
              },
              "extension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                "type": "array"
              },
              "modifierExtension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                "type": "array"
              },
              "identifier": {
                "description": "Identifier(s) by which this encounter is known.",
                "type": "array"
              },
              "status": {
                "description": "planned | arrived | triaged | in-progress | onleave | finished | cancelled +.",
                "enum": [
                  "planned",
                  "arrived",
                  "triaged",
                  "in-progress",
                  "onleave",
                  "finished",
                  "cancelled",
                  "entered-in-error",
                  "unknown"
                ]
              },
              "_status": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "statusHistory": {
                "description": "The status history permits the encounter resource to contain the status history without needing to read through the historical versions of the resource, or even have the server store them.",
                "items": {
                  "description": "An interaction between a patient and healthcare provider(s) for the purpose of providing healthcare service(s) or assessing the health status of a patient.",
                  "properties": {
                    "id": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "type": "array"
                    },
                    "modifierExtension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                      "type": "array"
                    },
                    "status": {
                      "description": "planned | arrived | triaged | in-progress | onleave | finished | cancelled +.",
                      "enum": [
                        "planned",
                        "arrived",
                        "triaged",
                        "in-progress",
                        "onleave",
                        "finished",
                        "cancelled",
                        "entered-in-error",
                        "unknown"
                      ]
                    },
                    "_status": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "period": {
                      "description": "A time period defined by a start and end date and optionally time.",
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false,
                  "required": [
                    "period"
                  ]
                },
                "type": "array"
              },
              "class": {
                "description": "A reference to a code defined by a terminology system.",
                "additionalProperties": false
              },
              "classHistory": {
                "description": "The class history permits the tracking of the encounters transitions without needing to go  through the resource history.  This would be used for a case where an admission starts of as an emergency encounter, then transitions into an inpatient scenario. Doing this and not restarting a new encounter ensures that any lab/diagnostic results can more easily follow the patient and not require re-processing and not get lost or cancelled during a kind of discharge from emergency to inpatient.",
                "items": {
                  "description": "An interaction between a patient and healthcare provider(s) for the purpose of providing healthcare service(s) or assessing the health status of a patient.",
                  "properties": {
                    "id": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "type": "array"
                    },
                    "modifierExtension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                      "type": "array"
                    },
                    "class": {
                      "description": "A reference to a code defined by a terminology system.",
                      "additionalProperties": false
                    },
                    "period": {
                      "description": "A time period defined by a start and end date and optionally time.",
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false,
                  "required": [
                    "period",
                    "class"
                  ]
                },
                "type": "array"
              },
              "type": {
                "description": "Specific type of encounter (e.g. e-mail consultation, surgical day-care, skilled nursing, rehabilitation).",
                "type": "array"
              },
              "serviceType": {
                "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                "additionalProperties": false
              },
              "priority": {
                "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                "additionalProperties": false
              },
              "subject": {
                "description": "A reference from one resource to another.",
                "additionalProperties": false
              },
              "episodeOfCare": {
                "description": "Where a specific encounter should be classified as a part of a specific episode(s) of care this field should be used. This association can facilitate grouping of related encounters together for a specific purpose, such as government reporting, issue tracking, association via a common problem.  The association is recorded on the encounter as these are typically created after the episode of care and grouped on entry rather than editing the episode of care to append another encounter to it (the episode of care could span years).",
                "type": "array"
              },
              "basedOn": {
                "description": "The request this encounter satisfies (e.g. incoming referral or procedure request).",
                "type": "array"
              },
              "participant": {
                "description": "The list of people responsible for providing the service.",
                "items": {
                  "description": "An interaction between a patient and healthcare provider(s) for the purpose of providing healthcare service(s) or assessing the health status of a patient.",
                  "properties": {
                    "id": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "type": "array"
                    },
                    "modifierExtension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                      "type": "array"
                    },
                    "type": {
                      "description": "Role of participant in encounter.",
                      "type": "array"
                    },
                    "period": {
                      "description": "A time period defined by a start and end date and optionally time.",
                      "additionalProperties": false
                    },
                    "individual": {
                      "description": "A reference from one resource to another.",
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                },
                "type": "array"
              },
              "appointment": {
                "description": "The appointment that scheduled this encounter.",
                "type": "array"
              },
              "period": {
                "description": "A time period defined by a start and end date and optionally time.",
                "additionalProperties": false
              },
              "length": {
                "description": "Quantity of time the encounter lasted. This excludes the time during leaves of absence.",
                "additionalProperties": false
              },
              "reasonCode": {
                "description": "Reason the encounter takes place, expressed as a code. For admissions, this can be used for a coded admission diagnosis.",
                "type": "array"
              },
              "reasonReference": {
                "description": "Reason the encounter takes place, expressed as a code. For admissions, this can be used for a coded admission diagnosis.",
                "type": "array"
              },
              "diagnosis": {
                "description": "The list of diagnosis relevant to this encounter.",
                "items": {
                  "description": "An interaction between a patient and healthcare provider(s) for the purpose of providing healthcare service(s) or assessing the health status of a patient.",
                  "properties": {
                    "id": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "type": "array"
                    },
                    "modifierExtension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                      "type": "array"
                    },
                    "condition": {
                      "description": "A reference from one resource to another.",
                      "additionalProperties": false
                    },
                    "use": {
                      "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                      "additionalProperties": false
                    },
                    "rank": {
                      "pattern": "^[1-9][0-9]*$",
                      "type": "number",
                      "description": "An integer with a value that is positive (e.g. >0)"
                    },
                    "_rank": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false,
                  "required": [
                    "condition"
                  ]
                },
                "type": "array"
              },
              "account": {
                "description": "The set of accounts that may be used for billing for this Encounter.",
                "type": "array"
              },
              "hospitalization": {
                "description": "Details about the admission to a healthcare service.",
                "properties": {
                  "id": {
                    "pattern": "^[ \\r\\n\\t\\S]+$",
                    "type": "string",
                    "description": "A sequence of Unicode characters"
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "type": "array"
                  },
                  "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                    "type": "array"
                  },
                  "preAdmissionIdentifier": {
                    "description": "An identifier - identifies some entity uniquely and unambiguously. Typically this is used for business identifiers.",
                    "additionalProperties": false
                  },
                  "origin": {
                    "description": "A reference from one resource to another.",
                    "additionalProperties": false
                  },
                  "admitSource": {
                    "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                    "additionalProperties": false
                  },
                  "reAdmission": {
                    "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                    "additionalProperties": false
                  },
                  "dietPreference": {
                    "description": "Diet preferences reported by the patient.",
                    "type": "array"
                  },
                  "specialCourtesy": {
                    "description": "Special courtesies (VIP, board member).",
                    "type": "array"
                  },
                  "specialArrangement": {
                    "description": "Any special requests that have been made for this hospitalization encounter, such as the provision of specific equipment or other things.",
                    "type": "array"
                  },
                  "destination": {
                    "description": "A reference from one resource to another.",
                    "additionalProperties": false
                  },
                  "dischargeDisposition": {
                    "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                    "additionalProperties": false
                  }
                },
                "additionalProperties": false
              },
              "location": {
                "description": "List of locations where  the patient has been during this encounter.",
                "items": {
                  "description": "An interaction between a patient and healthcare provider(s) for the purpose of providing healthcare service(s) or assessing the health status of a patient.",
                  "properties": {
                    "id": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "type": "array"
                    },
                    "modifierExtension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                      "type": "array"
                    },
                    "location": {
                      "description": "A reference from one resource to another.",
                      "additionalProperties": false
                    },
                    "status": {
                      "description": "The status of the participants' presence at the specified location during the period specified. If the participant is no longer at the location, then the period will have an end date/time.",
                      "enum": [
                        "planned",
                        "active",
                        "reserved",
                        "completed"
                      ]
                    },
                    "_status": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "physicalType": {
                      "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                      "additionalProperties": false
                    },
                    "period": {
                      "description": "A time period defined by a start and end date and optionally time.",
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false,
                  "required": [
                    "location"
                  ]
                },
                "type": "array"
              },
              "serviceProvider": {
                "description": "A reference from one resource to another.",
                "additionalProperties": false
              },
              "partOf": {
                "description": "A reference from one resource to another.",
                "additionalProperties": false
              }
            },
            "additionalProperties": false,
            "required": [
              "class",
              "resourceType"
            ]
          },
          {
            "description": "The technical details of an endpoint that can be used for electronic services, such as for web services providing XDS.b or a REST endpoint for another FHIR server. This may include any security context information.",
            "properties": {
              "resourceType": {
                "description": "This is a Endpoint resource",
                "const": "Endpoint"
              },
              "id": {
                "description": "The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.",
                "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                "type": "string"
              },
              "meta": {
                "description": "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
                "additionalProperties": false
              },
              "implicitRules": {
                "pattern": "^\\S*$",
                "type": "string",
                "description": "String of characters used to identify a name or a resource"
              },
              "_implicitRules": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "language": {
                "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                "type": "string",
                "description": "A string which has at least one character and no leading or trailing whitespace and where there is no whitespace other than single spaces in the contents"
              },
              "_language": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "text": {
                "description": "A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it \"clinically safe\" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.",
                "additionalProperties": false
              },
              "contained": {
                "description": "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope.",
                "type": "array"
              },
              "extension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                "type": "array"
              },
              "modifierExtension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                "type": "array"
              },
              "identifier": {
                "description": "Identifier for the organization that is used to identify the endpoint across multiple disparate systems.",
                "type": "array"
              },
              "status": {
                "description": "active | suspended | error | off | test.",
                "enum": [
                  "active",
                  "suspended",
                  "error",
                  "off",
                  "entered-in-error",
                  "test"
                ]
              },
              "_status": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "connectionType": {
                "description": "A reference to a code defined by a terminology system.",
                "additionalProperties": false
              },
              "name": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "_name": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "managingOrganization": {
                "description": "A reference from one resource to another.",
                "additionalProperties": false
              },
              "contact": {
                "description": "Contact details for a human to contact about the subscription. The primary use of this for system administrator troubleshooting.",
                "type": "array"
              },
              "period": {
                "description": "A time period defined by a start and end date and optionally time.",
                "additionalProperties": false
              },
              "payloadType": {
                "description": "The payload type describes the acceptable content that can be communicated on the endpoint.",
                "type": "array"
              },
              "payloadMimeType": {
                "description": "The mime type to send the payload in - e.g. application/fhir+xml, application/fhir+json. If the mime type is not specified, then the sender could send any content (including no content depending on the connectionType).",
                "type": "array"
              },
              "_payloadMimeType": {
                "description": "Extensions for payloadMimeType",
                "type": "array"
              },
              "address": {
                "description": "The uri that describes the actual end-point to connect to.",
                "pattern": "^\\S*$",
                "type": "string"
              },
              "_address": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "header": {
                "description": "Additional headers / information to send as part of the notification.",
                "type": "array"
              },
              "_header": {
                "description": "Extensions for header",
                "type": "array"
              }
            },
            "additionalProperties": false,
            "required": [
              "payloadType",
              "connectionType",
              "resourceType"
            ]
          },
          {
            "description": "This resource provides the insurance enrollment details to the insurer regarding a specified coverage.",
            "properties": {
              "resourceType": {
                "description": "This is a EnrollmentRequest resource",
                "const": "EnrollmentRequest"
              },
              "id": {
                "description": "The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.",
                "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                "type": "string"
              },
              "meta": {
                "description": "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
                "additionalProperties": false
              },
              "implicitRules": {
                "pattern": "^\\S*$",
                "type": "string",
                "description": "String of characters used to identify a name or a resource"
              },
              "_implicitRules": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "language": {
                "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                "type": "string",
                "description": "A string which has at least one character and no leading or trailing whitespace and where there is no whitespace other than single spaces in the contents"
              },
              "_language": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "text": {
                "description": "A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it \"clinically safe\" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.",
                "additionalProperties": false
              },
              "contained": {
                "description": "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope.",
                "type": "array"
              },
              "extension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                "type": "array"
              },
              "modifierExtension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                "type": "array"
              },
              "identifier": {
                "description": "The Response business identifier.",
                "type": "array"
              },
              "status": {
                "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                "type": "string",
                "description": "A string which has at least one character and no leading or trailing whitespace and where there is no whitespace other than single spaces in the contents"
              },
              "_status": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "created": {
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                "type": "string",
                "description": "A date, date-time or partial date (e.g. just year or year + month).  If hours and minutes are specified, a time zone SHALL be populated. The format is a union of the schema types gYear, gYearMonth, date and dateTime. Seconds must be provided due to schema type constraints but may be zero-filled and may be ignored.                 Dates SHALL be valid dates."
              },
              "_created": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "insurer": {
                "description": "A reference from one resource to another.",
                "additionalProperties": false
              },
              "provider": {
                "description": "A reference from one resource to another.",
                "additionalProperties": false
              },
              "candidate": {
                "description": "A reference from one resource to another.",
                "additionalProperties": false
              },
              "coverage": {
                "description": "A reference from one resource to another.",
                "additionalProperties": false
              }
            },
            "additionalProperties": false,
            "required": [
              "resourceType"
            ]
          },
          {
            "description": "This resource provides enrollment and plan details from the processing of an EnrollmentRequest resource.",
            "properties": {
              "resourceType": {
                "description": "This is a EnrollmentResponse resource",
                "const": "EnrollmentResponse"
              },
              "id": {
                "description": "The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.",
                "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                "type": "string"
              },
              "meta": {
                "description": "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
                "additionalProperties": false
              },
              "implicitRules": {
                "pattern": "^\\S*$",
                "type": "string",
                "description": "String of characters used to identify a name or a resource"
              },
              "_implicitRules": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "language": {
                "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                "type": "string",
                "description": "A string which has at least one character and no leading or trailing whitespace and where there is no whitespace other than single spaces in the contents"
              },
              "_language": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "text": {
                "description": "A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it \"clinically safe\" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.",
                "additionalProperties": false
              },
              "contained": {
                "description": "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope.",
                "type": "array"
              },
              "extension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                "type": "array"
              },
              "modifierExtension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                "type": "array"
              },
              "identifier": {
                "description": "The Response business identifier.",
                "type": "array"
              },
              "status": {
                "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                "type": "string",
                "description": "A string which has at least one character and no leading or trailing whitespace and where there is no whitespace other than single spaces in the contents"
              },
              "_status": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "request": {
                "description": "A reference from one resource to another.",
                "additionalProperties": false
              },
              "outcome": {
                "description": "Processing status: error, complete.",
                "enum": [
                  "queued",
                  "complete",
                  "error",
                  "partial"
                ]
              },
              "_outcome": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "disposition": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "_disposition": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "created": {
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                "type": "string",
                "description": "A date, date-time or partial date (e.g. just year or year + month).  If hours and minutes are specified, a time zone SHALL be populated. The format is a union of the schema types gYear, gYearMonth, date and dateTime. Seconds must be provided due to schema type constraints but may be zero-filled and may be ignored.                 Dates SHALL be valid dates."
              },
              "_created": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "organization": {
                "description": "A reference from one resource to another.",
                "additionalProperties": false
              },
              "requestProvider": {
                "description": "A reference from one resource to another.",
                "additionalProperties": false
              }
            },
            "additionalProperties": false,
            "required": [
              "resourceType"
            ]
          },
          {
            "description": "An association between a patient and an organization / healthcare provider(s) during which time encounters may occur. The managing organization assumes a level of responsibility for the patient during this time.",
            "properties": {
              "resourceType": {
                "description": "This is a EpisodeOfCare resource",
                "const": "EpisodeOfCare"
              },
              "id": {
                "description": "The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.",
                "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                "type": "string"
              },
              "meta": {
                "description": "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
                "additionalProperties": false
              },
              "implicitRules": {
                "pattern": "^\\S*$",
                "type": "string",
                "description": "String of characters used to identify a name or a resource"
              },
              "_implicitRules": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "language": {
                "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                "type": "string",
                "description": "A string which has at least one character and no leading or trailing whitespace and where there is no whitespace other than single spaces in the contents"
              },
              "_language": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "text": {
                "description": "A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it \"clinically safe\" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.",
                "additionalProperties": false
              },
              "contained": {
                "description": "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope.",
                "type": "array"
              },
              "extension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                "type": "array"
              },
              "modifierExtension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                "type": "array"
              },
              "identifier": {
                "description": "The EpisodeOfCare may be known by different identifiers for different contexts of use, such as when an external agency is tracking the Episode for funding purposes.",
                "type": "array"
              },
              "status": {
                "description": "planned | waitlist | active | onhold | finished | cancelled.",
                "enum": [
                  "planned",
                  "waitlist",
                  "active",
                  "onhold",
                  "finished",
                  "cancelled",
                  "entered-in-error"
                ]
              },
              "_status": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "statusHistory": {
                "description": "The history of statuses that the EpisodeOfCare has been through (without requiring processing the history of the resource).",
                "items": {
                  "description": "An association between a patient and an organization / healthcare provider(s) during which time encounters may occur. The managing organization assumes a level of responsibility for the patient during this time.",
                  "properties": {
                    "id": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "type": "array"
                    },
                    "modifierExtension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                      "type": "array"
                    },
                    "status": {
                      "description": "planned | waitlist | active | onhold | finished | cancelled.",
                      "enum": [
                        "planned",
                        "waitlist",
                        "active",
                        "onhold",
                        "finished",
                        "cancelled",
                        "entered-in-error"
                      ]
                    },
                    "_status": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "period": {
                      "description": "A time period defined by a start and end date and optionally time.",
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false,
                  "required": [
                    "period"
                  ]
                },
                "type": "array"
              },
              "type": {
                "description": "A classification of the type of episode of care; e.g. specialist referral, disease management, type of funded care.",
                "type": "array"
              },
              "diagnosis": {
                "description": "The list of diagnosis relevant to this episode of care.",
                "items": {
                  "description": "An association between a patient and an organization / healthcare provider(s) during which time encounters may occur. The managing organization assumes a level of responsibility for the patient during this time.",
                  "properties": {
                    "id": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "type": "array"
                    },
                    "modifierExtension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                      "type": "array"
                    },
                    "condition": {
                      "description": "A reference from one resource to another.",
                      "additionalProperties": false
                    },
                    "role": {
                      "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                      "additionalProperties": false
                    },
                    "rank": {
                      "pattern": "^[1-9][0-9]*$",
                      "type": "number",
                      "description": "An integer with a value that is positive (e.g. >0)"
                    },
                    "_rank": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false,
                  "required": [
                    "condition"
                  ]
                },
                "type": "array"
              },
              "patient": {
                "description": "A reference from one resource to another.",
                "additionalProperties": false
              },
              "managingOrganization": {
                "description": "A reference from one resource to another.",
                "additionalProperties": false
              },
              "period": {
                "description": "A time period defined by a start and end date and optionally time.",
                "additionalProperties": false
              },
              "referralRequest": {
                "description": "Referral Request(s) that are fulfilled by this EpisodeOfCare, incoming referrals.",
                "type": "array"
              },
              "careManager": {
                "description": "A reference from one resource to another.",
                "additionalProperties": false
              },
              "team": {
                "description": "The list of practitioners that may be facilitating this episode of care for specific purposes.",
                "type": "array"
              },
              "account": {
                "description": "The set of accounts that may be used for billing for this EpisodeOfCare.",
                "type": "array"
              }
            },
            "additionalProperties": false,
            "required": [
              "patient",
              "resourceType"
            ]
          },
          {
            "description": "The EventDefinition resource provides a reusable description of when a particular event can occur.",
            "properties": {
              "resourceType": {
                "description": "This is a EventDefinition resource",
                "const": "EventDefinition"
              },
              "id": {
                "description": "The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.",
                "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                "type": "string"
              },
              "meta": {
                "description": "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
                "additionalProperties": false
              },
              "implicitRules": {
                "pattern": "^\\S*$",
                "type": "string",
                "description": "String of characters used to identify a name or a resource"
              },
              "_implicitRules": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "language": {
                "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                "type": "string",
                "description": "A string which has at least one character and no leading or trailing whitespace and where there is no whitespace other than single spaces in the contents"
              },
              "_language": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "text": {
                "description": "A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it \"clinically safe\" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.",
                "additionalProperties": false
              },
              "contained": {
                "description": "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope.",
                "type": "array"
              },
              "extension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                "type": "array"
              },
              "modifierExtension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                "type": "array"
              },
              "url": {
                "pattern": "^\\S*$",
                "type": "string",
                "description": "String of characters used to identify a name or a resource"
              },
              "_url": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "identifier": {
                "description": "A formal identifier that is used to identify this event definition when it is represented in other formats, or referenced in a specification, model, design or an instance.",
                "type": "array"
              },
              "version": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "_version": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "name": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "_name": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "title": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "_title": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "subtitle": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "_subtitle": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "status": {
                "description": "The status of this event definition. Enables tracking the life-cycle of the content.",
                "enum": [
                  "draft",
                  "active",
                  "retired",
                  "unknown"
                ]
              },
              "_status": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "experimental": {
                "description": "A Boolean value to indicate that this event definition is authored for testing purposes (or education/evaluation/marketing) and is not intended to be used for genuine usage.",
                "pattern": "^true|false$",
                "type": "boolean"
              },
              "_experimental": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "subjectCodeableConcept": {
                "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                "additionalProperties": false
              },
              "subjectReference": {
                "description": "A reference from one resource to another.",
                "additionalProperties": false
              },
              "date": {
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                "type": "string",
                "description": "A date, date-time or partial date (e.g. just year or year + month).  If hours and minutes are specified, a time zone SHALL be populated. The format is a union of the schema types gYear, gYearMonth, date and dateTime. Seconds must be provided due to schema type constraints but may be zero-filled and may be ignored.                 Dates SHALL be valid dates."
              },
              "_date": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "publisher": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "_publisher": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "contact": {
                "description": "Contact details to assist a user in finding and communicating with the publisher.",
                "type": "array"
              },
              "description": {
                "description": "A free text natural language description of the event definition from a consumer's perspective.",
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string"
              },
              "_description": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "useContext": {
                "description": "The content was developed with a focus and intent of supporting the contexts that are listed. These contexts may be general categories (gender, age, ...) or may be references to specific programs (insurance plans, studies, ...) and may be used to assist with indexing and searching for appropriate event definition instances.",
                "type": "array"
              },
              "jurisdiction": {
                "description": "A legal or geographic region in which the event definition is intended to be used.",
                "type": "array"
              },
              "purpose": {
                "description": "Explanation of why this event definition is needed and why it has been designed as it has.",
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string"
              },
              "_purpose": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "usage": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "_usage": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "copyright": {
                "description": "A copyright statement relating to the event definition and/or its contents. Copyright statements are generally legal restrictions on the use and publishing of the event definition.",
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string"
              },
              "_copyright": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "approvalDate": {
                "description": "The date on which the resource content was approved by the publisher. Approval happens once when the content is officially approved for usage.",
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                "type": "string"
              },
              "_approvalDate": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "lastReviewDate": {
                "description": "The date on which the resource content was last reviewed. Review happens periodically after approval but does not change the original approval date.",
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                "type": "string"
              },
              "_lastReviewDate": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "effectivePeriod": {
                "description": "A time period defined by a start and end date and optionally time.",
                "additionalProperties": false
              },
              "topic": {
                "description": "Descriptive topics related to the module. Topics provide a high-level categorization of the module that can be useful for filtering and searching.",
                "type": "array"
              },
              "author": {
                "description": "An individiual or organization primarily involved in the creation and maintenance of the content.",
                "type": "array"
              },
              "editor": {
                "description": "An individual or organization primarily responsible for internal coherence of the content.",
                "type": "array"
              },
              "reviewer": {
                "description": "An individual or organization primarily responsible for review of some aspect of the content.",
                "type": "array"
              },
              "endorser": {
                "description": "An individual or organization responsible for officially endorsing the content for use in some setting.",
                "type": "array"
              },
              "relatedArtifact": {
                "description": "Related resources such as additional documentation, justification, or bibliographic references.",
                "type": "array"
              },
              "trigger": {
                "description": "The trigger element defines when the event occurs. If more than one trigger condition is specified, the event fires whenever any one of the trigger conditions is met.",
                "items": {
                  "description": "A description of a triggering event. Triggering events can be named events, data events, or periodic, as determined by the type element.",
                  "additionalProperties": false
                },
                "type": "array"
              }
            },
            "additionalProperties": false,
            "required": [
              "trigger",
              "resourceType"
            ]
          },
          {
            "description": "The Evidence resource describes the conditional state (population and any exposures being compared within the population) and outcome (if specified) that the knowledge (evidence, assertion, recommendation) is about.",
            "properties": {
              "resourceType": {
                "description": "This is a Evidence resource",
                "const": "Evidence"
              },
              "id": {
                "description": "The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.",
                "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                "type": "string"
              },
              "meta": {
                "description": "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
                "additionalProperties": false
              },
              "implicitRules": {
                "pattern": "^\\S*$",
                "type": "string",
                "description": "String of characters used to identify a name or a resource"
              },
              "_implicitRules": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "language": {
                "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                "type": "string",
                "description": "A string which has at least one character and no leading or trailing whitespace and where there is no whitespace other than single spaces in the contents"
              },
              "_language": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "text": {
                "description": "A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it \"clinically safe\" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.",
                "additionalProperties": false
              },
              "contained": {
                "description": "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope.",
                "type": "array"
              },
              "extension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                "type": "array"
              },
              "modifierExtension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                "type": "array"
              },
              "url": {
                "pattern": "^\\S*$",
                "type": "string",
                "description": "String of characters used to identify a name or a resource"
              },
              "_url": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "identifier": {
                "description": "A formal identifier that is used to identify this evidence when it is represented in other formats, or referenced in a specification, model, design or an instance.",
                "type": "array"
              },
              "version": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "_version": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "name": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "_name": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "title": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "_title": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "shortTitle": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "_shortTitle": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "subtitle": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "_subtitle": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "status": {
                "description": "The status of this evidence. Enables tracking the life-cycle of the content.",
                "enum": [
                  "draft",
                  "active",
                  "retired",
                  "unknown"
                ]
              },
              "_status": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "date": {
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                "type": "string",
                "description": "A date, date-time or partial date (e.g. just year or year + month).  If hours and minutes are specified, a time zone SHALL be populated. The format is a union of the schema types gYear, gYearMonth, date and dateTime. Seconds must be provided due to schema type constraints but may be zero-filled and may be ignored.                 Dates SHALL be valid dates."
              },
              "_date": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "publisher": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "_publisher": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "contact": {
                "description": "Contact details to assist a user in finding and communicating with the publisher.",
                "type": "array"
              },
              "description": {
                "description": "A free text natural language description of the evidence from a consumer's perspective.",
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string"
              },
              "_description": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "note": {
                "description": "A human-readable string to clarify or explain concepts about the resource.",
                "type": "array"
              },
              "useContext": {
                "description": "The content was developed with a focus and intent of supporting the contexts that are listed. These contexts may be general categories (gender, age, ...) or may be references to specific programs (insurance plans, studies, ...) and may be used to assist with indexing and searching for appropriate evidence instances.",
                "type": "array"
              },
              "jurisdiction": {
                "description": "A legal or geographic region in which the evidence is intended to be used.",
                "type": "array"
              },
              "copyright": {
                "description": "A copyright statement relating to the evidence and/or its contents. Copyright statements are generally legal restrictions on the use and publishing of the evidence.",
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string"
              },
              "_copyright": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "approvalDate": {
                "description": "The date on which the resource content was approved by the publisher. Approval happens once when the content is officially approved for usage.",
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                "type": "string"
              },
              "_approvalDate": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "lastReviewDate": {
                "description": "The date on which the resource content was last reviewed. Review happens periodically after approval but does not change the original approval date.",
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                "type": "string"
              },
              "_lastReviewDate": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "effectivePeriod": {
                "description": "A time period defined by a start and end date and optionally time.",
                "additionalProperties": false
              },
              "topic": {
                "description": "Descriptive topics related to the content of the Evidence. Topics provide a high-level categorization grouping types of Evidences that can be useful for filtering and searching.",
                "type": "array"
              },
              "author": {
                "description": "An individiual or organization primarily involved in the creation and maintenance of the content.",
                "type": "array"
              },
              "editor": {
                "description": "An individual or organization primarily responsible for internal coherence of the content.",
                "type": "array"
              },
              "reviewer": {
                "description": "An individual or organization primarily responsible for review of some aspect of the content.",
                "type": "array"
              },
              "endorser": {
                "description": "An individual or organization responsible for officially endorsing the content for use in some setting.",
                "type": "array"
              },
              "relatedArtifact": {
                "description": "Related artifacts such as additional documentation, justification, or bibliographic references.",
                "type": "array"
              },
              "exposureBackground": {
                "description": "A reference from one resource to another.",
                "additionalProperties": false
              },
              "exposureVariant": {
                "description": "A reference to a EvidenceVariable resource that defines the exposure for the research.",
                "type": "array"
              },
              "outcome": {
                "description": "A reference to a EvidenceVariable resomece that defines the outcome for the research.",
                "type": "array"
              }
            },
            "additionalProperties": false,
            "required": [
              "exposureBackground",
              "resourceType"
            ]
          },
          {
            "description": "The EvidenceVariable resource describes a \"PICO\" element that knowledge (evidence, assertion, recommendation) is about.",
            "properties": {
              "resourceType": {
                "description": "This is a EvidenceVariable resource",
                "const": "EvidenceVariable"
              },
              "id": {
                "description": "The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.",
                "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                "type": "string"
              },
              "meta": {
                "description": "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
                "additionalProperties": false
              },
              "implicitRules": {
                "pattern": "^\\S*$",
                "type": "string",
                "description": "String of characters used to identify a name or a resource"
              },
              "_implicitRules": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "language": {
                "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                "type": "string",
                "description": "A string which has at least one character and no leading or trailing whitespace and where there is no whitespace other than single spaces in the contents"
              },
              "_language": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "text": {
                "description": "A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it \"clinically safe\" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.",
                "additionalProperties": false
              },
              "contained": {
                "description": "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope.",
                "type": "array"
              },
              "extension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                "type": "array"
              },
              "modifierExtension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                "type": "array"
              },
              "url": {
                "pattern": "^\\S*$",
                "type": "string",
                "description": "String of characters used to identify a name or a resource"
              },
              "_url": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "identifier": {
                "description": "A formal identifier that is used to identify this evidence variable when it is represented in other formats, or referenced in a specification, model, design or an instance.",
                "type": "array"
              },
              "version": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "_version": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "name": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "_name": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "title": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "_title": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "shortTitle": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "_shortTitle": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "subtitle": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "_subtitle": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "status": {
                "description": "The status of this evidence variable. Enables tracking the life-cycle of the content.",
                "enum": [
                  "draft",
                  "active",
                  "retired",
                  "unknown"
                ]
              },
              "_status": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "date": {
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                "type": "string",
                "description": "A date, date-time or partial date (e.g. just year or year + month).  If hours and minutes are specified, a time zone SHALL be populated. The format is a union of the schema types gYear, gYearMonth, date and dateTime. Seconds must be provided due to schema type constraints but may be zero-filled and may be ignored.                 Dates SHALL be valid dates."
              },
              "_date": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "publisher": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "_publisher": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "contact": {
                "description": "Contact details to assist a user in finding and communicating with the publisher.",
                "type": "array"
              },
              "description": {
                "description": "A free text natural language description of the evidence variable from a consumer's perspective.",
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string"
              },
              "_description": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "note": {
                "description": "A human-readable string to clarify or explain concepts about the resource.",
                "type": "array"
              },
              "useContext": {
                "description": "The content was developed with a focus and intent of supporting the contexts that are listed. These contexts may be general categories (gender, age, ...) or may be references to specific programs (insurance plans, studies, ...) and may be used to assist with indexing and searching for appropriate evidence variable instances.",
                "type": "array"
              },
              "jurisdiction": {
                "description": "A legal or geographic region in which the evidence variable is intended to be used.",
                "type": "array"
              },
              "copyright": {
                "description": "A copyright statement relating to the evidence variable and/or its contents. Copyright statements are generally legal restrictions on the use and publishing of the evidence variable.",
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string"
              },
              "_copyright": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "approvalDate": {
                "description": "The date on which the resource content was approved by the publisher. Approval happens once when the content is officially approved for usage.",
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                "type": "string"
              },
              "_approvalDate": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "lastReviewDate": {
                "description": "The date on which the resource content was last reviewed. Review happens periodically after approval but does not change the original approval date.",
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                "type": "string"
              },
              "_lastReviewDate": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "effectivePeriod": {
                "description": "A time period defined by a start and end date and optionally time.",
                "additionalProperties": false
              },
              "topic": {
                "description": "Descriptive topics related to the content of the EvidenceVariable. Topics provide a high-level categorization grouping types of EvidenceVariables that can be useful for filtering and searching.",
                "type": "array"
              },
              "author": {
                "description": "An individiual or organization primarily involved in the creation and maintenance of the content.",
                "type": "array"
              },
              "editor": {
                "description": "An individual or organization primarily responsible for internal coherence of the content.",
                "type": "array"
              },
              "reviewer": {
                "description": "An individual or organization primarily responsible for review of some aspect of the content.",
                "type": "array"
              },
              "endorser": {
                "description": "An individual or organization responsible for officially endorsing the content for use in some setting.",
                "type": "array"
              },
              "relatedArtifact": {
                "description": "Related artifacts such as additional documentation, justification, or bibliographic references.",
                "type": "array"
              },
              "type": {
                "description": "The type of evidence element, a population, an exposure, or an outcome.",
                "enum": [
                  "dichotomous",
                  "continuous",
                  "descriptive"
                ]
              },
              "_type": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "characteristic": {
                "description": "A characteristic that defines the members of the evidence element. Multiple characteristics are applied with \"and\" semantics.",
                "items": {
                  "description": "The EvidenceVariable resource describes a \"PICO\" element that knowledge (evidence, assertion, recommendation) is about.",
                  "properties": {
                    "id": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "type": "array"
                    },
                    "modifierExtension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                      "type": "array"
                    },
                    "description": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "_description": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "definitionReference": {
                      "description": "A reference from one resource to another.",
                      "additionalProperties": false
                    },
                    "definitionCanonical": {
                      "description": "Define members of the evidence element using Codes (such as condition, medication, or observation), Expressions ( using an expression language such as FHIRPath or CQL) or DataRequirements (such as Diabetes diagnosis onset in the last year).",
                      "pattern": "^\\S*$",
                      "type": "string"
                    },
                    "_definitionCanonical": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "definitionCodeableConcept": {
                      "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                      "additionalProperties": false
                    },
                    "definitionExpression": {
                      "description": "Define members of the evidence element using Codes (such as condition, medication, or observation), Expressions ( using an expression language such as FHIRPath or CQL) or DataRequirements (such as Diabetes diagnosis onset in the last year).",
                      "additionalProperties": false
                    },
                    "definitionDataRequirement": {
                      "description": "Describes a required data item for evaluation in terms of the type of data, and optional code or date-based filters of the data.",
                      "additionalProperties": false
                    },
                    "definitionTriggerDefinition": {
                      "description": "A description of a triggering event. Triggering events can be named events, data events, or periodic, as determined by the type element.",
                      "additionalProperties": false
                    },
                    "usageContext": {
                      "description": "Use UsageContext to define the members of the population, such as Age Ranges, Genders, Settings.",
                      "type": "array"
                    },
                    "exclude": {
                      "description": "When true, members with this characteristic are excluded from the element.",
                      "pattern": "^true|false$",
                      "type": "boolean"
                    },
                    "_exclude": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "participantEffectiveDateTime": {
                      "description": "Indicates what effective period the study covers.",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                      "type": "string"
                    },
                    "_participantEffectiveDateTime": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "participantEffectivePeriod": {
                      "description": "A time period defined by a start and end date and optionally time.",
                      "additionalProperties": false
                    },
                    "participantEffectiveDuration": {
                      "description": "Indicates what effective period the study covers.",
                      "additionalProperties": false
                    },
                    "participantEffectiveTiming": {
                      "description": "Indicates what effective period the study covers.",
                      "additionalProperties": false
                    },
                    "timeFromStart": {
                      "description": "Indicates duration from the participant's study entry.",
                      "additionalProperties": false
                    },
                    "groupMeasure": {
                      "description": "Indicates how elements are aggregated within the study effective period.",
                      "enum": [
                        "mean",
                        "median",
                        "mean-of-mean",
                        "mean-of-median",
                        "median-of-mean",
                        "median-of-median"
                      ]
                    },
                    "_groupMeasure": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                },
                "type": "array"
              }
            },
            "additionalProperties": false,
            "required": [
              "characteristic",
              "resourceType"
            ]
          },
          {
            "description": "Example of workflow instance.",
            "properties": {
              "resourceType": {
                "description": "This is a ExampleScenario resource",
                "const": "ExampleScenario"
              },
              "id": {
                "description": "The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.",
                "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                "type": "string"
              },
              "meta": {
                "description": "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
                "additionalProperties": false
              },
              "implicitRules": {
                "pattern": "^\\S*$",
                "type": "string",
                "description": "String of characters used to identify a name or a resource"
              },
              "_implicitRules": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "language": {
                "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                "type": "string",
                "description": "A string which has at least one character and no leading or trailing whitespace and where there is no whitespace other than single spaces in the contents"
              },
              "_language": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "text": {
                "description": "A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it \"clinically safe\" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.",
                "additionalProperties": false
              },
              "contained": {
                "description": "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope.",
                "type": "array"
              },
              "extension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                "type": "array"
              },
              "modifierExtension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                "type": "array"
              },
              "url": {
                "pattern": "^\\S*$",
                "type": "string",
                "description": "String of characters used to identify a name or a resource"
              },
              "_url": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "identifier": {
                "description": "A formal identifier that is used to identify this example scenario when it is represented in other formats, or referenced in a specification, model, design or an instance.",
                "type": "array"
              },
              "version": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "_version": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "name": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "_name": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "status": {
                "description": "The status of this example scenario. Enables tracking the life-cycle of the content.",
                "enum": [
                  "draft",
                  "active",
                  "retired",
                  "unknown"
                ]
              },
              "_status": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "experimental": {
                "description": "A Boolean value to indicate that this example scenario is authored for testing purposes (or education/evaluation/marketing) and is not intended to be used for genuine usage.",
                "pattern": "^true|false$",
                "type": "boolean"
              },
              "_experimental": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "date": {
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                "type": "string",
                "description": "A date, date-time or partial date (e.g. just year or year + month).  If hours and minutes are specified, a time zone SHALL be populated. The format is a union of the schema types gYear, gYearMonth, date and dateTime. Seconds must be provided due to schema type constraints but may be zero-filled and may be ignored.                 Dates SHALL be valid dates."
              },
              "_date": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "publisher": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "_publisher": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "contact": {
                "description": "Contact details to assist a user in finding and communicating with the publisher.",
                "type": "array"
              },
              "useContext": {
                "description": "The content was developed with a focus and intent of supporting the contexts that are listed. These contexts may be general categories (gender, age, ...) or may be references to specific programs (insurance plans, studies, ...) and may be used to assist with indexing and searching for appropriate example scenario instances.",
                "type": "array"
              },
              "jurisdiction": {
                "description": "A legal or geographic region in which the example scenario is intended to be used.",
                "type": "array"
              },
              "copyright": {
                "description": "A copyright statement relating to the example scenario and/or its contents. Copyright statements are generally legal restrictions on the use and publishing of the example scenario.",
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string"
              },
              "_copyright": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "purpose": {
                "description": "What the example scenario resource is created for. This should not be used to show the business purpose of the scenario itself, but the purpose of documenting a scenario.",
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string"
              },
              "_purpose": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "actor": {
                "description": "Actor participating in the resource.",
                "items": {
                  "description": "Example of workflow instance.",
                  "properties": {
                    "id": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "type": "array"
                    },
                    "modifierExtension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                      "type": "array"
                    },
                    "actorId": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "_actorId": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "type": {
                      "description": "The type of actor - person or system.",
                      "enum": [
                        "person",
                        "entity"
                      ]
                    },
                    "_type": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "name": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "_name": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "description": {
                      "description": "The description of the actor.",
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string"
                    },
                    "_description": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                },
                "type": "array"
              },
              "instance": {
                "description": "Each resource and each version that is present in the workflow.",
                "items": {
                  "description": "Example of workflow instance.",
                  "properties": {
                    "id": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "type": "array"
                    },
                    "modifierExtension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                      "type": "array"
                    },
                    "resourceId": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "_resourceId": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "resourceType": {
                      "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                      "type": "string",
                      "description": "A string which has at least one character and no leading or trailing whitespace and where there is no whitespace other than single spaces in the contents"
                    },
                    "_resourceType": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "name": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "_name": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "description": {
                      "description": "Human-friendly description of the resource instance.",
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string"
                    },
                    "_description": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "version": {
                      "description": "A specific version of the resource.",
                      "items": {
                        "description": "Example of workflow instance.",
                        "properties": {
                          "id": {
                            "pattern": "^[ \\r\\n\\t\\S]+$",
                            "type": "string",
                            "description": "A sequence of Unicode characters"
                          },
                          "extension": {
                            "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                            "type": "array"
                          },
                          "modifierExtension": {
                            "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                            "type": "array"
                          },
                          "versionId": {
                            "pattern": "^[ \\r\\n\\t\\S]+$",
                            "type": "string",
                            "description": "A sequence of Unicode characters"
                          },
                          "_versionId": {
                            "description": "Base definition for all elements in a resource.",
                            "additionalProperties": false
                          },
                          "description": {
                            "description": "The description of the resource version.",
                            "pattern": "^[ \\r\\n\\t\\S]+$",
                            "type": "string"
                          },
                          "_description": {
                            "description": "Base definition for all elements in a resource.",
                            "additionalProperties": false
                          }
                        },
                        "additionalProperties": false
                      },
                      "type": "array"
                    },
                    "containedInstance": {
                      "description": "Resources contained in the instance (e.g. the observations contained in a bundle).",
                      "items": {
                        "description": "Example of workflow instance.",
                        "properties": {
                          "id": {
                            "pattern": "^[ \\r\\n\\t\\S]+$",
                            "type": "string",
                            "description": "A sequence of Unicode characters"
                          },
                          "extension": {
                            "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                            "type": "array"
                          },
                          "modifierExtension": {
                            "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                            "type": "array"
                          },
                          "resourceId": {
                            "pattern": "^[ \\r\\n\\t\\S]+$",
                            "type": "string",
                            "description": "A sequence of Unicode characters"
                          },
                          "_resourceId": {
                            "description": "Base definition for all elements in a resource.",
                            "additionalProperties": false
                          },
                          "versionId": {
                            "pattern": "^[ \\r\\n\\t\\S]+$",
                            "type": "string",
                            "description": "A sequence of Unicode characters"
                          },
                          "_versionId": {
                            "description": "Base definition for all elements in a resource.",
                            "additionalProperties": false
                          }
                        },
                        "additionalProperties": false
                      },
                      "type": "array"
                    }
                  },
                  "additionalProperties": false
                },
                "type": "array"
              },
              "process": {
                "description": "Each major process - a group of operations.",
                "items": {
                  "description": "Example of workflow instance.",
                  "properties": {
                    "id": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "type": "array"
                    },
                    "modifierExtension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                      "type": "array"
                    },
                    "title": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "_title": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "description": {
                      "description": "A longer description of the group of operations.",
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string"
                    },
                    "_description": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "preConditions": {
                      "description": "Description of initial status before the process starts.",
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string"
                    },
                    "_preConditions": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "postConditions": {
                      "description": "Description of final status after the process ends.",
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string"
                    },
                    "_postConditions": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "step": {
                      "description": "Each step of the process.",
                      "items": {
                        "description": "Example of workflow instance.",
                        "properties": {
                          "id": {
                            "pattern": "^[ \\r\\n\\t\\S]+$",
                            "type": "string",
                            "description": "A sequence of Unicode characters"
                          },
                          "extension": {
                            "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                            "type": "array"
                          },
                          "modifierExtension": {
                            "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                            "type": "array"
                          },
                          "process": {
                            "description": "Nested process.",
                            "type": "array"
                          },
                          "pause": {
                            "description": "If there is a pause in the flow.",
                            "pattern": "^true|false$",
                            "type": "boolean"
                          },
                          "_pause": {
                            "description": "Base definition for all elements in a resource.",
                            "additionalProperties": false
                          },
                          "operation": {
                            "description": "Each interaction or action.",
                            "properties": {
                              "id": {
                                "pattern": "^[ \\r\\n\\t\\S]+$",
                                "type": "string",
                                "description": "A sequence of Unicode characters"
                              },
                              "extension": {
                                "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                                "type": "array"
                              },
                              "modifierExtension": {
                                "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                                "type": "array"
                              },
                              "number": {
                                "pattern": "^[ \\r\\n\\t\\S]+$",
                                "type": "string",
                                "description": "A sequence of Unicode characters"
                              },
                              "_number": {
                                "description": "Base definition for all elements in a resource.",
                                "additionalProperties": false
                              },
                              "type": {
                                "pattern": "^[ \\r\\n\\t\\S]+$",
                                "type": "string",
                                "description": "A sequence of Unicode characters"
                              },
                              "_type": {
                                "description": "Base definition for all elements in a resource.",
                                "additionalProperties": false
                              },
                              "name": {
                                "pattern": "^[ \\r\\n\\t\\S]+$",
                                "type": "string",
                                "description": "A sequence of Unicode characters"
                              },
                              "_name": {
                                "description": "Base definition for all elements in a resource.",
                                "additionalProperties": false
                              },
                              "initiator": {
                                "pattern": "^[ \\r\\n\\t\\S]+$",
                                "type": "string",
                                "description": "A sequence of Unicode characters"
                              },
                              "_initiator": {
                                "description": "Base definition for all elements in a resource.",
                                "additionalProperties": false
                              },
                              "receiver": {
                                "pattern": "^[ \\r\\n\\t\\S]+$",
                                "type": "string",
                                "description": "A sequence of Unicode characters"
                              },
                              "_receiver": {
                                "description": "Base definition for all elements in a resource.",
                                "additionalProperties": false
                              },
                              "description": {
                                "description": "A comment to be inserted in the diagram.",
                                "pattern": "^[ \\r\\n\\t\\S]+$",
                                "type": "string"
                              },
                              "_description": {
                                "description": "Base definition for all elements in a resource.",
                                "additionalProperties": false
                              },
                              "initiatorActive": {
                                "description": "Whether the initiator is deactivated right after the transaction.",
                                "pattern": "^true|false$",
                                "type": "boolean"
                              },
                              "_initiatorActive": {
                                "description": "Base definition for all elements in a resource.",
                                "additionalProperties": false
                              },
                              "receiverActive": {
                                "description": "Whether the receiver is deactivated right after the transaction.",
                                "pattern": "^true|false$",
                                "type": "boolean"
                              },
                              "_receiverActive": {
                                "description": "Base definition for all elements in a resource.",
                                "additionalProperties": false
                              },
                              "request": {
                                "description": "Example of workflow instance.",
                                "additionalProperties": false
                              },
                              "response": {
                                "description": "Example of workflow instance.",
                                "additionalProperties": false
                              }
                            },
                            "additionalProperties": false
                          },
                          "alternative": {
                            "description": "Indicates an alternative step that can be taken instead of the operations on the base step in exceptional/atypical circumstances.",
                            "items": {
                              "description": "Example of workflow instance.",
                              "properties": {
                                "id": {
                                  "pattern": "^[ \\r\\n\\t\\S]+$",
                                  "type": "string",
                                  "description": "A sequence of Unicode characters"
                                },
                                "extension": {
                                  "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                                  "type": "array"
                                },
                                "modifierExtension": {
                                  "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                                  "type": "array"
                                },
                                "title": {
                                  "pattern": "^[ \\r\\n\\t\\S]+$",
                                  "type": "string",
                                  "description": "A sequence of Unicode characters"
                                },
                                "_title": {
                                  "description": "Base definition for all elements in a resource.",
                                  "additionalProperties": false
                                },
                                "description": {
                                  "description": "A human-readable description of the alternative explaining when the alternative should occur rather than the base step.",
                                  "pattern": "^[ \\r\\n\\t\\S]+$",
                                  "type": "string"
                                },
                                "_description": {
                                  "description": "Base definition for all elements in a resource.",
                                  "additionalProperties": false
                                },
                                "step": {
                                  "description": "What happens in each alternative option.",
                                  "type": "array"
                                }
                              },
                              "additionalProperties": false
                            },
                            "type": "array"
                          }
                        },
                        "additionalProperties": false
                      },
                      "type": "array"
                    }
                  },
                  "additionalProperties": false
                },
                "type": "array"
              },
              "workflow": {
                "description": "Another nested workflow.",
                "type": "array"
              }
            },
            "additionalProperties": false,
            "required": [
              "resourceType"
            ]
          },
          {
            "description": "This resource provides: the claim details; adjudication details from the processing of a Claim; and optionally account balance information, for informing the subscriber of the benefits provided.",
            "properties": {
              "resourceType": {
                "description": "This is a ExplanationOfBenefit resource",
                "const": "ExplanationOfBenefit"
              },
              "id": {
                "description": "The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.",
                "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                "type": "string"
              },
              "meta": {
                "description": "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
                "additionalProperties": false
              },
              "implicitRules": {
                "pattern": "^\\S*$",
                "type": "string",
                "description": "String of characters used to identify a name or a resource"
              },
              "_implicitRules": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "language": {
                "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                "type": "string",
                "description": "A string which has at least one character and no leading or trailing whitespace and where there is no whitespace other than single spaces in the contents"
              },
              "_language": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "text": {
                "description": "A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it \"clinically safe\" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.",
                "additionalProperties": false
              },
              "contained": {
                "description": "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope.",
                "type": "array"
              },
              "extension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                "type": "array"
              },
              "modifierExtension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                "type": "array"
              },
              "identifier": {
                "description": "A unique identifier assigned to this explanation of benefit.",
                "type": "array"
              },
              "status": {
                "description": "The status of the resource instance.",
                "enum": [
                  "active",
                  "cancelled",
                  "draft",
                  "entered-in-error"
                ]
              },
              "_status": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "type": {
                "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                "additionalProperties": false
              },
              "subType": {
                "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                "additionalProperties": false
              },
              "use": {
                "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                "type": "string",
                "description": "A string which has at least one character and no leading or trailing whitespace and where there is no whitespace other than single spaces in the contents"
              },
              "_use": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "patient": {
                "description": "A reference from one resource to another.",
                "additionalProperties": false
              },
              "billablePeriod": {
                "description": "A time period defined by a start and end date and optionally time.",
                "additionalProperties": false
              },
              "created": {
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                "type": "string",
                "description": "A date, date-time or partial date (e.g. just year or year + month).  If hours and minutes are specified, a time zone SHALL be populated. The format is a union of the schema types gYear, gYearMonth, date and dateTime. Seconds must be provided due to schema type constraints but may be zero-filled and may be ignored.                 Dates SHALL be valid dates."
              },
              "_created": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "enterer": {
                "description": "A reference from one resource to another.",
                "additionalProperties": false
              },
              "insurer": {
                "description": "A reference from one resource to another.",
                "additionalProperties": false
              },
              "provider": {
                "description": "A reference from one resource to another.",
                "additionalProperties": false
              },
              "priority": {
                "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                "additionalProperties": false
              },
              "fundsReserveRequested": {
                "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                "additionalProperties": false
              },
              "fundsReserve": {
                "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                "additionalProperties": false
              },
              "related": {
                "description": "Other claims which are related to this claim such as prior submissions or claims for related services or for the same event.",
                "items": {
                  "description": "This resource provides: the claim details; adjudication details from the processing of a Claim; and optionally account balance information, for informing the subscriber of the benefits provided.",
                  "properties": {
                    "id": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "type": "array"
                    },
                    "modifierExtension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                      "type": "array"
                    },
                    "claim": {
                      "description": "A reference from one resource to another.",
                      "additionalProperties": false
                    },
                    "relationship": {
                      "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                      "additionalProperties": false
                    },
                    "reference": {
                      "description": "An identifier - identifies some entity uniquely and unambiguously. Typically this is used for business identifiers.",
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                },
                "type": "array"
              },
              "prescription": {
                "description": "A reference from one resource to another.",
                "additionalProperties": false
              },
              "originalPrescription": {
                "description": "A reference from one resource to another.",
                "additionalProperties": false
              },
              "payee": {
                "description": "The party to be reimbursed for cost of the products and services according to the terms of the policy.",
                "properties": {
                  "id": {
                    "pattern": "^[ \\r\\n\\t\\S]+$",
                    "type": "string",
                    "description": "A sequence of Unicode characters"
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "type": "array"
                  },
                  "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                    "type": "array"
                  },
                  "type": {
                    "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                    "additionalProperties": false
                  },
                  "party": {
                    "description": "A reference from one resource to another.",
                    "additionalProperties": false
                  }
                },
                "additionalProperties": false
              },
              "referral": {
                "description": "A reference from one resource to another.",
                "additionalProperties": false
              },
              "facility": {
                "description": "A reference from one resource to another.",
                "additionalProperties": false
              },
              "claim": {
                "description": "A reference from one resource to another.",
                "additionalProperties": false
              },
              "claimResponse": {
                "description": "A reference from one resource to another.",
                "additionalProperties": false
              },
              "outcome": {
                "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                "type": "string",
                "description": "A string which has at least one character and no leading or trailing whitespace and where there is no whitespace other than single spaces in the contents"
              },
              "_outcome": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "disposition": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "_disposition": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "preAuthRef": {
                "description": "Reference from the Insurer which is used in later communications which refers to this adjudication.",
                "type": "array"
              },
              "_preAuthRef": {
                "description": "Extensions for preAuthRef",
                "type": "array"
              },
              "preAuthRefPeriod": {
                "description": "The timeframe during which the supplied preauthorization reference may be quoted on claims to obtain the adjudication as provided.",
                "type": "array"
              },
              "careTeam": {
                "description": "The members of the team who provided the products and services.",
                "items": {
                  "description": "This resource provides: the claim details; adjudication details from the processing of a Claim; and optionally account balance information, for informing the subscriber of the benefits provided.",
                  "properties": {
                    "id": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "type": "array"
                    },
                    "modifierExtension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                      "type": "array"
                    },
                    "sequence": {
                      "pattern": "^[1-9][0-9]*$",
                      "type": "number",
                      "description": "An integer with a value that is positive (e.g. >0)"
                    },
                    "_sequence": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "provider": {
                      "description": "A reference from one resource to another.",
                      "additionalProperties": false
                    },
                    "responsible": {
                      "description": "The party who is billing and/or responsible for the claimed products or services.",
                      "pattern": "^true|false$",
                      "type": "boolean"
                    },
                    "_responsible": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "role": {
                      "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                      "additionalProperties": false
                    },
                    "qualification": {
                      "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false,
                  "required": [
                    "provider"
                  ]
                },
                "type": "array"
              },
              "supportingInfo": {
                "description": "Additional information codes regarding exceptions, special considerations, the condition, situation, prior or concurrent issues.",
                "items": {
                  "description": "This resource provides: the claim details; adjudication details from the processing of a Claim; and optionally account balance information, for informing the subscriber of the benefits provided.",
                  "properties": {
                    "id": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "type": "array"
                    },
                    "modifierExtension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                      "type": "array"
                    },
                    "sequence": {
                      "pattern": "^[1-9][0-9]*$",
                      "type": "number",
                      "description": "An integer with a value that is positive (e.g. >0)"
                    },
                    "_sequence": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "category": {
                      "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                      "additionalProperties": false
                    },
                    "code": {
                      "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                      "additionalProperties": false
                    },
                    "timingDate": {
                      "description": "The date when or period to which this information refers.",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                      "type": "string"
                    },
                    "_timingDate": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "timingPeriod": {
                      "description": "A time period defined by a start and end date and optionally time.",
                      "additionalProperties": false
                    },
                    "valueBoolean": {
                      "description": "Additional data or information such as resources, documents, images etc. including references to the data or the actual inclusion of the data.",
                      "pattern": "^true|false$",
                      "type": "boolean"
                    },
                    "_valueBoolean": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "valueString": {
                      "description": "Additional data or information such as resources, documents, images etc. including references to the data or the actual inclusion of the data.",
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string"
                    },
                    "_valueString": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "valueQuantity": {
                      "description": "A measured amount (or an amount that can potentially be measured). Note that measured amounts include amounts that are not precisely quantified, including amounts involving arbitrary units and floating currencies.",
                      "additionalProperties": false
                    },
                    "valueAttachment": {
                      "description": "For referring to data content defined in other formats.",
                      "additionalProperties": false
                    },
                    "valueReference": {
                      "description": "A reference from one resource to another.",
                      "additionalProperties": false
                    },
                    "reason": {
                      "description": "A reference to a code defined by a terminology system.",
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false,
                  "required": [
                    "category"
                  ]
                },
                "type": "array"
              },
              "diagnosis": {
                "description": "Information about diagnoses relevant to the claim items.",
                "items": {
                  "description": "This resource provides: the claim details; adjudication details from the processing of a Claim; and optionally account balance information, for informing the subscriber of the benefits provided.",
                  "properties": {
                    "id": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "type": "array"
                    },
                    "modifierExtension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                      "type": "array"
                    },
                    "sequence": {
                      "pattern": "^[1-9][0-9]*$",
                      "type": "number",
                      "description": "An integer with a value that is positive (e.g. >0)"
                    },
                    "_sequence": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "diagnosisCodeableConcept": {
                      "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                      "additionalProperties": false
                    },
                    "diagnosisReference": {
                      "description": "A reference from one resource to another.",
                      "additionalProperties": false
                    },
                    "type": {
                      "description": "When the condition was observed or the relative ranking.",
                      "type": "array"
                    },
                    "onAdmission": {
                      "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                      "additionalProperties": false
                    },
                    "packageCode": {
                      "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                },
                "type": "array"
              },
              "procedure": {
                "description": "Procedures performed on the patient relevant to the billing items with the claim.",
                "items": {
                  "description": "This resource provides: the claim details; adjudication details from the processing of a Claim; and optionally account balance information, for informing the subscriber of the benefits provided.",
                  "properties": {
                    "id": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "type": "array"
                    },
                    "modifierExtension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                      "type": "array"
                    },
                    "sequence": {
                      "pattern": "^[1-9][0-9]*$",
                      "type": "number",
                      "description": "An integer with a value that is positive (e.g. >0)"
                    },
                    "_sequence": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "type": {
                      "description": "When the condition was observed or the relative ranking.",
                      "type": "array"
                    },
                    "date": {
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                      "type": "string",
                      "description": "A date, date-time or partial date (e.g. just year or year + month).  If hours and minutes are specified, a time zone SHALL be populated. The format is a union of the schema types gYear, gYearMonth, date and dateTime. Seconds must be provided due to schema type constraints but may be zero-filled and may be ignored.                 Dates SHALL be valid dates."
                    },
                    "_date": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "procedureCodeableConcept": {
                      "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                      "additionalProperties": false
                    },
                    "procedureReference": {
                      "description": "A reference from one resource to another.",
                      "additionalProperties": false
                    },
                    "udi": {
                      "description": "Unique Device Identifiers associated with this line item.",
                      "type": "array"
                    }
                  },
                  "additionalProperties": false
                },
                "type": "array"
              },
              "precedence": {
                "pattern": "^[1-9][0-9]*$",
                "type": "number",
                "description": "An integer with a value that is positive (e.g. >0)"
              },
              "_precedence": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "insurance": {
                "description": "Financial instruments for reimbursement for the health care products and services specified on the claim.",
                "items": {
                  "description": "This resource provides: the claim details; adjudication details from the processing of a Claim; and optionally account balance information, for informing the subscriber of the benefits provided.",
                  "properties": {
                    "id": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "type": "array"
                    },
                    "modifierExtension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                      "type": "array"
                    },
                    "focal": {
                      "description": "A flag to indicate that this Coverage is to be used for adjudication of this claim when set to true.",
                      "pattern": "^true|false$",
                      "type": "boolean"
                    },
                    "_focal": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "coverage": {
                      "description": "A reference from one resource to another.",
                      "additionalProperties": false
                    },
                    "preAuthRef": {
                      "description": "Reference numbers previously provided by the insurer to the provider to be quoted on subsequent claims containing services or products related to the prior authorization.",
                      "type": "array"
                    },
                    "_preAuthRef": {
                      "description": "Extensions for preAuthRef",
                      "type": "array"
                    }
                  },
                  "additionalProperties": false,
                  "required": [
                    "coverage"
                  ]
                },
                "type": "array"
              },
              "accident": {
                "description": "Details of a accident which resulted in injuries which required the products and services listed in the claim.",
                "properties": {
                  "id": {
                    "pattern": "^[ \\r\\n\\t\\S]+$",
                    "type": "string",
                    "description": "A sequence of Unicode characters"
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "type": "array"
                  },
                  "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                    "type": "array"
                  },
                  "date": {
                    "description": "Date of an accident event  related to the products and services contained in the claim.",
                    "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                    "type": "string"
                  },
                  "_date": {
                    "description": "Base definition for all elements in a resource.",
                    "additionalProperties": false
                  },
                  "type": {
                    "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                    "additionalProperties": false
                  },
                  "locationAddress": {
                    "description": "The physical location of the accident event.",
                    "additionalProperties": false
                  },
                  "locationReference": {
                    "description": "A reference from one resource to another.",
                    "additionalProperties": false
                  }
                },
                "additionalProperties": false
              },
              "item": {
                "description": "A claim line. Either a simple (a product or service) or a 'group' of details which can also be a simple items or groups of sub-details.",
                "items": {
                  "description": "This resource provides: the claim details; adjudication details from the processing of a Claim; and optionally account balance information, for informing the subscriber of the benefits provided.",
                  "properties": {
                    "id": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "type": "array"
                    },
                    "modifierExtension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                      "type": "array"
                    },
                    "sequence": {
                      "pattern": "^[1-9][0-9]*$",
                      "type": "number",
                      "description": "An integer with a value that is positive (e.g. >0)"
                    },
                    "_sequence": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "careTeamSequence": {
                      "description": "Care team members related to this service or product.",
                      "type": "array"
                    },
                    "_careTeamSequence": {
                      "description": "Extensions for careTeamSequence",
                      "type": "array"
                    },
                    "diagnosisSequence": {
                      "description": "Diagnoses applicable for this service or product.",
                      "type": "array"
                    },
                    "_diagnosisSequence": {
                      "description": "Extensions for diagnosisSequence",
                      "type": "array"
                    },
                    "procedureSequence": {
                      "description": "Procedures applicable for this service or product.",
                      "type": "array"
                    },
                    "_procedureSequence": {
                      "description": "Extensions for procedureSequence",
                      "type": "array"
                    },
                    "informationSequence": {
                      "description": "Exceptions, special conditions and supporting information applicable for this service or product.",
                      "type": "array"
                    },
                    "_informationSequence": {
                      "description": "Extensions for informationSequence",
                      "type": "array"
                    },
                    "revenue": {
                      "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                      "additionalProperties": false
                    },
                    "category": {
                      "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                      "additionalProperties": false
                    },
                    "productOrService": {
                      "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                      "additionalProperties": false
                    },
                    "modifier": {
                      "description": "Item typification or modifiers codes to convey additional context for the product or service.",
                      "type": "array"
                    },
                    "programCode": {
                      "description": "Identifies the program under which this may be recovered.",
                      "type": "array"
                    },
                    "servicedDate": {
                      "description": "The date or dates when the service or product was supplied, performed or completed.",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                      "type": "string"
                    },
                    "_servicedDate": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "servicedPeriod": {
                      "description": "A time period defined by a start and end date and optionally time.",
                      "additionalProperties": false
                    },
                    "locationCodeableConcept": {
                      "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                      "additionalProperties": false
                    },
                    "locationAddress": {
                      "description": "Where the product or service was provided.",
                      "additionalProperties": false
                    },
                    "locationReference": {
                      "description": "A reference from one resource to another.",
                      "additionalProperties": false
                    },
                    "quantity": {
                      "description": "A measured amount (or an amount that can potentially be measured). Note that measured amounts include amounts that are not precisely quantified, including amounts involving arbitrary units and floating currencies.",
                      "additionalProperties": false
                    },
                    "unitPrice": {
                      "description": "If the item is not a group then this is the fee for the product or service, otherwise this is the total of the fees for the details of the group.",
                      "additionalProperties": false
                    },
                    "factor": {
                      "description": "A real number that represents a multiplier used in determining the overall value of services delivered and/or goods received. The concept of a Factor allows for a discount or surcharge multiplier to be applied to a monetary amount.",
                      "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                      "type": "number"
                    },
                    "_factor": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "net": {
                      "description": "The quantity times the unit price for an additional service or product or charge.",
                      "additionalProperties": false
                    },
                    "udi": {
                      "description": "Unique Device Identifiers associated with this line item.",
                      "type": "array"
                    },
                    "bodySite": {
                      "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                      "additionalProperties": false
                    },
                    "subSite": {
                      "description": "A region or surface of the bodySite, e.g. limb region or tooth surface(s).",
                      "type": "array"
                    },
                    "encounter": {
                      "description": "A billed item may include goods or services provided in multiple encounters.",
                      "type": "array"
                    },
                    "noteNumber": {
                      "description": "The numbers associated with notes below which apply to the adjudication of this item.",
                      "type": "array"
                    },
                    "_noteNumber": {
                      "description": "Extensions for noteNumber",
                      "type": "array"
                    },
                    "adjudication": {
                      "description": "If this item is a group then the values here are a summary of the adjudication of the detail items. If this item is a simple product or service then this is the result of the adjudication of this item.",
                      "items": {
                        "description": "This resource provides: the claim details; adjudication details from the processing of a Claim; and optionally account balance information, for informing the subscriber of the benefits provided.",
                        "properties": {
                          "id": {
                            "pattern": "^[ \\r\\n\\t\\S]+$",
                            "type": "string",
                            "description": "A sequence of Unicode characters"
                          },
                          "extension": {
                            "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                            "type": "array"
                          },
                          "modifierExtension": {
                            "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                            "type": "array"
                          },
                          "category": {
                            "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                            "additionalProperties": false
                          },
                          "reason": {
                            "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                            "additionalProperties": false
                          },
                          "amount": {
                            "description": "Monetary amount associated with the category.",
                            "additionalProperties": false
                          },
                          "value": {
                            "description": "A non-monetary value associated with the category. Mutually exclusive to the amount element above.",
                            "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                            "type": "number"
                          },
                          "_value": {
                            "description": "Base definition for all elements in a resource.",
                            "additionalProperties": false
                          }
                        },
                        "additionalProperties": false,
                        "required": [
                          "category"
                        ]
                      },
                      "type": "array"
                    },
                    "detail": {
                      "description": "Second-tier of goods and services.",
                      "items": {
                        "description": "This resource provides: the claim details; adjudication details from the processing of a Claim; and optionally account balance information, for informing the subscriber of the benefits provided.",
                        "properties": {
                          "id": {
                            "pattern": "^[ \\r\\n\\t\\S]+$",
                            "type": "string",
                            "description": "A sequence of Unicode characters"
                          },
                          "extension": {
                            "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                            "type": "array"
                          },
                          "modifierExtension": {
                            "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                            "type": "array"
                          },
                          "sequence": {
                            "pattern": "^[1-9][0-9]*$",
                            "type": "number",
                            "description": "An integer with a value that is positive (e.g. >0)"
                          },
                          "_sequence": {
                            "description": "Base definition for all elements in a resource.",
                            "additionalProperties": false
                          },
                          "revenue": {
                            "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                            "additionalProperties": false
                          },
                          "category": {
                            "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                            "additionalProperties": false
                          },
                          "productOrService": {
                            "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                            "additionalProperties": false
                          },
                          "modifier": {
                            "description": "Item typification or modifiers codes to convey additional context for the product or service.",
                            "type": "array"
                          },
                          "programCode": {
                            "description": "Identifies the program under which this may be recovered.",
                            "type": "array"
                          },
                          "quantity": {
                            "description": "A measured amount (or an amount that can potentially be measured). Note that measured amounts include amounts that are not precisely quantified, including amounts involving arbitrary units and floating currencies.",
                            "additionalProperties": false
                          },
                          "unitPrice": {
                            "description": "If the item is not a group then this is the fee for the product or service, otherwise this is the total of the fees for the details of the group.",
                            "additionalProperties": false
                          },
                          "factor": {
                            "description": "A real number that represents a multiplier used in determining the overall value of services delivered and/or goods received. The concept of a Factor allows for a discount or surcharge multiplier to be applied to a monetary amount.",
                            "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                            "type": "number"
                          },
                          "_factor": {
                            "description": "Base definition for all elements in a resource.",
                            "additionalProperties": false
                          },
                          "net": {
                            "description": "The quantity times the unit price for an additional service or product or charge.",
                            "additionalProperties": false
                          },
                          "udi": {
                            "description": "Unique Device Identifiers associated with this line item.",
                            "type": "array"
                          },
                          "noteNumber": {
                            "description": "The numbers associated with notes below which apply to the adjudication of this item.",
                            "type": "array"
                          },
                          "_noteNumber": {
                            "description": "Extensions for noteNumber",
                            "type": "array"
                          },
                          "adjudication": {
                            "description": "The adjudication results.",
                            "type": "array"
                          },
                          "subDetail": {
                            "description": "Third-tier of goods and services.",
                            "items": {
                              "description": "This resource provides: the claim details; adjudication details from the processing of a Claim; and optionally account balance information, for informing the subscriber of the benefits provided.",
                              "properties": {
                                "id": {
                                  "pattern": "^[ \\r\\n\\t\\S]+$",
                                  "type": "string",
                                  "description": "A sequence of Unicode characters"
                                },
                                "extension": {
                                  "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                                  "type": "array"
                                },
                                "modifierExtension": {
                                  "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                                  "type": "array"
                                },
                                "sequence": {
                                  "pattern": "^[1-9][0-9]*$",
                                  "type": "number",
                                  "description": "An integer with a value that is positive (e.g. >0)"
                                },
                                "_sequence": {
                                  "description": "Base definition for all elements in a resource.",
                                  "additionalProperties": false
                                },
                                "revenue": {
                                  "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                                  "additionalProperties": false
                                },
                                "category": {
                                  "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                                  "additionalProperties": false
                                },
                                "productOrService": {
                                  "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                                  "additionalProperties": false
                                },
                                "modifier": {
                                  "description": "Item typification or modifiers codes to convey additional context for the product or service.",
                                  "type": "array"
                                },
                                "programCode": {
                                  "description": "Identifies the program under which this may be recovered.",
                                  "type": "array"
                                },
                                "quantity": {
                                  "description": "A measured amount (or an amount that can potentially be measured). Note that measured amounts include amounts that are not precisely quantified, including amounts involving arbitrary units and floating currencies.",
                                  "additionalProperties": false
                                },
                                "unitPrice": {
                                  "description": "If the item is not a group then this is the fee for the product or service, otherwise this is the total of the fees for the details of the group.",
                                  "additionalProperties": false
                                },
                                "factor": {
                                  "description": "A real number that represents a multiplier used in determining the overall value of services delivered and/or goods received. The concept of a Factor allows for a discount or surcharge multiplier to be applied to a monetary amount.",
                                  "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                                  "type": "number"
                                },
                                "_factor": {
                                  "description": "Base definition for all elements in a resource.",
                                  "additionalProperties": false
                                },
                                "net": {
                                  "description": "The quantity times the unit price for an additional service or product or charge.",
                                  "additionalProperties": false
                                },
                                "udi": {
                                  "description": "Unique Device Identifiers associated with this line item.",
                                  "type": "array"
                                },
                                "noteNumber": {
                                  "description": "The numbers associated with notes below which apply to the adjudication of this item.",
                                  "type": "array"
                                },
                                "_noteNumber": {
                                  "description": "Extensions for noteNumber",
                                  "type": "array"
                                },
                                "adjudication": {
                                  "description": "The adjudication results.",
                                  "type": "array"
                                }
                              },
                              "additionalProperties": false,
                              "required": [
                                "productOrService"
                              ]
                            },
                            "type": "array"
                          }
                        },
                        "additionalProperties": false,
                        "required": [
                          "productOrService"
                        ]
                      },
                      "type": "array"
                    }
                  },
                  "additionalProperties": false,
                  "required": [
                    "productOrService"
                  ]
                },
                "type": "array"
              },
              "addItem": {
                "description": "The first-tier service adjudications for payor added product or service lines.",
                "items": {
                  "description": "This resource provides: the claim details; adjudication details from the processing of a Claim; and optionally account balance information, for informing the subscriber of the benefits provided.",
                  "properties": {
                    "id": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "type": "array"
                    },
                    "modifierExtension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                      "type": "array"
                    },
                    "itemSequence": {
                      "description": "Claim items which this service line is intended to replace.",
                      "type": "array"
                    },
                    "_itemSequence": {
                      "description": "Extensions for itemSequence",
                      "type": "array"
                    },
                    "detailSequence": {
                      "description": "The sequence number of the details within the claim item which this line is intended to replace.",
                      "type": "array"
                    },
                    "_detailSequence": {
                      "description": "Extensions for detailSequence",
                      "type": "array"
                    },
                    "subDetailSequence": {
                      "description": "The sequence number of the sub-details woithin the details within the claim item which this line is intended to replace.",
                      "type": "array"
                    },
                    "_subDetailSequence": {
                      "description": "Extensions for subDetailSequence",
                      "type": "array"
                    },
                    "provider": {
                      "description": "The providers who are authorized for the services rendered to the patient.",
                      "type": "array"
                    },
                    "productOrService": {
                      "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                      "additionalProperties": false
                    },
                    "modifier": {
                      "description": "Item typification or modifiers codes to convey additional context for the product or service.",
                      "type": "array"
                    },
                    "programCode": {
                      "description": "Identifies the program under which this may be recovered.",
                      "type": "array"
                    },
                    "servicedDate": {
                      "description": "The date or dates when the service or product was supplied, performed or completed.",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                      "type": "string"
                    },
                    "_servicedDate": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "servicedPeriod": {
                      "description": "A time period defined by a start and end date and optionally time.",
                      "additionalProperties": false
                    },
                    "locationCodeableConcept": {
                      "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                      "additionalProperties": false
                    },
                    "locationAddress": {
                      "description": "Where the product or service was provided.",
                      "additionalProperties": false
                    },
                    "locationReference": {
                      "description": "A reference from one resource to another.",
                      "additionalProperties": false
                    },
                    "quantity": {
                      "description": "A measured amount (or an amount that can potentially be measured). Note that measured amounts include amounts that are not precisely quantified, including amounts involving arbitrary units and floating currencies.",
                      "additionalProperties": false
                    },
                    "unitPrice": {
                      "description": "If the item is not a group then this is the fee for the product or service, otherwise this is the total of the fees for the details of the group.",
                      "additionalProperties": false
                    },
                    "factor": {
                      "description": "A real number that represents a multiplier used in determining the overall value of services delivered and/or goods received. The concept of a Factor allows for a discount or surcharge multiplier to be applied to a monetary amount.",
                      "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                      "type": "number"
                    },
                    "_factor": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "net": {
                      "description": "The quantity times the unit price for an additional service or product or charge.",
                      "additionalProperties": false
                    },
                    "bodySite": {
                      "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                      "additionalProperties": false
                    },
                    "subSite": {
                      "description": "A region or surface of the bodySite, e.g. limb region or tooth surface(s).",
                      "type": "array"
                    },
                    "noteNumber": {
                      "description": "The numbers associated with notes below which apply to the adjudication of this item.",
                      "type": "array"
                    },
                    "_noteNumber": {
                      "description": "Extensions for noteNumber",
                      "type": "array"
                    },
                    "adjudication": {
                      "description": "The adjudication results.",
                      "type": "array"
                    },
                    "detail": {
                      "description": "The second-tier service adjudications for payor added services.",
                      "items": {
                        "description": "This resource provides: the claim details; adjudication details from the processing of a Claim; and optionally account balance information, for informing the subscriber of the benefits provided.",
                        "properties": {
                          "id": {
                            "pattern": "^[ \\r\\n\\t\\S]+$",
                            "type": "string",
                            "description": "A sequence of Unicode characters"
                          },
                          "extension": {
                            "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                            "type": "array"
                          },
                          "modifierExtension": {
                            "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                            "type": "array"
                          },
                          "productOrService": {
                            "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                            "additionalProperties": false
                          },
                          "modifier": {
                            "description": "Item typification or modifiers codes to convey additional context for the product or service.",
                            "type": "array"
                          },
                          "quantity": {
                            "description": "A measured amount (or an amount that can potentially be measured). Note that measured amounts include amounts that are not precisely quantified, including amounts involving arbitrary units and floating currencies.",
                            "additionalProperties": false
                          },
                          "unitPrice": {
                            "description": "If the item is not a group then this is the fee for the product or service, otherwise this is the total of the fees for the details of the group.",
                            "additionalProperties": false
                          },
                          "factor": {
                            "description": "A real number that represents a multiplier used in determining the overall value of services delivered and/or goods received. The concept of a Factor allows for a discount or surcharge multiplier to be applied to a monetary amount.",
                            "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                            "type": "number"
                          },
                          "_factor": {
                            "description": "Base definition for all elements in a resource.",
                            "additionalProperties": false
                          },
                          "net": {
                            "description": "The quantity times the unit price for an additional service or product or charge.",
                            "additionalProperties": false
                          },
                          "noteNumber": {
                            "description": "The numbers associated with notes below which apply to the adjudication of this item.",
                            "type": "array"
                          },
                          "_noteNumber": {
                            "description": "Extensions for noteNumber",
                            "type": "array"
                          },
                          "adjudication": {
                            "description": "The adjudication results.",
                            "type": "array"
                          },
                          "subDetail": {
                            "description": "The third-tier service adjudications for payor added services.",
                            "items": {
                              "description": "This resource provides: the claim details; adjudication details from the processing of a Claim; and optionally account balance information, for informing the subscriber of the benefits provided.",
                              "properties": {
                                "id": {
                                  "pattern": "^[ \\r\\n\\t\\S]+$",
                                  "type": "string",
                                  "description": "A sequence of Unicode characters"
                                },
                                "extension": {
                                  "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                                  "type": "array"
                                },
                                "modifierExtension": {
                                  "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                                  "type": "array"
                                },
                                "productOrService": {
                                  "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                                  "additionalProperties": false
                                },
                                "modifier": {
                                  "description": "Item typification or modifiers codes to convey additional context for the product or service.",
                                  "type": "array"
                                },
                                "quantity": {
                                  "description": "A measured amount (or an amount that can potentially be measured). Note that measured amounts include amounts that are not precisely quantified, including amounts involving arbitrary units and floating currencies.",
                                  "additionalProperties": false
                                },
                                "unitPrice": {
                                  "description": "If the item is not a group then this is the fee for the product or service, otherwise this is the total of the fees for the details of the group.",
                                  "additionalProperties": false
                                },
                                "factor": {
                                  "description": "A real number that represents a multiplier used in determining the overall value of services delivered and/or goods received. The concept of a Factor allows for a discount or surcharge multiplier to be applied to a monetary amount.",
                                  "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                                  "type": "number"
                                },
                                "_factor": {
                                  "description": "Base definition for all elements in a resource.",
                                  "additionalProperties": false
                                },
                                "net": {
                                  "description": "The quantity times the unit price for an additional service or product or charge.",
                                  "additionalProperties": false
                                },
                                "noteNumber": {
                                  "description": "The numbers associated with notes below which apply to the adjudication of this item.",
                                  "type": "array"
                                },
                                "_noteNumber": {
                                  "description": "Extensions for noteNumber",
                                  "type": "array"
                                },
                                "adjudication": {
                                  "description": "The adjudication results.",
                                  "type": "array"
                                }
                              },
                              "additionalProperties": false,
                              "required": [
                                "productOrService"
                              ]
                            },
                            "type": "array"
                          }
                        },
                        "additionalProperties": false,
                        "required": [
                          "productOrService"
                        ]
                      },
                      "type": "array"
                    }
                  },
                  "additionalProperties": false,
                  "required": [
                    "productOrService"
                  ]
                },
                "type": "array"
              },
              "adjudication": {
                "description": "The adjudication results which are presented at the header level rather than at the line-item or add-item levels.",
                "type": "array"
              },
              "total": {
                "description": "Categorized monetary totals for the adjudication.",
                "items": {
                  "description": "This resource provides: the claim details; adjudication details from the processing of a Claim; and optionally account balance information, for informing the subscriber of the benefits provided.",
                  "properties": {
                    "id": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "type": "array"
                    },
                    "modifierExtension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                      "type": "array"
                    },
                    "category": {
                      "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                      "additionalProperties": false
                    },
                    "amount": {
                      "description": "Monetary total amount associated with the category.",
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false,
                  "required": [
                    "amount",
                    "category"
                  ]
                },
                "type": "array"
              },
              "payment": {
                "description": "Payment details for the adjudication of the claim.",
                "properties": {
                  "id": {
                    "pattern": "^[ \\r\\n\\t\\S]+$",
                    "type": "string",
                    "description": "A sequence of Unicode characters"
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "type": "array"
                  },
                  "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                    "type": "array"
                  },
                  "type": {
                    "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                    "additionalProperties": false
                  },
                  "adjustment": {
                    "description": "Total amount of all adjustments to this payment included in this transaction which are not related to this claim's adjudication.",
                    "additionalProperties": false
                  },
                  "adjustmentReason": {
                    "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                    "additionalProperties": false
                  },
                  "date": {
                    "description": "Estimated date the payment will be issued or the actual issue date of payment.",
                    "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                    "type": "string"
                  },
                  "_date": {
                    "description": "Base definition for all elements in a resource.",
                    "additionalProperties": false
                  },
                  "amount": {
                    "description": "Benefits payable less any payment adjustment.",
                    "additionalProperties": false
                  },
                  "identifier": {
                    "description": "An identifier - identifies some entity uniquely and unambiguously. Typically this is used for business identifiers.",
                    "additionalProperties": false
                  }
                },
                "additionalProperties": false
              },
              "formCode": {
                "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                "additionalProperties": false
              },
              "form": {
                "description": "For referring to data content defined in other formats.",
                "additionalProperties": false
              },
              "processNote": {
                "description": "A note that describes or explains adjudication results in a human readable form.",
                "items": {
                  "description": "This resource provides: the claim details; adjudication details from the processing of a Claim; and optionally account balance information, for informing the subscriber of the benefits provided.",
                  "properties": {
                    "id": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "type": "array"
                    },
                    "modifierExtension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                      "type": "array"
                    },
                    "number": {
                      "pattern": "^[1-9][0-9]*$",
                      "type": "number",
                      "description": "An integer with a value that is positive (e.g. >0)"
                    },
                    "_number": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "type": {
                      "description": "The business purpose of the note text.",
                      "enum": [
                        "display",
                        "print",
                        "printoper"
                      ]
                    },
                    "_type": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "text": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "_text": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "language": {
                      "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                },
                "type": "array"
              },
              "benefitPeriod": {
                "description": "A time period defined by a start and end date and optionally time.",
                "additionalProperties": false
              },
              "benefitBalance": {
                "description": "Balance by Benefit Category.",
                "items": {
                  "description": "This resource provides: the claim details; adjudication details from the processing of a Claim; and optionally account balance information, for informing the subscriber of the benefits provided.",
                  "properties": {
                    "id": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "type": "array"
                    },
                    "modifierExtension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                      "type": "array"
                    },
                    "category": {
                      "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                      "additionalProperties": false
                    },
                    "excluded": {
                      "description": "True if the indicated class of service is excluded from the plan, missing or False indicates the product or service is included in the coverage.",
                      "pattern": "^true|false$",
                      "type": "boolean"
                    },
                    "_excluded": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "name": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "_name": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "description": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "_description": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "network": {
                      "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                      "additionalProperties": false
                    },
                    "unit": {
                      "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                      "additionalProperties": false
                    },
                    "term": {
                      "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                      "additionalProperties": false
                    },
                    "financial": {
                      "description": "Benefits Used to date.",
                      "items": {
                        "description": "This resource provides: the claim details; adjudication details from the processing of a Claim; and optionally account balance information, for informing the subscriber of the benefits provided.",
                        "properties": {
                          "id": {
                            "pattern": "^[ \\r\\n\\t\\S]+$",
                            "type": "string",
                            "description": "A sequence of Unicode characters"
                          },
                          "extension": {
                            "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                            "type": "array"
                          },
                          "modifierExtension": {
                            "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                            "type": "array"
                          },
                          "type": {
                            "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                            "additionalProperties": false
                          },
                          "allowedUnsignedInt": {
                            "description": "The quantity of the benefit which is permitted under the coverage.",
                            "pattern": "^[0]|([1-9][0-9]*)$",
                            "type": "number"
                          },
                          "_allowedUnsignedInt": {
                            "description": "Base definition for all elements in a resource.",
                            "additionalProperties": false
                          },
                          "allowedString": {
                            "description": "The quantity of the benefit which is permitted under the coverage.",
                            "pattern": "^[ \\r\\n\\t\\S]+$",
                            "type": "string"
                          },
                          "_allowedString": {
                            "description": "Base definition for all elements in a resource.",
                            "additionalProperties": false
                          },
                          "allowedMoney": {
                            "description": "The quantity of the benefit which is permitted under the coverage.",
                            "additionalProperties": false
                          },
                          "usedUnsignedInt": {
                            "description": "The quantity of the benefit which have been consumed to date.",
                            "pattern": "^[0]|([1-9][0-9]*)$",
                            "type": "number"
                          },
                          "_usedUnsignedInt": {
                            "description": "Base definition for all elements in a resource.",
                            "additionalProperties": false
                          },
                          "usedMoney": {
                            "description": "The quantity of the benefit which have been consumed to date.",
                            "additionalProperties": false
                          }
                        },
                        "additionalProperties": false,
                        "required": [
                          "type"
                        ]
                      },
                      "type": "array"
                    }
                  },
                  "additionalProperties": false,
                  "required": [
                    "category"
                  ]
                },
                "type": "array"
              }
            },
            "additionalProperties": false,
            "required": [
              "insurance",
              "provider",
              "patient",
              "insurer",
              "type",
              "resourceType"
            ]
          },
          {
            "description": "Significant health conditions for a person related to the patient relevant in the context of care for the patient.",
            "properties": {
              "resourceType": {
                "description": "This is a FamilyMemberHistory resource",
                "const": "FamilyMemberHistory"
              },
              "id": {
                "description": "The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.",
                "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                "type": "string"
              },
              "meta": {
                "description": "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
                "additionalProperties": false
              },
              "implicitRules": {
                "pattern": "^\\S*$",
                "type": "string",
                "description": "String of characters used to identify a name or a resource"
              },
              "_implicitRules": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "language": {
                "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                "type": "string",
                "description": "A string which has at least one character and no leading or trailing whitespace and where there is no whitespace other than single spaces in the contents"
              },
              "_language": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "text": {
                "description": "A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it \"clinically safe\" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.",
                "additionalProperties": false
              },
              "contained": {
                "description": "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope.",
                "type": "array"
              },
              "extension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                "type": "array"
              },
              "modifierExtension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                "type": "array"
              },
              "identifier": {
                "description": "Business identifiers assigned to this family member history by the performer or other systems which remain constant as the resource is updated and propagates from server to server.",
                "type": "array"
              },
              "instantiatesCanonical": {
                "description": "The URL pointing to a FHIR-defined protocol, guideline, orderset or other definition that is adhered to in whole or in part by this FamilyMemberHistory.",
                "type": "array"
              },
              "instantiatesUri": {
                "description": "The URL pointing to an externally maintained protocol, guideline, orderset or other definition that is adhered to in whole or in part by this FamilyMemberHistory.",
                "type": "array"
              },
              "_instantiatesUri": {
                "description": "Extensions for instantiatesUri",
                "type": "array"
              },
              "status": {
                "description": "A code specifying the status of the record of the family history of a specific family member.",
                "enum": [
                  "partial",
                  "completed",
                  "entered-in-error",
                  "health-unknown"
                ]
              },
              "_status": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "dataAbsentReason": {
                "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                "additionalProperties": false
              },
              "patient": {
                "description": "A reference from one resource to another.",
                "additionalProperties": false
              },
              "date": {
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                "type": "string",
                "description": "A date, date-time or partial date (e.g. just year or year + month).  If hours and minutes are specified, a time zone SHALL be populated. The format is a union of the schema types gYear, gYearMonth, date and dateTime. Seconds must be provided due to schema type constraints but may be zero-filled and may be ignored.                 Dates SHALL be valid dates."
              },
              "_date": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "name": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "_name": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "relationship": {
                "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                "additionalProperties": false
              },
              "sex": {
                "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                "additionalProperties": false
              },
              "bornPeriod": {
                "description": "A time period defined by a start and end date and optionally time.",
                "additionalProperties": false
              },
              "bornDate": {
                "description": "The actual or approximate date of birth of the relative.",
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                "type": "string"
              },
              "_bornDate": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "bornString": {
                "description": "The actual or approximate date of birth of the relative.",
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string"
              },
              "_bornString": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "ageAge": {
                "description": "The age of the relative at the time the family member history is recorded.",
                "additionalProperties": false
              },
              "ageRange": {
                "description": "The age of the relative at the time the family member history is recorded.",
                "additionalProperties": false
              },
              "ageString": {
                "description": "The age of the relative at the time the family member history is recorded.",
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string"
              },
              "_ageString": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "estimatedAge": {
                "description": "If true, indicates that the age value specified is an estimated value.",
                "pattern": "^true|false$",
                "type": "boolean"
              },
              "_estimatedAge": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "deceasedBoolean": {
                "description": "Deceased flag or the actual or approximate age of the relative at the time of death for the family member history record.",
                "pattern": "^true|false$",
                "type": "boolean"
              },
              "_deceasedBoolean": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "deceasedAge": {
                "description": "Deceased flag or the actual or approximate age of the relative at the time of death for the family member history record.",
                "additionalProperties": false
              },
              "deceasedRange": {
                "description": "Deceased flag or the actual or approximate age of the relative at the time of death for the family member history record.",
                "additionalProperties": false
              },
              "deceasedDate": {
                "description": "Deceased flag or the actual or approximate age of the relative at the time of death for the family member history record.",
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                "type": "string"
              },
              "_deceasedDate": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "deceasedString": {
                "description": "Deceased flag or the actual or approximate age of the relative at the time of death for the family member history record.",
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string"
              },
              "_deceasedString": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "reasonCode": {
                "description": "Describes why the family member history occurred in coded or textual form.",
                "type": "array"
              },
              "reasonReference": {
                "description": "Indicates a Condition, Observation, AllergyIntolerance, or QuestionnaireResponse that justifies this family member history event.",
                "type": "array"
              },
              "note": {
                "description": "This property allows a non condition-specific note to the made about the related person. Ideally, the note would be in the condition property, but this is not always possible.",
                "type": "array"
              },
              "condition": {
                "description": "The significant Conditions (or condition) that the family member had. This is a repeating section to allow a system to represent more than one condition per resource, though there is nothing stopping multiple resources - one per condition.",
                "items": {
                  "description": "Significant health conditions for a person related to the patient relevant in the context of care for the patient.",
                  "properties": {
                    "id": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "type": "array"
                    },
                    "modifierExtension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                      "type": "array"
                    },
                    "code": {
                      "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                      "additionalProperties": false
                    },
                    "outcome": {
                      "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                      "additionalProperties": false
                    },
                    "contributedToDeath": {
                      "description": "This condition contributed to the cause of death of the related person. If contributedToDeath is not populated, then it is unknown.",
                      "pattern": "^true|false$",
                      "type": "boolean"
                    },
                    "_contributedToDeath": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "onsetAge": {
                      "description": "Either the age of onset, range of approximate age or descriptive string can be recorded.  For conditions with multiple occurrences, this describes the first known occurrence.",
                      "additionalProperties": false
                    },
                    "onsetRange": {
                      "description": "Either the age of onset, range of approximate age or descriptive string can be recorded.  For conditions with multiple occurrences, this describes the first known occurrence.",
                      "additionalProperties": false
                    },
                    "onsetPeriod": {
                      "description": "A time period defined by a start and end date and optionally time.",
                      "additionalProperties": false
                    },
                    "onsetString": {
                      "description": "Either the age of onset, range of approximate age or descriptive string can be recorded.  For conditions with multiple occurrences, this describes the first known occurrence.",
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string"
                    },
                    "_onsetString": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "note": {
                      "description": "An area where general notes can be placed about this specific condition.",
                      "type": "array"
                    }
                  },
                  "additionalProperties": false,
                  "required": [
                    "code"
                  ]
                },
                "type": "array"
              }
            },
            "additionalProperties": false,
            "required": [
              "patient",
              "relationship",
              "resourceType"
            ]
          },
          {
            "description": "Prospective warnings of potential issues when providing care to the patient.",
            "properties": {
              "resourceType": {
                "description": "This is a Flag resource",
                "const": "Flag"
              },
              "id": {
                "description": "The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.",
                "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                "type": "string"
              },
              "meta": {
                "description": "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
                "additionalProperties": false
              },
              "implicitRules": {
                "pattern": "^\\S*$",
                "type": "string",
                "description": "String of characters used to identify a name or a resource"
              },
              "_implicitRules": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "language": {
                "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                "type": "string",
                "description": "A string which has at least one character and no leading or trailing whitespace and where there is no whitespace other than single spaces in the contents"
              },
              "_language": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "text": {
                "description": "A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it \"clinically safe\" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.",
                "additionalProperties": false
              },
              "contained": {
                "description": "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope.",
                "type": "array"
              },
              "extension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                "type": "array"
              },
              "modifierExtension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                "type": "array"
              },
              "identifier": {
                "description": "Business identifiers assigned to this flag by the performer or other systems which remain constant as the resource is updated and propagates from server to server.",
                "type": "array"
              },
              "status": {
                "description": "Supports basic workflow.",
                "enum": [
                  "active",
                  "inactive",
                  "entered-in-error"
                ]
              },
              "_status": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "category": {
                "description": "Allows a flag to be divided into different categories like clinical, administrative etc. Intended to be used as a means of filtering which flags are displayed to particular user or in a given context.",
                "type": "array"
              },
              "code": {
                "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                "additionalProperties": false
              },
              "subject": {
                "description": "A reference from one resource to another.",
                "additionalProperties": false
              },
              "period": {
                "description": "A time period defined by a start and end date and optionally time.",
                "additionalProperties": false
              },
              "encounter": {
                "description": "A reference from one resource to another.",
                "additionalProperties": false
              },
              "author": {
                "description": "A reference from one resource to another.",
                "additionalProperties": false
              }
            },
            "additionalProperties": false,
            "required": [
              "code",
              "subject",
              "resourceType"
            ]
          },
          {
            "description": "Describes the intended objective(s) for a patient, group or organization care, for example, weight loss, restoring an activity of daily living, obtaining herd immunity via immunization, meeting a process improvement objective, etc.",
            "properties": {
              "resourceType": {
                "description": "This is a Goal resource",
                "const": "Goal"
              },
              "id": {
                "description": "The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.",
                "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                "type": "string"
              },
              "meta": {
                "description": "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
                "additionalProperties": false
              },
              "implicitRules": {
                "pattern": "^\\S*$",
                "type": "string",
                "description": "String of characters used to identify a name or a resource"
              },
              "_implicitRules": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "language": {
                "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                "type": "string",
                "description": "A string which has at least one character and no leading or trailing whitespace and where there is no whitespace other than single spaces in the contents"
              },
              "_language": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "text": {
                "description": "A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it \"clinically safe\" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.",
                "additionalProperties": false
              },
              "contained": {
                "description": "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope.",
                "type": "array"
              },
              "extension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                "type": "array"
              },
              "modifierExtension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                "type": "array"
              },
              "identifier": {
                "description": "Business identifiers assigned to this goal by the performer or other systems which remain constant as the resource is updated and propagates from server to server.",
                "type": "array"
              },
              "lifecycleStatus": {
                "description": "The state of the goal throughout its lifecycle.",
                "enum": [
                  "proposed",
                  "planned",
                  "accepted",
                  "active",
                  "on-hold",
                  "completed",
                  "cancelled",
                  "entered-in-error",
                  "rejected"
                ]
              },
              "_lifecycleStatus": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "achievementStatus": {
                "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                "additionalProperties": false
              },
              "category": {
                "description": "Indicates a category the goal falls within.",
                "type": "array"
              },
              "priority": {
                "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                "additionalProperties": false
              },
              "description": {
                "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                "additionalProperties": false
              },
              "subject": {
                "description": "A reference from one resource to another.",
                "additionalProperties": false
              },
              "startDate": {
                "description": "The date or event after which the goal should begin being pursued.",
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                "type": "string"
              },
              "_startDate": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "startCodeableConcept": {
                "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                "additionalProperties": false
              },
              "target": {
                "description": "Indicates what should be done by when.",
                "items": {
                  "description": "Describes the intended objective(s) for a patient, group or organization care, for example, weight loss, restoring an activity of daily living, obtaining herd immunity via immunization, meeting a process improvement objective, etc.",
                  "properties": {
                    "id": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "type": "array"
                    },
                    "modifierExtension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                      "type": "array"
                    },
                    "measure": {
                      "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                      "additionalProperties": false
                    },
                    "detailQuantity": {
                      "description": "A measured amount (or an amount that can potentially be measured). Note that measured amounts include amounts that are not precisely quantified, including amounts involving arbitrary units and floating currencies.",
                      "additionalProperties": false
                    },
                    "detailRange": {
                      "description": "The target value of the focus to be achieved to signify the fulfillment of the goal, e.g. 150 pounds, 7.0%. Either the high or low or both values of the range can be specified. When a low value is missing, it indicates that the goal is achieved at any focus value at or below the high value. Similarly, if the high value is missing, it indicates that the goal is achieved at any focus value at or above the low value.",
                      "additionalProperties": false
                    },
                    "detailCodeableConcept": {
                      "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                      "additionalProperties": false
                    },
                    "detailString": {
                      "description": "The target value of the focus to be achieved to signify the fulfillment of the goal, e.g. 150 pounds, 7.0%. Either the high or low or both values of the range can be specified. When a low value is missing, it indicates that the goal is achieved at any focus value at or below the high value. Similarly, if the high value is missing, it indicates that the goal is achieved at any focus value at or above the low value.",
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string"
                    },
                    "_detailString": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "detailBoolean": {
                      "description": "The target value of the focus to be achieved to signify the fulfillment of the goal, e.g. 150 pounds, 7.0%. Either the high or low or both values of the range can be specified. When a low value is missing, it indicates that the goal is achieved at any focus value at or below the high value. Similarly, if the high value is missing, it indicates that the goal is achieved at any focus value at or above the low value.",
                      "pattern": "^true|false$",
                      "type": "boolean"
                    },
                    "_detailBoolean": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "detailInteger": {
                      "description": "The target value of the focus to be achieved to signify the fulfillment of the goal, e.g. 150 pounds, 7.0%. Either the high or low or both values of the range can be specified. When a low value is missing, it indicates that the goal is achieved at any focus value at or below the high value. Similarly, if the high value is missing, it indicates that the goal is achieved at any focus value at or above the low value.",
                      "pattern": "^-?([0]|([1-9][0-9]*))$",
                      "type": "number"
                    },
                    "_detailInteger": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "detailRatio": {
                      "description": "The target value of the focus to be achieved to signify the fulfillment of the goal, e.g. 150 pounds, 7.0%. Either the high or low or both values of the range can be specified. When a low value is missing, it indicates that the goal is achieved at any focus value at or below the high value. Similarly, if the high value is missing, it indicates that the goal is achieved at any focus value at or above the low value.",
                      "additionalProperties": false
                    },
                    "dueDate": {
                      "description": "Indicates either the date or the duration after start by which the goal should be met.",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                      "type": "string"
                    },
                    "_dueDate": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "dueDuration": {
                      "description": "Indicates either the date or the duration after start by which the goal should be met.",
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                },
                "type": "array"
              },
              "statusDate": {
                "description": "Identifies when the current status.  I.e. When initially created, when achieved, when cancelled, etc.",
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                "type": "string"
              },
              "_statusDate": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "statusReason": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "_statusReason": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "expressedBy": {
                "description": "A reference from one resource to another.",
                "additionalProperties": false
              },
              "addresses": {
                "description": "The identified conditions and other health record elements that are intended to be addressed by the goal.",
                "type": "array"
              },
              "note": {
                "description": "Any comments related to the goal.",
                "type": "array"
              },
              "outcomeCode": {
                "description": "Identifies the change (or lack of change) at the point when the status of the goal is assessed.",
                "type": "array"
              },
              "outcomeReference": {
                "description": "Details of what's changed (or not changed).",
                "type": "array"
              }
            },
            "additionalProperties": false,
            "required": [
              "subject",
              "description",
              "resourceType"
            ]
          },
          {
            "description": "A formal computable definition of a graph of resources - that is, a coherent set of resources that form a graph by following references. The Graph Definition resource defines a set and makes rules about the set.",
            "properties": {
              "resourceType": {
                "description": "This is a GraphDefinition resource",
                "const": "GraphDefinition"
              },
              "id": {
                "description": "The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.",
                "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                "type": "string"
              },
              "meta": {
                "description": "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
                "additionalProperties": false
              },
              "implicitRules": {
                "pattern": "^\\S*$",
                "type": "string",
                "description": "String of characters used to identify a name or a resource"
              },
              "_implicitRules": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "language": {
                "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                "type": "string",
                "description": "A string which has at least one character and no leading or trailing whitespace and where there is no whitespace other than single spaces in the contents"
              },
              "_language": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "text": {
                "description": "A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it \"clinically safe\" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.",
                "additionalProperties": false
              },
              "contained": {
                "description": "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope.",
                "type": "array"
              },
              "extension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                "type": "array"
              },
              "modifierExtension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                "type": "array"
              },
              "url": {
                "pattern": "^\\S*$",
                "type": "string",
                "description": "String of characters used to identify a name or a resource"
              },
              "_url": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "version": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "_version": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "name": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "_name": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "status": {
                "description": "The status of this graph definition. Enables tracking the life-cycle of the content.",
                "enum": [
                  "draft",
                  "active",
                  "retired",
                  "unknown"
                ]
              },
              "_status": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "experimental": {
                "description": "A Boolean value to indicate that this graph definition is authored for testing purposes (or education/evaluation/marketing) and is not intended to be used for genuine usage.",
                "pattern": "^true|false$",
                "type": "boolean"
              },
              "_experimental": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "date": {
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                "type": "string",
                "description": "A date, date-time or partial date (e.g. just year or year + month).  If hours and minutes are specified, a time zone SHALL be populated. The format is a union of the schema types gYear, gYearMonth, date and dateTime. Seconds must be provided due to schema type constraints but may be zero-filled and may be ignored.                 Dates SHALL be valid dates."
              },
              "_date": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "publisher": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "_publisher": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "contact": {
                "description": "Contact details to assist a user in finding and communicating with the publisher.",
                "type": "array"
              },
              "description": {
                "description": "A free text natural language description of the graph definition from a consumer's perspective.",
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string"
              },
              "_description": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "useContext": {
                "description": "The content was developed with a focus and intent of supporting the contexts that are listed. These contexts may be general categories (gender, age, ...) or may be references to specific programs (insurance plans, studies, ...) and may be used to assist with indexing and searching for appropriate graph definition instances.",
                "type": "array"
              },
              "jurisdiction": {
                "description": "A legal or geographic region in which the graph definition is intended to be used.",
                "type": "array"
              },
              "purpose": {
                "description": "Explanation of why this graph definition is needed and why it has been designed as it has.",
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string"
              },
              "_purpose": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "start": {
                "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                "type": "string",
                "description": "A string which has at least one character and no leading or trailing whitespace and where there is no whitespace other than single spaces in the contents"
              },
              "_start": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "profile": {
                "pattern": "^\\S*$",
                "type": "string",
                "description": "A URI that is a reference to a canonical URL on a FHIR resource"
              },
              "link": {
                "description": "Links this graph makes rules about.",
                "items": {
                  "description": "A formal computable definition of a graph of resources - that is, a coherent set of resources that form a graph by following references. The Graph Definition resource defines a set and makes rules about the set.",
                  "properties": {
                    "id": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "type": "array"
                    },
                    "modifierExtension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                      "type": "array"
                    },
                    "path": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "_path": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "sliceName": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "_sliceName": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "min": {
                      "description": "Minimum occurrences for this link.",
                      "pattern": "^-?([0]|([1-9][0-9]*))$",
                      "type": "number"
                    },
                    "_min": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "max": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "_max": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "description": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "_description": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "target": {
                      "description": "Potential target for the link.",
                      "items": {
                        "description": "A formal computable definition of a graph of resources - that is, a coherent set of resources that form a graph by following references. The Graph Definition resource defines a set and makes rules about the set.",
                        "properties": {
                          "id": {
                            "pattern": "^[ \\r\\n\\t\\S]+$",
                            "type": "string",
                            "description": "A sequence of Unicode characters"
                          },
                          "extension": {
                            "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                            "type": "array"
                          },
                          "modifierExtension": {
                            "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                            "type": "array"
                          },
                          "type": {
                            "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                            "type": "string",
                            "description": "A string which has at least one character and no leading or trailing whitespace and where there is no whitespace other than single spaces in the contents"
                          },
                          "_type": {
                            "description": "Base definition for all elements in a resource.",
                            "additionalProperties": false
                          },
                          "params": {
                            "pattern": "^[ \\r\\n\\t\\S]+$",
                            "type": "string",
                            "description": "A sequence of Unicode characters"
                          },
                          "_params": {
                            "description": "Base definition for all elements in a resource.",
                            "additionalProperties": false
                          },
                          "profile": {
                            "pattern": "^\\S*$",
                            "type": "string",
                            "description": "A URI that is a reference to a canonical URL on a FHIR resource"
                          },
                          "compartment": {
                            "description": "Compartment Consistency Rules.",
                            "items": {
                              "description": "A formal computable definition of a graph of resources - that is, a coherent set of resources that form a graph by following references. The Graph Definition resource defines a set and makes rules about the set.",
                              "properties": {
                                "id": {
                                  "pattern": "^[ \\r\\n\\t\\S]+$",
                                  "type": "string",
                                  "description": "A sequence of Unicode characters"
                                },
                                "extension": {
                                  "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                                  "type": "array"
                                },
                                "modifierExtension": {
                                  "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                                  "type": "array"
                                },
                                "use": {
                                  "description": "Defines how the compartment rule is used - whether it it is used to test whether resources are subject to the rule, or whether it is a rule that must be followed.",
                                  "enum": [
                                    "condition",
                                    "requirement"
                                  ]
                                },
                                "_use": {
                                  "description": "Base definition for all elements in a resource.",
                                  "additionalProperties": false
                                },
                                "code": {
                                  "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                                  "type": "string",
                                  "description": "A string which has at least one character and no leading or trailing whitespace and where there is no whitespace other than single spaces in the contents"
                                },
                                "_code": {
                                  "description": "Base definition for all elements in a resource.",
                                  "additionalProperties": false
                                },
                                "rule": {
                                  "description": "identical | matching | different | no-rule | custom.",
                                  "enum": [
                                    "identical",
                                    "matching",
                                    "different",
                                    "custom"
                                  ]
                                },
                                "_rule": {
                                  "description": "Base definition for all elements in a resource.",
                                  "additionalProperties": false
                                },
                                "expression": {
                                  "pattern": "^[ \\r\\n\\t\\S]+$",
                                  "type": "string",
                                  "description": "A sequence of Unicode characters"
                                },
                                "_expression": {
                                  "description": "Base definition for all elements in a resource.",
                                  "additionalProperties": false
                                },
                                "description": {
                                  "pattern": "^[ \\r\\n\\t\\S]+$",
                                  "type": "string",
                                  "description": "A sequence of Unicode characters"
                                },
                                "_description": {
                                  "description": "Base definition for all elements in a resource.",
                                  "additionalProperties": false
                                }
                              },
                              "additionalProperties": false
                            },
                            "type": "array"
                          },
                          "link": {
                            "description": "Additional links from target resource.",
                            "type": "array"
                          }
                        },
                        "additionalProperties": false
                      },
                      "type": "array"
                    }
                  },
                  "additionalProperties": false
                },
                "type": "array"
              }
            },
            "additionalProperties": false,
            "required": [
              "resourceType"
            ]
          },
          {
            "description": "Represents a defined collection of entities that may be discussed or acted upon collectively but which are not expected to act collectively, and are not formally or legally recognized; i.e. a collection of entities that isn't an Organization.",
            "properties": {
              "resourceType": {
                "description": "This is a Group resource",
                "const": "Group"
              },
              "id": {
                "description": "The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.",
                "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                "type": "string"
              },
              "meta": {
                "description": "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
                "additionalProperties": false
              },
              "implicitRules": {
                "pattern": "^\\S*$",
                "type": "string",
                "description": "String of characters used to identify a name or a resource"
              },
              "_implicitRules": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "language": {
                "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                "type": "string",
                "description": "A string which has at least one character and no leading or trailing whitespace and where there is no whitespace other than single spaces in the contents"
              },
              "_language": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "text": {
                "description": "A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it \"clinically safe\" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.",
                "additionalProperties": false
              },
              "contained": {
                "description": "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope.",
                "type": "array"
              },
              "extension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                "type": "array"
              },
              "modifierExtension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                "type": "array"
              },
              "identifier": {
                "description": "A unique business identifier for this group.",
                "type": "array"
              },
              "active": {
                "description": "Indicates whether the record for the group is available for use or is merely being retained for historical purposes.",
                "pattern": "^true|false$",
                "type": "boolean"
              },
              "_active": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "type": {
                "description": "Identifies the broad classification of the kind of resources the group includes.",
                "enum": [
                  "person",
                  "animal",
                  "practitioner",
                  "device",
                  "medication",
                  "substance"
                ]
              },
              "_type": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "actual": {
                "description": "If true, indicates that the resource refers to a specific group of real individuals.  If false, the group defines a set of intended individuals.",
                "pattern": "^true|false$",
                "type": "boolean"
              },
              "_actual": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "code": {
                "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                "additionalProperties": false
              },
              "name": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "_name": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "quantity": {
                "pattern": "^[0]|([1-9][0-9]*)$",
                "type": "number",
                "description": "An integer with a value that is not negative (e.g. >= 0)"
              },
              "_quantity": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "managingEntity": {
                "description": "A reference from one resource to another.",
                "additionalProperties": false
              },
              "characteristic": {
                "description": "Identifies traits whose presence r absence is shared by members of the group.",
                "items": {
                  "description": "Represents a defined collection of entities that may be discussed or acted upon collectively but which are not expected to act collectively, and are not formally or legally recognized; i.e. a collection of entities that isn't an Organization.",
                  "properties": {
                    "id": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "type": "array"
                    },
                    "modifierExtension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                      "type": "array"
                    },
                    "code": {
                      "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                      "additionalProperties": false
                    },
                    "valueCodeableConcept": {
                      "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                      "additionalProperties": false
                    },
                    "valueBoolean": {
                      "description": "The value of the trait that holds (or does not hold - see 'exclude') for members of the group.",
                      "pattern": "^true|false$",
                      "type": "boolean"
                    },
                    "_valueBoolean": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "valueQuantity": {
                      "description": "A measured amount (or an amount that can potentially be measured). Note that measured amounts include amounts that are not precisely quantified, including amounts involving arbitrary units and floating currencies.",
                      "additionalProperties": false
                    },
                    "valueRange": {
                      "description": "The value of the trait that holds (or does not hold - see 'exclude') for members of the group.",
                      "additionalProperties": false
                    },
                    "valueReference": {
                      "description": "A reference from one resource to another.",
                      "additionalProperties": false
                    },
                    "exclude": {
                      "description": "If true, indicates the characteristic is one that is NOT held by members of the group.",
                      "pattern": "^true|false$",
                      "type": "boolean"
                    },
                    "_exclude": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "period": {
                      "description": "A time period defined by a start and end date and optionally time.",
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false,
                  "required": [
                    "code"
                  ]
                },
                "type": "array"
              },
              "member": {
                "description": "Identifies the resource instances that are members of the group.",
                "items": {
                  "description": "Represents a defined collection of entities that may be discussed or acted upon collectively but which are not expected to act collectively, and are not formally or legally recognized; i.e. a collection of entities that isn't an Organization.",
                  "properties": {
                    "id": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "type": "array"
                    },
                    "modifierExtension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                      "type": "array"
                    },
                    "entity": {
                      "description": "A reference from one resource to another.",
                      "additionalProperties": false
                    },
                    "period": {
                      "description": "A time period defined by a start and end date and optionally time.",
                      "additionalProperties": false
                    },
                    "inactive": {
                      "description": "A flag to indicate that the member is no longer in the group, but previously may have been a member.",
                      "pattern": "^true|false$",
                      "type": "boolean"
                    },
                    "_inactive": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false,
                  "required": [
                    "entity"
                  ]
                },
                "type": "array"
              }
            },
            "additionalProperties": false,
            "required": [
              "resourceType"
            ]
          },
          {
            "description": "A guidance response is the formal response to a guidance request, including any output parameters returned by the evaluation, as well as the description of any proposed actions to be taken.",
            "properties": {
              "resourceType": {
                "description": "This is a GuidanceResponse resource",
                "const": "GuidanceResponse"
              },
              "id": {
                "description": "The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.",
                "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                "type": "string"
              },
              "meta": {
                "description": "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
                "additionalProperties": false
              },
              "implicitRules": {
                "pattern": "^\\S*$",
                "type": "string",
                "description": "String of characters used to identify a name or a resource"
              },
              "_implicitRules": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "language": {
                "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                "type": "string",
                "description": "A string which has at least one character and no leading or trailing whitespace and where there is no whitespace other than single spaces in the contents"
              },
              "_language": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "text": {
                "description": "A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it \"clinically safe\" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.",
                "additionalProperties": false
              },
              "contained": {
                "description": "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope.",
                "type": "array"
              },
              "extension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                "type": "array"
              },
              "modifierExtension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                "type": "array"
              },
              "requestIdentifier": {
                "description": "An identifier - identifies some entity uniquely and unambiguously. Typically this is used for business identifiers.",
                "additionalProperties": false
              },
              "identifier": {
                "description": "Allows a service to provide  unique, business identifiers for the response.",
                "type": "array"
              },
              "moduleUri": {
                "description": "An identifier, CodeableConcept or canonical reference to the guidance that was requested.",
                "pattern": "^\\S*$",
                "type": "string"
              },
              "_moduleUri": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "moduleCanonical": {
                "description": "An identifier, CodeableConcept or canonical reference to the guidance that was requested.",
                "pattern": "^\\S*$",
                "type": "string"
              },
              "_moduleCanonical": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "moduleCodeableConcept": {
                "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                "additionalProperties": false
              },
              "status": {
                "description": "The status of the response. If the evaluation is completed successfully, the status will indicate success. However, in order to complete the evaluation, the engine may require more information. In this case, the status will be data-required, and the response will contain a description of the additional required information. If the evaluation completed successfully, but the engine determines that a potentially more accurate response could be provided if more data was available, the status will be data-requested, and the response will contain a description of the additional requested information.",
                "enum": [
                  "success",
                  "data-requested",
                  "data-required",
                  "in-progress",
                  "failure",
                  "entered-in-error"
                ]
              },
              "_status": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "subject": {
                "description": "A reference from one resource to another.",
                "additionalProperties": false
              },
              "encounter": {
                "description": "A reference from one resource to another.",
                "additionalProperties": false
              },
              "occurrenceDateTime": {
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                "type": "string",
                "description": "A date, date-time or partial date (e.g. just year or year + month).  If hours and minutes are specified, a time zone SHALL be populated. The format is a union of the schema types gYear, gYearMonth, date and dateTime. Seconds must be provided due to schema type constraints but may be zero-filled and may be ignored.                 Dates SHALL be valid dates."
              },
              "_occurrenceDateTime": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "performer": {
                "description": "A reference from one resource to another.",
                "additionalProperties": false
              },
              "reasonCode": {
                "description": "Describes the reason for the guidance response in coded or textual form.",
                "type": "array"
              },
              "reasonReference": {
                "description": "Indicates the reason the request was initiated. This is typically provided as a parameter to the evaluation and echoed by the service, although for some use cases, such as subscription- or event-based scenarios, it may provide an indication of the cause for the response.",
                "type": "array"
              },
              "note": {
                "description": "Provides a mechanism to communicate additional information about the response.",
                "type": "array"
              },
              "evaluationMessage": {
                "description": "Messages resulting from the evaluation of the artifact or artifacts. As part of evaluating the request, the engine may produce informational or warning messages. These messages will be provided by this element.",
                "type": "array"
              },
              "outputParameters": {
                "description": "A reference from one resource to another.",
                "additionalProperties": false
              },
              "result": {
                "description": "A reference from one resource to another.",
                "additionalProperties": false
              },
              "dataRequirement": {
                "description": "If the evaluation could not be completed due to lack of information, or additional information would potentially result in a more accurate response, this element will a description of the data required in order to proceed with the evaluation. A subsequent request to the service should include this data.",
                "type": "array"
              }
            },
            "additionalProperties": false,
            "required": [
              "resourceType"
            ]
          },
          {
            "description": "The details of a healthcare service available at a location.",
            "properties": {
              "resourceType": {
                "description": "This is a HealthcareService resource",
                "const": "HealthcareService"
              },
              "id": {
                "description": "The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.",
                "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                "type": "string"
              },
              "meta": {
                "description": "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
                "additionalProperties": false
              },
              "implicitRules": {
                "pattern": "^\\S*$",
                "type": "string",
                "description": "String of characters used to identify a name or a resource"
              },
              "_implicitRules": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "language": {
                "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                "type": "string",
                "description": "A string which has at least one character and no leading or trailing whitespace and where there is no whitespace other than single spaces in the contents"
              },
              "_language": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "text": {
                "description": "A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it \"clinically safe\" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.",
                "additionalProperties": false
              },
              "contained": {
                "description": "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope.",
                "type": "array"
              },
              "extension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                "type": "array"
              },
              "modifierExtension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                "type": "array"
              },
              "identifier": {
                "description": "External identifiers for this item.",
                "type": "array"
              },
              "active": {
                "description": "This flag is used to mark the record to not be used. This is not used when a center is closed for maintenance, or for holidays, the notAvailable period is to be used for this.",
                "pattern": "^true|false$",
                "type": "boolean"
              },
              "_active": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "providedBy": {
                "description": "A reference from one resource to another.",
                "additionalProperties": false
              },
              "category": {
                "description": "Identifies the broad category of service being performed or delivered.",
                "type": "array"
              },
              "type": {
                "description": "The specific type of service that may be delivered or performed.",
                "type": "array"
              },
              "specialty": {
                "description": "Collection of specialties handled by the service site. This is more of a medical term.",
                "type": "array"
              },
              "location": {
                "description": "The location(s) where this healthcare service may be provided.",
                "type": "array"
              },
              "name": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "_name": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "comment": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "_comment": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "extraDetails": {
                "description": "Extra details about the service that can't be placed in the other fields.",
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string"
              },
              "_extraDetails": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "photo": {
                "description": "For referring to data content defined in other formats.",
                "additionalProperties": false
              },
              "telecom": {
                "description": "List of contacts related to this specific healthcare service.",
                "type": "array"
              },
              "coverageArea": {
                "description": "The location(s) that this service is available to (not where the service is provided).",
                "type": "array"
              },
              "serviceProvisionCode": {
                "description": "The code(s) that detail the conditions under which the healthcare service is available/offered.",
                "type": "array"
              },
              "eligibility": {
                "description": "Does this service have specific eligibility requirements that need to be met in order to use the service?",
                "items": {
                  "description": "The details of a healthcare service available at a location.",
                  "properties": {
                    "id": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "type": "array"
                    },
                    "modifierExtension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                      "type": "array"
                    },
                    "code": {
                      "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                      "additionalProperties": false
                    },
                    "comment": {
                      "description": "Describes the eligibility conditions for the service.",
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string"
                    },
                    "_comment": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                },
                "type": "array"
              },
              "program": {
                "description": "Programs that this service is applicable to.",
                "type": "array"
              },
              "characteristic": {
                "description": "Collection of characteristics (attributes).",
                "type": "array"
              },
              "communication": {
                "description": "Some services are specifically made available in multiple languages, this property permits a directory to declare the languages this is offered in. Typically this is only provided where a service operates in communities with mixed languages used.",
                "type": "array"
              },
              "referralMethod": {
                "description": "Ways that the service accepts referrals, if this is not provided then it is implied that no referral is required.",
                "type": "array"
              },
              "appointmentRequired": {
                "description": "Indicates whether or not a prospective consumer will require an appointment for a particular service at a site to be provided by the Organization. Indicates if an appointment is required for access to this service.",
                "pattern": "^true|false$",
                "type": "boolean"
              },
              "_appointmentRequired": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "availableTime": {
                "description": "A collection of times that the Service Site is available.",
                "items": {
                  "description": "The details of a healthcare service available at a location.",
                  "properties": {
                    "id": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "type": "array"
                    },
                    "modifierExtension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                      "type": "array"
                    },
                    "daysOfWeek": {
                      "description": "Indicates which days of the week are available between the start and end Times.",
                      "items": {
                        "enum": [
                          "mon",
                          "tue",
                          "wed",
                          "thu",
                          "fri",
                          "sat",
                          "sun"
                        ]
                      },
                      "type": "array"
                    },
                    "_daysOfWeek": {
                      "description": "Extensions for daysOfWeek",
                      "type": "array"
                    },
                    "allDay": {
                      "description": "Is this always available? (hence times are irrelevant) e.g. 24 hour service.",
                      "pattern": "^true|false$",
                      "type": "boolean"
                    },
                    "_allDay": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "availableStartTime": {
                      "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$",
                      "type": "string",
                      "description": "A time during the day, with no date specified"
                    },
                    "_availableStartTime": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "availableEndTime": {
                      "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$",
                      "type": "string",
                      "description": "A time during the day, with no date specified"
                    },
                    "_availableEndTime": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                },
                "type": "array"
              },
              "notAvailable": {
                "description": "The HealthcareService is not available during this period of time due to the provided reason.",
                "items": {
                  "description": "The details of a healthcare service available at a location.",
                  "properties": {
                    "id": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "type": "array"
                    },
                    "modifierExtension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                      "type": "array"
                    },
                    "description": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "_description": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "during": {
                      "description": "A time period defined by a start and end date and optionally time.",
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                },
                "type": "array"
              },
              "availabilityExceptions": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "_availabilityExceptions": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "endpoint": {
                "description": "Technical endpoints providing access to services operated for the specific healthcare services defined at this resource.",
                "type": "array"
              }
            },
            "additionalProperties": false,
            "required": [
              "resourceType"
            ]
          },
          {
            "description": "Representation of the content produced in a DICOM imaging study. A study comprises a set of series, each of which includes a set of Service-Object Pair Instances (SOP Instances - images or other data) acquired or produced in a common context.  A series is of only one modality (e.g. X-ray, CT, MR, ultrasound), but a study may have multiple series of different modalities.",
            "properties": {
              "resourceType": {
                "description": "This is a ImagingStudy resource",
                "const": "ImagingStudy"
              },
              "id": {
                "description": "The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.",
                "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                "type": "string"
              },
              "meta": {
                "description": "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
                "additionalProperties": false
              },
              "implicitRules": {
                "pattern": "^\\S*$",
                "type": "string",
                "description": "String of characters used to identify a name or a resource"
              },
              "_implicitRules": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "language": {
                "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                "type": "string",
                "description": "A string which has at least one character and no leading or trailing whitespace and where there is no whitespace other than single spaces in the contents"
              },
              "_language": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "text": {
                "description": "A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it \"clinically safe\" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.",
                "additionalProperties": false
              },
              "contained": {
                "description": "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope.",
                "type": "array"
              },
              "extension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                "type": "array"
              },
              "modifierExtension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                "type": "array"
              },
              "identifier": {
                "description": "Identifiers for the ImagingStudy such as DICOM Study Instance UID, and Accession Number.",
                "type": "array"
              },
              "status": {
                "description": "The current state of the ImagingStudy.",
                "enum": [
                  "registered",
                  "available",
                  "cancelled",
                  "entered-in-error",
                  "unknown"
                ]
              },
              "_status": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "modality": {
                "description": "A list of all the series.modality values that are actual acquisition modalities, i.e. those in the DICOM Context Group 29 (value set OID 1.2.840.10008.6.1.19).",
                "type": "array"
              },
              "subject": {
                "description": "A reference from one resource to another.",
                "additionalProperties": false
              },
              "encounter": {
                "description": "A reference from one resource to another.",
                "additionalProperties": false
              },
              "started": {
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                "type": "string",
                "description": "A date, date-time or partial date (e.g. just year or year + month).  If hours and minutes are specified, a time zone SHALL be populated. The format is a union of the schema types gYear, gYearMonth, date and dateTime. Seconds must be provided due to schema type constraints but may be zero-filled and may be ignored.                 Dates SHALL be valid dates."
              },
              "_started": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "basedOn": {
                "description": "A list of the diagnostic requests that resulted in this imaging study being performed.",
                "type": "array"
              },
              "referrer": {
                "description": "A reference from one resource to another.",
                "additionalProperties": false
              },
              "interpreter": {
                "description": "Who read the study and interpreted the images or other content.",
                "type": "array"
              },
              "endpoint": {
                "description": "The network service providing access (e.g., query, view, or retrieval) for the study. See implementation notes for information about using DICOM endpoints. A study-level endpoint applies to each series in the study, unless overridden by a series-level endpoint with the same Endpoint.connectionType.",
                "type": "array"
              },
              "numberOfSeries": {
                "pattern": "^[0]|([1-9][0-9]*)$",
                "type": "number",
                "description": "An integer with a value that is not negative (e.g. >= 0)"
              },
              "_numberOfSeries": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "numberOfInstances": {
                "pattern": "^[0]|([1-9][0-9]*)$",
                "type": "number",
                "description": "An integer with a value that is not negative (e.g. >= 0)"
              },
              "_numberOfInstances": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "procedureReference": {
                "description": "A reference from one resource to another.",
                "additionalProperties": false
              },
              "procedureCode": {
                "description": "The code for the performed procedure type.",
                "type": "array"
              },
              "location": {
                "description": "A reference from one resource to another.",
                "additionalProperties": false
              },
              "reasonCode": {
                "description": "Description of clinical condition indicating why the ImagingStudy was requested.",
                "type": "array"
              },
              "reasonReference": {
                "description": "Indicates another resource whose existence justifies this Study.",
                "type": "array"
              },
              "note": {
                "description": "Per the recommended DICOM mapping, this element is derived from the Study Description attribute (0008,1030). Observations or findings about the imaging study should be recorded in another resource, e.g. Observation, and not in this element.",
                "type": "array"
              },
              "description": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "_description": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "series": {
                "description": "Each study has one or more series of images or other content.",
                "items": {
                  "description": "Representation of the content produced in a DICOM imaging study. A study comprises a set of series, each of which includes a set of Service-Object Pair Instances (SOP Instances - images or other data) acquired or produced in a common context.  A series is of only one modality (e.g. X-ray, CT, MR, ultrasound), but a study may have multiple series of different modalities.",
                  "properties": {
                    "id": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "type": "array"
                    },
                    "modifierExtension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                      "type": "array"
                    },
                    "uid": {
                      "description": "The DICOM Series Instance UID for the series.",
                      "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                      "type": "string"
                    },
                    "_uid": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "number": {
                      "pattern": "^[0]|([1-9][0-9]*)$",
                      "type": "number",
                      "description": "An integer with a value that is not negative (e.g. >= 0)"
                    },
                    "_number": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "modality": {
                      "description": "A reference to a code defined by a terminology system.",
                      "additionalProperties": false
                    },
                    "description": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "_description": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "numberOfInstances": {
                      "pattern": "^[0]|([1-9][0-9]*)$",
                      "type": "number",
                      "description": "An integer with a value that is not negative (e.g. >= 0)"
                    },
                    "_numberOfInstances": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "endpoint": {
                      "description": "The network service providing access (e.g., query, view, or retrieval) for this series. See implementation notes for information about using DICOM endpoints. A series-level endpoint, if present, has precedence over a study-level endpoint with the same Endpoint.connectionType.",
                      "type": "array"
                    },
                    "bodySite": {
                      "description": "A reference to a code defined by a terminology system.",
                      "additionalProperties": false
                    },
                    "laterality": {
                      "description": "A reference to a code defined by a terminology system.",
                      "additionalProperties": false
                    },
                    "specimen": {
                      "description": "The specimen imaged, e.g., for whole slide imaging of a biopsy.",
                      "type": "array"
                    },
                    "started": {
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                      "type": "string",
                      "description": "A date, date-time or partial date (e.g. just year or year + month).  If hours and minutes are specified, a time zone SHALL be populated. The format is a union of the schema types gYear, gYearMonth, date and dateTime. Seconds must be provided due to schema type constraints but may be zero-filled and may be ignored.                 Dates SHALL be valid dates."
                    },
                    "_started": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "performer": {
                      "description": "Indicates who or what performed the series and how they were involved.",
                      "items": {
                        "description": "Representation of the content produced in a DICOM imaging study. A study comprises a set of series, each of which includes a set of Service-Object Pair Instances (SOP Instances - images or other data) acquired or produced in a common context.  A series is of only one modality (e.g. X-ray, CT, MR, ultrasound), but a study may have multiple series of different modalities.",
                        "properties": {
                          "id": {
                            "pattern": "^[ \\r\\n\\t\\S]+$",
                            "type": "string",
                            "description": "A sequence of Unicode characters"
                          },
                          "extension": {
                            "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                            "type": "array"
                          },
                          "modifierExtension": {
                            "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                            "type": "array"
                          },
                          "function": {
                            "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                            "additionalProperties": false
                          },
                          "actor": {
                            "description": "A reference from one resource to another.",
                            "additionalProperties": false
                          }
                        },
                        "additionalProperties": false,
                        "required": [
                          "actor"
                        ]
                      },
                      "type": "array"
                    },
                    "instance": {
                      "description": "A single SOP instance within the series, e.g. an image, or presentation state.",
                      "items": {
                        "description": "Representation of the content produced in a DICOM imaging study. A study comprises a set of series, each of which includes a set of Service-Object Pair Instances (SOP Instances - images or other data) acquired or produced in a common context.  A series is of only one modality (e.g. X-ray, CT, MR, ultrasound), but a study may have multiple series of different modalities.",
                        "properties": {
                          "id": {
                            "pattern": "^[ \\r\\n\\t\\S]+$",
                            "type": "string",
                            "description": "A sequence of Unicode characters"
                          },
                          "extension": {
                            "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                            "type": "array"
                          },
                          "modifierExtension": {
                            "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                            "type": "array"
                          },
                          "uid": {
                            "description": "The DICOM SOP Instance UID for this image or other DICOM content.",
                            "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                            "type": "string"
                          },
                          "_uid": {
                            "description": "Base definition for all elements in a resource.",
                            "additionalProperties": false
                          },
                          "sopClass": {
                            "description": "A reference to a code defined by a terminology system.",
                            "additionalProperties": false
                          },
                          "number": {
                            "pattern": "^[0]|([1-9][0-9]*)$",
                            "type": "number",
                            "description": "An integer with a value that is not negative (e.g. >= 0)"
                          },
                          "_number": {
                            "description": "Base definition for all elements in a resource.",
                            "additionalProperties": false
                          },
                          "title": {
                            "pattern": "^[ \\r\\n\\t\\S]+$",
                            "type": "string",
                            "description": "A sequence of Unicode characters"
                          },
                          "_title": {
                            "description": "Base definition for all elements in a resource.",
                            "additionalProperties": false
                          }
                        },
                        "additionalProperties": false,
                        "required": [
                          "sopClass"
                        ]
                      },
                      "type": "array"
                    }
                  },
                  "additionalProperties": false,
                  "required": [
                    "modality"
                  ]
                },
                "type": "array"
              }
            },
            "additionalProperties": false,
            "required": [
              "subject",
              "resourceType"
            ]
          },
          {
            "description": "Describes the event of a patient being administered a vaccine or a record of an immunization as reported by a patient, a clinician or another party.",
            "properties": {
              "resourceType": {
                "description": "This is a Immunization resource",
                "const": "Immunization"
              },
              "id": {
                "description": "The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.",
                "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                "type": "string"
              },
              "meta": {
                "description": "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
                "additionalProperties": false
              },
              "implicitRules": {
                "pattern": "^\\S*$",
                "type": "string",
                "description": "String of characters used to identify a name or a resource"
              },
              "_implicitRules": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "language": {
                "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                "type": "string",
                "description": "A string which has at least one character and no leading or trailing whitespace and where there is no whitespace other than single spaces in the contents"
              },
              "_language": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "text": {
                "description": "A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it \"clinically safe\" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.",
                "additionalProperties": false
              },
              "contained": {
                "description": "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope.",
                "type": "array"
              },
              "extension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                "type": "array"
              },
              "modifierExtension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                "type": "array"
              },
              "identifier": {
                "description": "A unique identifier assigned to this immunization record.",
                "type": "array"
              },
              "status": {
                "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                "type": "string",
                "description": "A string which has at least one character and no leading or trailing whitespace and where there is no whitespace other than single spaces in the contents"
              },
              "_status": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "statusReason": {
                "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                "additionalProperties": false
              },
              "vaccineCode": {
                "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                "additionalProperties": false
              },
              "patient": {
                "description": "A reference from one resource to another.",
                "additionalProperties": false
              },
              "encounter": {
                "description": "A reference from one resource to another.",
                "additionalProperties": false
              },
              "occurrenceDateTime": {
                "description": "Date vaccine administered or was to be administered.",
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                "type": "string"
              },
              "_occurrenceDateTime": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "occurrenceString": {
                "description": "Date vaccine administered or was to be administered.",
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string"
              },
              "_occurrenceString": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "recorded": {
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                "type": "string",
                "description": "A date, date-time or partial date (e.g. just year or year + month).  If hours and minutes are specified, a time zone SHALL be populated. The format is a union of the schema types gYear, gYearMonth, date and dateTime. Seconds must be provided due to schema type constraints but may be zero-filled and may be ignored.                 Dates SHALL be valid dates."
              },
              "_recorded": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "primarySource": {
                "description": "An indication that the content of the record is based on information from the person who administered the vaccine. This reflects the context under which the data was originally recorded.",
                "pattern": "^true|false$",
                "type": "boolean"
              },
              "_primarySource": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "reportOrigin": {
                "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                "additionalProperties": false
              },
              "location": {
                "description": "A reference from one resource to another.",
                "additionalProperties": false
              },
              "manufacturer": {
                "description": "A reference from one resource to another.",
                "additionalProperties": false
              },
              "lotNumber": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "_lotNumber": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "expirationDate": {
                "description": "Date vaccine batch expires.",
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                "type": "string"
              },
              "_expirationDate": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "site": {
                "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                "additionalProperties": false
              },
              "route": {
                "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                "additionalProperties": false
              },
              "doseQuantity": {
                "description": "A measured amount (or an amount that can potentially be measured). Note that measured amounts include amounts that are not precisely quantified, including amounts involving arbitrary units and floating currencies.",
                "additionalProperties": false
              },
              "performer": {
                "description": "Indicates who performed the immunization event.",
                "items": {
                  "description": "Describes the event of a patient being administered a vaccine or a record of an immunization as reported by a patient, a clinician or another party.",
                  "properties": {
                    "id": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "type": "array"
                    },
                    "modifierExtension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                      "type": "array"
                    },
                    "function": {
                      "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                      "additionalProperties": false
                    },
                    "actor": {
                      "description": "A reference from one resource to another.",
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false,
                  "required": [
                    "actor"
                  ]
                },
                "type": "array"
              },
              "note": {
                "description": "Extra information about the immunization that is not conveyed by the other attributes.",
                "type": "array"
              },
              "reasonCode": {
                "description": "Reasons why the vaccine was administered.",
                "type": "array"
              },
              "reasonReference": {
                "description": "Condition, Observation or DiagnosticReport that supports why the immunization was administered.",
                "type": "array"
              },
              "isSubpotent": {
                "description": "Indication if a dose is considered to be subpotent. By default, a dose should be considered to be potent.",
                "pattern": "^true|false$",
                "type": "boolean"
              },
              "_isSubpotent": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "subpotentReason": {
                "description": "Reason why a dose is considered to be subpotent.",
                "type": "array"
              },
              "education": {
                "description": "Educational material presented to the patient (or guardian) at the time of vaccine administration.",
                "items": {
                  "description": "Describes the event of a patient being administered a vaccine or a record of an immunization as reported by a patient, a clinician or another party.",
                  "properties": {
                    "id": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "type": "array"
                    },
                    "modifierExtension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                      "type": "array"
                    },
                    "documentType": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "_documentType": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "reference": {
                      "pattern": "^\\S*$",
                      "type": "string",
                      "description": "String of characters used to identify a name or a resource"
                    },
                    "_reference": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "publicationDate": {
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                      "type": "string",
                      "description": "A date, date-time or partial date (e.g. just year or year + month).  If hours and minutes are specified, a time zone SHALL be populated. The format is a union of the schema types gYear, gYearMonth, date and dateTime. Seconds must be provided due to schema type constraints but may be zero-filled and may be ignored.                 Dates SHALL be valid dates."
                    },
                    "_publicationDate": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "presentationDate": {
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                      "type": "string",
                      "description": "A date, date-time or partial date (e.g. just year or year + month).  If hours and minutes are specified, a time zone SHALL be populated. The format is a union of the schema types gYear, gYearMonth, date and dateTime. Seconds must be provided due to schema type constraints but may be zero-filled and may be ignored.                 Dates SHALL be valid dates."
                    },
                    "_presentationDate": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                },
                "type": "array"
              },
              "programEligibility": {
                "description": "Indicates a patient's eligibility for a funding program.",
                "type": "array"
              },
              "fundingSource": {
                "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                "additionalProperties": false
              },
              "reaction": {
                "description": "Categorical data indicating that an adverse event is associated in time to an immunization.",
                "items": {
                  "description": "Describes the event of a patient being administered a vaccine or a record of an immunization as reported by a patient, a clinician or another party.",
                  "properties": {
                    "id": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "type": "array"
                    },
                    "modifierExtension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                      "type": "array"
                    },
                    "date": {
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                      "type": "string",
                      "description": "A date, date-time or partial date (e.g. just year or year + month).  If hours and minutes are specified, a time zone SHALL be populated. The format is a union of the schema types gYear, gYearMonth, date and dateTime. Seconds must be provided due to schema type constraints but may be zero-filled and may be ignored.                 Dates SHALL be valid dates."
                    },
                    "_date": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "detail": {
                      "description": "A reference from one resource to another.",
                      "additionalProperties": false
                    },
                    "reported": {
                      "description": "Self-reported indicator.",
                      "pattern": "^true|false$",
                      "type": "boolean"
                    },
                    "_reported": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                },
                "type": "array"
              },
              "protocolApplied": {
                "description": "The protocol (set of recommendations) being followed by the provider who administered the dose.",
                "items": {
                  "description": "Describes the event of a patient being administered a vaccine or a record of an immunization as reported by a patient, a clinician or another party.",
                  "properties": {
                    "id": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "type": "array"
                    },
                    "modifierExtension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                      "type": "array"
                    },
                    "series": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "_series": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "authority": {
                      "description": "A reference from one resource to another.",
                      "additionalProperties": false
                    },
                    "targetDisease": {
                      "description": "The vaccine preventable disease the dose is being administered against.",
                      "type": "array"
                    },
                    "doseNumberPositiveInt": {
                      "description": "Nominal position in a series.",
                      "pattern": "^[1-9][0-9]*$",
                      "type": "number"
                    },
                    "_doseNumberPositiveInt": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "doseNumberString": {
                      "description": "Nominal position in a series.",
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string"
                    },
                    "_doseNumberString": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "seriesDosesPositiveInt": {
                      "description": "The recommended number of doses to achieve immunity.",
                      "pattern": "^[1-9][0-9]*$",
                      "type": "number"
                    },
                    "_seriesDosesPositiveInt": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "seriesDosesString": {
                      "description": "The recommended number of doses to achieve immunity.",
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string"
                    },
                    "_seriesDosesString": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                },
                "type": "array"
              }
            },
            "additionalProperties": false,
            "required": [
              "patient",
              "vaccineCode",
              "resourceType"
            ]
          },
          {
            "description": "Describes a comparison of an immunization event against published recommendations to determine if the administration is \"valid\" in relation to those  recommendations.",
            "properties": {
              "resourceType": {
                "description": "This is a ImmunizationEvaluation resource",
                "const": "ImmunizationEvaluation"
              },
              "id": {
                "description": "The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.",
                "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                "type": "string"
              },
              "meta": {
                "description": "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
                "additionalProperties": false
              },
              "implicitRules": {
                "pattern": "^\\S*$",
                "type": "string",
                "description": "String of characters used to identify a name or a resource"
              },
              "_implicitRules": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "language": {
                "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                "type": "string",
                "description": "A string which has at least one character and no leading or trailing whitespace and where there is no whitespace other than single spaces in the contents"
              },
              "_language": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "text": {
                "description": "A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it \"clinically safe\" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.",
                "additionalProperties": false
              },
              "contained": {
                "description": "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope.",
                "type": "array"
              },
              "extension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                "type": "array"
              },
              "modifierExtension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                "type": "array"
              },
              "identifier": {
                "description": "A unique identifier assigned to this immunization evaluation record.",
                "type": "array"
              },
              "status": {
                "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                "type": "string",
                "description": "A string which has at least one character and no leading or trailing whitespace and where there is no whitespace other than single spaces in the contents"
              },
              "_status": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "patient": {
                "description": "A reference from one resource to another.",
                "additionalProperties": false
              },
              "date": {
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                "type": "string",
                "description": "A date, date-time or partial date (e.g. just year or year + month).  If hours and minutes are specified, a time zone SHALL be populated. The format is a union of the schema types gYear, gYearMonth, date and dateTime. Seconds must be provided due to schema type constraints but may be zero-filled and may be ignored.                 Dates SHALL be valid dates."
              },
              "_date": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "authority": {
                "description": "A reference from one resource to another.",
                "additionalProperties": false
              },
              "targetDisease": {
                "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                "additionalProperties": false
              },
              "immunizationEvent": {
                "description": "A reference from one resource to another.",
                "additionalProperties": false
              },
              "doseStatus": {
                "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                "additionalProperties": false
              },
              "doseStatusReason": {
                "description": "Provides an explanation as to why the vaccine administration event is valid or not relative to the published recommendations.",
                "type": "array"
              },
              "description": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "_description": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "series": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "_series": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "doseNumberPositiveInt": {
                "description": "Nominal position in a series.",
                "pattern": "^[1-9][0-9]*$",
                "type": "number"
              },
              "_doseNumberPositiveInt": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "doseNumberString": {
                "description": "Nominal position in a series.",
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string"
              },
              "_doseNumberString": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "seriesDosesPositiveInt": {
                "description": "The recommended number of doses to achieve immunity.",
                "pattern": "^[1-9][0-9]*$",
                "type": "number"
              },
              "_seriesDosesPositiveInt": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "seriesDosesString": {
                "description": "The recommended number of doses to achieve immunity.",
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string"
              },
              "_seriesDosesString": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              }
            },
            "additionalProperties": false,
            "required": [
              "doseStatus",
              "patient",
              "targetDisease",
              "immunizationEvent",
              "resourceType"
            ]
          },
          {
            "description": "A patient's point-in-time set of recommendations (i.e. forecasting) according to a published schedule with optional supporting justification.",
            "properties": {
              "resourceType": {
                "description": "This is a ImmunizationRecommendation resource",
                "const": "ImmunizationRecommendation"
              },
              "id": {
                "description": "The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.",
                "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                "type": "string"
              },
              "meta": {
                "description": "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
                "additionalProperties": false
              },
              "implicitRules": {
                "pattern": "^\\S*$",
                "type": "string",
                "description": "String of characters used to identify a name or a resource"
              },
              "_implicitRules": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "language": {
                "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                "type": "string",
                "description": "A string which has at least one character and no leading or trailing whitespace and where there is no whitespace other than single spaces in the contents"
              },
              "_language": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "text": {
                "description": "A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it \"clinically safe\" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.",
                "additionalProperties": false
              },
              "contained": {
                "description": "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope.",
                "type": "array"
              },
              "extension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                "type": "array"
              },
              "modifierExtension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                "type": "array"
              },
              "identifier": {
                "description": "A unique identifier assigned to this particular recommendation record.",
                "type": "array"
              },
              "patient": {
                "description": "A reference from one resource to another.",
                "additionalProperties": false
              },
              "date": {
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                "type": "string",
                "description": "A date, date-time or partial date (e.g. just year or year + month).  If hours and minutes are specified, a time zone SHALL be populated. The format is a union of the schema types gYear, gYearMonth, date and dateTime. Seconds must be provided due to schema type constraints but may be zero-filled and may be ignored.                 Dates SHALL be valid dates."
              },
              "_date": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "authority": {
                "description": "A reference from one resource to another.",
                "additionalProperties": false
              },
              "recommendation": {
                "description": "Vaccine administration recommendations.",
                "items": {
                  "description": "A patient's point-in-time set of recommendations (i.e. forecasting) according to a published schedule with optional supporting justification.",
                  "properties": {
                    "id": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "type": "array"
                    },
                    "modifierExtension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                      "type": "array"
                    },
                    "vaccineCode": {
                      "description": "Vaccine(s) or vaccine group that pertain to the recommendation.",
                      "type": "array"
                    },
                    "targetDisease": {
                      "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                      "additionalProperties": false
                    },
                    "contraindicatedVaccineCode": {
                      "description": "Vaccine(s) which should not be used to fulfill the recommendation.",
                      "type": "array"
                    },
                    "forecastStatus": {
                      "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                      "additionalProperties": false
                    },
                    "forecastReason": {
                      "description": "The reason for the assigned forecast status.",
                      "type": "array"
                    },
                    "dateCriterion": {
                      "description": "Vaccine date recommendations.  For example, earliest date to administer, latest date to administer, etc.",
                      "items": {
                        "description": "A patient's point-in-time set of recommendations (i.e. forecasting) according to a published schedule with optional supporting justification.",
                        "properties": {
                          "id": {
                            "pattern": "^[ \\r\\n\\t\\S]+$",
                            "type": "string",
                            "description": "A sequence of Unicode characters"
                          },
                          "extension": {
                            "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                            "type": "array"
                          },
                          "modifierExtension": {
                            "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                            "type": "array"
                          },
                          "code": {
                            "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                            "additionalProperties": false
                          },
                          "value": {
                            "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                            "type": "string",
                            "description": "A date, date-time or partial date (e.g. just year or year + month).  If hours and minutes are specified, a time zone SHALL be populated. The format is a union of the schema types gYear, gYearMonth, date and dateTime. Seconds must be provided due to schema type constraints but may be zero-filled and may be ignored.                 Dates SHALL be valid dates."
                          },
                          "_value": {
                            "description": "Base definition for all elements in a resource.",
                            "additionalProperties": false
                          }
                        },
                        "additionalProperties": false,
                        "required": [
                          "code"
                        ]
                      },
                      "type": "array"
                    },
                    "description": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "_description": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "series": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "_series": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "doseNumberPositiveInt": {
                      "description": "Nominal position of the recommended dose in a series (e.g. dose 2 is the next recommended dose).",
                      "pattern": "^[1-9][0-9]*$",
                      "type": "number"
                    },
                    "_doseNumberPositiveInt": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "doseNumberString": {
                      "description": "Nominal position of the recommended dose in a series (e.g. dose 2 is the next recommended dose).",
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string"
                    },
                    "_doseNumberString": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "seriesDosesPositiveInt": {
                      "description": "The recommended number of doses to achieve immunity.",
                      "pattern": "^[1-9][0-9]*$",
                      "type": "number"
                    },
                    "_seriesDosesPositiveInt": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "seriesDosesString": {
                      "description": "The recommended number of doses to achieve immunity.",
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string"
                    },
                    "_seriesDosesString": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "supportingImmunization": {
                      "description": "Immunization event history and/or evaluation that supports the status and recommendation.",
                      "type": "array"
                    },
                    "supportingPatientInformation": {
                      "description": "Patient Information that supports the status and recommendation.  This includes patient observations, adverse reactions and allergy/intolerance information.",
                      "type": "array"
                    }
                  },
                  "additionalProperties": false,
                  "required": [
                    "forecastStatus"
                  ]
                },
                "type": "array"
              }
            },
            "additionalProperties": false,
            "required": [
              "patient",
              "recommendation",
              "resourceType"
            ]
          },
          {
            "description": "A set of rules of how a particular interoperability or standards problem is solved - typically through the use of FHIR resources. This resource is used to gather all the parts of an implementation guide into a logical whole and to publish a computable definition of all the parts.",
            "properties": {
              "resourceType": {
                "description": "This is a ImplementationGuide resource",
                "const": "ImplementationGuide"
              },
              "id": {
                "description": "The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.",
                "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                "type": "string"
              },
              "meta": {
                "description": "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
                "additionalProperties": false
              },
              "implicitRules": {
                "pattern": "^\\S*$",
                "type": "string",
                "description": "String of characters used to identify a name or a resource"
              },
              "_implicitRules": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "language": {
                "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                "type": "string",
                "description": "A string which has at least one character and no leading or trailing whitespace and where there is no whitespace other than single spaces in the contents"
              },
              "_language": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "text": {
                "description": "A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it \"clinically safe\" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.",
                "additionalProperties": false
              },
              "contained": {
                "description": "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope.",
                "type": "array"
              },
              "extension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                "type": "array"
              },
              "modifierExtension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                "type": "array"
              },
              "url": {
                "pattern": "^\\S*$",
                "type": "string",
                "description": "String of characters used to identify a name or a resource"
              },
              "_url": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "version": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "_version": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "name": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "_name": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "title": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "_title": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "status": {
                "description": "The status of this implementation guide. Enables tracking the life-cycle of the content.",
                "enum": [
                  "draft",
                  "active",
                  "retired",
                  "unknown"
                ]
              },
              "_status": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "experimental": {
                "description": "A Boolean value to indicate that this implementation guide is authored for testing purposes (or education/evaluation/marketing) and is not intended to be used for genuine usage.",
                "pattern": "^true|false$",
                "type": "boolean"
              },
              "_experimental": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "date": {
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                "type": "string",
                "description": "A date, date-time or partial date (e.g. just year or year + month).  If hours and minutes are specified, a time zone SHALL be populated. The format is a union of the schema types gYear, gYearMonth, date and dateTime. Seconds must be provided due to schema type constraints but may be zero-filled and may be ignored.                 Dates SHALL be valid dates."
              },
              "_date": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "publisher": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "_publisher": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "contact": {
                "description": "Contact details to assist a user in finding and communicating with the publisher.",
                "type": "array"
              },
              "description": {
                "description": "A free text natural language description of the implementation guide from a consumer's perspective.",
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string"
              },
              "_description": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "useContext": {
                "description": "The content was developed with a focus and intent of supporting the contexts that are listed. These contexts may be general categories (gender, age, ...) or may be references to specific programs (insurance plans, studies, ...) and may be used to assist with indexing and searching for appropriate implementation guide instances.",
                "type": "array"
              },
              "jurisdiction": {
                "description": "A legal or geographic region in which the implementation guide is intended to be used.",
                "type": "array"
              },
              "copyright": {
                "description": "A copyright statement relating to the implementation guide and/or its contents. Copyright statements are generally legal restrictions on the use and publishing of the implementation guide.",
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string"
              },
              "_copyright": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "packageId": {
                "description": "The NPM package name for this Implementation Guide, used in the NPM package distribution, which is the primary mechanism by which FHIR based tooling manages IG dependencies. This value must be globally unique, and should be assigned with care.",
                "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                "type": "string"
              },
              "_packageId": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "license": {
                "description": "The license that applies to this Implementation Guide, using an SPDX license code, or 'not-open-source'.",
                "enum": [
                  "not-open-source",
                  "0BSD",
                  "AAL",
                  "Abstyles",
                  "Adobe-2006",
                  "Adobe-Glyph",
                  "ADSL",
                  "AFL-1.1",
                  "AFL-1.2",
                  "AFL-2.0",
                  "AFL-2.1",
                  "AFL-3.0",
                  "Afmparse",
                  "AGPL-1.0-only",
                  "AGPL-1.0-or-later",
                  "AGPL-3.0-only",
                  "AGPL-3.0-or-later",
                  "Aladdin",
                  "AMDPLPA",
                  "AML",
                  "AMPAS",
                  "ANTLR-PD",
                  "Apache-1.0",
                  "Apache-1.1",
                  "Apache-2.0",
                  "APAFML",
                  "APL-1.0",
                  "APSL-1.0",
                  "APSL-1.1",
                  "APSL-1.2",
                  "APSL-2.0",
                  "Artistic-1.0-cl8",
                  "Artistic-1.0-Perl",
                  "Artistic-1.0",
                  "Artistic-2.0",
                  "Bahyph",
                  "Barr",
                  "Beerware",
                  "BitTorrent-1.0",
                  "BitTorrent-1.1",
                  "Borceux",
                  "BSD-1-Clause",
                  "BSD-2-Clause-FreeBSD",
                  "BSD-2-Clause-NetBSD",
                  "BSD-2-Clause-Patent",
                  "BSD-2-Clause",
                  "BSD-3-Clause-Attribution",
                  "BSD-3-Clause-Clear",
                  "BSD-3-Clause-LBNL",
                  "BSD-3-Clause-No-Nuclear-License-2014",
                  "BSD-3-Clause-No-Nuclear-License",
                  "BSD-3-Clause-No-Nuclear-Warranty",
                  "BSD-3-Clause",
                  "BSD-4-Clause-UC",
                  "BSD-4-Clause",
                  "BSD-Protection",
                  "BSD-Source-Code",
                  "BSL-1.0",
                  "bzip2-1.0.5",
                  "bzip2-1.0.6",
                  "Caldera",
                  "CATOSL-1.1",
                  "CC-BY-1.0",
                  "CC-BY-2.0",
                  "CC-BY-2.5",
                  "CC-BY-3.0",
                  "CC-BY-4.0",
                  "CC-BY-NC-1.0",
                  "CC-BY-NC-2.0",
                  "CC-BY-NC-2.5",
                  "CC-BY-NC-3.0",
                  "CC-BY-NC-4.0",
                  "CC-BY-NC-ND-1.0",
                  "CC-BY-NC-ND-2.0",
                  "CC-BY-NC-ND-2.5",
                  "CC-BY-NC-ND-3.0",
                  "CC-BY-NC-ND-4.0",
                  "CC-BY-NC-SA-1.0",
                  "CC-BY-NC-SA-2.0",
                  "CC-BY-NC-SA-2.5",
                  "CC-BY-NC-SA-3.0",
                  "CC-BY-NC-SA-4.0",
                  "CC-BY-ND-1.0",
                  "CC-BY-ND-2.0",
                  "CC-BY-ND-2.5",
                  "CC-BY-ND-3.0",
                  "CC-BY-ND-4.0",
                  "CC-BY-SA-1.0",
                  "CC-BY-SA-2.0",
                  "CC-BY-SA-2.5",
                  "CC-BY-SA-3.0",
                  "CC-BY-SA-4.0",
                  "CC0-1.0",
                  "CDDL-1.0",
                  "CDDL-1.1",
                  "CDLA-Permissive-1.0",
                  "CDLA-Sharing-1.0",
                  "CECILL-1.0",
                  "CECILL-1.1",
                  "CECILL-2.0",
                  "CECILL-2.1",
                  "CECILL-B",
                  "CECILL-C",
                  "ClArtistic",
                  "CNRI-Jython",
                  "CNRI-Python-GPL-Compatible",
                  "CNRI-Python",
                  "Condor-1.1",
                  "CPAL-1.0",
                  "CPL-1.0",
                  "CPOL-1.02",
                  "Crossword",
                  "CrystalStacker",
                  "CUA-OPL-1.0",
                  "Cube",
                  "curl",
                  "D-FSL-1.0",
                  "diffmark",
                  "DOC",
                  "Dotseqn",
                  "DSDP",
                  "dvipdfm",
                  "ECL-1.0",
                  "ECL-2.0",
                  "EFL-1.0",
                  "EFL-2.0",
                  "eGenix",
                  "Entessa",
                  "EPL-1.0",
                  "EPL-2.0",
                  "ErlPL-1.1",
                  "EUDatagrid",
                  "EUPL-1.0",
                  "EUPL-1.1",
                  "EUPL-1.2",
                  "Eurosym",
                  "Fair",
                  "Frameworx-1.0",
                  "FreeImage",
                  "FSFAP",
                  "FSFUL",
                  "FSFULLR",
                  "FTL",
                  "GFDL-1.1-only",
                  "GFDL-1.1-or-later",
                  "GFDL-1.2-only",
                  "GFDL-1.2-or-later",
                  "GFDL-1.3-only",
                  "GFDL-1.3-or-later",
                  "Giftware",
                  "GL2PS",
                  "Glide",
                  "Glulxe",
                  "gnuplot",
                  "GPL-1.0-only",
                  "GPL-1.0-or-later",
                  "GPL-2.0-only",
                  "GPL-2.0-or-later",
                  "GPL-3.0-only",
                  "GPL-3.0-or-later",
                  "gSOAP-1.3b",
                  "HaskellReport",
                  "HPND",
                  "IBM-pibs",
                  "ICU",
                  "IJG",
                  "ImageMagick",
                  "iMatix",
                  "Imlib2",
                  "Info-ZIP",
                  "Intel-ACPI",
                  "Intel",
                  "Interbase-1.0",
                  "IPA",
                  "IPL-1.0",
                  "ISC",
                  "JasPer-2.0",
                  "JSON",
                  "LAL-1.2",
                  "LAL-1.3",
                  "Latex2e",
                  "Leptonica",
                  "LGPL-2.0-only",
                  "LGPL-2.0-or-later",
                  "LGPL-2.1-only",
                  "LGPL-2.1-or-later",
                  "LGPL-3.0-only",
                  "LGPL-3.0-or-later",
                  "LGPLLR",
                  "Libpng",
                  "libtiff",
                  "LiLiQ-P-1.1",
                  "LiLiQ-R-1.1",
                  "LiLiQ-Rplus-1.1",
                  "Linux-OpenIB",
                  "LPL-1.0",
                  "LPL-1.02",
                  "LPPL-1.0",
                  "LPPL-1.1",
                  "LPPL-1.2",
                  "LPPL-1.3a",
                  "LPPL-1.3c",
                  "MakeIndex",
                  "MirOS",
                  "MIT-0",
                  "MIT-advertising",
                  "MIT-CMU",
                  "MIT-enna",
                  "MIT-feh",
                  "MIT",
                  "MITNFA",
                  "Motosoto",
                  "mpich2",
                  "MPL-1.0",
                  "MPL-1.1",
                  "MPL-2.0-no-copyleft-exception",
                  "MPL-2.0",
                  "MS-PL",
                  "MS-RL",
                  "MTLL",
                  "Multics",
                  "Mup",
                  "NASA-1.3",
                  "Naumen",
                  "NBPL-1.0",
                  "NCSA",
                  "Net-SNMP",
                  "NetCDF",
                  "Newsletr",
                  "NGPL",
                  "NLOD-1.0",
                  "NLPL",
                  "Nokia",
                  "NOSL",
                  "Noweb",
                  "NPL-1.0",
                  "NPL-1.1",
                  "NPOSL-3.0",
                  "NRL",
                  "NTP",
                  "OCCT-PL",
                  "OCLC-2.0",
                  "ODbL-1.0",
                  "OFL-1.0",
                  "OFL-1.1",
                  "OGTSL",
                  "OLDAP-1.1",
                  "OLDAP-1.2",
                  "OLDAP-1.3",
                  "OLDAP-1.4",
                  "OLDAP-2.0.1",
                  "OLDAP-2.0",
                  "OLDAP-2.1",
                  "OLDAP-2.2.1",
                  "OLDAP-2.2.2",
                  "OLDAP-2.2",
                  "OLDAP-2.3",
                  "OLDAP-2.4",
                  "OLDAP-2.5",
                  "OLDAP-2.6",
                  "OLDAP-2.7",
                  "OLDAP-2.8",
                  "OML",
                  "OpenSSL",
                  "OPL-1.0",
                  "OSET-PL-2.1",
                  "OSL-1.0",
                  "OSL-1.1",
                  "OSL-2.0",
                  "OSL-2.1",
                  "OSL-3.0",
                  "PDDL-1.0",
                  "PHP-3.0",
                  "PHP-3.01",
                  "Plexus",
                  "PostgreSQL",
                  "psfrag",
                  "psutils",
                  "Python-2.0",
                  "Qhull",
                  "QPL-1.0",
                  "Rdisc",
                  "RHeCos-1.1",
                  "RPL-1.1",
                  "RPL-1.5",
                  "RPSL-1.0",
                  "RSA-MD",
                  "RSCPL",
                  "Ruby",
                  "SAX-PD",
                  "Saxpath",
                  "SCEA",
                  "Sendmail",
                  "SGI-B-1.0",
                  "SGI-B-1.1",
                  "SGI-B-2.0",
                  "SimPL-2.0",
                  "SISSL-1.2",
                  "SISSL",
                  "Sleepycat",
                  "SMLNJ",
                  "SMPPL",
                  "SNIA",
                  "Spencer-86",
                  "Spencer-94",
                  "Spencer-99",
                  "SPL-1.0",
                  "SugarCRM-1.1.3",
                  "SWL",
                  "TCL",
                  "TCP-wrappers",
                  "TMate",
                  "TORQUE-1.1",
                  "TOSL",
                  "Unicode-DFS-2015",
                  "Unicode-DFS-2016",
                  "Unicode-TOU",
                  "Unlicense",
                  "UPL-1.0",
                  "Vim",
                  "VOSTROM",
                  "VSL-1.0",
                  "W3C-19980720",
                  "W3C-20150513",
                  "W3C",
                  "Watcom-1.0",
                  "Wsuipa",
                  "WTFPL",
                  "X11",
                  "Xerox",
                  "XFree86-1.1",
                  "xinetd",
                  "Xnet",
                  "xpp",
                  "XSkat",
                  "YPL-1.0",
                  "YPL-1.1",
                  "Zed",
                  "Zend-2.0",
                  "Zimbra-1.3",
                  "Zimbra-1.4",
                  "zlib-acknowledgement",
                  "Zlib",
                  "ZPL-1.1",
                  "ZPL-2.0",
                  "ZPL-2.1"
                ]
              },
              "_license": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "fhirVersion": {
                "description": "The version(s) of the FHIR specification that this ImplementationGuide targets - e.g. describes how to use. The value of this element is the formal version of the specification, without the revision number, e.g. [publication].[major].[minor], which is 4.0.1. for this version.",
                "items": {
                  "enum": [
                    "0.01",
                    "0.05",
                    "0.06",
                    "0.11",
                    "0.0.80",
                    "0.0.81",
                    "0.0.82",
                    "0.4.0",
                    "0.5.0",
                    "1.0.0",
                    "1.0.1",
                    "1.0.2",
                    "1.1.0",
                    "1.4.0",
                    "1.6.0",
                    "1.8.0",
                    "3.0.0",
                    "3.0.1",
                    "3.3.0",
                    "3.5.0",
                    "4.0.0",
                    "4.0.1"
                  ]
                },
                "type": "array"
              },
              "_fhirVersion": {
                "description": "Extensions for fhirVersion",
                "type": "array"
              },
              "dependsOn": {
                "description": "Another implementation guide that this implementation depends on. Typically, an implementation guide uses value sets, profiles etc.defined in other implementation guides.",
                "items": {
                  "description": "A set of rules of how a particular interoperability or standards problem is solved - typically through the use of FHIR resources. This resource is used to gather all the parts of an implementation guide into a logical whole and to publish a computable definition of all the parts.",
                  "properties": {
                    "id": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "type": "array"
                    },
                    "modifierExtension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                      "type": "array"
                    },
                    "uri": {
                      "pattern": "^\\S*$",
                      "type": "string",
                      "description": "A URI that is a reference to a canonical URL on a FHIR resource"
                    },
                    "packageId": {
                      "description": "The NPM package name for the Implementation Guide that this IG depends on.",
                      "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                      "type": "string"
                    },
                    "_packageId": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "version": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "_version": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false,
                  "required": [
                    "uri"
                  ]
                },
                "type": "array"
              },
              "global": {
                "description": "A set of profiles that all resources covered by this implementation guide must conform to.",
                "items": {
                  "description": "A set of rules of how a particular interoperability or standards problem is solved - typically through the use of FHIR resources. This resource is used to gather all the parts of an implementation guide into a logical whole and to publish a computable definition of all the parts.",
                  "properties": {
                    "id": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "type": "array"
                    },
                    "modifierExtension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                      "type": "array"
                    },
                    "type": {
                      "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                      "type": "string",
                      "description": "A string which has at least one character and no leading or trailing whitespace and where there is no whitespace other than single spaces in the contents"
                    },
                    "_type": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "profile": {
                      "pattern": "^\\S*$",
                      "type": "string",
                      "description": "A URI that is a reference to a canonical URL on a FHIR resource"
                    }
                  },
                  "additionalProperties": false,
                  "required": [
                    "profile"
                  ]
                },
                "type": "array"
              },
              "definition": {
                "description": "The information needed by an IG publisher tool to publish the whole implementation guide.",
                "properties": {
                  "id": {
                    "pattern": "^[ \\r\\n\\t\\S]+$",
                    "type": "string",
                    "description": "A sequence of Unicode characters"
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "type": "array"
                  },
                  "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                    "type": "array"
                  },
                  "grouping": {
                    "description": "A logical group of resources. Logical groups can be used when building pages.",
                    "items": {
                      "description": "A set of rules of how a particular interoperability or standards problem is solved - typically through the use of FHIR resources. This resource is used to gather all the parts of an implementation guide into a logical whole and to publish a computable definition of all the parts.",
                      "properties": {
                        "id": {
                          "pattern": "^[ \\r\\n\\t\\S]+$",
                          "type": "string",
                          "description": "A sequence of Unicode characters"
                        },
                        "extension": {
                          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                          "type": "array"
                        },
                        "modifierExtension": {
                          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                          "type": "array"
                        },
                        "name": {
                          "pattern": "^[ \\r\\n\\t\\S]+$",
                          "type": "string",
                          "description": "A sequence of Unicode characters"
                        },
                        "_name": {
                          "description": "Base definition for all elements in a resource.",
                          "additionalProperties": false
                        },
                        "description": {
                          "pattern": "^[ \\r\\n\\t\\S]+$",
                          "type": "string",
                          "description": "A sequence of Unicode characters"
                        },
                        "_description": {
                          "description": "Base definition for all elements in a resource.",
                          "additionalProperties": false
                        }
                      },
                      "additionalProperties": false
                    },
                    "type": "array"
                  },
                  "resource": {
                    "description": "A resource that is part of the implementation guide. Conformance resources (value set, structure definition, capability statements etc.) are obvious candidates for inclusion, but any kind of resource can be included as an example resource.",
                    "items": {
                      "description": "A set of rules of how a particular interoperability or standards problem is solved - typically through the use of FHIR resources. This resource is used to gather all the parts of an implementation guide into a logical whole and to publish a computable definition of all the parts.",
                      "properties": {
                        "id": {
                          "pattern": "^[ \\r\\n\\t\\S]+$",
                          "type": "string",
                          "description": "A sequence of Unicode characters"
                        },
                        "extension": {
                          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                          "type": "array"
                        },
                        "modifierExtension": {
                          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                          "type": "array"
                        },
                        "reference": {
                          "description": "A reference from one resource to another.",
                          "additionalProperties": false
                        },
                        "fhirVersion": {
                          "description": "Indicates the FHIR Version(s) this artifact is intended to apply to. If no versions are specified, the resource is assumed to apply to all the versions stated in ImplementationGuide.fhirVersion.",
                          "items": {
                            "enum": [
                              "0.01",
                              "0.05",
                              "0.06",
                              "0.11",
                              "0.0.80",
                              "0.0.81",
                              "0.0.82",
                              "0.4.0",
                              "0.5.0",
                              "1.0.0",
                              "1.0.1",
                              "1.0.2",
                              "1.1.0",
                              "1.4.0",
                              "1.6.0",
                              "1.8.0",
                              "3.0.0",
                              "3.0.1",
                              "3.3.0",
                              "3.5.0",
                              "4.0.0",
                              "4.0.1"
                            ]
                          },
                          "type": "array"
                        },
                        "_fhirVersion": {
                          "description": "Extensions for fhirVersion",
                          "type": "array"
                        },
                        "name": {
                          "pattern": "^[ \\r\\n\\t\\S]+$",
                          "type": "string",
                          "description": "A sequence of Unicode characters"
                        },
                        "_name": {
                          "description": "Base definition for all elements in a resource.",
                          "additionalProperties": false
                        },
                        "description": {
                          "pattern": "^[ \\r\\n\\t\\S]+$",
                          "type": "string",
                          "description": "A sequence of Unicode characters"
                        },
                        "_description": {
                          "description": "Base definition for all elements in a resource.",
                          "additionalProperties": false
                        },
                        "exampleBoolean": {
                          "description": "If true or a reference, indicates the resource is an example instance.  If a reference is present, indicates that the example is an example of the specified profile.",
                          "pattern": "^true|false$",
                          "type": "boolean"
                        },
                        "_exampleBoolean": {
                          "description": "Base definition for all elements in a resource.",
                          "additionalProperties": false
                        },
                        "exampleCanonical": {
                          "description": "If true or a reference, indicates the resource is an example instance.  If a reference is present, indicates that the example is an example of the specified profile.",
                          "pattern": "^\\S*$",
                          "type": "string"
                        },
                        "_exampleCanonical": {
                          "description": "Base definition for all elements in a resource.",
                          "additionalProperties": false
                        },
                        "groupingId": {
                          "description": "Reference to the id of the grouping this resource appears in.",
                          "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                          "type": "string"
                        },
                        "_groupingId": {
                          "description": "Base definition for all elements in a resource.",
                          "additionalProperties": false
                        }
                      },
                      "additionalProperties": false,
                      "required": [
                        "reference"
                      ]
                    },
                    "type": "array"
                  },
                  "page": {
                    "description": "A page / section in the implementation guide. The root page is the implementation guide home page.",
                    "properties": {
                      "id": {
                        "pattern": "^[ \\r\\n\\t\\S]+$",
                        "type": "string",
                        "description": "A sequence of Unicode characters"
                      },
                      "extension": {
                        "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                        "type": "array"
                      },
                      "modifierExtension": {
                        "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                        "type": "array"
                      },
                      "nameUrl": {
                        "description": "The source address for the page.",
                        "pattern": "^\\S*$",
                        "type": "string"
                      },
                      "_nameUrl": {
                        "description": "Base definition for all elements in a resource.",
                        "additionalProperties": false
                      },
                      "nameReference": {
                        "description": "A reference from one resource to another.",
                        "additionalProperties": false
                      },
                      "title": {
                        "pattern": "^[ \\r\\n\\t\\S]+$",
                        "type": "string",
                        "description": "A sequence of Unicode characters"
                      },
                      "_title": {
                        "description": "Base definition for all elements in a resource.",
                        "additionalProperties": false
                      },
                      "generation": {
                        "description": "A code that indicates how the page is generated.",
                        "enum": [
                          "html",
                          "markdown",
                          "xml",
                          "generated"
                        ]
                      },
                      "_generation": {
                        "description": "Base definition for all elements in a resource.",
                        "additionalProperties": false
                      },
                      "page": {
                        "description": "Nested Pages/Sections under this page.",
                        "items": {
                          "description": "A set of rules of how a particular interoperability or standards problem is solved - typically through the use of FHIR resources. This resource is used to gather all the parts of an implementation guide into a logical whole and to publish a computable definition of all the parts.",
                          "additionalProperties": false
                        },
                        "type": "array"
                      }
                    },
                    "additionalProperties": false
                  },
                  "parameter": {
                    "description": "Defines how IG is built by tools.",
                    "items": {
                      "description": "A set of rules of how a particular interoperability or standards problem is solved - typically through the use of FHIR resources. This resource is used to gather all the parts of an implementation guide into a logical whole and to publish a computable definition of all the parts.",
                      "properties": {
                        "id": {
                          "pattern": "^[ \\r\\n\\t\\S]+$",
                          "type": "string",
                          "description": "A sequence of Unicode characters"
                        },
                        "extension": {
                          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                          "type": "array"
                        },
                        "modifierExtension": {
                          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                          "type": "array"
                        },
                        "code": {
                          "description": "apply | path-resource | path-pages | path-tx-cache | expansion-parameter | rule-broken-links | generate-xml | generate-json | generate-turtle | html-template.",
                          "enum": [
                            "apply",
                            "path-resource",
                            "path-pages",
                            "path-tx-cache",
                            "expansion-parameter",
                            "rule-broken-links",
                            "generate-xml",
                            "generate-json",
                            "generate-turtle",
                            "html-template"
                          ]
                        },
                        "_code": {
                          "description": "Base definition for all elements in a resource.",
                          "additionalProperties": false
                        },
                        "value": {
                          "pattern": "^[ \\r\\n\\t\\S]+$",
                          "type": "string",
                          "description": "A sequence of Unicode characters"
                        },
                        "_value": {
                          "description": "Base definition for all elements in a resource.",
                          "additionalProperties": false
                        }
                      },
                      "additionalProperties": false
                    },
                    "type": "array"
                  },
                  "template": {
                    "description": "A template for building resources.",
                    "items": {
                      "description": "A set of rules of how a particular interoperability or standards problem is solved - typically through the use of FHIR resources. This resource is used to gather all the parts of an implementation guide into a logical whole and to publish a computable definition of all the parts.",
                      "properties": {
                        "id": {
                          "pattern": "^[ \\r\\n\\t\\S]+$",
                          "type": "string",
                          "description": "A sequence of Unicode characters"
                        },
                        "extension": {
                          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                          "type": "array"
                        },
                        "modifierExtension": {
                          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                          "type": "array"
                        },
                        "code": {
                          "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                          "type": "string",
                          "description": "A string which has at least one character and no leading or trailing whitespace and where there is no whitespace other than single spaces in the contents"
                        },
                        "_code": {
                          "description": "Base definition for all elements in a resource.",
                          "additionalProperties": false
                        },
                        "source": {
                          "pattern": "^[ \\r\\n\\t\\S]+$",
                          "type": "string",
                          "description": "A sequence of Unicode characters"
                        },
                        "_source": {
                          "description": "Base definition for all elements in a resource.",
                          "additionalProperties": false
                        },
                        "scope": {
                          "pattern": "^[ \\r\\n\\t\\S]+$",
                          "type": "string",
                          "description": "A sequence of Unicode characters"
                        },
                        "_scope": {
                          "description": "Base definition for all elements in a resource.",
                          "additionalProperties": false
                        }
                      },
                      "additionalProperties": false
                    },
                    "type": "array"
                  }
                },
                "additionalProperties": false,
                "required": [
                  "resource"
                ]
              },
              "manifest": {
                "description": "Information about an assembled implementation guide, created by the publication tooling.",
                "properties": {
                  "id": {
                    "pattern": "^[ \\r\\n\\t\\S]+$",
                    "type": "string",
                    "description": "A sequence of Unicode characters"
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "type": "array"
                  },
                  "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                    "type": "array"
                  },
                  "rendering": {
                    "description": "A pointer to official web page, PDF or other rendering of the implementation guide.",
                    "pattern": "^\\S*$",
                    "type": "string"
                  },
                  "_rendering": {
                    "description": "Base definition for all elements in a resource.",
                    "additionalProperties": false
                  },
                  "resource": {
                    "description": "A resource that is part of the implementation guide. Conformance resources (value set, structure definition, capability statements etc.) are obvious candidates for inclusion, but any kind of resource can be included as an example resource.",
                    "items": {
                      "description": "A set of rules of how a particular interoperability or standards problem is solved - typically through the use of FHIR resources. This resource is used to gather all the parts of an implementation guide into a logical whole and to publish a computable definition of all the parts.",
                      "properties": {
                        "id": {
                          "pattern": "^[ \\r\\n\\t\\S]+$",
                          "type": "string",
                          "description": "A sequence of Unicode characters"
                        },
                        "extension": {
                          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                          "type": "array"
                        },
                        "modifierExtension": {
                          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                          "type": "array"
                        },
                        "reference": {
                          "description": "A reference from one resource to another.",
                          "additionalProperties": false
                        },
                        "exampleBoolean": {
                          "description": "If true or a reference, indicates the resource is an example instance.  If a reference is present, indicates that the example is an example of the specified profile.",
                          "pattern": "^true|false$",
                          "type": "boolean"
                        },
                        "_exampleBoolean": {
                          "description": "Base definition for all elements in a resource.",
                          "additionalProperties": false
                        },
                        "exampleCanonical": {
                          "description": "If true or a reference, indicates the resource is an example instance.  If a reference is present, indicates that the example is an example of the specified profile.",
                          "pattern": "^\\S*$",
                          "type": "string"
                        },
                        "_exampleCanonical": {
                          "description": "Base definition for all elements in a resource.",
                          "additionalProperties": false
                        },
                        "relativePath": {
                          "description": "The relative path for primary page for this resource within the IG.",
                          "pattern": "^\\S*$",
                          "type": "string"
                        },
                        "_relativePath": {
                          "description": "Base definition for all elements in a resource.",
                          "additionalProperties": false
                        }
                      },
                      "additionalProperties": false,
                      "required": [
                        "reference"
                      ]
                    },
                    "type": "array"
                  },
                  "page": {
                    "description": "Information about a page within the IG.",
                    "items": {
                      "description": "A set of rules of how a particular interoperability or standards problem is solved - typically through the use of FHIR resources. This resource is used to gather all the parts of an implementation guide into a logical whole and to publish a computable definition of all the parts.",
                      "properties": {
                        "id": {
                          "pattern": "^[ \\r\\n\\t\\S]+$",
                          "type": "string",
                          "description": "A sequence of Unicode characters"
                        },
                        "extension": {
                          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                          "type": "array"
                        },
                        "modifierExtension": {
                          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                          "type": "array"
                        },
                        "name": {
                          "pattern": "^[ \\r\\n\\t\\S]+$",
                          "type": "string",
                          "description": "A sequence of Unicode characters"
                        },
                        "_name": {
                          "description": "Base definition for all elements in a resource.",
                          "additionalProperties": false
                        },
                        "title": {
                          "pattern": "^[ \\r\\n\\t\\S]+$",
                          "type": "string",
                          "description": "A sequence of Unicode characters"
                        },
                        "_title": {
                          "description": "Base definition for all elements in a resource.",
                          "additionalProperties": false
                        },
                        "anchor": {
                          "description": "The name of an anchor available on the page.",
                          "type": "array"
                        },
                        "_anchor": {
                          "description": "Extensions for anchor",
                          "type": "array"
                        }
                      },
                      "additionalProperties": false
                    },
                    "type": "array"
                  },
                  "image": {
                    "description": "Indicates a relative path to an image that exists within the IG.",
                    "type": "array"
                  },
                  "_image": {
                    "description": "Extensions for image",
                    "type": "array"
                  },
                  "other": {
                    "description": "Indicates the relative path of an additional non-page, non-image file that is part of the IG - e.g. zip, jar and similar files that could be the target of a hyperlink in a derived IG.",
                    "type": "array"
                  },
                  "_other": {
                    "description": "Extensions for other",
                    "type": "array"
                  }
                },
                "additionalProperties": false,
                "required": [
                  "resource"
                ]
              }
            },
            "additionalProperties": false,
            "required": [
              "resourceType"
            ]
          },
          {
            "description": "Details of a Health Insurance product/plan provided by an organization.",
            "properties": {
              "resourceType": {
                "description": "This is a InsurancePlan resource",
                "const": "InsurancePlan"
              },
              "id": {
                "description": "The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.",
                "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                "type": "string"
              },
              "meta": {
                "description": "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
                "additionalProperties": false
              },
              "implicitRules": {
                "pattern": "^\\S*$",
                "type": "string",
                "description": "String of characters used to identify a name or a resource"
              },
              "_implicitRules": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "language": {
                "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                "type": "string",
                "description": "A string which has at least one character and no leading or trailing whitespace and where there is no whitespace other than single spaces in the contents"
              },
              "_language": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "text": {
                "description": "A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it \"clinically safe\" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.",
                "additionalProperties": false
              },
              "contained": {
                "description": "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope.",
                "type": "array"
              },
              "extension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                "type": "array"
              },
              "modifierExtension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                "type": "array"
              },
              "identifier": {
                "description": "Business identifiers assigned to this health insurance product which remain constant as the resource is updated and propagates from server to server.",
                "type": "array"
              },
              "status": {
                "description": "The current state of the health insurance product.",
                "enum": [
                  "draft",
                  "active",
                  "retired",
                  "unknown"
                ]
              },
              "_status": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "type": {
                "description": "The kind of health insurance product.",
                "type": "array"
              },
              "name": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "_name": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "alias": {
                "description": "A list of alternate names that the product is known as, or was known as in the past.",
                "type": "array"
              },
              "_alias": {
                "description": "Extensions for alias",
                "type": "array"
              },
              "period": {
                "description": "A time period defined by a start and end date and optionally time.",
                "additionalProperties": false
              },
              "ownedBy": {
                "description": "A reference from one resource to another.",
                "additionalProperties": false
              },
              "administeredBy": {
                "description": "A reference from one resource to another.",
                "additionalProperties": false
              },
              "coverageArea": {
                "description": "The geographic region in which a health insurance product's benefits apply.",
                "type": "array"
              },
              "contact": {
                "description": "The contact for the health insurance product for a certain purpose.",
                "items": {
                  "description": "Details of a Health Insurance product/plan provided by an organization.",
                  "properties": {
                    "id": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "type": "array"
                    },
                    "modifierExtension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                      "type": "array"
                    },
                    "purpose": {
                      "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                      "additionalProperties": false
                    },
                    "name": {
                      "description": "A name associated with the contact.",
                      "additionalProperties": false
                    },
                    "telecom": {
                      "description": "A contact detail (e.g. a telephone number or an email address) by which the party may be contacted.",
                      "type": "array"
                    },
                    "address": {
                      "description": "Visiting or postal addresses for the contact.",
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                },
                "type": "array"
              },
              "endpoint": {
                "description": "The technical endpoints providing access to services operated for the health insurance product.",
                "type": "array"
              },
              "network": {
                "description": "Reference to the network included in the health insurance product.",
                "type": "array"
              },
              "coverage": {
                "description": "Details about the coverage offered by the insurance product.",
                "items": {
                  "description": "Details of a Health Insurance product/plan provided by an organization.",
                  "properties": {
                    "id": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "type": "array"
                    },
                    "modifierExtension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                      "type": "array"
                    },
                    "type": {
                      "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                      "additionalProperties": false
                    },
                    "network": {
                      "description": "Reference to the network that providing the type of coverage.",
                      "type": "array"
                    },
                    "benefit": {
                      "description": "Specific benefits under this type of coverage.",
                      "items": {
                        "description": "Details of a Health Insurance product/plan provided by an organization.",
                        "properties": {
                          "id": {
                            "pattern": "^[ \\r\\n\\t\\S]+$",
                            "type": "string",
                            "description": "A sequence of Unicode characters"
                          },
                          "extension": {
                            "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                            "type": "array"
                          },
                          "modifierExtension": {
                            "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                            "type": "array"
                          },
                          "type": {
                            "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                            "additionalProperties": false
                          },
                          "requirement": {
                            "pattern": "^[ \\r\\n\\t\\S]+$",
                            "type": "string",
                            "description": "A sequence of Unicode characters"
                          },
                          "_requirement": {
                            "description": "Base definition for all elements in a resource.",
                            "additionalProperties": false
                          },
                          "limit": {
                            "description": "The specific limits on the benefit.",
                            "items": {
                              "description": "Details of a Health Insurance product/plan provided by an organization.",
                              "properties": {
                                "id": {
                                  "pattern": "^[ \\r\\n\\t\\S]+$",
                                  "type": "string",
                                  "description": "A sequence of Unicode characters"
                                },
                                "extension": {
                                  "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                                  "type": "array"
                                },
                                "modifierExtension": {
                                  "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                                  "type": "array"
                                },
                                "value": {
                                  "description": "A measured amount (or an amount that can potentially be measured). Note that measured amounts include amounts that are not precisely quantified, including amounts involving arbitrary units and floating currencies.",
                                  "additionalProperties": false
                                },
                                "code": {
                                  "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                                  "additionalProperties": false
                                }
                              },
                              "additionalProperties": false
                            },
                            "type": "array"
                          }
                        },
                        "additionalProperties": false,
                        "required": [
                          "type"
                        ]
                      },
                      "type": "array"
                    }
                  },
                  "additionalProperties": false,
                  "required": [
                    "type",
                    "benefit"
                  ]
                },
                "type": "array"
              },
              "plan": {
                "description": "Details about an insurance plan.",
                "items": {
                  "description": "Details of a Health Insurance product/plan provided by an organization.",
                  "properties": {
                    "id": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "type": "array"
                    },
                    "modifierExtension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                      "type": "array"
                    },
                    "identifier": {
                      "description": "Business identifiers assigned to this health insurance plan which remain constant as the resource is updated and propagates from server to server.",
                      "type": "array"
                    },
                    "type": {
                      "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                      "additionalProperties": false
                    },
                    "coverageArea": {
                      "description": "The geographic region in which a health insurance plan's benefits apply.",
                      "type": "array"
                    },
                    "network": {
                      "description": "Reference to the network that providing the type of coverage.",
                      "type": "array"
                    },
                    "generalCost": {
                      "description": "Overall costs associated with the plan.",
                      "items": {
                        "description": "Details of a Health Insurance product/plan provided by an organization.",
                        "properties": {
                          "id": {
                            "pattern": "^[ \\r\\n\\t\\S]+$",
                            "type": "string",
                            "description": "A sequence of Unicode characters"
                          },
                          "extension": {
                            "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                            "type": "array"
                          },
                          "modifierExtension": {
                            "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                            "type": "array"
                          },
                          "type": {
                            "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                            "additionalProperties": false
                          },
                          "groupSize": {
                            "pattern": "^[1-9][0-9]*$",
                            "type": "number",
                            "description": "An integer with a value that is positive (e.g. >0)"
                          },
                          "_groupSize": {
                            "description": "Base definition for all elements in a resource.",
                            "additionalProperties": false
                          },
                          "cost": {
                            "description": "Value of the cost.",
                            "additionalProperties": false
                          },
                          "comment": {
                            "pattern": "^[ \\r\\n\\t\\S]+$",
                            "type": "string",
                            "description": "A sequence of Unicode characters"
                          },
                          "_comment": {
                            "description": "Base definition for all elements in a resource.",
                            "additionalProperties": false
                          }
                        },
                        "additionalProperties": false
                      },
                      "type": "array"
                    },
                    "specificCost": {
                      "description": "Costs associated with the coverage provided by the product.",
                      "items": {
                        "description": "Details of a Health Insurance product/plan provided by an organization.",
                        "properties": {
                          "id": {
                            "pattern": "^[ \\r\\n\\t\\S]+$",
                            "type": "string",
                            "description": "A sequence of Unicode characters"
                          },
                          "extension": {
                            "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                            "type": "array"
                          },
                          "modifierExtension": {
                            "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                            "type": "array"
                          },
                          "category": {
                            "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                            "additionalProperties": false
                          },
                          "benefit": {
                            "description": "List of the specific benefits under this category of benefit.",
                            "items": {
                              "description": "Details of a Health Insurance product/plan provided by an organization.",
                              "properties": {
                                "id": {
                                  "pattern": "^[ \\r\\n\\t\\S]+$",
                                  "type": "string",
                                  "description": "A sequence of Unicode characters"
                                },
                                "extension": {
                                  "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                                  "type": "array"
                                },
                                "modifierExtension": {
                                  "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                                  "type": "array"
                                },
                                "type": {
                                  "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                                  "additionalProperties": false
                                },
                                "cost": {
                                  "description": "List of the costs associated with a specific benefit.",
                                  "items": {
                                    "description": "Details of a Health Insurance product/plan provided by an organization.",
                                    "properties": {
                                      "id": {
                                        "pattern": "^[ \\r\\n\\t\\S]+$",
                                        "type": "string",
                                        "description": "A sequence of Unicode characters"
                                      },
                                      "extension": {
                                        "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                                        "type": "array"
                                      },
                                      "modifierExtension": {
                                        "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                                        "type": "array"
                                      },
                                      "type": {
                                        "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                                        "additionalProperties": false
                                      },
                                      "applicability": {
                                        "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                                        "additionalProperties": false
                                      },
                                      "qualifiers": {
                                        "description": "Additional information about the cost, such as information about funding sources (e.g. HSA, HRA, FSA, RRA).",
                                        "type": "array"
                                      },
                                      "value": {
                                        "description": "A measured amount (or an amount that can potentially be measured). Note that measured amounts include amounts that are not precisely quantified, including amounts involving arbitrary units and floating currencies.",
                                        "additionalProperties": false
                                      }
                                    },
                                    "additionalProperties": false,
                                    "required": [
                                      "type"
                                    ]
                                  },
                                  "type": "array"
                                }
                              },
                              "additionalProperties": false,
                              "required": [
                                "type"
                              ]
                            },
                            "type": "array"
                          }
                        },
                        "additionalProperties": false,
                        "required": [
                          "category"
                        ]
                      },
                      "type": "array"
                    }
                  },
                  "additionalProperties": false
                },
                "type": "array"
              }
            },
            "additionalProperties": false,
            "required": [
              "resourceType"
            ]
          },
          {
            "description": "Invoice containing collected ChargeItems from an Account with calculated individual and total price for Billing purpose.",
            "properties": {
              "resourceType": {
                "description": "This is a Invoice resource",
                "const": "Invoice"
              },
              "id": {
                "description": "The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.",
                "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                "type": "string"
              },
              "meta": {
                "description": "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
                "additionalProperties": false
              },
              "implicitRules": {
                "pattern": "^\\S*$",
                "type": "string",
                "description": "String of characters used to identify a name or a resource"
              },
              "_implicitRules": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "language": {
                "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                "type": "string",
                "description": "A string which has at least one character and no leading or trailing whitespace and where there is no whitespace other than single spaces in the contents"
              },
              "_language": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "text": {
                "description": "A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it \"clinically safe\" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.",
                "additionalProperties": false
              },
              "contained": {
                "description": "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope.",
                "type": "array"
              },
              "extension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                "type": "array"
              },
              "modifierExtension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                "type": "array"
              },
              "identifier": {
                "description": "Identifier of this Invoice, often used for reference in correspondence about this invoice or for tracking of payments.",
                "type": "array"
              },
              "status": {
                "description": "The current state of the Invoice.",
                "enum": [
                  "draft",
                  "issued",
                  "balanced",
                  "cancelled",
                  "entered-in-error"
                ]
              },
              "_status": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "cancelledReason": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "_cancelledReason": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "type": {
                "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                "additionalProperties": false
              },
              "subject": {
                "description": "A reference from one resource to another.",
                "additionalProperties": false
              },
              "recipient": {
                "description": "A reference from one resource to another.",
                "additionalProperties": false
              },
              "date": {
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                "type": "string",
                "description": "A date, date-time or partial date (e.g. just year or year + month).  If hours and minutes are specified, a time zone SHALL be populated. The format is a union of the schema types gYear, gYearMonth, date and dateTime. Seconds must be provided due to schema type constraints but may be zero-filled and may be ignored.                 Dates SHALL be valid dates."
              },
              "_date": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "participant": {
                "description": "Indicates who or what performed or participated in the charged service.",
                "items": {
                  "description": "Invoice containing collected ChargeItems from an Account with calculated individual and total price for Billing purpose.",
                  "properties": {
                    "id": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "type": "array"
                    },
                    "modifierExtension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                      "type": "array"
                    },
                    "role": {
                      "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                      "additionalProperties": false
                    },
                    "actor": {
                      "description": "A reference from one resource to another.",
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false,
                  "required": [
                    "actor"
                  ]
                },
                "type": "array"
              },
              "issuer": {
                "description": "A reference from one resource to another.",
                "additionalProperties": false
              },
              "account": {
                "description": "A reference from one resource to another.",
                "additionalProperties": false
              },
              "lineItem": {
                "description": "Each line item represents one charge for goods and services rendered. Details such as date, code and amount are found in the referenced ChargeItem resource.",
                "items": {
                  "description": "Invoice containing collected ChargeItems from an Account with calculated individual and total price for Billing purpose.",
                  "properties": {
                    "id": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "type": "array"
                    },
                    "modifierExtension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                      "type": "array"
                    },
                    "sequence": {
                      "pattern": "^[1-9][0-9]*$",
                      "type": "number",
                      "description": "An integer with a value that is positive (e.g. >0)"
                    },
                    "_sequence": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "chargeItemReference": {
                      "description": "A reference from one resource to another.",
                      "additionalProperties": false
                    },
                    "chargeItemCodeableConcept": {
                      "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                      "additionalProperties": false
                    },
                    "priceComponent": {
                      "description": "The price for a ChargeItem may be calculated as a base price with surcharges/deductions that apply in certain conditions. A ChargeItemDefinition resource that defines the prices, factors and conditions that apply to a billing code is currently under development. The priceComponent element can be used to offer transparency to the recipient of the Invoice as to how the prices have been calculated.",
                      "items": {
                        "description": "Invoice containing collected ChargeItems from an Account with calculated individual and total price for Billing purpose.",
                        "properties": {
                          "id": {
                            "pattern": "^[ \\r\\n\\t\\S]+$",
                            "type": "string",
                            "description": "A sequence of Unicode characters"
                          },
                          "extension": {
                            "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                            "type": "array"
                          },
                          "modifierExtension": {
                            "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                            "type": "array"
                          },
                          "type": {
                            "description": "This code identifies the type of the component.",
                            "enum": [
                              "base",
                              "surcharge",
                              "deduction",
                              "discount",
                              "tax",
                              "informational"
                            ]
                          },
                          "_type": {
                            "description": "Base definition for all elements in a resource.",
                            "additionalProperties": false
                          },
                          "code": {
                            "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                            "additionalProperties": false
                          },
                          "factor": {
                            "description": "The factor that has been applied on the base price for calculating this component.",
                            "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                            "type": "number"
                          },
                          "_factor": {
                            "description": "Base definition for all elements in a resource.",
                            "additionalProperties": false
                          },
                          "amount": {
                            "description": "The amount calculated for this component.",
                            "additionalProperties": false
                          }
                        },
                        "additionalProperties": false
                      },
                      "type": "array"
                    }
                  },
                  "additionalProperties": false
                },
                "type": "array"
              },
              "totalPriceComponent": {
                "description": "The total amount for the Invoice may be calculated as the sum of the line items with surcharges/deductions that apply in certain conditions.  The priceComponent element can be used to offer transparency to the recipient of the Invoice of how the total price was calculated.",
                "type": "array"
              },
              "totalNet": {
                "description": "Invoice total , taxes excluded.",
                "additionalProperties": false
              },
              "totalGross": {
                "description": "Invoice total, tax included.",
                "additionalProperties": false
              },
              "paymentTerms": {
                "description": "Payment details such as banking details, period of payment, deductibles, methods of payment.",
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string"
              },
              "_paymentTerms": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "note": {
                "description": "Comments made about the invoice by the issuer, subject, or other participants.",
                "type": "array"
              }
            },
            "additionalProperties": false,
            "required": [
              "resourceType"
            ]
          },
          {
            "description": "The Library resource is a general-purpose container for knowledge asset definitions. It can be used to describe and expose existing knowledge assets such as logic libraries and information model descriptions, as well as to describe a collection of knowledge assets.",
            "properties": {
              "resourceType": {
                "description": "This is a Library resource",
                "const": "Library"
              },
              "id": {
                "description": "The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.",
                "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                "type": "string"
              },
              "meta": {
                "description": "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
                "additionalProperties": false
              },
              "implicitRules": {
                "pattern": "^\\S*$",
                "type": "string",
                "description": "String of characters used to identify a name or a resource"
              },
              "_implicitRules": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "language": {
                "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                "type": "string",
                "description": "A string which has at least one character and no leading or trailing whitespace and where there is no whitespace other than single spaces in the contents"
              },
              "_language": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "text": {
                "description": "A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it \"clinically safe\" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.",
                "additionalProperties": false
              },
              "contained": {
                "description": "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope.",
                "type": "array"
              },
              "extension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                "type": "array"
              },
              "modifierExtension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                "type": "array"
              },
              "url": {
                "pattern": "^\\S*$",
                "type": "string",
                "description": "String of characters used to identify a name or a resource"
              },
              "_url": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "identifier": {
                "description": "A formal identifier that is used to identify this library when it is represented in other formats, or referenced in a specification, model, design or an instance. e.g. CMS or NQF identifiers for a measure artifact. Note that at least one identifier is required for non-experimental active artifacts.",
                "type": "array"
              },
              "version": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "_version": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "name": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "_name": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "title": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "_title": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "subtitle": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "_subtitle": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "status": {
                "description": "The status of this library. Enables tracking the life-cycle of the content.",
                "enum": [
                  "draft",
                  "active",
                  "retired",
                  "unknown"
                ]
              },
              "_status": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "experimental": {
                "description": "A Boolean value to indicate that this library is authored for testing purposes (or education/evaluation/marketing) and is not intended to be used for genuine usage.",
                "pattern": "^true|false$",
                "type": "boolean"
              },
              "_experimental": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "type": {
                "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                "additionalProperties": false
              },
              "subjectCodeableConcept": {
                "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                "additionalProperties": false
              },
              "subjectReference": {
                "description": "A reference from one resource to another.",
                "additionalProperties": false
              },
              "date": {
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                "type": "string",
                "description": "A date, date-time or partial date (e.g. just year or year + month).  If hours and minutes are specified, a time zone SHALL be populated. The format is a union of the schema types gYear, gYearMonth, date and dateTime. Seconds must be provided due to schema type constraints but may be zero-filled and may be ignored.                 Dates SHALL be valid dates."
              },
              "_date": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "publisher": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "_publisher": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "contact": {
                "description": "Contact details to assist a user in finding and communicating with the publisher.",
                "type": "array"
              },
              "description": {
                "description": "A free text natural language description of the library from a consumer's perspective.",
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string"
              },
              "_description": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "useContext": {
                "description": "The content was developed with a focus and intent of supporting the contexts that are listed. These contexts may be general categories (gender, age, ...) or may be references to specific programs (insurance plans, studies, ...) and may be used to assist with indexing and searching for appropriate library instances.",
                "type": "array"
              },
              "jurisdiction": {
                "description": "A legal or geographic region in which the library is intended to be used.",
                "type": "array"
              },
              "purpose": {
                "description": "Explanation of why this library is needed and why it has been designed as it has.",
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string"
              },
              "_purpose": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "usage": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "_usage": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "copyright": {
                "description": "A copyright statement relating to the library and/or its contents. Copyright statements are generally legal restrictions on the use and publishing of the library.",
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string"
              },
              "_copyright": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "approvalDate": {
                "description": "The date on which the resource content was approved by the publisher. Approval happens once when the content is officially approved for usage.",
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                "type": "string"
              },
              "_approvalDate": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "lastReviewDate": {
                "description": "The date on which the resource content was last reviewed. Review happens periodically after approval but does not change the original approval date.",
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                "type": "string"
              },
              "_lastReviewDate": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "effectivePeriod": {
                "description": "A time period defined by a start and end date and optionally time.",
                "additionalProperties": false
              },
              "topic": {
                "description": "Descriptive topics related to the content of the library. Topics provide a high-level categorization of the library that can be useful for filtering and searching.",
                "type": "array"
              },
              "author": {
                "description": "An individiual or organization primarily involved in the creation and maintenance of the content.",
                "type": "array"
              },
              "editor": {
                "description": "An individual or organization primarily responsible for internal coherence of the content.",
                "type": "array"
              },
              "reviewer": {
                "description": "An individual or organization primarily responsible for review of some aspect of the content.",
                "type": "array"
              },
              "endorser": {
                "description": "An individual or organization responsible for officially endorsing the content for use in some setting.",
                "type": "array"
              },
              "relatedArtifact": {
                "description": "Related artifacts such as additional documentation, justification, or bibliographic references.",
                "type": "array"
              },
              "parameter": {
                "description": "The parameter element defines parameters used by the library.",
                "items": {
                  "description": "The parameters to the module. This collection specifies both the input and output parameters. Input parameters are provided by the caller as part of the $evaluate operation. Output parameters are included in the GuidanceResponse.",
                  "additionalProperties": false
                },
                "type": "array"
              },
              "dataRequirement": {
                "description": "Describes a set of data that must be provided in order to be able to successfully perform the computations defined by the library.",
                "type": "array"
              },
              "content": {
                "description": "The content of the library as an Attachment. The content may be a reference to a url, or may be directly embedded as a base-64 string. Either way, the contentType of the attachment determines how to interpret the content.",
                "type": "array"
              }
            },
            "additionalProperties": false,
            "required": [
              "type",
              "resourceType"
            ]
          },
          {
            "description": "Identifies two or more records (resource instances) that refer to the same real-world \"occurrence\".",
            "properties": {
              "resourceType": {
                "description": "This is a Linkage resource",
                "const": "Linkage"
              },
              "id": {
                "description": "The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.",
                "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                "type": "string"
              },
              "meta": {
                "description": "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
                "additionalProperties": false
              },
              "implicitRules": {
                "pattern": "^\\S*$",
                "type": "string",
                "description": "String of characters used to identify a name or a resource"
              },
              "_implicitRules": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "language": {
                "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                "type": "string",
                "description": "A string which has at least one character and no leading or trailing whitespace and where there is no whitespace other than single spaces in the contents"
              },
              "_language": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "text": {
                "description": "A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it \"clinically safe\" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.",
                "additionalProperties": false
              },
              "contained": {
                "description": "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope.",
                "type": "array"
              },
              "extension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                "type": "array"
              },
              "modifierExtension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                "type": "array"
              },
              "active": {
                "description": "Indicates whether the asserted set of linkages are considered to be \"in effect\".",
                "pattern": "^true|false$",
                "type": "boolean"
              },
              "_active": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "author": {
                "description": "A reference from one resource to another.",
                "additionalProperties": false
              },
              "item": {
                "description": "Identifies which record considered as the reference to the same real-world occurrence as well as how the items should be evaluated within the collection of linked items.",
                "items": {
                  "description": "Identifies two or more records (resource instances) that refer to the same real-world \"occurrence\".",
                  "properties": {
                    "id": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "type": "array"
                    },
                    "modifierExtension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                      "type": "array"
                    },
                    "type": {
                      "description": "Distinguishes which item is \"source of truth\" (if any) and which items are no longer considered to be current representations.",
                      "enum": [
                        "source",
                        "alternate",
                        "historical"
                      ]
                    },
                    "_type": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "resource": {
                      "description": "A reference from one resource to another.",
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false,
                  "required": [
                    "resource"
                  ]
                },
                "type": "array"
              }
            },
            "additionalProperties": false,
            "required": [
              "item",
              "resourceType"
            ]
          },
          {
            "description": "A list is a curated collection of resources.",
            "properties": {
              "resourceType": {
                "description": "This is a List resource",
                "const": "List"
              },
              "id": {
                "description": "The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.",
                "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                "type": "string"
              },
              "meta": {
                "description": "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
                "additionalProperties": false
              },
              "implicitRules": {
                "pattern": "^\\S*$",
                "type": "string",
                "description": "String of characters used to identify a name or a resource"
              },
              "_implicitRules": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "language": {
                "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                "type": "string",
                "description": "A string which has at least one character and no leading or trailing whitespace and where there is no whitespace other than single spaces in the contents"
              },
              "_language": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "text": {
                "description": "A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it \"clinically safe\" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.",
                "additionalProperties": false
              },
              "contained": {
                "description": "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope.",
                "type": "array"
              },
              "extension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                "type": "array"
              },
              "modifierExtension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                "type": "array"
              },
              "identifier": {
                "description": "Identifier for the List assigned for business purposes outside the context of FHIR.",
                "type": "array"
              },
              "status": {
                "description": "Indicates the current state of this list.",
                "enum": [
                  "current",
                  "retired",
                  "entered-in-error"
                ]
              },
              "_status": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "mode": {
                "description": "How this list was prepared - whether it is a working list that is suitable for being maintained on an ongoing basis, or if it represents a snapshot of a list of items from another source, or whether it is a prepared list where items may be marked as added, modified or deleted.",
                "enum": [
                  "working",
                  "snapshot",
                  "changes"
                ]
              },
              "_mode": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "title": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "_title": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "code": {
                "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                "additionalProperties": false
              },
              "subject": {
                "description": "A reference from one resource to another.",
                "additionalProperties": false
              },
              "encounter": {
                "description": "A reference from one resource to another.",
                "additionalProperties": false
              },
              "date": {
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                "type": "string",
                "description": "A date, date-time or partial date (e.g. just year or year + month).  If hours and minutes are specified, a time zone SHALL be populated. The format is a union of the schema types gYear, gYearMonth, date and dateTime. Seconds must be provided due to schema type constraints but may be zero-filled and may be ignored.                 Dates SHALL be valid dates."
              },
              "_date": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "source": {
                "description": "A reference from one resource to another.",
                "additionalProperties": false
              },
              "orderedBy": {
                "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                "additionalProperties": false
              },
              "note": {
                "description": "Comments that apply to the overall list.",
                "type": "array"
              },
              "entry": {
                "description": "Entries in this list.",
                "items": {
                  "description": "A list is a curated collection of resources.",
                  "properties": {
                    "id": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "type": "array"
                    },
                    "modifierExtension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                      "type": "array"
                    },
                    "flag": {
                      "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                      "additionalProperties": false
                    },
                    "deleted": {
                      "description": "True if this item is marked as deleted in the list.",
                      "pattern": "^true|false$",
                      "type": "boolean"
                    },
                    "_deleted": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "date": {
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                      "type": "string",
                      "description": "A date, date-time or partial date (e.g. just year or year + month).  If hours and minutes are specified, a time zone SHALL be populated. The format is a union of the schema types gYear, gYearMonth, date and dateTime. Seconds must be provided due to schema type constraints but may be zero-filled and may be ignored.                 Dates SHALL be valid dates."
                    },
                    "_date": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "item": {
                      "description": "A reference from one resource to another.",
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false,
                  "required": [
                    "item"
                  ]
                },
                "type": "array"
              },
              "emptyReason": {
                "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                "additionalProperties": false
              }
            },
            "additionalProperties": false,
            "required": [
              "resourceType"
            ]
          },
          {
            "description": "Details and position information for a physical place where services are provided and resources and participants may be stored, found, contained, or accommodated.",
            "properties": {
              "resourceType": {
                "description": "This is a Location resource",
                "const": "Location"
              },
              "id": {
                "description": "The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.",
                "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                "type": "string"
              },
              "meta": {
                "description": "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
                "additionalProperties": false
              },
              "implicitRules": {
                "pattern": "^\\S*$",
                "type": "string",
                "description": "String of characters used to identify a name or a resource"
              },
              "_implicitRules": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "language": {
                "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                "type": "string",
                "description": "A string which has at least one character and no leading or trailing whitespace and where there is no whitespace other than single spaces in the contents"
              },
              "_language": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "text": {
                "description": "A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it \"clinically safe\" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.",
                "additionalProperties": false
              },
              "contained": {
                "description": "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope.",
                "type": "array"
              },
              "extension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                "type": "array"
              },
              "modifierExtension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                "type": "array"
              },
              "identifier": {
                "description": "Unique code or number identifying the location to its users.",
                "type": "array"
              },
              "status": {
                "description": "The status property covers the general availability of the resource, not the current value which may be covered by the operationStatus, or by a schedule/slots if they are configured for the location.",
                "enum": [
                  "active",
                  "suspended",
                  "inactive"
                ]
              },
              "_status": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "operationalStatus": {
                "description": "A reference to a code defined by a terminology system.",
                "additionalProperties": false
              },
              "name": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "_name": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "alias": {
                "description": "A list of alternate names that the location is known as, or was known as, in the past.",
                "type": "array"
              },
              "_alias": {
                "description": "Extensions for alias",
                "type": "array"
              },
              "description": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "_description": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "mode": {
                "description": "Indicates whether a resource instance represents a specific location or a class of locations.",
                "enum": [
                  "instance",
                  "kind"
                ]
              },
              "_mode": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "type": {
                "description": "Indicates the type of function performed at the location.",
                "type": "array"
              },
              "telecom": {
                "description": "The contact details of communication devices available at the location. This can include phone numbers, fax numbers, mobile numbers, email addresses and web sites.",
                "type": "array"
              },
              "address": {
                "description": "Physical location.",
                "additionalProperties": false
              },
              "physicalType": {
                "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                "additionalProperties": false
              },
              "position": {
                "description": "The absolute geographic location of the Location, expressed using the WGS84 datum (This is the same co-ordinate system used in KML).",
                "properties": {
                  "id": {
                    "pattern": "^[ \\r\\n\\t\\S]+$",
                    "type": "string",
                    "description": "A sequence of Unicode characters"
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "type": "array"
                  },
                  "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                    "type": "array"
                  },
                  "longitude": {
                    "description": "Longitude. The value domain and the interpretation are the same as for the text of the longitude element in KML (see notes below).",
                    "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                    "type": "number"
                  },
                  "_longitude": {
                    "description": "Base definition for all elements in a resource.",
                    "additionalProperties": false
                  },
                  "latitude": {
                    "description": "Latitude. The value domain and the interpretation are the same as for the text of the latitude element in KML (see notes below).",
                    "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                    "type": "number"
                  },
                  "_latitude": {
                    "description": "Base definition for all elements in a resource.",
                    "additionalProperties": false
                  },
                  "altitude": {
                    "description": "Altitude. The value domain and the interpretation are the same as for the text of the altitude element in KML (see notes below).",
                    "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                    "type": "number"
                  },
                  "_altitude": {
                    "description": "Base definition for all elements in a resource.",
                    "additionalProperties": false
                  }
                },
                "additionalProperties": false
              },
              "managingOrganization": {
                "description": "A reference from one resource to another.",
                "additionalProperties": false
              },
              "partOf": {
                "description": "A reference from one resource to another.",
                "additionalProperties": false
              },
              "hoursOfOperation": {
                "description": "What days/times during a week is this location usually open.",
                "items": {
                  "description": "Details and position information for a physical place where services are provided and resources and participants may be stored, found, contained, or accommodated.",
                  "properties": {
                    "id": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "type": "array"
                    },
                    "modifierExtension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                      "type": "array"
                    },
                    "daysOfWeek": {
                      "description": "Indicates which days of the week are available between the start and end Times.",
                      "type": "array"
                    },
                    "_daysOfWeek": {
                      "description": "Extensions for daysOfWeek",
                      "type": "array"
                    },
                    "allDay": {
                      "description": "The Location is open all day.",
                      "pattern": "^true|false$",
                      "type": "boolean"
                    },
                    "_allDay": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "openingTime": {
                      "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$",
                      "type": "string",
                      "description": "A time during the day, with no date specified"
                    },
                    "_openingTime": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "closingTime": {
                      "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$",
                      "type": "string",
                      "description": "A time during the day, with no date specified"
                    },
                    "_closingTime": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                },
                "type": "array"
              },
              "availabilityExceptions": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "_availabilityExceptions": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "endpoint": {
                "description": "Technical endpoints providing access to services operated for the location.",
                "type": "array"
              }
            },
            "additionalProperties": false,
            "required": [
              "resourceType"
            ]
          },
          {
            "description": "The Measure resource provides the definition of a quality measure.",
            "properties": {
              "resourceType": {
                "description": "This is a Measure resource",
                "const": "Measure"
              },
              "id": {
                "description": "The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.",
                "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                "type": "string"
              },
              "meta": {
                "description": "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
                "additionalProperties": false
              },
              "implicitRules": {
                "pattern": "^\\S*$",
                "type": "string",
                "description": "String of characters used to identify a name or a resource"
              },
              "_implicitRules": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "language": {
                "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                "type": "string",
                "description": "A string which has at least one character and no leading or trailing whitespace and where there is no whitespace other than single spaces in the contents"
              },
              "_language": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "text": {
                "description": "A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it \"clinically safe\" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.",
                "additionalProperties": false
              },
              "contained": {
                "description": "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope.",
                "type": "array"
              },
              "extension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                "type": "array"
              },
              "modifierExtension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                "type": "array"
              },
              "url": {
                "pattern": "^\\S*$",
                "type": "string",
                "description": "String of characters used to identify a name or a resource"
              },
              "_url": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "identifier": {
                "description": "A formal identifier that is used to identify this measure when it is represented in other formats, or referenced in a specification, model, design or an instance.",
                "type": "array"
              },
              "version": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "_version": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "name": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "_name": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "title": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "_title": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "subtitle": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "_subtitle": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "status": {
                "description": "The status of this measure. Enables tracking the life-cycle of the content.",
                "enum": [
                  "draft",
                  "active",
                  "retired",
                  "unknown"
                ]
              },
              "_status": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "experimental": {
                "description": "A Boolean value to indicate that this measure is authored for testing purposes (or education/evaluation/marketing) and is not intended to be used for genuine usage.",
                "pattern": "^true|false$",
                "type": "boolean"
              },
              "_experimental": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "subjectCodeableConcept": {
                "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                "additionalProperties": false
              },
              "subjectReference": {
                "description": "A reference from one resource to another.",
                "additionalProperties": false
              },
              "date": {
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                "type": "string",
                "description": "A date, date-time or partial date (e.g. just year or year + month).  If hours and minutes are specified, a time zone SHALL be populated. The format is a union of the schema types gYear, gYearMonth, date and dateTime. Seconds must be provided due to schema type constraints but may be zero-filled and may be ignored.                 Dates SHALL be valid dates."
              },
              "_date": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "publisher": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "_publisher": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "contact": {
                "description": "Contact details to assist a user in finding and communicating with the publisher.",
                "type": "array"
              },
              "description": {
                "description": "A free text natural language description of the measure from a consumer's perspective.",
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string"
              },
              "_description": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "useContext": {
                "description": "The content was developed with a focus and intent of supporting the contexts that are listed. These contexts may be general categories (gender, age, ...) or may be references to specific programs (insurance plans, studies, ...) and may be used to assist with indexing and searching for appropriate measure instances.",
                "type": "array"
              },
              "jurisdiction": {
                "description": "A legal or geographic region in which the measure is intended to be used.",
                "type": "array"
              },
              "purpose": {
                "description": "Explanation of why this measure is needed and why it has been designed as it has.",
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string"
              },
              "_purpose": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "usage": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "_usage": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "copyright": {
                "description": "A copyright statement relating to the measure and/or its contents. Copyright statements are generally legal restrictions on the use and publishing of the measure.",
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string"
              },
              "_copyright": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "approvalDate": {
                "description": "The date on which the resource content was approved by the publisher. Approval happens once when the content is officially approved for usage.",
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                "type": "string"
              },
              "_approvalDate": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "lastReviewDate": {
                "description": "The date on which the resource content was last reviewed. Review happens periodically after approval but does not change the original approval date.",
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                "type": "string"
              },
              "_lastReviewDate": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "effectivePeriod": {
                "description": "A time period defined by a start and end date and optionally time.",
                "additionalProperties": false
              },
              "topic": {
                "description": "Descriptive topics related to the content of the measure. Topics provide a high-level categorization grouping types of measures that can be useful for filtering and searching.",
                "type": "array"
              },
              "author": {
                "description": "An individiual or organization primarily involved in the creation and maintenance of the content.",
                "type": "array"
              },
              "editor": {
                "description": "An individual or organization primarily responsible for internal coherence of the content.",
                "type": "array"
              },
              "reviewer": {
                "description": "An individual or organization primarily responsible for review of some aspect of the content.",
                "type": "array"
              },
              "endorser": {
                "description": "An individual or organization responsible for officially endorsing the content for use in some setting.",
                "type": "array"
              },
              "relatedArtifact": {
                "description": "Related artifacts such as additional documentation, justification, or bibliographic references.",
                "type": "array"
              },
              "library": {
                "description": "A reference to a Library resource containing the formal logic used by the measure.",
                "type": "array"
              },
              "disclaimer": {
                "description": "Notices and disclaimers regarding the use of the measure or related to intellectual property (such as code systems) referenced by the measure.",
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string"
              },
              "_disclaimer": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "scoring": {
                "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                "additionalProperties": false
              },
              "compositeScoring": {
                "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                "additionalProperties": false
              },
              "type": {
                "description": "Indicates whether the measure is used to examine a process, an outcome over time, a patient-reported outcome, or a structure measure such as utilization.",
                "type": "array"
              },
              "riskAdjustment": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "_riskAdjustment": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "rateAggregation": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "_rateAggregation": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "rationale": {
                "description": "Provides a succinct statement of the need for the measure. Usually includes statements pertaining to importance criterion: impact, gap in care, and evidence.",
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string"
              },
              "_rationale": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "clinicalRecommendationStatement": {
                "description": "Provides a summary of relevant clinical guidelines or other clinical recommendations supporting the measure.",
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string"
              },
              "_clinicalRecommendationStatement": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "improvementNotation": {
                "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                "additionalProperties": false
              },
              "definition": {
                "description": "Provides a description of an individual term used within the measure.",
                "items": {
                  "pattern": "^[ \\r\\n\\t\\S]+$",
                  "type": "string",
                  "description": "A string that may contain Github Flavored Markdown syntax for optional processing by a mark down presentation engine"
                },
                "type": "array"
              },
              "_definition": {
                "description": "Extensions for definition",
                "type": "array"
              },
              "guidance": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A string that may contain Github Flavored Markdown syntax for optional processing by a mark down presentation engine"
              },
              "_guidance": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "group": {
                "description": "A group of population criteria for the measure.",
                "items": {
                  "description": "The Measure resource provides the definition of a quality measure.",
                  "properties": {
                    "id": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "type": "array"
                    },
                    "modifierExtension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                      "type": "array"
                    },
                    "code": {
                      "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                      "additionalProperties": false
                    },
                    "description": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "_description": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "population": {
                      "description": "A population criteria for the measure.",
                      "items": {
                        "description": "The Measure resource provides the definition of a quality measure.",
                        "properties": {
                          "id": {
                            "pattern": "^[ \\r\\n\\t\\S]+$",
                            "type": "string",
                            "description": "A sequence of Unicode characters"
                          },
                          "extension": {
                            "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                            "type": "array"
                          },
                          "modifierExtension": {
                            "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                            "type": "array"
                          },
                          "code": {
                            "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                            "additionalProperties": false
                          },
                          "description": {
                            "pattern": "^[ \\r\\n\\t\\S]+$",
                            "type": "string",
                            "description": "A sequence of Unicode characters"
                          },
                          "_description": {
                            "description": "Base definition for all elements in a resource.",
                            "additionalProperties": false
                          },
                          "criteria": {
                            "description": "An expression that specifies the criteria for the population, typically the name of an expression in a library.",
                            "additionalProperties": false
                          }
                        },
                        "additionalProperties": false,
                        "required": [
                          "criteria"
                        ]
                      },
                      "type": "array"
                    },
                    "stratifier": {
                      "description": "The stratifier criteria for the measure report, specified as either the name of a valid CQL expression defined within a referenced library or a valid FHIR Resource Path.",
                      "items": {
                        "description": "The Measure resource provides the definition of a quality measure.",
                        "properties": {
                          "id": {
                            "pattern": "^[ \\r\\n\\t\\S]+$",
                            "type": "string",
                            "description": "A sequence of Unicode characters"
                          },
                          "extension": {
                            "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                            "type": "array"
                          },
                          "modifierExtension": {
                            "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                            "type": "array"
                          },
                          "code": {
                            "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                            "additionalProperties": false
                          },
                          "description": {
                            "pattern": "^[ \\r\\n\\t\\S]+$",
                            "type": "string",
                            "description": "A sequence of Unicode characters"
                          },
                          "_description": {
                            "description": "Base definition for all elements in a resource.",
                            "additionalProperties": false
                          },
                          "criteria": {
                            "description": "An expression that specifies the criteria for the stratifier. This is typically the name of an expression defined within a referenced library, but it may also be a path to a stratifier element.",
                            "additionalProperties": false
                          },
                          "component": {
                            "description": "A component of the stratifier criteria for the measure report, specified as either the name of a valid CQL expression defined within a referenced library or a valid FHIR Resource Path.",
                            "items": {
                              "description": "The Measure resource provides the definition of a quality measure.",
                              "properties": {
                                "id": {
                                  "pattern": "^[ \\r\\n\\t\\S]+$",
                                  "type": "string",
                                  "description": "A sequence of Unicode characters"
                                },
                                "extension": {
                                  "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                                  "type": "array"
                                },
                                "modifierExtension": {
                                  "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                                  "type": "array"
                                },
                                "code": {
                                  "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                                  "additionalProperties": false
                                },
                                "description": {
                                  "pattern": "^[ \\r\\n\\t\\S]+$",
                                  "type": "string",
                                  "description": "A sequence of Unicode characters"
                                },
                                "_description": {
                                  "description": "Base definition for all elements in a resource.",
                                  "additionalProperties": false
                                },
                                "criteria": {
                                  "description": "An expression that specifies the criteria for this component of the stratifier. This is typically the name of an expression defined within a referenced library, but it may also be a path to a stratifier element.",
                                  "additionalProperties": false
                                }
                              },
                              "additionalProperties": false,
                              "required": [
                                "criteria"
                              ]
                            },
                            "type": "array"
                          }
                        },
                        "additionalProperties": false
                      },
                      "type": "array"
                    }
                  },
                  "additionalProperties": false
                },
                "type": "array"
              },
              "supplementalData": {
                "description": "The supplemental data criteria for the measure report, specified as either the name of a valid CQL expression within a referenced library, or a valid FHIR Resource Path.",
                "items": {
                  "description": "The Measure resource provides the definition of a quality measure.",
                  "properties": {
                    "id": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "type": "array"
                    },
                    "modifierExtension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                      "type": "array"
                    },
                    "code": {
                      "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                      "additionalProperties": false
                    },
                    "usage": {
                      "description": "An indicator of the intended usage for the supplemental data element. Supplemental data indicates the data is additional information requested to augment the measure information. Risk adjustment factor indicates the data is additional information used to calculate risk adjustment factors when applying a risk model to the measure calculation.",
                      "type": "array"
                    },
                    "description": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "_description": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "criteria": {
                      "description": "The criteria for the supplemental data. This is typically the name of a valid expression defined within a referenced library, but it may also be a path to a specific data element. The criteria defines the data to be returned for this element.",
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false,
                  "required": [
                    "criteria"
                  ]
                },
                "type": "array"
              }
            },
            "additionalProperties": false,
            "required": [
              "resourceType"
            ]
          },
          {
            "description": "The MeasureReport resource contains the results of the calculation of a measure; and optionally a reference to the resources involved in that calculation.",
            "properties": {
              "resourceType": {
                "description": "This is a MeasureReport resource",
                "const": "MeasureReport"
              },
              "id": {
                "description": "The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.",
                "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                "type": "string"
              },
              "meta": {
                "description": "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
                "additionalProperties": false
              },
              "implicitRules": {
                "pattern": "^\\S*$",
                "type": "string",
                "description": "String of characters used to identify a name or a resource"
              },
              "_implicitRules": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "language": {
                "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                "type": "string",
                "description": "A string which has at least one character and no leading or trailing whitespace and where there is no whitespace other than single spaces in the contents"
              },
              "_language": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "text": {
                "description": "A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it \"clinically safe\" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.",
                "additionalProperties": false
              },
              "contained": {
                "description": "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope.",
                "type": "array"
              },
              "extension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                "type": "array"
              },
              "modifierExtension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                "type": "array"
              },
              "identifier": {
                "description": "A formal identifier that is used to identify this MeasureReport when it is represented in other formats or referenced in a specification, model, design or an instance.",
                "type": "array"
              },
              "status": {
                "description": "The MeasureReport status. No data will be available until the MeasureReport status is complete.",
                "enum": [
                  "complete",
                  "pending",
                  "error"
                ]
              },
              "_status": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "type": {
                "description": "The type of measure report. This may be an individual report, which provides the score for the measure for an individual member of the population; a subject-listing, which returns the list of members that meet the various criteria in the measure; a summary report, which returns a population count for each of the criteria in the measure; or a data-collection, which enables the MeasureReport to be used to exchange the data-of-interest for a quality measure.",
                "enum": [
                  "individual",
                  "subject-list",
                  "summary",
                  "data-collection"
                ]
              },
              "_type": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "measure": {
                "pattern": "^\\S*$",
                "type": "string",
                "description": "A URI that is a reference to a canonical URL on a FHIR resource"
              },
              "subject": {
                "description": "A reference from one resource to another.",
                "additionalProperties": false
              },
              "date": {
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                "type": "string",
                "description": "A date, date-time or partial date (e.g. just year or year + month).  If hours and minutes are specified, a time zone SHALL be populated. The format is a union of the schema types gYear, gYearMonth, date and dateTime. Seconds must be provided due to schema type constraints but may be zero-filled and may be ignored.                 Dates SHALL be valid dates."
              },
              "_date": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "reporter": {
                "description": "A reference from one resource to another.",
                "additionalProperties": false
              },
              "period": {
                "description": "A time period defined by a start and end date and optionally time.",
                "additionalProperties": false
              },
              "improvementNotation": {
                "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                "additionalProperties": false
              },
              "group": {
                "description": "The results of the calculation, one for each population group in the measure.",
                "items": {
                  "description": "The MeasureReport resource contains the results of the calculation of a measure; and optionally a reference to the resources involved in that calculation.",
                  "properties": {
                    "id": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "type": "array"
                    },
                    "modifierExtension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                      "type": "array"
                    },
                    "code": {
                      "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                      "additionalProperties": false
                    },
                    "population": {
                      "description": "The populations that make up the population group, one for each type of population appropriate for the measure.",
                      "items": {
                        "description": "The MeasureReport resource contains the results of the calculation of a measure; and optionally a reference to the resources involved in that calculation.",
                        "properties": {
                          "id": {
                            "pattern": "^[ \\r\\n\\t\\S]+$",
                            "type": "string",
                            "description": "A sequence of Unicode characters"
                          },
                          "extension": {
                            "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                            "type": "array"
                          },
                          "modifierExtension": {
                            "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                            "type": "array"
                          },
                          "code": {
                            "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                            "additionalProperties": false
                          },
                          "count": {
                            "description": "The number of members of the population.",
                            "pattern": "^-?([0]|([1-9][0-9]*))$",
                            "type": "number"
                          },
                          "_count": {
                            "description": "Base definition for all elements in a resource.",
                            "additionalProperties": false
                          },
                          "subjectResults": {
                            "description": "A reference from one resource to another.",
                            "additionalProperties": false
                          }
                        },
                        "additionalProperties": false
                      },
                      "type": "array"
                    },
                    "measureScore": {
                      "description": "A measured amount (or an amount that can potentially be measured). Note that measured amounts include amounts that are not precisely quantified, including amounts involving arbitrary units and floating currencies.",
                      "additionalProperties": false
                    },
                    "stratifier": {
                      "description": "When a measure includes multiple stratifiers, there will be a stratifier group for each stratifier defined by the measure.",
                      "items": {
                        "description": "The MeasureReport resource contains the results of the calculation of a measure; and optionally a reference to the resources involved in that calculation.",
                        "properties": {
                          "id": {
                            "pattern": "^[ \\r\\n\\t\\S]+$",
                            "type": "string",
                            "description": "A sequence of Unicode characters"
                          },
                          "extension": {
                            "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                            "type": "array"
                          },
                          "modifierExtension": {
                            "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                            "type": "array"
                          },
                          "code": {
                            "description": "The meaning of this stratifier, as defined in the measure definition.",
                            "type": "array"
                          },
                          "stratum": {
                            "description": "This element contains the results for a single stratum within the stratifier. For example, when stratifying on administrative gender, there will be four strata, one for each possible gender value.",
                            "items": {
                              "description": "The MeasureReport resource contains the results of the calculation of a measure; and optionally a reference to the resources involved in that calculation.",
                              "properties": {
                                "id": {
                                  "pattern": "^[ \\r\\n\\t\\S]+$",
                                  "type": "string",
                                  "description": "A sequence of Unicode characters"
                                },
                                "extension": {
                                  "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                                  "type": "array"
                                },
                                "modifierExtension": {
                                  "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                                  "type": "array"
                                },
                                "value": {
                                  "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                                  "additionalProperties": false
                                },
                                "component": {
                                  "description": "A stratifier component value.",
                                  "items": {
                                    "description": "The MeasureReport resource contains the results of the calculation of a measure; and optionally a reference to the resources involved in that calculation.",
                                    "properties": {
                                      "id": {
                                        "pattern": "^[ \\r\\n\\t\\S]+$",
                                        "type": "string",
                                        "description": "A sequence of Unicode characters"
                                      },
                                      "extension": {
                                        "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                                        "type": "array"
                                      },
                                      "modifierExtension": {
                                        "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                                        "type": "array"
                                      },
                                      "code": {
                                        "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                                        "additionalProperties": false
                                      },
                                      "value": {
                                        "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                                        "additionalProperties": false
                                      }
                                    },
                                    "additionalProperties": false,
                                    "required": [
                                      "code",
                                      "value"
                                    ]
                                  },
                                  "type": "array"
                                },
                                "population": {
                                  "description": "The populations that make up the stratum, one for each type of population appropriate to the measure.",
                                  "items": {
                                    "description": "The MeasureReport resource contains the results of the calculation of a measure; and optionally a reference to the resources involved in that calculation.",
                                    "properties": {
                                      "id": {
                                        "pattern": "^[ \\r\\n\\t\\S]+$",
                                        "type": "string",
                                        "description": "A sequence of Unicode characters"
                                      },
                                      "extension": {
                                        "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                                        "type": "array"
                                      },
                                      "modifierExtension": {
                                        "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                                        "type": "array"
                                      },
                                      "code": {
                                        "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                                        "additionalProperties": false
                                      },
                                      "count": {
                                        "description": "The number of members of the population in this stratum.",
                                        "pattern": "^-?([0]|([1-9][0-9]*))$",
                                        "type": "number"
                                      },
                                      "_count": {
                                        "description": "Base definition for all elements in a resource.",
                                        "additionalProperties": false
                                      },
                                      "subjectResults": {
                                        "description": "A reference from one resource to another.",
                                        "additionalProperties": false
                                      }
                                    },
                                    "additionalProperties": false
                                  },
                                  "type": "array"
                                },
                                "measureScore": {
                                  "description": "A measured amount (or an amount that can potentially be measured). Note that measured amounts include amounts that are not precisely quantified, including amounts involving arbitrary units and floating currencies.",
                                  "additionalProperties": false
                                }
                              },
                              "additionalProperties": false
                            },
                            "type": "array"
                          }
                        },
                        "additionalProperties": false
                      },
                      "type": "array"
                    }
                  },
                  "additionalProperties": false
                },
                "type": "array"
              },
              "evaluatedResource": {
                "description": "A reference to a Bundle containing the Resources that were used in the calculation of this measure.",
                "type": "array"
              }
            },
            "additionalProperties": false,
            "required": [
              "period",
              "measure",
              "resourceType"
            ]
          },
          {
            "description": "A photo, video, or audio recording acquired or used in healthcare. The actual content may be inline or provided by direct reference.",
            "properties": {
              "resourceType": {
                "description": "This is a Media resource",
                "const": "Media"
              },
              "id": {
                "description": "The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.",
                "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                "type": "string"
              },
              "meta": {
                "description": "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
                "additionalProperties": false
              },
              "implicitRules": {
                "pattern": "^\\S*$",
                "type": "string",
                "description": "String of characters used to identify a name or a resource"
              },
              "_implicitRules": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "language": {
                "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                "type": "string",
                "description": "A string which has at least one character and no leading or trailing whitespace and where there is no whitespace other than single spaces in the contents"
              },
              "_language": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "text": {
                "description": "A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it \"clinically safe\" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.",
                "additionalProperties": false
              },
              "contained": {
                "description": "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope.",
                "type": "array"
              },
              "extension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                "type": "array"
              },
              "modifierExtension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                "type": "array"
              },
              "identifier": {
                "description": "Identifiers associated with the image - these may include identifiers for the image itself, identifiers for the context of its collection (e.g. series ids) and context ids such as accession numbers or other workflow identifiers.",
                "type": "array"
              },
              "basedOn": {
                "description": "A procedure that is fulfilled in whole or in part by the creation of this media.",
                "type": "array"
              },
              "partOf": {
                "description": "A larger event of which this particular event is a component or step.",
                "type": "array"
              },
              "status": {
                "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                "type": "string",
                "description": "A string which has at least one character and no leading or trailing whitespace and where there is no whitespace other than single spaces in the contents"
              },
              "_status": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "type": {
                "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                "additionalProperties": false
              },
              "modality": {
                "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                "additionalProperties": false
              },
              "view": {
                "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                "additionalProperties": false
              },
              "subject": {
                "description": "A reference from one resource to another.",
                "additionalProperties": false
              },
              "encounter": {
                "description": "A reference from one resource to another.",
                "additionalProperties": false
              },
              "createdDateTime": {
                "description": "The date and time(s) at which the media was collected.",
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                "type": "string"
              },
              "_createdDateTime": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "createdPeriod": {
                "description": "A time period defined by a start and end date and optionally time.",
                "additionalProperties": false
              },
              "issued": {
                "description": "The date and time this version of the media was made available to providers, typically after having been reviewed.",
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
                "type": "string"
              },
              "_issued": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "operator": {
                "description": "A reference from one resource to another.",
                "additionalProperties": false
              },
              "reasonCode": {
                "description": "Describes why the event occurred in coded or textual form.",
                "type": "array"
              },
              "bodySite": {
                "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                "additionalProperties": false
              },
              "deviceName": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "_deviceName": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "device": {
                "description": "A reference from one resource to another.",
                "additionalProperties": false
              },
              "height": {
                "pattern": "^[1-9][0-9]*$",
                "type": "number",
                "description": "An integer with a value that is positive (e.g. >0)"
              },
              "_height": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "width": {
                "pattern": "^[1-9][0-9]*$",
                "type": "number",
                "description": "An integer with a value that is positive (e.g. >0)"
              },
              "_width": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "frames": {
                "pattern": "^[1-9][0-9]*$",
                "type": "number",
                "description": "An integer with a value that is positive (e.g. >0)"
              },
              "_frames": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "duration": {
                "description": "The duration of the recording in seconds - for audio and video.",
                "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                "type": "number"
              },
              "_duration": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "content": {
                "description": "For referring to data content defined in other formats.",
                "additionalProperties": false
              },
              "note": {
                "description": "Comments made about the media by the performer, subject or other participants.",
                "type": "array"
              }
            },
            "additionalProperties": false,
            "required": [
              "content",
              "resourceType"
            ]
          },
          {
            "description": "This resource is primarily used for the identification and definition of a medication for the purposes of prescribing, dispensing, and administering a medication as well as for making statements about medication use.",
            "properties": {
              "resourceType": {
                "description": "This is a Medication resource",
                "const": "Medication"
              },
              "id": {
                "description": "The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.",
                "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                "type": "string"
              },
              "meta": {
                "description": "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
                "additionalProperties": false
              },
              "implicitRules": {
                "pattern": "^\\S*$",
                "type": "string",
                "description": "String of characters used to identify a name or a resource"
              },
              "_implicitRules": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "language": {
                "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                "type": "string",
                "description": "A string which has at least one character and no leading or trailing whitespace and where there is no whitespace other than single spaces in the contents"
              },
              "_language": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "text": {
                "description": "A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it \"clinically safe\" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.",
                "additionalProperties": false
              },
              "contained": {
                "description": "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope.",
                "type": "array"
              },
              "extension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                "type": "array"
              },
              "modifierExtension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                "type": "array"
              },
              "identifier": {
                "description": "Business identifier for this medication.",
                "type": "array"
              },
              "code": {
                "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                "additionalProperties": false
              },
              "status": {
                "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                "type": "string",
                "description": "A string which has at least one character and no leading or trailing whitespace and where there is no whitespace other than single spaces in the contents"
              },
              "_status": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "manufacturer": {
                "description": "A reference from one resource to another.",
                "additionalProperties": false
              },
              "form": {
                "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                "additionalProperties": false
              },
              "amount": {
                "description": "Specific amount of the drug in the packaged product.  For example, when specifying a product that has the same strength (For example, Insulin glargine 100 unit per mL solution for injection), this attribute provides additional clarification of the package amount (For example, 3 mL, 10mL, etc.).",
                "additionalProperties": false
              },
              "ingredient": {
                "description": "Identifies a particular constituent of interest in the product.",
                "items": {
                  "description": "This resource is primarily used for the identification and definition of a medication for the purposes of prescribing, dispensing, and administering a medication as well as for making statements about medication use.",
                  "properties": {
                    "id": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "type": "array"
                    },
                    "modifierExtension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                      "type": "array"
                    },
                    "itemCodeableConcept": {
                      "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                      "additionalProperties": false
                    },
                    "itemReference": {
                      "description": "A reference from one resource to another.",
                      "additionalProperties": false
                    },
                    "isActive": {
                      "description": "Indication of whether this ingredient affects the therapeutic action of the drug.",
                      "pattern": "^true|false$",
                      "type": "boolean"
                    },
                    "_isActive": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "strength": {
                      "description": "Specifies how many (or how much) of the items there are in this Medication.  For example, 250 mg per tablet.  This is expressed as a ratio where the numerator is 250mg and the denominator is 1 tablet.",
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                },
                "type": "array"
              },
              "batch": {
                "description": "Information that only applies to packages (not products).",
                "properties": {
                  "id": {
                    "pattern": "^[ \\r\\n\\t\\S]+$",
                    "type": "string",
                    "description": "A sequence of Unicode characters"
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "type": "array"
                  },
                  "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                    "type": "array"
                  },
                  "lotNumber": {
                    "pattern": "^[ \\r\\n\\t\\S]+$",
                    "type": "string",
                    "description": "A sequence of Unicode characters"
                  },
                  "_lotNumber": {
                    "description": "Base definition for all elements in a resource.",
                    "additionalProperties": false
                  },
                  "expirationDate": {
                    "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                    "type": "string",
                    "description": "A date, date-time or partial date (e.g. just year or year + month).  If hours and minutes are specified, a time zone SHALL be populated. The format is a union of the schema types gYear, gYearMonth, date and dateTime. Seconds must be provided due to schema type constraints but may be zero-filled and may be ignored.                 Dates SHALL be valid dates."
                  },
                  "_expirationDate": {
                    "description": "Base definition for all elements in a resource.",
                    "additionalProperties": false
                  }
                },
                "additionalProperties": false
              }
            },
            "additionalProperties": false,
            "required": [
              "resourceType"
            ]
          },
          {
            "description": "Describes the event of a patient consuming or otherwise being administered a medication.  This may be as simple as swallowing a tablet or it may be a long running infusion.  Related resources tie this event to the authorizing prescription, and the specific encounter between patient and health care practitioner.",
            "properties": {
              "resourceType": {
                "description": "This is a MedicationAdministration resource",
                "const": "MedicationAdministration"
              },
              "id": {
                "description": "The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.",
                "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                "type": "string"
              },
              "meta": {
                "description": "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
                "additionalProperties": false
              },
              "implicitRules": {
                "pattern": "^\\S*$",
                "type": "string",
                "description": "String of characters used to identify a name or a resource"
              },
              "_implicitRules": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "language": {
                "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                "type": "string",
                "description": "A string which has at least one character and no leading or trailing whitespace and where there is no whitespace other than single spaces in the contents"
              },
              "_language": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "text": {
                "description": "A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it \"clinically safe\" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.",
                "additionalProperties": false
              },
              "contained": {
                "description": "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope.",
                "type": "array"
              },
              "extension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                "type": "array"
              },
              "modifierExtension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                "type": "array"
              },
              "identifier": {
                "description": "Identifiers associated with this Medication Administration that are defined by business processes and/or used to refer to it when a direct URL reference to the resource itself is not appropriate. They are business identifiers assigned to this resource by the performer or other systems and remain constant as the resource is updated and propagates from server to server.",
                "type": "array"
              },
              "instantiates": {
                "description": "A protocol, guideline, orderset, or other definition that was adhered to in whole or in part by this event.",
                "type": "array"
              },
              "_instantiates": {
                "description": "Extensions for instantiates",
                "type": "array"
              },
              "partOf": {
                "description": "A larger event of which this particular event is a component or step.",
                "type": "array"
              },
              "status": {
                "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                "type": "string",
                "description": "A string which has at least one character and no leading or trailing whitespace and where there is no whitespace other than single spaces in the contents"
              },
              "_status": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "statusReason": {
                "description": "A code indicating why the administration was not performed.",
                "type": "array"
              },
              "category": {
                "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                "additionalProperties": false
              },
              "medicationCodeableConcept": {
                "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                "additionalProperties": false
              },
              "medicationReference": {
                "description": "A reference from one resource to another.",
                "additionalProperties": false
              },
              "subject": {
                "description": "A reference from one resource to another.",
                "additionalProperties": false
              },
              "context": {
                "description": "A reference from one resource to another.",
                "additionalProperties": false
              },
              "supportingInformation": {
                "description": "Additional information (for example, patient height and weight) that supports the administration of the medication.",
                "type": "array"
              },
              "effectiveDateTime": {
                "description": "A specific date/time or interval of time during which the administration took place (or did not take place, when the 'notGiven' attribute is true). For many administrations, such as swallowing a tablet the use of dateTime is more appropriate.",
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                "type": "string"
              },
              "_effectiveDateTime": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "effectivePeriod": {
                "description": "A time period defined by a start and end date and optionally time.",
                "additionalProperties": false
              },
              "performer": {
                "description": "Indicates who or what performed the medication administration and how they were involved.",
                "items": {
                  "description": "Describes the event of a patient consuming or otherwise being administered a medication.  This may be as simple as swallowing a tablet or it may be a long running infusion.  Related resources tie this event to the authorizing prescription, and the specific encounter between patient and health care practitioner.",
                  "properties": {
                    "id": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "type": "array"
                    },
                    "modifierExtension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                      "type": "array"
                    },
                    "function": {
                      "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                      "additionalProperties": false
                    },
                    "actor": {
                      "description": "A reference from one resource to another.",
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false,
                  "required": [
                    "actor"
                  ]
                },
                "type": "array"
              },
              "reasonCode": {
                "description": "A code indicating why the medication was given.",
                "type": "array"
              },
              "reasonReference": {
                "description": "Condition or observation that supports why the medication was administered.",
                "type": "array"
              },
              "request": {
                "description": "A reference from one resource to another.",
                "additionalProperties": false
              },
              "device": {
                "description": "The device used in administering the medication to the patient.  For example, a particular infusion pump.",
                "type": "array"
              },
              "note": {
                "description": "Extra information about the medication administration that is not conveyed by the other attributes.",
                "type": "array"
              },
              "dosage": {
                "description": "Describes the medication dosage information details e.g. dose, rate, site, route, etc.",
                "properties": {
                  "id": {
                    "pattern": "^[ \\r\\n\\t\\S]+$",
                    "type": "string",
                    "description": "A sequence of Unicode characters"
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "type": "array"
                  },
                  "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                    "type": "array"
                  },
                  "text": {
                    "pattern": "^[ \\r\\n\\t\\S]+$",
                    "type": "string",
                    "description": "A sequence of Unicode characters"
                  },
                  "_text": {
                    "description": "Base definition for all elements in a resource.",
                    "additionalProperties": false
                  },
                  "site": {
                    "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                    "additionalProperties": false
                  },
                  "route": {
                    "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                    "additionalProperties": false
                  },
                  "method": {
                    "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                    "additionalProperties": false
                  },
                  "dose": {
                    "description": "A measured amount (or an amount that can potentially be measured). Note that measured amounts include amounts that are not precisely quantified, including amounts involving arbitrary units and floating currencies.",
                    "additionalProperties": false
                  },
                  "rateRatio": {
                    "description": "Identifies the speed with which the medication was or will be introduced into the patient.  Typically, the rate for an infusion e.g. 100 ml per 1 hour or 100 ml/hr.  May also be expressed as a rate per unit of time, e.g. 500 ml per 2 hours.  Other examples:  200 mcg/min or 200 mcg/1 minute; 1 liter/8 hours.",
                    "additionalProperties": false
                  },
                  "rateQuantity": {
                    "description": "A measured amount (or an amount that can potentially be measured). Note that measured amounts include amounts that are not precisely quantified, including amounts involving arbitrary units and floating currencies.",
                    "additionalProperties": false
                  }
                },
                "additionalProperties": false
              },
              "eventHistory": {
                "description": "A summary of the events of interest that have occurred, such as when the administration was verified.",
                "type": "array"
              }
            },
            "additionalProperties": false,
            "required": [
              "subject",
              "resourceType"
            ]
          },
          {
            "description": "Indicates that a medication product is to be or has been dispensed for a named person/patient.  This includes a description of the medication product (supply) provided and the instructions for administering the medication.  The medication dispense is the result of a pharmacy system responding to a medication order.",
            "properties": {
              "resourceType": {
                "description": "This is a MedicationDispense resource",
                "const": "MedicationDispense"
              },
              "id": {
                "description": "The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.",
                "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                "type": "string"
              },
              "meta": {
                "description": "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
                "additionalProperties": false
              },
              "implicitRules": {
                "pattern": "^\\S*$",
                "type": "string",
                "description": "String of characters used to identify a name or a resource"
              },
              "_implicitRules": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "language": {
                "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                "type": "string",
                "description": "A string which has at least one character and no leading or trailing whitespace and where there is no whitespace other than single spaces in the contents"
              },
              "_language": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "text": {
                "description": "A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it \"clinically safe\" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.",
                "additionalProperties": false
              },
              "contained": {
                "description": "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope.",
                "type": "array"
              },
              "extension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                "type": "array"
              },
              "modifierExtension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                "type": "array"
              },
              "identifier": {
                "description": "Identifiers associated with this Medication Dispense that are defined by business processes and/or used to refer to it when a direct URL reference to the resource itself is not appropriate. They are business identifiers assigned to this resource by the performer or other systems and remain constant as the resource is updated and propagates from server to server.",
                "type": "array"
              },
              "partOf": {
                "description": "The procedure that trigger the dispense.",
                "type": "array"
              },
              "status": {
                "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                "type": "string",
                "description": "A string which has at least one character and no leading or trailing whitespace and where there is no whitespace other than single spaces in the contents"
              },
              "_status": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "statusReasonCodeableConcept": {
                "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                "additionalProperties": false
              },
              "statusReasonReference": {
                "description": "A reference from one resource to another.",
                "additionalProperties": false
              },
              "category": {
                "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                "additionalProperties": false
              },
              "medicationCodeableConcept": {
                "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                "additionalProperties": false
              },
              "medicationReference": {
                "description": "A reference from one resource to another.",
                "additionalProperties": false
              },
              "subject": {
                "description": "A reference from one resource to another.",
                "additionalProperties": false
              },
              "context": {
                "description": "A reference from one resource to another.",
                "additionalProperties": false
              },
              "supportingInformation": {
                "description": "Additional information that supports the medication being dispensed.",
                "type": "array"
              },
              "performer": {
                "description": "Indicates who or what performed the event.",
                "items": {
                  "description": "Indicates that a medication product is to be or has been dispensed for a named person/patient.  This includes a description of the medication product (supply) provided and the instructions for administering the medication.  The medication dispense is the result of a pharmacy system responding to a medication order.",
                  "properties": {
                    "id": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "type": "array"
                    },
                    "modifierExtension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                      "type": "array"
                    },
                    "function": {
                      "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                      "additionalProperties": false
                    },
                    "actor": {
                      "description": "A reference from one resource to another.",
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false,
                  "required": [
                    "actor"
                  ]
                },
                "type": "array"
              },
              "location": {
                "description": "A reference from one resource to another.",
                "additionalProperties": false
              },
              "authorizingPrescription": {
                "description": "Indicates the medication order that is being dispensed against.",
                "type": "array"
              },
              "type": {
                "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                "additionalProperties": false
              },
              "quantity": {
                "description": "A measured amount (or an amount that can potentially be measured). Note that measured amounts include amounts that are not precisely quantified, including amounts involving arbitrary units and floating currencies.",
                "additionalProperties": false
              },
              "daysSupply": {
                "description": "A measured amount (or an amount that can potentially be measured). Note that measured amounts include amounts that are not precisely quantified, including amounts involving arbitrary units and floating currencies.",
                "additionalProperties": false
              },
              "whenPrepared": {
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                "type": "string",
                "description": "A date, date-time or partial date (e.g. just year or year + month).  If hours and minutes are specified, a time zone SHALL be populated. The format is a union of the schema types gYear, gYearMonth, date and dateTime. Seconds must be provided due to schema type constraints but may be zero-filled and may be ignored.                 Dates SHALL be valid dates."
              },
              "_whenPrepared": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "whenHandedOver": {
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                "type": "string",
                "description": "A date, date-time or partial date (e.g. just year or year + month).  If hours and minutes are specified, a time zone SHALL be populated. The format is a union of the schema types gYear, gYearMonth, date and dateTime. Seconds must be provided due to schema type constraints but may be zero-filled and may be ignored.                 Dates SHALL be valid dates."
              },
              "_whenHandedOver": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "destination": {
                "description": "A reference from one resource to another.",
                "additionalProperties": false
              },
              "receiver": {
                "description": "Identifies the person who picked up the medication.  This will usually be a patient or their caregiver, but some cases exist where it can be a healthcare professional.",
                "type": "array"
              },
              "note": {
                "description": "Extra information about the dispense that could not be conveyed in the other attributes.",
                "type": "array"
              },
              "dosageInstruction": {
                "description": "Indicates how the medication is to be used by the patient.",
                "type": "array"
              },
              "substitution": {
                "description": "Indicates whether or not substitution was made as part of the dispense.  In some cases, substitution will be expected but does not happen, in other cases substitution is not expected but does happen.  This block explains what substitution did or did not happen and why.  If nothing is specified, substitution was not done.",
                "properties": {
                  "id": {
                    "pattern": "^[ \\r\\n\\t\\S]+$",
                    "type": "string",
                    "description": "A sequence of Unicode characters"
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "type": "array"
                  },
                  "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                    "type": "array"
                  },
                  "wasSubstituted": {
                    "description": "True if the dispenser dispensed a different drug or product from what was prescribed.",
                    "pattern": "^true|false$",
                    "type": "boolean"
                  },
                  "_wasSubstituted": {
                    "description": "Base definition for all elements in a resource.",
                    "additionalProperties": false
                  },
                  "type": {
                    "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                    "additionalProperties": false
                  },
                  "reason": {
                    "description": "Indicates the reason for the substitution (or lack of substitution) from what was prescribed.",
                    "type": "array"
                  },
                  "responsibleParty": {
                    "description": "The person or organization that has primary responsibility for the substitution.",
                    "type": "array"
                  }
                },
                "additionalProperties": false
              },
              "detectedIssue": {
                "description": "Indicates an actual or potential clinical issue with or between one or more active or proposed clinical actions for a patient; e.g. drug-drug interaction, duplicate therapy, dosage alert etc.",
                "type": "array"
              },
              "eventHistory": {
                "description": "A summary of the events of interest that have occurred, such as when the dispense was verified.",
                "type": "array"
              }
            },
            "additionalProperties": false,
            "required": [
              "resourceType"
            ]
          },
          {
            "description": "Information about a medication that is used to support knowledge.",
            "properties": {
              "resourceType": {
                "description": "This is a MedicationKnowledge resource",
                "const": "MedicationKnowledge"
              },
              "id": {
                "description": "The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.",
                "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                "type": "string"
              },
              "meta": {
                "description": "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
                "additionalProperties": false
              },
              "implicitRules": {
                "pattern": "^\\S*$",
                "type": "string",
                "description": "String of characters used to identify a name or a resource"
              },
              "_implicitRules": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "language": {
                "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                "type": "string",
                "description": "A string which has at least one character and no leading or trailing whitespace and where there is no whitespace other than single spaces in the contents"
              },
              "_language": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "text": {
                "description": "A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it \"clinically safe\" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.",
                "additionalProperties": false
              },
              "contained": {
                "description": "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope.",
                "type": "array"
              },
              "extension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                "type": "array"
              },
              "modifierExtension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                "type": "array"
              },
              "code": {
                "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                "additionalProperties": false
              },
              "status": {
                "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                "type": "string",
                "description": "A string which has at least one character and no leading or trailing whitespace and where there is no whitespace other than single spaces in the contents"
              },
              "_status": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "manufacturer": {
                "description": "A reference from one resource to another.",
                "additionalProperties": false
              },
              "doseForm": {
                "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                "additionalProperties": false
              },
              "amount": {
                "description": "A measured amount (or an amount that can potentially be measured). Note that measured amounts include amounts that are not precisely quantified, including amounts involving arbitrary units and floating currencies.",
                "additionalProperties": false
              },
              "synonym": {
                "description": "Additional names for a medication, for example, the name(s) given to a medication in different countries.  For example, acetaminophen and paracetamol or salbutamol and albuterol.",
                "type": "array"
              },
              "_synonym": {
                "description": "Extensions for synonym",
                "type": "array"
              },
              "relatedMedicationKnowledge": {
                "description": "Associated or related knowledge about a medication.",
                "items": {
                  "description": "Information about a medication that is used to support knowledge.",
                  "properties": {
                    "id": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "type": "array"
                    },
                    "modifierExtension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                      "type": "array"
                    },
                    "type": {
                      "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                      "additionalProperties": false
                    },
                    "reference": {
                      "description": "Associated documentation about the associated medication knowledge.",
                      "type": "array"
                    }
                  },
                  "additionalProperties": false,
                  "required": [
                    "reference",
                    "type"
                  ]
                },
                "type": "array"
              },
              "associatedMedication": {
                "description": "Associated or related medications.  For example, if the medication is a branded product (e.g. Crestor), this is the Therapeutic Moeity (e.g. Rosuvastatin) or if this is a generic medication (e.g. Rosuvastatin), this would link to a branded product (e.g. Crestor).",
                "type": "array"
              },
              "productType": {
                "description": "Category of the medication or product (e.g. branded product, therapeutic moeity, generic product, innovator product, etc.).",
                "type": "array"
              },
              "monograph": {
                "description": "Associated documentation about the medication.",
                "items": {
                  "description": "Information about a medication that is used to support knowledge.",
                  "properties": {
                    "id": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "type": "array"
                    },
                    "modifierExtension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                      "type": "array"
                    },
                    "type": {
                      "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                      "additionalProperties": false
                    },
                    "source": {
                      "description": "A reference from one resource to another.",
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                },
                "type": "array"
              },
              "ingredient": {
                "description": "Identifies a particular constituent of interest in the product.",
                "items": {
                  "description": "Information about a medication that is used to support knowledge.",
                  "properties": {
                    "id": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "type": "array"
                    },
                    "modifierExtension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                      "type": "array"
                    },
                    "itemCodeableConcept": {
                      "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                      "additionalProperties": false
                    },
                    "itemReference": {
                      "description": "A reference from one resource to another.",
                      "additionalProperties": false
                    },
                    "isActive": {
                      "description": "Indication of whether this ingredient affects the therapeutic action of the drug.",
                      "pattern": "^true|false$",
                      "type": "boolean"
                    },
                    "_isActive": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "strength": {
                      "description": "Specifies how many (or how much) of the items there are in this Medication.  For example, 250 mg per tablet.  This is expressed as a ratio where the numerator is 250mg and the denominator is 1 tablet.",
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                },
                "type": "array"
              },
              "preparationInstruction": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A string that may contain Github Flavored Markdown syntax for optional processing by a mark down presentation engine"
              },
              "_preparationInstruction": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "intendedRoute": {
                "description": "The intended or approved route of administration.",
                "type": "array"
              },
              "cost": {
                "description": "The price of the medication.",
                "items": {
                  "description": "Information about a medication that is used to support knowledge.",
                  "properties": {
                    "id": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "type": "array"
                    },
                    "modifierExtension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                      "type": "array"
                    },
                    "type": {
                      "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                      "additionalProperties": false
                    },
                    "source": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "_source": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "cost": {
                      "description": "The price of the medication.",
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false,
                  "required": [
                    "cost",
                    "type"
                  ]
                },
                "type": "array"
              },
              "monitoringProgram": {
                "description": "The program under which the medication is reviewed.",
                "items": {
                  "description": "Information about a medication that is used to support knowledge.",
                  "properties": {
                    "id": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "type": "array"
                    },
                    "modifierExtension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                      "type": "array"
                    },
                    "type": {
                      "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                      "additionalProperties": false
                    },
                    "name": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "_name": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                },
                "type": "array"
              },
              "administrationGuidelines": {
                "description": "Guidelines for the administration of the medication.",
                "items": {
                  "description": "Information about a medication that is used to support knowledge.",
                  "properties": {
                    "id": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "type": "array"
                    },
                    "modifierExtension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                      "type": "array"
                    },
                    "dosage": {
                      "description": "Dosage for the medication for the specific guidelines.",
                      "items": {
                        "description": "Information about a medication that is used to support knowledge.",
                        "properties": {
                          "id": {
                            "pattern": "^[ \\r\\n\\t\\S]+$",
                            "type": "string",
                            "description": "A sequence of Unicode characters"
                          },
                          "extension": {
                            "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                            "type": "array"
                          },
                          "modifierExtension": {
                            "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                            "type": "array"
                          },
                          "type": {
                            "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                            "additionalProperties": false
                          },
                          "dosage": {
                            "description": "Dosage for the medication for the specific guidelines.",
                            "type": "array"
                          }
                        },
                        "additionalProperties": false,
                        "required": [
                          "dosage",
                          "type"
                        ]
                      },
                      "type": "array"
                    },
                    "indicationCodeableConcept": {
                      "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                      "additionalProperties": false
                    },
                    "indicationReference": {
                      "description": "A reference from one resource to another.",
                      "additionalProperties": false
                    },
                    "patientCharacteristics": {
                      "description": "Characteristics of the patient that are relevant to the administration guidelines (for example, height, weight, gender, etc.).",
                      "items": {
                        "description": "Information about a medication that is used to support knowledge.",
                        "properties": {
                          "id": {
                            "pattern": "^[ \\r\\n\\t\\S]+$",
                            "type": "string",
                            "description": "A sequence of Unicode characters"
                          },
                          "extension": {
                            "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                            "type": "array"
                          },
                          "modifierExtension": {
                            "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                            "type": "array"
                          },
                          "characteristicCodeableConcept": {
                            "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                            "additionalProperties": false
                          },
                          "characteristicQuantity": {
                            "description": "A measured amount (or an amount that can potentially be measured). Note that measured amounts include amounts that are not precisely quantified, including amounts involving arbitrary units and floating currencies.",
                            "additionalProperties": false
                          },
                          "value": {
                            "description": "The specific characteristic (e.g. height, weight, gender, etc.).",
                            "type": "array"
                          },
                          "_value": {
                            "description": "Extensions for value",
                            "type": "array"
                          }
                        },
                        "additionalProperties": false
                      },
                      "type": "array"
                    }
                  },
                  "additionalProperties": false
                },
                "type": "array"
              },
              "medicineClassification": {
                "description": "Categorization of the medication within a formulary or classification system.",
                "items": {
                  "description": "Information about a medication that is used to support knowledge.",
                  "properties": {
                    "id": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "type": "array"
                    },
                    "modifierExtension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                      "type": "array"
                    },
                    "type": {
                      "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                      "additionalProperties": false
                    },
                    "classification": {
                      "description": "Specific category assigned to the medication (e.g. anti-infective, anti-hypertensive, antibiotic, etc.).",
                      "type": "array"
                    }
                  },
                  "additionalProperties": false,
                  "required": [
                    "type"
                  ]
                },
                "type": "array"
              },
              "packaging": {
                "description": "Information that only applies to packages (not products).",
                "properties": {
                  "id": {
                    "pattern": "^[ \\r\\n\\t\\S]+$",
                    "type": "string",
                    "description": "A sequence of Unicode characters"
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "type": "array"
                  },
                  "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                    "type": "array"
                  },
                  "type": {
                    "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                    "additionalProperties": false
                  },
                  "quantity": {
                    "description": "A measured amount (or an amount that can potentially be measured). Note that measured amounts include amounts that are not precisely quantified, including amounts involving arbitrary units and floating currencies.",
                    "additionalProperties": false
                  }
                },
                "additionalProperties": false
              },
              "drugCharacteristic": {
                "description": "Specifies descriptive properties of the medicine, such as color, shape, imprints, etc.",
                "items": {
                  "description": "Information about a medication that is used to support knowledge.",
                  "properties": {
                    "id": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "type": "array"
                    },
                    "modifierExtension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                      "type": "array"
                    },
                    "type": {
                      "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                      "additionalProperties": false
                    },
                    "valueCodeableConcept": {
                      "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                      "additionalProperties": false
                    },
                    "valueString": {
                      "description": "Description of the characteristic.",
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string"
                    },
                    "_valueString": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "valueQuantity": {
                      "description": "A measured amount (or an amount that can potentially be measured). Note that measured amounts include amounts that are not precisely quantified, including amounts involving arbitrary units and floating currencies.",
                      "additionalProperties": false
                    },
                    "valueBase64Binary": {
                      "description": "Description of the characteristic.",
                      "pattern": "^(\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+$",
                      "type": "string"
                    },
                    "_valueBase64Binary": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                },
                "type": "array"
              },
              "contraindication": {
                "description": "Potential clinical issue with or between medication(s) (for example, drug-drug interaction, drug-disease contraindication, drug-allergy interaction, etc.).",
                "type": "array"
              },
              "regulatory": {
                "description": "Regulatory information about a medication.",
                "items": {
                  "description": "Information about a medication that is used to support knowledge.",
                  "properties": {
                    "id": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "type": "array"
                    },
                    "modifierExtension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                      "type": "array"
                    },
                    "regulatoryAuthority": {
                      "description": "A reference from one resource to another.",
                      "additionalProperties": false
                    },
                    "substitution": {
                      "description": "Specifies if changes are allowed when dispensing a medication from a regulatory perspective.",
                      "items": {
                        "description": "Information about a medication that is used to support knowledge.",
                        "properties": {
                          "id": {
                            "pattern": "^[ \\r\\n\\t\\S]+$",
                            "type": "string",
                            "description": "A sequence of Unicode characters"
                          },
                          "extension": {
                            "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                            "type": "array"
                          },
                          "modifierExtension": {
                            "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                            "type": "array"
                          },
                          "type": {
                            "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                            "additionalProperties": false
                          },
                          "allowed": {
                            "description": "Specifies if regulation allows for changes in the medication when dispensing.",
                            "pattern": "^true|false$",
                            "type": "boolean"
                          },
                          "_allowed": {
                            "description": "Base definition for all elements in a resource.",
                            "additionalProperties": false
                          }
                        },
                        "additionalProperties": false,
                        "required": [
                          "type"
                        ]
                      },
                      "type": "array"
                    },
                    "schedule": {
                      "description": "Specifies the schedule of a medication in jurisdiction.",
                      "items": {
                        "description": "Information about a medication that is used to support knowledge.",
                        "properties": {
                          "id": {
                            "pattern": "^[ \\r\\n\\t\\S]+$",
                            "type": "string",
                            "description": "A sequence of Unicode characters"
                          },
                          "extension": {
                            "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                            "type": "array"
                          },
                          "modifierExtension": {
                            "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                            "type": "array"
                          },
                          "schedule": {
                            "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                            "additionalProperties": false
                          }
                        },
                        "additionalProperties": false,
                        "required": [
                          "schedule"
                        ]
                      },
                      "type": "array"
                    },
                    "maxDispense": {
                      "description": "The maximum number of units of the medication that can be dispensed in a period.",
                      "properties": {
                        "id": {
                          "pattern": "^[ \\r\\n\\t\\S]+$",
                          "type": "string",
                          "description": "A sequence of Unicode characters"
                        },
                        "extension": {
                          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                          "type": "array"
                        },
                        "modifierExtension": {
                          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                          "type": "array"
                        },
                        "quantity": {
                          "description": "A measured amount (or an amount that can potentially be measured). Note that measured amounts include amounts that are not precisely quantified, including amounts involving arbitrary units and floating currencies.",
                          "additionalProperties": false
                        },
                        "period": {
                          "description": "The period that applies to the maximum number of units.",
                          "additionalProperties": false
                        }
                      },
                      "additionalProperties": false,
                      "required": [
                        "quantity"
                      ]
                    }
                  },
                  "additionalProperties": false,
                  "required": [
                    "regulatoryAuthority"
                  ]
                },
                "type": "array"
              },
              "kinetics": {
                "description": "The time course of drug absorption, distribution, metabolism and excretion of a medication from the body.",
                "items": {
                  "description": "Information about a medication that is used to support knowledge.",
                  "properties": {
                    "id": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "type": "array"
                    },
                    "modifierExtension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                      "type": "array"
                    },
                    "areaUnderCurve": {
                      "description": "The drug concentration measured at certain discrete points in time.",
                      "type": "array"
                    },
                    "lethalDose50": {
                      "description": "The median lethal dose of a drug.",
                      "type": "array"
                    },
                    "halfLifePeriod": {
                      "description": "The time required for any specified property (e.g., the concentration of a substance in the body) to decrease by half.",
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                },
                "type": "array"
              }
            },
            "additionalProperties": false,
            "required": [
              "resourceType"
            ]
          },
          {
            "description": "An order or request for both supply of the medication and the instructions for administration of the medication to a patient. The resource is called \"MedicationRequest\" rather than \"MedicationPrescription\" or \"MedicationOrder\" to generalize the use across inpatient and outpatient settings, including care plans, etc., and to harmonize with workflow patterns.",
            "properties": {
              "resourceType": {
                "description": "This is a MedicationRequest resource",
                "const": "MedicationRequest"
              },
              "id": {
                "description": "The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.",
                "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                "type": "string"
              },
              "meta": {
                "description": "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
                "additionalProperties": false
              },
              "implicitRules": {
                "pattern": "^\\S*$",
                "type": "string",
                "description": "String of characters used to identify a name or a resource"
              },
              "_implicitRules": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "language": {
                "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                "type": "string",
                "description": "A string which has at least one character and no leading or trailing whitespace and where there is no whitespace other than single spaces in the contents"
              },
              "_language": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "text": {
                "description": "A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it \"clinically safe\" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.",
                "additionalProperties": false
              },
              "contained": {
                "description": "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope.",
                "type": "array"
              },
              "extension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                "type": "array"
              },
              "modifierExtension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                "type": "array"
              },
              "identifier": {
                "description": "Identifiers associated with this medication request that are defined by business processes and/or used to refer to it when a direct URL reference to the resource itself is not appropriate. They are business identifiers assigned to this resource by the performer or other systems and remain constant as the resource is updated and propagates from server to server.",
                "type": "array"
              },
              "status": {
                "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                "type": "string",
                "description": "A string which has at least one character and no leading or trailing whitespace and where there is no whitespace other than single spaces in the contents"
              },
              "_status": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "statusReason": {
                "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                "additionalProperties": false
              },
              "intent": {
                "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                "type": "string",
                "description": "A string which has at least one character and no leading or trailing whitespace and where there is no whitespace other than single spaces in the contents"
              },
              "_intent": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "category": {
                "description": "Indicates the type of medication request (for example, where the medication is expected to be consumed or administered (i.e. inpatient or outpatient)).",
                "type": "array"
              },
              "priority": {
                "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                "type": "string",
                "description": "A string which has at least one character and no leading or trailing whitespace and where there is no whitespace other than single spaces in the contents"
              },
              "_priority": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "doNotPerform": {
                "description": "If true indicates that the provider is asking for the medication request not to occur.",
                "pattern": "^true|false$",
                "type": "boolean"
              },
              "_doNotPerform": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "reportedBoolean": {
                "description": "Indicates if this record was captured as a secondary 'reported' record rather than as an original primary source-of-truth record.  It may also indicate the source of the report.",
                "pattern": "^true|false$",
                "type": "boolean"
              },
              "_reportedBoolean": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "reportedReference": {
                "description": "A reference from one resource to another.",
                "additionalProperties": false
              },
              "medicationCodeableConcept": {
                "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                "additionalProperties": false
              },
              "medicationReference": {
                "description": "A reference from one resource to another.",
                "additionalProperties": false
              },
              "subject": {
                "description": "A reference from one resource to another.",
                "additionalProperties": false
              },
              "encounter": {
                "description": "A reference from one resource to another.",
                "additionalProperties": false
              },
              "supportingInformation": {
                "description": "Include additional information (for example, patient height and weight) that supports the ordering of the medication.",
                "type": "array"
              },
              "authoredOn": {
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                "type": "string",
                "description": "A date, date-time or partial date (e.g. just year or year + month).  If hours and minutes are specified, a time zone SHALL be populated. The format is a union of the schema types gYear, gYearMonth, date and dateTime. Seconds must be provided due to schema type constraints but may be zero-filled and may be ignored.                 Dates SHALL be valid dates."
              },
              "_authoredOn": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "requester": {
                "description": "A reference from one resource to another.",
                "additionalProperties": false
              },
              "performer": {
                "description": "A reference from one resource to another.",
                "additionalProperties": false
              },
              "performerType": {
                "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                "additionalProperties": false
              },
              "recorder": {
                "description": "A reference from one resource to another.",
                "additionalProperties": false
              },
              "reasonCode": {
                "description": "The reason or the indication for ordering or not ordering the medication.",
                "type": "array"
              },
              "reasonReference": {
                "description": "Condition or observation that supports why the medication was ordered.",
                "type": "array"
              },
              "instantiatesCanonical": {
                "description": "The URL pointing to a protocol, guideline, orderset, or other definition that is adhered to in whole or in part by this MedicationRequest.",
                "type": "array"
              },
              "_instantiatesCanonical": {
                "description": "Extensions for instantiatesCanonical",
                "type": "array"
              },
              "instantiatesUri": {
                "description": "The URL pointing to an externally maintained protocol, guideline, orderset or other definition that is adhered to in whole or in part by this MedicationRequest.",
                "type": "array"
              },
              "_instantiatesUri": {
                "description": "Extensions for instantiatesUri",
                "type": "array"
              },
              "basedOn": {
                "description": "A plan or request that is fulfilled in whole or in part by this medication request.",
                "type": "array"
              },
              "groupIdentifier": {
                "description": "An identifier - identifies some entity uniquely and unambiguously. Typically this is used for business identifiers.",
                "additionalProperties": false
              },
              "courseOfTherapyType": {
                "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                "additionalProperties": false
              },
              "insurance": {
                "description": "Insurance plans, coverage extensions, pre-authorizations and/or pre-determinations that may be required for delivering the requested service.",
                "type": "array"
              },
              "note": {
                "description": "Extra information about the prescription that could not be conveyed by the other attributes.",
                "type": "array"
              },
              "dosageInstruction": {
                "description": "Indicates how the medication is to be used by the patient.",
                "type": "array"
              },
              "dispenseRequest": {
                "description": "Indicates the specific details for the dispense or medication supply part of a medication request (also known as a Medication Prescription or Medication Order).  Note that this information is not always sent with the order.  There may be in some settings (e.g. hospitals) institutional or system support for completing the dispense details in the pharmacy department.",
                "properties": {
                  "id": {
                    "pattern": "^[ \\r\\n\\t\\S]+$",
                    "type": "string",
                    "description": "A sequence of Unicode characters"
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "type": "array"
                  },
                  "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                    "type": "array"
                  },
                  "initialFill": {
                    "description": "Indicates the quantity or duration for the first dispense of the medication.",
                    "properties": {
                      "id": {
                        "pattern": "^[ \\r\\n\\t\\S]+$",
                        "type": "string",
                        "description": "A sequence of Unicode characters"
                      },
                      "extension": {
                        "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                        "type": "array"
                      },
                      "modifierExtension": {
                        "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                        "type": "array"
                      },
                      "quantity": {
                        "description": "A measured amount (or an amount that can potentially be measured). Note that measured amounts include amounts that are not precisely quantified, including amounts involving arbitrary units and floating currencies.",
                        "additionalProperties": false
                      },
                      "duration": {
                        "description": "The length of time that the first dispense is expected to last.",
                        "additionalProperties": false
                      }
                    },
                    "additionalProperties": false
                  },
                  "dispenseInterval": {
                    "description": "The minimum period of time that must occur between dispenses of the medication.",
                    "additionalProperties": false
                  },
                  "validityPeriod": {
                    "description": "A time period defined by a start and end date and optionally time.",
                    "additionalProperties": false
                  },
                  "numberOfRepeatsAllowed": {
                    "pattern": "^[0]|([1-9][0-9]*)$",
                    "type": "number",
                    "description": "An integer with a value that is not negative (e.g. >= 0)"
                  },
                  "_numberOfRepeatsAllowed": {
                    "description": "Base definition for all elements in a resource.",
                    "additionalProperties": false
                  },
                  "quantity": {
                    "description": "A measured amount (or an amount that can potentially be measured). Note that measured amounts include amounts that are not precisely quantified, including amounts involving arbitrary units and floating currencies.",
                    "additionalProperties": false
                  },
                  "expectedSupplyDuration": {
                    "description": "Identifies the period time over which the supplied product is expected to be used, or the length of time the dispense is expected to last.",
                    "additionalProperties": false
                  },
                  "performer": {
                    "description": "A reference from one resource to another.",
                    "additionalProperties": false
                  }
                },
                "additionalProperties": false
              },
              "substitution": {
                "description": "Indicates whether or not substitution can or should be part of the dispense. In some cases, substitution must happen, in other cases substitution must not happen. This block explains the prescriber's intent. If nothing is specified substitution may be done.",
                "properties": {
                  "id": {
                    "pattern": "^[ \\r\\n\\t\\S]+$",
                    "type": "string",
                    "description": "A sequence of Unicode characters"
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "type": "array"
                  },
                  "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                    "type": "array"
                  },
                  "allowedBoolean": {
                    "description": "True if the prescriber allows a different drug to be dispensed from what was prescribed.",
                    "pattern": "^true|false$",
                    "type": "boolean"
                  },
                  "_allowedBoolean": {
                    "description": "Base definition for all elements in a resource.",
                    "additionalProperties": false
                  },
                  "allowedCodeableConcept": {
                    "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                    "additionalProperties": false
                  },
                  "reason": {
                    "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                    "additionalProperties": false
                  }
                },
                "additionalProperties": false
              },
              "priorPrescription": {
                "description": "A reference from one resource to another.",
                "additionalProperties": false
              },
              "detectedIssue": {
                "description": "Indicates an actual or potential clinical issue with or between one or more active or proposed clinical actions for a patient; e.g. Drug-drug interaction, duplicate therapy, dosage alert etc.",
                "type": "array"
              },
              "eventHistory": {
                "description": "Links to Provenance records for past versions of this resource or fulfilling request or event resources that identify key state transitions or updates that are likely to be relevant to a user looking at the current version of the resource.",
                "type": "array"
              }
            },
            "additionalProperties": false,
            "required": [
              "subject",
              "resourceType"
            ]
          },
          {
            "description": "A record of a medication that is being consumed by a patient.   A MedicationStatement may indicate that the patient may be taking the medication now or has taken the medication in the past or will be taking the medication in the future.  The source of this information can be the patient, significant other (such as a family member or spouse), or a clinician.  A common scenario where this information is captured is during the history taking process during a patient visit or stay.   The medication information may come from sources such as the patient's memory, from a prescription bottle,  or from a list of medications the patient, clinician or other party maintains. \n\nThe primary difference between a medication statement and a medication administration is that the medication administration has complete administration information and is based on actual administration information from the person who administered the medication.  A medication statement is often, if not always, less specific.  There is no required date/time when the medication was administered, in fact we only know that a source has reported the patient is taking this medication, where details such as time, quantity, or rate or even medication product may be incomplete or missing or less precise.  As stated earlier, the medication statement information may come from the patient's memory, from a prescription bottle or from a list of medications the patient, clinician or other party maintains.  Medication administration is more formal and is not missing detailed information.",
            "properties": {
              "resourceType": {
                "description": "This is a MedicationStatement resource",
                "const": "MedicationStatement"
              },
              "id": {
                "description": "The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.",
                "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                "type": "string"
              },
              "meta": {
                "description": "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
                "additionalProperties": false
              },
              "implicitRules": {
                "pattern": "^\\S*$",
                "type": "string",
                "description": "String of characters used to identify a name or a resource"
              },
              "_implicitRules": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "language": {
                "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                "type": "string",
                "description": "A string which has at least one character and no leading or trailing whitespace and where there is no whitespace other than single spaces in the contents"
              },
              "_language": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "text": {
                "description": "A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it \"clinically safe\" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.",
                "additionalProperties": false
              },
              "contained": {
                "description": "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope.",
                "type": "array"
              },
              "extension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                "type": "array"
              },
              "modifierExtension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                "type": "array"
              },
              "identifier": {
                "description": "Identifiers associated with this Medication Statement that are defined by business processes and/or used to refer to it when a direct URL reference to the resource itself is not appropriate. They are business identifiers assigned to this resource by the performer or other systems and remain constant as the resource is updated and propagates from server to server.",
                "type": "array"
              },
              "basedOn": {
                "description": "A plan, proposal or order that is fulfilled in whole or in part by this event.",
                "type": "array"
              },
              "partOf": {
                "description": "A larger event of which this particular event is a component or step.",
                "type": "array"
              },
              "status": {
                "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                "type": "string",
                "description": "A string which has at least one character and no leading or trailing whitespace and where there is no whitespace other than single spaces in the contents"
              },
              "_status": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "statusReason": {
                "description": "Captures the reason for the current state of the MedicationStatement.",
                "type": "array"
              },
              "category": {
                "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                "additionalProperties": false
              },
              "medicationCodeableConcept": {
                "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                "additionalProperties": false
              },
              "medicationReference": {
                "description": "A reference from one resource to another.",
                "additionalProperties": false
              },
              "subject": {
                "description": "A reference from one resource to another.",
                "additionalProperties": false
              },
              "context": {
                "description": "A reference from one resource to another.",
                "additionalProperties": false
              },
              "effectiveDateTime": {
                "description": "The interval of time during which it is being asserted that the patient is/was/will be taking the medication (or was not taking, when the MedicationStatement.taken element is No).",
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                "type": "string"
              },
              "_effectiveDateTime": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "effectivePeriod": {
                "description": "A time period defined by a start and end date and optionally time.",
                "additionalProperties": false
              },
              "dateAsserted": {
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                "type": "string",
                "description": "A date, date-time or partial date (e.g. just year or year + month).  If hours and minutes are specified, a time zone SHALL be populated. The format is a union of the schema types gYear, gYearMonth, date and dateTime. Seconds must be provided due to schema type constraints but may be zero-filled and may be ignored.                 Dates SHALL be valid dates."
              },
              "_dateAsserted": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "informationSource": {
                "description": "A reference from one resource to another.",
                "additionalProperties": false
              },
              "derivedFrom": {
                "description": "Allows linking the MedicationStatement to the underlying MedicationRequest, or to other information that supports or is used to derive the MedicationStatement.",
                "type": "array"
              },
              "reasonCode": {
                "description": "A reason for why the medication is being/was taken.",
                "type": "array"
              },
              "reasonReference": {
                "description": "Condition or observation that supports why the medication is being/was taken.",
                "type": "array"
              },
              "note": {
                "description": "Provides extra information about the medication statement that is not conveyed by the other attributes.",
                "type": "array"
              },
              "dosage": {
                "description": "Indicates how the medication is/was or should be taken by the patient.",
                "type": "array"
              }
            },
            "additionalProperties": false,
            "required": [
              "subject",
              "resourceType"
            ]
          },
          {
            "description": "Detailed definition of a medicinal product, typically for uses other than direct patient care (e.g. regulatory use).",
            "properties": {
              "resourceType": {
                "description": "This is a MedicinalProduct resource",
                "const": "MedicinalProduct"
              },
              "id": {
                "description": "The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.",
                "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                "type": "string"
              },
              "meta": {
                "description": "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
                "additionalProperties": false
              },
              "implicitRules": {
                "pattern": "^\\S*$",
                "type": "string",
                "description": "String of characters used to identify a name or a resource"
              },
              "_implicitRules": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "language": {
                "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                "type": "string",
                "description": "A string which has at least one character and no leading or trailing whitespace and where there is no whitespace other than single spaces in the contents"
              },
              "_language": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "text": {
                "description": "A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it \"clinically safe\" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.",
                "additionalProperties": false
              },
              "contained": {
                "description": "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope.",
                "type": "array"
              },
              "extension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                "type": "array"
              },
              "modifierExtension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                "type": "array"
              },
              "identifier": {
                "description": "Business identifier for this product. Could be an MPID.",
                "type": "array"
              },
              "type": {
                "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                "additionalProperties": false
              },
              "domain": {
                "description": "A reference to a code defined by a terminology system.",
                "additionalProperties": false
              },
              "combinedPharmaceuticalDoseForm": {
                "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                "additionalProperties": false
              },
              "legalStatusOfSupply": {
                "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                "additionalProperties": false
              },
              "additionalMonitoringIndicator": {
                "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                "additionalProperties": false
              },
              "specialMeasures": {
                "description": "Whether the Medicinal Product is subject to special measures for regulatory reasons.",
                "type": "array"
              },
              "_specialMeasures": {
                "description": "Extensions for specialMeasures",
                "type": "array"
              },
              "paediatricUseIndicator": {
                "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                "additionalProperties": false
              },
              "productClassification": {
                "description": "Allows the product to be classified by various systems.",
                "type": "array"
              },
              "marketingStatus": {
                "description": "Marketing status of the medicinal product, in contrast to marketing authorizaton.",
                "items": {
                  "description": "The marketing status describes the date when a medicinal product is actually put on the market or the date as of which it is no longer available.",
                  "properties": {
                    "id": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "type": "array"
                    },
                    "modifierExtension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                      "type": "array"
                    },
                    "country": {
                      "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                      "additionalProperties": false
                    },
                    "jurisdiction": {
                      "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                      "additionalProperties": false
                    },
                    "status": {
                      "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                      "additionalProperties": false
                    },
                    "dateRange": {
                      "description": "A time period defined by a start and end date and optionally time.",
                      "additionalProperties": false
                    },
                    "restoreDate": {
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                      "type": "string",
                      "description": "A date, date-time or partial date (e.g. just year or year + month).  If hours and minutes are specified, a time zone SHALL be populated. The format is a union of the schema types gYear, gYearMonth, date and dateTime. Seconds must be provided due to schema type constraints but may be zero-filled and may be ignored.                 Dates SHALL be valid dates."
                    },
                    "_restoreDate": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false,
                  "required": [
                    "country",
                    "dateRange",
                    "status"
                  ]
                },
                "type": "array"
              },
              "pharmaceuticalProduct": {
                "description": "Pharmaceutical aspects of product.",
                "type": "array"
              },
              "packagedMedicinalProduct": {
                "description": "Package representation for the product.",
                "type": "array"
              },
              "attachedDocument": {
                "description": "Supporting documentation, typically for regulatory submission.",
                "type": "array"
              },
              "masterFile": {
                "description": "A master file for to the medicinal product (e.g. Pharmacovigilance System Master File).",
                "type": "array"
              },
              "contact": {
                "description": "A product specific contact, person (in a role), or an organization.",
                "type": "array"
              },
              "clinicalTrial": {
                "description": "Clinical trials or studies that this product is involved in.",
                "type": "array"
              },
              "name": {
                "description": "The product's name, including full name and possibly coded parts.",
                "items": {
                  "description": "Detailed definition of a medicinal product, typically for uses other than direct patient care (e.g. regulatory use).",
                  "properties": {
                    "id": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "type": "array"
                    },
                    "modifierExtension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                      "type": "array"
                    },
                    "productName": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "_productName": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "namePart": {
                      "description": "Coding words or phrases of the name.",
                      "items": {
                        "description": "Detailed definition of a medicinal product, typically for uses other than direct patient care (e.g. regulatory use).",
                        "properties": {
                          "id": {
                            "pattern": "^[ \\r\\n\\t\\S]+$",
                            "type": "string",
                            "description": "A sequence of Unicode characters"
                          },
                          "extension": {
                            "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                            "type": "array"
                          },
                          "modifierExtension": {
                            "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                            "type": "array"
                          },
                          "part": {
                            "pattern": "^[ \\r\\n\\t\\S]+$",
                            "type": "string",
                            "description": "A sequence of Unicode characters"
                          },
                          "_part": {
                            "description": "Base definition for all elements in a resource.",
                            "additionalProperties": false
                          },
                          "type": {
                            "description": "A reference to a code defined by a terminology system.",
                            "additionalProperties": false
                          }
                        },
                        "additionalProperties": false,
                        "required": [
                          "type"
                        ]
                      },
                      "type": "array"
                    },
                    "countryLanguage": {
                      "description": "Country where the name applies.",
                      "items": {
                        "description": "Detailed definition of a medicinal product, typically for uses other than direct patient care (e.g. regulatory use).",
                        "properties": {
                          "id": {
                            "pattern": "^[ \\r\\n\\t\\S]+$",
                            "type": "string",
                            "description": "A sequence of Unicode characters"
                          },
                          "extension": {
                            "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                            "type": "array"
                          },
                          "modifierExtension": {
                            "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                            "type": "array"
                          },
                          "country": {
                            "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                            "additionalProperties": false
                          },
                          "jurisdiction": {
                            "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                            "additionalProperties": false
                          },
                          "language": {
                            "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                            "additionalProperties": false
                          }
                        },
                        "additionalProperties": false,
                        "required": [
                          "country",
                          "language"
                        ]
                      },
                      "type": "array"
                    }
                  },
                  "additionalProperties": false
                },
                "type": "array"
              },
              "crossReference": {
                "description": "Reference to another product, e.g. for linking authorised to investigational product.",
                "type": "array"
              },
              "manufacturingBusinessOperation": {
                "description": "An operation applied to the product, for manufacturing or adminsitrative purpose.",
                "items": {
                  "description": "Detailed definition of a medicinal product, typically for uses other than direct patient care (e.g. regulatory use).",
                  "properties": {
                    "id": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "type": "array"
                    },
                    "modifierExtension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                      "type": "array"
                    },
                    "operationType": {
                      "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                      "additionalProperties": false
                    },
                    "authorisationReferenceNumber": {
                      "description": "An identifier - identifies some entity uniquely and unambiguously. Typically this is used for business identifiers.",
                      "additionalProperties": false
                    },
                    "effectiveDate": {
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                      "type": "string",
                      "description": "A date, date-time or partial date (e.g. just year or year + month).  If hours and minutes are specified, a time zone SHALL be populated. The format is a union of the schema types gYear, gYearMonth, date and dateTime. Seconds must be provided due to schema type constraints but may be zero-filled and may be ignored.                 Dates SHALL be valid dates."
                    },
                    "_effectiveDate": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "confidentialityIndicator": {
                      "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                      "additionalProperties": false
                    },
                    "manufacturer": {
                      "description": "The manufacturer or establishment associated with the process.",
                      "type": "array"
                    },
                    "regulator": {
                      "description": "A reference from one resource to another.",
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                },
                "type": "array"
              },
              "specialDesignation": {
                "description": "Indicates if the medicinal product has an orphan designation for the treatment of a rare disease.",
                "items": {
                  "description": "Detailed definition of a medicinal product, typically for uses other than direct patient care (e.g. regulatory use).",
                  "properties": {
                    "id": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "type": "array"
                    },
                    "modifierExtension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                      "type": "array"
                    },
                    "identifier": {
                      "description": "Identifier for the designation, or procedure number.",
                      "type": "array"
                    },
                    "type": {
                      "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                      "additionalProperties": false
                    },
                    "intendedUse": {
                      "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                      "additionalProperties": false
                    },
                    "indicationCodeableConcept": {
                      "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                      "additionalProperties": false
                    },
                    "indicationReference": {
                      "description": "A reference from one resource to another.",
                      "additionalProperties": false
                    },
                    "status": {
                      "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                      "additionalProperties": false
                    },
                    "date": {
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                      "type": "string",
                      "description": "A date, date-time or partial date (e.g. just year or year + month).  If hours and minutes are specified, a time zone SHALL be populated. The format is a union of the schema types gYear, gYearMonth, date and dateTime. Seconds must be provided due to schema type constraints but may be zero-filled and may be ignored.                 Dates SHALL be valid dates."
                    },
                    "_date": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "species": {
                      "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                },
                "type": "array"
              }
            },
            "additionalProperties": false,
            "required": [
              "name",
              "resourceType"
            ]
          },
          {
            "description": "The regulatory authorization of a medicinal product.",
            "properties": {
              "resourceType": {
                "description": "This is a MedicinalProductAuthorization resource",
                "const": "MedicinalProductAuthorization"
              },
              "id": {
                "description": "The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.",
                "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                "type": "string"
              },
              "meta": {
                "description": "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
                "additionalProperties": false
              },
              "implicitRules": {
                "pattern": "^\\S*$",
                "type": "string",
                "description": "String of characters used to identify a name or a resource"
              },
              "_implicitRules": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "language": {
                "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                "type": "string",
                "description": "A string which has at least one character and no leading or trailing whitespace and where there is no whitespace other than single spaces in the contents"
              },
              "_language": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "text": {
                "description": "A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it \"clinically safe\" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.",
                "additionalProperties": false
              },
              "contained": {
                "description": "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope.",
                "type": "array"
              },
              "extension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                "type": "array"
              },
              "modifierExtension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                "type": "array"
              },
              "identifier": {
                "description": "Business identifier for the marketing authorization, as assigned by a regulator.",
                "type": "array"
              },
              "subject": {
                "description": "A reference from one resource to another.",
                "additionalProperties": false
              },
              "country": {
                "description": "The country in which the marketing authorization has been granted.",
                "type": "array"
              },
              "jurisdiction": {
                "description": "Jurisdiction within a country.",
                "type": "array"
              },
              "status": {
                "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                "additionalProperties": false
              },
              "statusDate": {
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                "type": "string",
                "description": "A date, date-time or partial date (e.g. just year or year + month).  If hours and minutes are specified, a time zone SHALL be populated. The format is a union of the schema types gYear, gYearMonth, date and dateTime. Seconds must be provided due to schema type constraints but may be zero-filled and may be ignored.                 Dates SHALL be valid dates."
              },
              "_statusDate": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "restoreDate": {
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                "type": "string",
                "description": "A date, date-time or partial date (e.g. just year or year + month).  If hours and minutes are specified, a time zone SHALL be populated. The format is a union of the schema types gYear, gYearMonth, date and dateTime. Seconds must be provided due to schema type constraints but may be zero-filled and may be ignored.                 Dates SHALL be valid dates."
              },
              "_restoreDate": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "validityPeriod": {
                "description": "A time period defined by a start and end date and optionally time.",
                "additionalProperties": false
              },
              "dataExclusivityPeriod": {
                "description": "A time period defined by a start and end date and optionally time.",
                "additionalProperties": false
              },
              "dateOfFirstAuthorization": {
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                "type": "string",
                "description": "A date, date-time or partial date (e.g. just year or year + month).  If hours and minutes are specified, a time zone SHALL be populated. The format is a union of the schema types gYear, gYearMonth, date and dateTime. Seconds must be provided due to schema type constraints but may be zero-filled and may be ignored.                 Dates SHALL be valid dates."
              },
              "_dateOfFirstAuthorization": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "internationalBirthDate": {
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                "type": "string",
                "description": "A date, date-time or partial date (e.g. just year or year + month).  If hours and minutes are specified, a time zone SHALL be populated. The format is a union of the schema types gYear, gYearMonth, date and dateTime. Seconds must be provided due to schema type constraints but may be zero-filled and may be ignored.                 Dates SHALL be valid dates."
              },
              "_internationalBirthDate": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "legalBasis": {
                "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                "additionalProperties": false
              },
              "jurisdictionalAuthorization": {
                "description": "Authorization in areas within a country.",
                "items": {
                  "description": "The regulatory authorization of a medicinal product.",
                  "properties": {
                    "id": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "type": "array"
                    },
                    "modifierExtension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                      "type": "array"
                    },
                    "identifier": {
                      "description": "The assigned number for the marketing authorization.",
                      "type": "array"
                    },
                    "country": {
                      "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                      "additionalProperties": false
                    },
                    "jurisdiction": {
                      "description": "Jurisdiction within a country.",
                      "type": "array"
                    },
                    "legalStatusOfSupply": {
                      "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                      "additionalProperties": false
                    },
                    "validityPeriod": {
                      "description": "A time period defined by a start and end date and optionally time.",
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                },
                "type": "array"
              },
              "holder": {
                "description": "A reference from one resource to another.",
                "additionalProperties": false
              },
              "regulator": {
                "description": "A reference from one resource to another.",
                "additionalProperties": false
              },
              "procedure": {
                "description": "The regulatory procedure for granting or amending a marketing authorization.",
                "properties": {
                  "id": {
                    "pattern": "^[ \\r\\n\\t\\S]+$",
                    "type": "string",
                    "description": "A sequence of Unicode characters"
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "type": "array"
                  },
                  "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                    "type": "array"
                  },
                  "identifier": {
                    "description": "An identifier - identifies some entity uniquely and unambiguously. Typically this is used for business identifiers.",
                    "additionalProperties": false
                  },
                  "type": {
                    "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                    "additionalProperties": false
                  },
                  "datePeriod": {
                    "description": "A time period defined by a start and end date and optionally time.",
                    "additionalProperties": false
                  },
                  "dateDateTime": {
                    "description": "Date of procedure.",
                    "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                    "type": "string"
                  },
                  "_dateDateTime": {
                    "description": "Base definition for all elements in a resource.",
                    "additionalProperties": false
                  },
                  "application": {
                    "description": "Applcations submitted to obtain a marketing authorization.",
                    "items": {
                      "description": "The regulatory authorization of a medicinal product.",
                      "additionalProperties": false,
                      "required": [
                        "type"
                      ]
                    },
                    "type": "array"
                  }
                },
                "additionalProperties": false
              }
            },
            "additionalProperties": false,
            "required": [
              "resourceType"
            ]
          },
          {
            "description": "The clinical particulars - indications, contraindications etc. of a medicinal product, including for regulatory purposes.",
            "properties": {
              "resourceType": {
                "description": "This is a MedicinalProductContraindication resource",
                "const": "MedicinalProductContraindication"
              },
              "id": {
                "description": "The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.",
                "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                "type": "string"
              },
              "meta": {
                "description": "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
                "additionalProperties": false
              },
              "implicitRules": {
                "pattern": "^\\S*$",
                "type": "string",
                "description": "String of characters used to identify a name or a resource"
              },
              "_implicitRules": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "language": {
                "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                "type": "string",
                "description": "A string which has at least one character and no leading or trailing whitespace and where there is no whitespace other than single spaces in the contents"
              },
              "_language": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "text": {
                "description": "A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it \"clinically safe\" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.",
                "additionalProperties": false
              },
              "contained": {
                "description": "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope.",
                "type": "array"
              },
              "extension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                "type": "array"
              },
              "modifierExtension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                "type": "array"
              },
              "subject": {
                "description": "The medication for which this is an indication.",
                "type": "array"
              },
              "disease": {
                "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                "additionalProperties": false
              },
              "diseaseStatus": {
                "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                "additionalProperties": false
              },
              "comorbidity": {
                "description": "A comorbidity (concurrent condition) or coinfection.",
                "type": "array"
              },
              "therapeuticIndication": {
                "description": "Information about the use of the medicinal product in relation to other therapies as part of the indication.",
                "type": "array"
              },
              "otherTherapy": {
                "description": "Information about the use of the medicinal product in relation to other therapies described as part of the indication.",
                "items": {
                  "description": "The clinical particulars - indications, contraindications etc. of a medicinal product, including for regulatory purposes.",
                  "properties": {
                    "id": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "type": "array"
                    },
                    "modifierExtension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                      "type": "array"
                    },
                    "therapyRelationshipType": {
                      "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                      "additionalProperties": false
                    },
                    "medicationCodeableConcept": {
                      "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                      "additionalProperties": false
                    },
                    "medicationReference": {
                      "description": "A reference from one resource to another.",
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false,
                  "required": [
                    "therapyRelationshipType"
                  ]
                },
                "type": "array"
              },
              "population": {
                "description": "The population group to which this applies.",
                "items": {
                  "description": "A populatioof people with some set of grouping criteria.",
                  "properties": {
                    "id": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "type": "array"
                    },
                    "modifierExtension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                      "type": "array"
                    },
                    "ageRange": {
                      "description": "The age of the specific population.",
                      "additionalProperties": false
                    },
                    "ageCodeableConcept": {
                      "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                      "additionalProperties": false
                    },
                    "gender": {
                      "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                      "additionalProperties": false
                    },
                    "race": {
                      "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                      "additionalProperties": false
                    },
                    "physiologicalCondition": {
                      "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                },
                "type": "array"
              }
            },
            "additionalProperties": false,
            "required": [
              "resourceType"
            ]
          },
          {
            "description": "Indication for the Medicinal Product.",
            "properties": {
              "resourceType": {
                "description": "This is a MedicinalProductIndication resource",
                "const": "MedicinalProductIndication"
              },
              "id": {
                "description": "The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.",
                "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                "type": "string"
              },
              "meta": {
                "description": "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
                "additionalProperties": false
              },
              "implicitRules": {
                "pattern": "^\\S*$",
                "type": "string",
                "description": "String of characters used to identify a name or a resource"
              },
              "_implicitRules": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "language": {
                "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                "type": "string",
                "description": "A string which has at least one character and no leading or trailing whitespace and where there is no whitespace other than single spaces in the contents"
              },
              "_language": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "text": {
                "description": "A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it \"clinically safe\" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.",
                "additionalProperties": false
              },
              "contained": {
                "description": "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope.",
                "type": "array"
              },
              "extension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                "type": "array"
              },
              "modifierExtension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                "type": "array"
              },
              "subject": {
                "description": "The medication for which this is an indication.",
                "type": "array"
              },
              "diseaseSymptomProcedure": {
                "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                "additionalProperties": false
              },
              "diseaseStatus": {
                "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                "additionalProperties": false
              },
              "comorbidity": {
                "description": "Comorbidity (concurrent condition) or co-infection as part of the indication.",
                "type": "array"
              },
              "intendedEffect": {
                "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                "additionalProperties": false
              },
              "duration": {
                "description": "A measured amount (or an amount that can potentially be measured). Note that measured amounts include amounts that are not precisely quantified, including amounts involving arbitrary units and floating currencies.",
                "additionalProperties": false
              },
              "otherTherapy": {
                "description": "Information about the use of the medicinal product in relation to other therapies described as part of the indication.",
                "items": {
                  "description": "Indication for the Medicinal Product.",
                  "properties": {
                    "id": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "type": "array"
                    },
                    "modifierExtension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                      "type": "array"
                    },
                    "therapyRelationshipType": {
                      "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                      "additionalProperties": false
                    },
                    "medicationCodeableConcept": {
                      "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                      "additionalProperties": false
                    },
                    "medicationReference": {
                      "description": "A reference from one resource to another.",
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false,
                  "required": [
                    "therapyRelationshipType"
                  ]
                },
                "type": "array"
              },
              "undesirableEffect": {
                "description": "Describe the undesirable effects of the medicinal product.",
                "type": "array"
              },
              "population": {
                "description": "The population group to which this applies.",
                "type": "array"
              }
            },
            "additionalProperties": false,
            "required": [
              "resourceType"
            ]
          },
          {
            "description": "An ingredient of a manufactured item or pharmaceutical product.",
            "properties": {
              "resourceType": {
                "description": "This is a MedicinalProductIngredient resource",
                "const": "MedicinalProductIngredient"
              },
              "id": {
                "description": "The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.",
                "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                "type": "string"
              },
              "meta": {
                "description": "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
                "additionalProperties": false
              },
              "implicitRules": {
                "pattern": "^\\S*$",
                "type": "string",
                "description": "String of characters used to identify a name or a resource"
              },
              "_implicitRules": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "language": {
                "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                "type": "string",
                "description": "A string which has at least one character and no leading or trailing whitespace and where there is no whitespace other than single spaces in the contents"
              },
              "_language": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "text": {
                "description": "A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it \"clinically safe\" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.",
                "additionalProperties": false
              },
              "contained": {
                "description": "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope.",
                "type": "array"
              },
              "extension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                "type": "array"
              },
              "modifierExtension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                "type": "array"
              },
              "identifier": {
                "description": "An identifier - identifies some entity uniquely and unambiguously. Typically this is used for business identifiers.",
                "additionalProperties": false
              },
              "role": {
                "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                "additionalProperties": false
              },
              "allergenicIndicator": {
                "description": "If the ingredient is a known or suspected allergen.",
                "pattern": "^true|false$",
                "type": "boolean"
              },
              "_allergenicIndicator": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "manufacturer": {
                "description": "Manufacturer of this Ingredient.",
                "type": "array"
              },
              "specifiedSubstance": {
                "description": "A specified substance that comprises this ingredient.",
                "items": {
                  "description": "An ingredient of a manufactured item or pharmaceutical product.",
                  "properties": {
                    "id": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "type": "array"
                    },
                    "modifierExtension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                      "type": "array"
                    },
                    "code": {
                      "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                      "additionalProperties": false
                    },
                    "group": {
                      "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                      "additionalProperties": false
                    },
                    "confidentiality": {
                      "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                      "additionalProperties": false
                    },
                    "strength": {
                      "description": "Quantity of the substance or specified substance present in the manufactured item or pharmaceutical product.",
                      "items": {
                        "description": "An ingredient of a manufactured item or pharmaceutical product.",
                        "properties": {
                          "id": {
                            "pattern": "^[ \\r\\n\\t\\S]+$",
                            "type": "string",
                            "description": "A sequence of Unicode characters"
                          },
                          "extension": {
                            "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                            "type": "array"
                          },
                          "modifierExtension": {
                            "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                            "type": "array"
                          },
                          "presentation": {
                            "description": "The quantity of substance in the unit of presentation, or in the volume (or mass) of the single pharmaceutical product or manufactured item.",
                            "additionalProperties": false
                          },
                          "presentationLowLimit": {
                            "description": "A lower limit for the quantity of substance in the unit of presentation. For use when there is a range of strengths, this is the lower limit, with the presentation attribute becoming the upper limit.",
                            "additionalProperties": false
                          },
                          "concentration": {
                            "description": "The strength per unitary volume (or mass).",
                            "additionalProperties": false
                          },
                          "concentrationLowLimit": {
                            "description": "A lower limit for the strength per unitary volume (or mass), for when there is a range. The concentration attribute then becomes the upper limit.",
                            "additionalProperties": false
                          },
                          "measurementPoint": {
                            "pattern": "^[ \\r\\n\\t\\S]+$",
                            "type": "string",
                            "description": "A sequence of Unicode characters"
                          },
                          "_measurementPoint": {
                            "description": "Base definition for all elements in a resource.",
                            "additionalProperties": false
                          },
                          "country": {
                            "description": "The country or countries for which the strength range applies.",
                            "type": "array"
                          },
                          "referenceStrength": {
                            "description": "Strength expressed in terms of a reference substance.",
                            "items": {
                              "description": "An ingredient of a manufactured item or pharmaceutical product.",
                              "properties": {
                                "id": {
                                  "pattern": "^[ \\r\\n\\t\\S]+$",
                                  "type": "string",
                                  "description": "A sequence of Unicode characters"
                                },
                                "extension": {
                                  "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                                  "type": "array"
                                },
                                "modifierExtension": {
                                  "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                                  "type": "array"
                                },
                                "substance": {
                                  "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                                  "additionalProperties": false
                                },
                                "strength": {
                                  "description": "Strength expressed in terms of a reference substance.",
                                  "additionalProperties": false
                                },
                                "strengthLowLimit": {
                                  "description": "Strength expressed in terms of a reference substance.",
                                  "additionalProperties": false
                                },
                                "measurementPoint": {
                                  "pattern": "^[ \\r\\n\\t\\S]+$",
                                  "type": "string",
                                  "description": "A sequence of Unicode characters"
                                },
                                "_measurementPoint": {
                                  "description": "Base definition for all elements in a resource.",
                                  "additionalProperties": false
                                },
                                "country": {
                                  "description": "The country or countries for which the strength range applies.",
                                  "type": "array"
                                }
                              },
                              "additionalProperties": false,
                              "required": [
                                "strength"
                              ]
                            },
                            "type": "array"
                          }
                        },
                        "additionalProperties": false,
                        "required": [
                          "presentation"
                        ]
                      },
                      "type": "array"
                    }
                  },
                  "additionalProperties": false,
                  "required": [
                    "code",
                    "group"
                  ]
                },
                "type": "array"
              },
              "substance": {
                "description": "The ingredient substance.",
                "properties": {
                  "id": {
                    "pattern": "^[ \\r\\n\\t\\S]+$",
                    "type": "string",
                    "description": "A sequence of Unicode characters"
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "type": "array"
                  },
                  "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                    "type": "array"
                  },
                  "code": {
                    "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                    "additionalProperties": false
                  },
                  "strength": {
                    "description": "Quantity of the substance or specified substance present in the manufactured item or pharmaceutical product.",
                    "type": "array"
                  }
                },
                "additionalProperties": false,
                "required": [
                  "code"
                ]
              }
            },
            "additionalProperties": false,
            "required": [
              "role",
              "resourceType"
            ]
          },
          {
            "description": "The interactions of the medicinal product with other medicinal products, or other forms of interactions.",
            "properties": {
              "resourceType": {
                "description": "This is a MedicinalProductInteraction resource",
                "const": "MedicinalProductInteraction"
              },
              "id": {
                "description": "The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.",
                "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                "type": "string"
              },
              "meta": {
                "description": "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
                "additionalProperties": false
              },
              "implicitRules": {
                "pattern": "^\\S*$",
                "type": "string",
                "description": "String of characters used to identify a name or a resource"
              },
              "_implicitRules": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "language": {
                "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                "type": "string",
                "description": "A string which has at least one character and no leading or trailing whitespace and where there is no whitespace other than single spaces in the contents"
              },
              "_language": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "text": {
                "description": "A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it \"clinically safe\" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.",
                "additionalProperties": false
              },
              "contained": {
                "description": "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope.",
                "type": "array"
              },
              "extension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                "type": "array"
              },
              "modifierExtension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                "type": "array"
              },
              "subject": {
                "description": "The medication for which this is a described interaction.",
                "type": "array"
              },
              "description": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "_description": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "interactant": {
                "description": "The specific medication, food or laboratory test that interacts.",
                "items": {
                  "description": "The interactions of the medicinal product with other medicinal products, or other forms of interactions.",
                  "properties": {
                    "id": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "type": "array"
                    },
                    "modifierExtension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                      "type": "array"
                    },
                    "itemReference": {
                      "description": "A reference from one resource to another.",
                      "additionalProperties": false
                    },
                    "itemCodeableConcept": {
                      "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                },
                "type": "array"
              },
              "type": {
                "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                "additionalProperties": false
              },
              "effect": {
                "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                "additionalProperties": false
              },
              "incidence": {
                "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                "additionalProperties": false
              },
              "management": {
                "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                "additionalProperties": false
              }
            },
            "additionalProperties": false,
            "required": [
              "resourceType"
            ]
          },
          {
            "description": "The manufactured item as contained in the packaged medicinal product.",
            "properties": {
              "resourceType": {
                "description": "This is a MedicinalProductManufactured resource",
                "const": "MedicinalProductManufactured"
              },
              "id": {
                "description": "The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.",
                "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                "type": "string"
              },
              "meta": {
                "description": "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
                "additionalProperties": false
              },
              "implicitRules": {
                "pattern": "^\\S*$",
                "type": "string",
                "description": "String of characters used to identify a name or a resource"
              },
              "_implicitRules": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "language": {
                "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                "type": "string",
                "description": "A string which has at least one character and no leading or trailing whitespace and where there is no whitespace other than single spaces in the contents"
              },
              "_language": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "text": {
                "description": "A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it \"clinically safe\" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.",
                "additionalProperties": false
              },
              "contained": {
                "description": "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope.",
                "type": "array"
              },
              "extension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                "type": "array"
              },
              "modifierExtension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                "type": "array"
              },
              "manufacturedDoseForm": {
                "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                "additionalProperties": false
              },
              "unitOfPresentation": {
                "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                "additionalProperties": false
              },
              "quantity": {
                "description": "A measured amount (or an amount that can potentially be measured). Note that measured amounts include amounts that are not precisely quantified, including amounts involving arbitrary units and floating currencies.",
                "additionalProperties": false
              },
              "manufacturer": {
                "description": "Manufacturer of the item (Note that this should be named \"manufacturer\" but it currently causes technical issues).",
                "type": "array"
              },
              "ingredient": {
                "description": "Ingredient.",
                "type": "array"
              },
              "physicalCharacteristics": {
                "description": "Dimensions, color etc.",
                "additionalProperties": false
              },
              "otherCharacteristics": {
                "description": "Other codeable characteristics.",
                "type": "array"
              }
            },
            "additionalProperties": false,
            "required": [
              "quantity",
              "manufacturedDoseForm",
              "resourceType"
            ]
          },
          {
            "description": "A medicinal product in a container or package.",
            "properties": {
              "resourceType": {
                "description": "This is a MedicinalProductPackaged resource",
                "const": "MedicinalProductPackaged"
              },
              "id": {
                "description": "The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.",
                "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                "type": "string"
              },
              "meta": {
                "description": "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
                "additionalProperties": false
              },
              "implicitRules": {
                "pattern": "^\\S*$",
                "type": "string",
                "description": "String of characters used to identify a name or a resource"
              },
              "_implicitRules": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "language": {
                "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                "type": "string",
                "description": "A string which has at least one character and no leading or trailing whitespace and where there is no whitespace other than single spaces in the contents"
              },
              "_language": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "text": {
                "description": "A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it \"clinically safe\" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.",
                "additionalProperties": false
              },
              "contained": {
                "description": "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope.",
                "type": "array"
              },
              "extension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                "type": "array"
              },
              "modifierExtension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                "type": "array"
              },
              "identifier": {
                "description": "Unique identifier.",
                "type": "array"
              },
              "subject": {
                "description": "The product with this is a pack for.",
                "type": "array"
              },
              "description": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "_description": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "legalStatusOfSupply": {
                "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                "additionalProperties": false
              },
              "marketingStatus": {
                "description": "Marketing information.",
                "type": "array"
              },
              "marketingAuthorization": {
                "description": "A reference from one resource to another.",
                "additionalProperties": false
              },
              "manufacturer": {
                "description": "Manufacturer of this Package Item.",
                "type": "array"
              },
              "batchIdentifier": {
                "description": "Batch numbering.",
                "items": {
                  "description": "A medicinal product in a container or package.",
                  "properties": {
                    "id": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "type": "array"
                    },
                    "modifierExtension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                      "type": "array"
                    },
                    "outerPackaging": {
                      "description": "An identifier - identifies some entity uniquely and unambiguously. Typically this is used for business identifiers.",
                      "additionalProperties": false
                    },
                    "immediatePackaging": {
                      "description": "An identifier - identifies some entity uniquely and unambiguously. Typically this is used for business identifiers.",
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false,
                  "required": [
                    "outerPackaging"
                  ]
                },
                "type": "array"
              },
              "packageItem": {
                "description": "A packaging item, as a contained for medicine, possibly with other packaging items within.",
                "items": {
                  "description": "A medicinal product in a container or package.",
                  "properties": {
                    "id": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "type": "array"
                    },
                    "modifierExtension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                      "type": "array"
                    },
                    "identifier": {
                      "description": "Including possibly Data Carrier Identifier.",
                      "type": "array"
                    },
                    "type": {
                      "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                      "additionalProperties": false
                    },
                    "quantity": {
                      "description": "A measured amount (or an amount that can potentially be measured). Note that measured amounts include amounts that are not precisely quantified, including amounts involving arbitrary units and floating currencies.",
                      "additionalProperties": false
                    },
                    "material": {
                      "description": "Material type of the package item.",
                      "type": "array"
                    },
                    "alternateMaterial": {
                      "description": "A possible alternate material for the packaging.",
                      "type": "array"
                    },
                    "device": {
                      "description": "A device accompanying a medicinal product.",
                      "type": "array"
                    },
                    "manufacturedItem": {
                      "description": "The manufactured item as contained in the packaged medicinal product.",
                      "type": "array"
                    },
                    "packageItem": {
                      "description": "Allows containers within containers.",
                      "type": "array"
                    },
                    "physicalCharacteristics": {
                      "description": "Dimensions, color etc.",
                      "additionalProperties": false
                    },
                    "otherCharacteristics": {
                      "description": "Other codeable characteristics.",
                      "type": "array"
                    },
                    "shelfLifeStorage": {
                      "description": "Shelf Life and storage information.",
                      "type": "array"
                    },
                    "manufacturer": {
                      "description": "Manufacturer of this Package Item.",
                      "type": "array"
                    }
                  },
                  "additionalProperties": false,
                  "required": [
                    "quantity",
                    "type"
                  ]
                },
                "type": "array"
              }
            },
            "additionalProperties": false,
            "required": [
              "packageItem",
              "resourceType"
            ]
          },
          {
            "description": "A pharmaceutical product described in terms of its composition and dose form.",
            "properties": {
              "resourceType": {
                "description": "This is a MedicinalProductPharmaceutical resource",
                "const": "MedicinalProductPharmaceutical"
              },
              "id": {
                "description": "The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.",
                "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                "type": "string"
              },
              "meta": {
                "description": "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
                "additionalProperties": false
              },
              "implicitRules": {
                "pattern": "^\\S*$",
                "type": "string",
                "description": "String of characters used to identify a name or a resource"
              },
              "_implicitRules": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "language": {
                "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                "type": "string",
                "description": "A string which has at least one character and no leading or trailing whitespace and where there is no whitespace other than single spaces in the contents"
              },
              "_language": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "text": {
                "description": "A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it \"clinically safe\" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.",
                "additionalProperties": false
              },
              "contained": {
                "description": "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope.",
                "type": "array"
              },
              "extension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                "type": "array"
              },
              "modifierExtension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                "type": "array"
              },
              "identifier": {
                "description": "An identifier for the pharmaceutical medicinal product.",
                "type": "array"
              },
              "administrableDoseForm": {
                "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                "additionalProperties": false
              },
              "unitOfPresentation": {
                "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                "additionalProperties": false
              },
              "ingredient": {
                "description": "Ingredient.",
                "type": "array"
              },
              "device": {
                "description": "Accompanying device.",
                "type": "array"
              },
              "characteristics": {
                "description": "Characteristics e.g. a products onset of action.",
                "items": {
                  "description": "A pharmaceutical product described in terms of its composition and dose form.",
                  "properties": {
                    "id": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "type": "array"
                    },
                    "modifierExtension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                      "type": "array"
                    },
                    "code": {
                      "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                      "additionalProperties": false
                    },
                    "status": {
                      "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false,
                  "required": [
                    "code"
                  ]
                },
                "type": "array"
              },
              "routeOfAdministration": {
                "description": "The path by which the pharmaceutical product is taken into or makes contact with the body.",
                "items": {
                  "description": "A pharmaceutical product described in terms of its composition and dose form.",
                  "properties": {
                    "id": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "type": "array"
                    },
                    "modifierExtension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                      "type": "array"
                    },
                    "code": {
                      "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                      "additionalProperties": false
                    },
                    "firstDose": {
                      "description": "A measured amount (or an amount that can potentially be measured). Note that measured amounts include amounts that are not precisely quantified, including amounts involving arbitrary units and floating currencies.",
                      "additionalProperties": false
                    },
                    "maxSingleDose": {
                      "description": "A measured amount (or an amount that can potentially be measured). Note that measured amounts include amounts that are not precisely quantified, including amounts involving arbitrary units and floating currencies.",
                      "additionalProperties": false
                    },
                    "maxDosePerDay": {
                      "description": "A measured amount (or an amount that can potentially be measured). Note that measured amounts include amounts that are not precisely quantified, including amounts involving arbitrary units and floating currencies.",
                      "additionalProperties": false
                    },
                    "maxDosePerTreatmentPeriod": {
                      "description": "The maximum dose per treatment period that can be administered as per the protocol referenced in the clinical trial authorisation.",
                      "additionalProperties": false
                    },
                    "maxTreatmentPeriod": {
                      "description": "The maximum treatment period during which an Investigational Medicinal Product can be administered as per the protocol referenced in the clinical trial authorisation.",
                      "additionalProperties": false
                    },
                    "targetSpecies": {
                      "description": "A species for which this route applies.",
                      "items": {
                        "description": "A pharmaceutical product described in terms of its composition and dose form.",
                        "properties": {
                          "id": {
                            "pattern": "^[ \\r\\n\\t\\S]+$",
                            "type": "string",
                            "description": "A sequence of Unicode characters"
                          },
                          "extension": {
                            "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                            "type": "array"
                          },
                          "modifierExtension": {
                            "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                            "type": "array"
                          },
                          "code": {
                            "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                            "additionalProperties": false
                          },
                          "withdrawalPeriod": {
                            "description": "A species specific time during which consumption of animal product is not appropriate.",
                            "items": {
                              "description": "A pharmaceutical product described in terms of its composition and dose form.",
                              "properties": {
                                "id": {
                                  "pattern": "^[ \\r\\n\\t\\S]+$",
                                  "type": "string",
                                  "description": "A sequence of Unicode characters"
                                },
                                "extension": {
                                  "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                                  "type": "array"
                                },
                                "modifierExtension": {
                                  "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                                  "type": "array"
                                },
                                "tissue": {
                                  "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                                  "additionalProperties": false
                                },
                                "value": {
                                  "description": "A measured amount (or an amount that can potentially be measured). Note that measured amounts include amounts that are not precisely quantified, including amounts involving arbitrary units and floating currencies.",
                                  "additionalProperties": false
                                },
                                "supportingInformation": {
                                  "pattern": "^[ \\r\\n\\t\\S]+$",
                                  "type": "string",
                                  "description": "A sequence of Unicode characters"
                                },
                                "_supportingInformation": {
                                  "description": "Base definition for all elements in a resource.",
                                  "additionalProperties": false
                                }
                              },
                              "additionalProperties": false,
                              "required": [
                                "tissue",
                                "value"
                              ]
                            },
                            "type": "array"
                          }
                        },
                        "additionalProperties": false,
                        "required": [
                          "code"
                        ]
                      },
                      "type": "array"
                    }
                  },
                  "additionalProperties": false,
                  "required": [
                    "code"
                  ]
                },
                "type": "array"
              }
            },
            "additionalProperties": false,
            "required": [
              "administrableDoseForm",
              "routeOfAdministration",
              "resourceType"
            ]
          },
          {
            "description": "Describe the undesirable effects of the medicinal product.",
            "properties": {
              "resourceType": {
                "description": "This is a MedicinalProductUndesirableEffect resource",
                "const": "MedicinalProductUndesirableEffect"
              },
              "id": {
                "description": "The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.",
                "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                "type": "string"
              },
              "meta": {
                "description": "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
                "additionalProperties": false
              },
              "implicitRules": {
                "pattern": "^\\S*$",
                "type": "string",
                "description": "String of characters used to identify a name or a resource"
              },
              "_implicitRules": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "language": {
                "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                "type": "string",
                "description": "A string which has at least one character and no leading or trailing whitespace and where there is no whitespace other than single spaces in the contents"
              },
              "_language": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "text": {
                "description": "A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it \"clinically safe\" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.",
                "additionalProperties": false
              },
              "contained": {
                "description": "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope.",
                "type": "array"
              },
              "extension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                "type": "array"
              },
              "modifierExtension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                "type": "array"
              },
              "subject": {
                "description": "The medication for which this is an indication.",
                "type": "array"
              },
              "symptomConditionEffect": {
                "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                "additionalProperties": false
              },
              "classification": {
                "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                "additionalProperties": false
              },
              "frequencyOfOccurrence": {
                "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                "additionalProperties": false
              },
              "population": {
                "description": "The population group to which this applies.",
                "type": "array"
              }
            },
            "additionalProperties": false,
            "required": [
              "resourceType"
            ]
          },
          {
            "description": "Defines the characteristics of a message that can be shared between systems, including the type of event that initiates the message, the content to be transmitted and what response(s), if any, are permitted.",
            "properties": {
              "resourceType": {
                "description": "This is a MessageDefinition resource",
                "const": "MessageDefinition"
              },
              "id": {
                "description": "The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.",
                "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                "type": "string"
              },
              "meta": {
                "description": "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
                "additionalProperties": false
              },
              "implicitRules": {
                "pattern": "^\\S*$",
                "type": "string",
                "description": "String of characters used to identify a name or a resource"
              },
              "_implicitRules": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "language": {
                "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                "type": "string",
                "description": "A string which has at least one character and no leading or trailing whitespace and where there is no whitespace other than single spaces in the contents"
              },
              "_language": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "text": {
                "description": "A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it \"clinically safe\" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.",
                "additionalProperties": false
              },
              "contained": {
                "description": "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope.",
                "type": "array"
              },
              "extension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                "type": "array"
              },
              "modifierExtension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                "type": "array"
              },
              "url": {
                "pattern": "^\\S*$",
                "type": "string",
                "description": "String of characters used to identify a name or a resource"
              },
              "_url": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "identifier": {
                "description": "A formal identifier that is used to identify this message definition when it is represented in other formats, or referenced in a specification, model, design or an instance.",
                "type": "array"
              },
              "version": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "_version": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "name": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "_name": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "title": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "_title": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "replaces": {
                "description": "A MessageDefinition that is superseded by this definition.",
                "type": "array"
              },
              "status": {
                "description": "The status of this message definition. Enables tracking the life-cycle of the content.",
                "enum": [
                  "draft",
                  "active",
                  "retired",
                  "unknown"
                ]
              },
              "_status": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "experimental": {
                "description": "A Boolean value to indicate that this message definition is authored for testing purposes (or education/evaluation/marketing) and is not intended to be used for genuine usage.",
                "pattern": "^true|false$",
                "type": "boolean"
              },
              "_experimental": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "date": {
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                "type": "string",
                "description": "A date, date-time or partial date (e.g. just year or year + month).  If hours and minutes are specified, a time zone SHALL be populated. The format is a union of the schema types gYear, gYearMonth, date and dateTime. Seconds must be provided due to schema type constraints but may be zero-filled and may be ignored.                 Dates SHALL be valid dates."
              },
              "_date": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "publisher": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "_publisher": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "contact": {
                "description": "Contact details to assist a user in finding and communicating with the publisher.",
                "type": "array"
              },
              "description": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A string that may contain Github Flavored Markdown syntax for optional processing by a mark down presentation engine"
              },
              "_description": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "useContext": {
                "description": "The content was developed with a focus and intent of supporting the contexts that are listed. These contexts may be general categories (gender, age, ...) or may be references to specific programs (insurance plans, studies, ...) and may be used to assist with indexing and searching for appropriate message definition instances.",
                "type": "array"
              },
              "jurisdiction": {
                "description": "A legal or geographic region in which the message definition is intended to be used.",
                "type": "array"
              },
              "purpose": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A string that may contain Github Flavored Markdown syntax for optional processing by a mark down presentation engine"
              },
              "_purpose": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "copyright": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A string that may contain Github Flavored Markdown syntax for optional processing by a mark down presentation engine"
              },
              "_copyright": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "base": {
                "pattern": "^\\S*$",
                "type": "string",
                "description": "A URI that is a reference to a canonical URL on a FHIR resource"
              },
              "parent": {
                "description": "Identifies a protocol or workflow that this MessageDefinition represents a step in.",
                "type": "array"
              },
              "eventCoding": {
                "description": "A reference to a code defined by a terminology system.",
                "additionalProperties": false
              },
              "eventUri": {
                "description": "Event code or link to the EventDefinition.",
                "pattern": "^\\S*$",
                "type": "string"
              },
              "_eventUri": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "category": {
                "description": "The impact of the content of the message.",
                "enum": [
                  "consequence",
                  "currency",
                  "notification"
                ]
              },
              "_category": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "focus": {
                "description": "Identifies the resource (or resources) that are being addressed by the event.  For example, the Encounter for an admit message or two Account records for a merge.",
                "items": {
                  "description": "Defines the characteristics of a message that can be shared between systems, including the type of event that initiates the message, the content to be transmitted and what response(s), if any, are permitted.",
                  "properties": {
                    "id": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "type": "array"
                    },
                    "modifierExtension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                      "type": "array"
                    },
                    "code": {
                      "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                      "type": "string",
                      "description": "A string which has at least one character and no leading or trailing whitespace and where there is no whitespace other than single spaces in the contents"
                    },
                    "_code": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "profile": {
                      "pattern": "^\\S*$",
                      "type": "string",
                      "description": "A URI that is a reference to a canonical URL on a FHIR resource"
                    },
                    "min": {
                      "pattern": "^[0]|([1-9][0-9]*)$",
                      "type": "number",
                      "description": "An integer with a value that is not negative (e.g. >= 0)"
                    },
                    "_min": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "max": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "_max": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                },
                "type": "array"
              },
              "responseRequired": {
                "description": "Declare at a message definition level whether a response is required or only upon error or success, or never.",
                "enum": [
                  "always",
                  "on-error",
                  "never",
                  "on-success"
                ]
              },
              "_responseRequired": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "allowedResponse": {
                "description": "Indicates what types of messages may be sent as an application-level response to this message.",
                "items": {
                  "description": "Defines the characteristics of a message that can be shared between systems, including the type of event that initiates the message, the content to be transmitted and what response(s), if any, are permitted.",
                  "properties": {
                    "id": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "type": "array"
                    },
                    "modifierExtension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                      "type": "array"
                    },
                    "message": {
                      "pattern": "^\\S*$",
                      "type": "string",
                      "description": "A URI that is a reference to a canonical URL on a FHIR resource"
                    },
                    "situation": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A string that may contain Github Flavored Markdown syntax for optional processing by a mark down presentation engine"
                    },
                    "_situation": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false,
                  "required": [
                    "message"
                  ]
                },
                "type": "array"
              },
              "graph": {
                "description": "Canonical reference to a GraphDefinition. If a URL is provided, it is the canonical reference to a [[[GraphDefinition]]] that it controls what resources are to be added to the bundle when building the document. The GraphDefinition can also specify profiles that apply to the various resources.",
                "type": "array"
              }
            },
            "additionalProperties": false,
            "required": [
              "resourceType"
            ]
          },
          {
            "description": "The header for a message exchange that is either requesting or responding to an action.  The reference(s) that are the subject of the action as well as other information related to the action are typically transmitted in a bundle in which the MessageHeader resource instance is the first resource in the bundle.",
            "properties": {
              "resourceType": {
                "description": "This is a MessageHeader resource",
                "const": "MessageHeader"
              },
              "id": {
                "description": "The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.",
                "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                "type": "string"
              },
              "meta": {
                "description": "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
                "additionalProperties": false
              },
              "implicitRules": {
                "pattern": "^\\S*$",
                "type": "string",
                "description": "String of characters used to identify a name or a resource"
              },
              "_implicitRules": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "language": {
                "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                "type": "string",
                "description": "A string which has at least one character and no leading or trailing whitespace and where there is no whitespace other than single spaces in the contents"
              },
              "_language": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "text": {
                "description": "A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it \"clinically safe\" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.",
                "additionalProperties": false
              },
              "contained": {
                "description": "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope.",
                "type": "array"
              },
              "extension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                "type": "array"
              },
              "modifierExtension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                "type": "array"
              },
              "eventCoding": {
                "description": "A reference to a code defined by a terminology system.",
                "additionalProperties": false
              },
              "eventUri": {
                "description": "Code that identifies the event this message represents and connects it with its definition. Events defined as part of the FHIR specification have the system value \"http://terminology.hl7.org/CodeSystem/message-events\".  Alternatively uri to the EventDefinition.",
                "pattern": "^\\S*$",
                "type": "string"
              },
              "_eventUri": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "destination": {
                "description": "The destination application which the message is intended for.",
                "items": {
                  "description": "The header for a message exchange that is either requesting or responding to an action.  The reference(s) that are the subject of the action as well as other information related to the action are typically transmitted in a bundle in which the MessageHeader resource instance is the first resource in the bundle.",
                  "properties": {
                    "id": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "type": "array"
                    },
                    "modifierExtension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                      "type": "array"
                    },
                    "name": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "_name": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "target": {
                      "description": "A reference from one resource to another.",
                      "additionalProperties": false
                    },
                    "endpoint": {
                      "description": "Indicates where the message should be routed to.",
                      "pattern": "^\\S*$",
                      "type": "string"
                    },
                    "_endpoint": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "receiver": {
                      "description": "A reference from one resource to another.",
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                },
                "type": "array"
              },
              "sender": {
                "description": "A reference from one resource to another.",
                "additionalProperties": false
              },
              "enterer": {
                "description": "A reference from one resource to another.",
                "additionalProperties": false
              },
              "author": {
                "description": "A reference from one resource to another.",
                "additionalProperties": false
              },
              "source": {
                "description": "The source application from which this message originated.",
                "properties": {
                  "id": {
                    "pattern": "^[ \\r\\n\\t\\S]+$",
                    "type": "string",
                    "description": "A sequence of Unicode characters"
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "type": "array"
                  },
                  "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                    "type": "array"
                  },
                  "name": {
                    "pattern": "^[ \\r\\n\\t\\S]+$",
                    "type": "string",
                    "description": "A sequence of Unicode characters"
                  },
                  "_name": {
                    "description": "Base definition for all elements in a resource.",
                    "additionalProperties": false
                  },
                  "software": {
                    "pattern": "^[ \\r\\n\\t\\S]+$",
                    "type": "string",
                    "description": "A sequence of Unicode characters"
                  },
                  "_software": {
                    "description": "Base definition for all elements in a resource.",
                    "additionalProperties": false
                  },
                  "version": {
                    "pattern": "^[ \\r\\n\\t\\S]+$",
                    "type": "string",
                    "description": "A sequence of Unicode characters"
                  },
                  "_version": {
                    "description": "Base definition for all elements in a resource.",
                    "additionalProperties": false
                  },
                  "contact": {
                    "description": "Details for all kinds of technology mediated contact points for a person or organization, including telephone, email, etc.",
                    "additionalProperties": false
                  },
                  "endpoint": {
                    "description": "Identifies the routing target to send acknowledgements to.",
                    "pattern": "^\\S*$",
                    "type": "string"
                  },
                  "_endpoint": {
                    "description": "Base definition for all elements in a resource.",
                    "additionalProperties": false
                  }
                },
                "additionalProperties": false
              },
              "responsible": {
                "description": "A reference from one resource to another.",
                "additionalProperties": false
              },
              "reason": {
                "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                "additionalProperties": false
              },
              "response": {
                "description": "Information about the message that this message is a response to.  Only present if this message is a response.",
                "properties": {
                  "id": {
                    "pattern": "^[ \\r\\n\\t\\S]+$",
                    "type": "string",
                    "description": "A sequence of Unicode characters"
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "type": "array"
                  },
                  "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                    "type": "array"
                  },
                  "identifier": {
                    "description": "The MessageHeader.id of the message to which this message is a response.",
                    "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                    "type": "string"
                  },
                  "_identifier": {
                    "description": "Base definition for all elements in a resource.",
                    "additionalProperties": false
                  },
                  "code": {
                    "description": "Code that identifies the type of response to the message - whether it was successful or not, and whether it should be resent or not.",
                    "enum": [
                      "ok",
                      "transient-error",
                      "fatal-error"
                    ]
                  },
                  "_code": {
                    "description": "Base definition for all elements in a resource.",
                    "additionalProperties": false
                  },
                  "details": {
                    "description": "A reference from one resource to another.",
                    "additionalProperties": false
                  }
                },
                "additionalProperties": false
              },
              "focus": {
                "description": "The actual data of the message - a reference to the root/focus class of the event.",
                "type": "array"
              },
              "definition": {
                "pattern": "^\\S*$",
                "type": "string",
                "description": "A URI that is a reference to a canonical URL on a FHIR resource"
              }
            },
            "additionalProperties": false,
            "required": [
              "source",
              "resourceType"
            ]
          },
          {
            "description": "Raw data describing a biological sequence.",
            "properties": {
              "resourceType": {
                "description": "This is a MolecularSequence resource",
                "const": "MolecularSequence"
              },
              "id": {
                "description": "The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.",
                "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                "type": "string"
              },
              "meta": {
                "description": "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
                "additionalProperties": false
              },
              "implicitRules": {
                "pattern": "^\\S*$",
                "type": "string",
                "description": "String of characters used to identify a name or a resource"
              },
              "_implicitRules": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "language": {
                "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                "type": "string",
                "description": "A string which has at least one character and no leading or trailing whitespace and where there is no whitespace other than single spaces in the contents"
              },
              "_language": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "text": {
                "description": "A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it \"clinically safe\" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.",
                "additionalProperties": false
              },
              "contained": {
                "description": "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope.",
                "type": "array"
              },
              "extension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                "type": "array"
              },
              "modifierExtension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                "type": "array"
              },
              "identifier": {
                "description": "A unique identifier for this particular sequence instance. This is a FHIR-defined id.",
                "type": "array"
              },
              "type": {
                "description": "Amino Acid Sequence/ DNA Sequence / RNA Sequence.",
                "enum": [
                  "aa",
                  "dna",
                  "rna"
                ]
              },
              "_type": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "coordinateSystem": {
                "description": "Whether the sequence is numbered starting at 0 (0-based numbering or coordinates, inclusive start, exclusive end) or starting at 1 (1-based numbering, inclusive start and inclusive end).",
                "pattern": "^-?([0]|([1-9][0-9]*))$",
                "type": "number"
              },
              "_coordinateSystem": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "patient": {
                "description": "A reference from one resource to another.",
                "additionalProperties": false
              },
              "specimen": {
                "description": "A reference from one resource to another.",
                "additionalProperties": false
              },
              "device": {
                "description": "A reference from one resource to another.",
                "additionalProperties": false
              },
              "performer": {
                "description": "A reference from one resource to another.",
                "additionalProperties": false
              },
              "quantity": {
                "description": "A measured amount (or an amount that can potentially be measured). Note that measured amounts include amounts that are not precisely quantified, including amounts involving arbitrary units and floating currencies.",
                "additionalProperties": false
              },
              "referenceSeq": {
                "description": "A sequence that is used as a reference to describe variants that are present in a sequence analyzed.",
                "properties": {
                  "id": {
                    "pattern": "^[ \\r\\n\\t\\S]+$",
                    "type": "string",
                    "description": "A sequence of Unicode characters"
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "type": "array"
                  },
                  "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                    "type": "array"
                  },
                  "chromosome": {
                    "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                    "additionalProperties": false
                  },
                  "genomeBuild": {
                    "pattern": "^[ \\r\\n\\t\\S]+$",
                    "type": "string",
                    "description": "A sequence of Unicode characters"
                  },
                  "_genomeBuild": {
                    "description": "Base definition for all elements in a resource.",
                    "additionalProperties": false
                  },
                  "orientation": {
                    "description": "A relative reference to a DNA strand based on gene orientation. The strand that contains the open reading frame of the gene is the \"sense\" strand, and the opposite complementary strand is the \"antisense\" strand.",
                    "enum": [
                      "sense",
                      "antisense"
                    ]
                  },
                  "_orientation": {
                    "description": "Base definition for all elements in a resource.",
                    "additionalProperties": false
                  },
                  "referenceSeqId": {
                    "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                    "additionalProperties": false
                  },
                  "referenceSeqPointer": {
                    "description": "A reference from one resource to another.",
                    "additionalProperties": false
                  },
                  "referenceSeqString": {
                    "pattern": "^[ \\r\\n\\t\\S]+$",
                    "type": "string",
                    "description": "A sequence of Unicode characters"
                  },
                  "_referenceSeqString": {
                    "description": "Base definition for all elements in a resource.",
                    "additionalProperties": false
                  },
                  "strand": {
                    "description": "An absolute reference to a strand. The Watson strand is the strand whose 5'-end is on the short arm of the chromosome, and the Crick strand as the one whose 5'-end is on the long arm.",
                    "enum": [
                      "watson",
                      "crick"
                    ]
                  },
                  "_strand": {
                    "description": "Base definition for all elements in a resource.",
                    "additionalProperties": false
                  },
                  "windowStart": {
                    "description": "Start position of the window on the reference sequence. If the coordinate system is either 0-based or 1-based, then start position is inclusive.",
                    "pattern": "^-?([0]|([1-9][0-9]*))$",
                    "type": "number"
                  },
                  "_windowStart": {
                    "description": "Base definition for all elements in a resource.",
                    "additionalProperties": false
                  },
                  "windowEnd": {
                    "description": "End position of the window on the reference sequence. If the coordinate system is 0-based then end is exclusive and does not include the last position. If the coordinate system is 1-base, then end is inclusive and includes the last position.",
                    "pattern": "^-?([0]|([1-9][0-9]*))$",
                    "type": "number"
                  },
                  "_windowEnd": {
                    "description": "Base definition for all elements in a resource.",
                    "additionalProperties": false
                  }
                },
                "additionalProperties": false
              },
              "variant": {
                "description": "The definition of variant here originates from Sequence ontology ([variant_of](http://www.sequenceontology.org/browser/current_svn/term/variant_of)). This element can represent amino acid or nucleic sequence change(including insertion,deletion,SNP,etc.)  It can represent some complex mutation or segment variation with the assist of CIGAR string.",
                "items": {
                  "description": "Raw data describing a biological sequence.",
                  "properties": {
                    "id": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "type": "array"
                    },
                    "modifierExtension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                      "type": "array"
                    },
                    "start": {
                      "description": "Start position of the variant on the  reference sequence. If the coordinate system is either 0-based or 1-based, then start position is inclusive.",
                      "pattern": "^-?([0]|([1-9][0-9]*))$",
                      "type": "number"
                    },
                    "_start": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "end": {
                      "description": "End position of the variant on the reference sequence. If the coordinate system is 0-based then end is exclusive and does not include the last position. If the coordinate system is 1-base, then end is inclusive and includes the last position.",
                      "pattern": "^-?([0]|([1-9][0-9]*))$",
                      "type": "number"
                    },
                    "_end": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "observedAllele": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "_observedAllele": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "referenceAllele": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "_referenceAllele": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "cigar": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "_cigar": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "variantPointer": {
                      "description": "A reference from one resource to another.",
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                },
                "type": "array"
              },
              "observedSeq": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "_observedSeq": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "quality": {
                "description": "An experimental feature attribute that defines the quality of the feature in a quantitative way, such as a phred quality score ([SO:0001686](http://www.sequenceontology.org/browser/current_svn/term/SO:0001686)).",
                "items": {
                  "description": "Raw data describing a biological sequence.",
                  "properties": {
                    "id": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "type": "array"
                    },
                    "modifierExtension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                      "type": "array"
                    },
                    "type": {
                      "description": "INDEL / SNP / Undefined variant.",
                      "enum": [
                        "indel",
                        "snp",
                        "unknown"
                      ]
                    },
                    "_type": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "standardSequence": {
                      "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                      "additionalProperties": false
                    },
                    "start": {
                      "description": "Start position of the sequence. If the coordinate system is either 0-based or 1-based, then start position is inclusive.",
                      "pattern": "^-?([0]|([1-9][0-9]*))$",
                      "type": "number"
                    },
                    "_start": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "end": {
                      "description": "End position of the sequence. If the coordinate system is 0-based then end is exclusive and does not include the last position. If the coordinate system is 1-base, then end is inclusive and includes the last position.",
                      "pattern": "^-?([0]|([1-9][0-9]*))$",
                      "type": "number"
                    },
                    "_end": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "score": {
                      "description": "A measured amount (or an amount that can potentially be measured). Note that measured amounts include amounts that are not precisely quantified, including amounts involving arbitrary units and floating currencies.",
                      "additionalProperties": false
                    },
                    "method": {
                      "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                      "additionalProperties": false
                    },
                    "truthTP": {
                      "description": "True positives, from the perspective of the truth data, i.e. the number of sites in the Truth Call Set for which there are paths through the Query Call Set that are consistent with all of the alleles at this site, and for which there is an accurate genotype call for the event.",
                      "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                      "type": "number"
                    },
                    "_truthTP": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "queryTP": {
                      "description": "True positives, from the perspective of the query data, i.e. the number of sites in the Query Call Set for which there are paths through the Truth Call Set that are consistent with all of the alleles at this site, and for which there is an accurate genotype call for the event.",
                      "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                      "type": "number"
                    },
                    "_queryTP": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "truthFN": {
                      "description": "False negatives, i.e. the number of sites in the Truth Call Set for which there is no path through the Query Call Set that is consistent with all of the alleles at this site, or sites for which there is an inaccurate genotype call for the event. Sites with correct variant but incorrect genotype are counted here.",
                      "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                      "type": "number"
                    },
                    "_truthFN": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "queryFP": {
                      "description": "False positives, i.e. the number of sites in the Query Call Set for which there is no path through the Truth Call Set that is consistent with this site. Sites with correct variant but incorrect genotype are counted here.",
                      "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                      "type": "number"
                    },
                    "_queryFP": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "gtFP": {
                      "description": "The number of false positives where the non-REF alleles in the Truth and Query Call Sets match (i.e. cases where the truth is 1/1 and the query is 0/1 or similar).",
                      "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                      "type": "number"
                    },
                    "_gtFP": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "precision": {
                      "description": "QUERY.TP / (QUERY.TP + QUERY.FP).",
                      "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                      "type": "number"
                    },
                    "_precision": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "recall": {
                      "description": "TRUTH.TP / (TRUTH.TP + TRUTH.FN).",
                      "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                      "type": "number"
                    },
                    "_recall": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "fScore": {
                      "description": "Harmonic mean of Recall and Precision, computed as: 2 * precision * recall / (precision + recall).",
                      "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                      "type": "number"
                    },
                    "_fScore": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "roc": {
                      "description": "Receiver Operator Characteristic (ROC) Curve  to give sensitivity/specificity tradeoff.",
                      "properties": {
                        "id": {
                          "pattern": "^[ \\r\\n\\t\\S]+$",
                          "type": "string",
                          "description": "A sequence of Unicode characters"
                        },
                        "extension": {
                          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                          "type": "array"
                        },
                        "modifierExtension": {
                          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                          "type": "array"
                        },
                        "score": {
                          "description": "Invidual data point representing the GQ (genotype quality) score threshold.",
                          "items": {
                            "pattern": "^-?([0]|([1-9][0-9]*))$",
                            "type": "number",
                            "description": "A whole number"
                          },
                          "type": "array"
                        },
                        "_score": {
                          "description": "Extensions for score",
                          "type": "array"
                        },
                        "numTP": {
                          "description": "The number of true positives if the GQ score threshold was set to \"score\" field value.",
                          "type": "array"
                        },
                        "_numTP": {
                          "description": "Extensions for numTP",
                          "type": "array"
                        },
                        "numFP": {
                          "description": "The number of false positives if the GQ score threshold was set to \"score\" field value.",
                          "type": "array"
                        },
                        "_numFP": {
                          "description": "Extensions for numFP",
                          "type": "array"
                        },
                        "numFN": {
                          "description": "The number of false negatives if the GQ score threshold was set to \"score\" field value.",
                          "type": "array"
                        },
                        "_numFN": {
                          "description": "Extensions for numFN",
                          "type": "array"
                        },
                        "precision": {
                          "description": "Calculated precision if the GQ score threshold was set to \"score\" field value.",
                          "items": {
                            "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                            "type": "number",
                            "description": "A rational number with implicit precision"
                          },
                          "type": "array"
                        },
                        "_precision": {
                          "description": "Extensions for precision",
                          "type": "array"
                        },
                        "sensitivity": {
                          "description": "Calculated sensitivity if the GQ score threshold was set to \"score\" field value.",
                          "type": "array"
                        },
                        "_sensitivity": {
                          "description": "Extensions for sensitivity",
                          "type": "array"
                        },
                        "fMeasure": {
                          "description": "Calculated fScore if the GQ score threshold was set to \"score\" field value.",
                          "type": "array"
                        },
                        "_fMeasure": {
                          "description": "Extensions for fMeasure",
                          "type": "array"
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                },
                "type": "array"
              },
              "readCoverage": {
                "pattern": "^-?([0]|([1-9][0-9]*))$",
                "type": "number",
                "description": "A whole number"
              },
              "_readCoverage": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "repository": {
                "description": "Configurations of the external repository. The repository shall store target's observedSeq or records related with target's observedSeq.",
                "items": {
                  "description": "Raw data describing a biological sequence.",
                  "properties": {
                    "id": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "type": "array"
                    },
                    "modifierExtension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                      "type": "array"
                    },
                    "type": {
                      "description": "Click and see / RESTful API / Need login to see / RESTful API with authentication / Other ways to see resource.",
                      "enum": [
                        "directlink",
                        "openapi",
                        "login",
                        "oauth",
                        "other"
                      ]
                    },
                    "_type": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "url": {
                      "pattern": "^\\S*$",
                      "type": "string",
                      "description": "String of characters used to identify a name or a resource"
                    },
                    "_url": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "name": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "_name": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "datasetId": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "_datasetId": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "variantsetId": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "_variantsetId": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "readsetId": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "_readsetId": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                },
                "type": "array"
              },
              "pointer": {
                "description": "Pointer to next atomic sequence which at most contains one variant.",
                "type": "array"
              },
              "structureVariant": {
                "description": "Information about chromosome structure variation.",
                "items": {
                  "description": "Raw data describing a biological sequence.",
                  "properties": {
                    "id": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "type": "array"
                    },
                    "modifierExtension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                      "type": "array"
                    },
                    "variantType": {
                      "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                      "additionalProperties": false
                    },
                    "exact": {
                      "description": "Used to indicate if the outer and inner start-end values have the same meaning.",
                      "pattern": "^true|false$",
                      "type": "boolean"
                    },
                    "_exact": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "length": {
                      "pattern": "^-?([0]|([1-9][0-9]*))$",
                      "type": "number",
                      "description": "A whole number"
                    },
                    "_length": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "outer": {
                      "description": "Structural variant outer.",
                      "properties": {
                        "id": {
                          "pattern": "^[ \\r\\n\\t\\S]+$",
                          "type": "string",
                          "description": "A sequence of Unicode characters"
                        },
                        "extension": {
                          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                          "type": "array"
                        },
                        "modifierExtension": {
                          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                          "type": "array"
                        },
                        "start": {
                          "pattern": "^-?([0]|([1-9][0-9]*))$",
                          "type": "number",
                          "description": "A whole number"
                        },
                        "_start": {
                          "description": "Base definition for all elements in a resource.",
                          "additionalProperties": false
                        },
                        "end": {
                          "pattern": "^-?([0]|([1-9][0-9]*))$",
                          "type": "number",
                          "description": "A whole number"
                        },
                        "_end": {
                          "description": "Base definition for all elements in a resource.",
                          "additionalProperties": false
                        }
                      },
                      "additionalProperties": false
                    },
                    "inner": {
                      "description": "Structural variant inner.",
                      "properties": {
                        "id": {
                          "pattern": "^[ \\r\\n\\t\\S]+$",
                          "type": "string",
                          "description": "A sequence of Unicode characters"
                        },
                        "extension": {
                          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                          "type": "array"
                        },
                        "modifierExtension": {
                          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                          "type": "array"
                        },
                        "start": {
                          "pattern": "^-?([0]|([1-9][0-9]*))$",
                          "type": "number",
                          "description": "A whole number"
                        },
                        "_start": {
                          "description": "Base definition for all elements in a resource.",
                          "additionalProperties": false
                        },
                        "end": {
                          "pattern": "^-?([0]|([1-9][0-9]*))$",
                          "type": "number",
                          "description": "A whole number"
                        },
                        "_end": {
                          "description": "Base definition for all elements in a resource.",
                          "additionalProperties": false
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                },
                "type": "array"
              }
            },
            "additionalProperties": false,
            "required": [
              "resourceType"
            ]
          },
          {
            "description": "A curated namespace that issues unique symbols within that namespace for the identification of concepts, people, devices, etc.  Represents a \"System\" used within the Identifier and Coding data types.",
            "properties": {
              "resourceType": {
                "description": "This is a NamingSystem resource",
                "const": "NamingSystem"
              },
              "id": {
                "description": "The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.",
                "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                "type": "string"
              },
              "meta": {
                "description": "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
                "additionalProperties": false
              },
              "implicitRules": {
                "pattern": "^\\S*$",
                "type": "string",
                "description": "String of characters used to identify a name or a resource"
              },
              "_implicitRules": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "language": {
                "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                "type": "string",
                "description": "A string which has at least one character and no leading or trailing whitespace and where there is no whitespace other than single spaces in the contents"
              },
              "_language": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "text": {
                "description": "A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it \"clinically safe\" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.",
                "additionalProperties": false
              },
              "contained": {
                "description": "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope.",
                "type": "array"
              },
              "extension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                "type": "array"
              },
              "modifierExtension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                "type": "array"
              },
              "name": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "_name": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "status": {
                "description": "The status of this naming system. Enables tracking the life-cycle of the content.",
                "enum": [
                  "draft",
                  "active",
                  "retired",
                  "unknown"
                ]
              },
              "_status": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "kind": {
                "description": "Indicates the purpose for the naming system - what kinds of things does it make unique?",
                "enum": [
                  "codesystem",
                  "identifier",
                  "root"
                ]
              },
              "_kind": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "date": {
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                "type": "string",
                "description": "A date, date-time or partial date (e.g. just year or year + month).  If hours and minutes are specified, a time zone SHALL be populated. The format is a union of the schema types gYear, gYearMonth, date and dateTime. Seconds must be provided due to schema type constraints but may be zero-filled and may be ignored.                 Dates SHALL be valid dates."
              },
              "_date": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "publisher": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "_publisher": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "contact": {
                "description": "Contact details to assist a user in finding and communicating with the publisher.",
                "type": "array"
              },
              "responsible": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "_responsible": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "type": {
                "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                "additionalProperties": false
              },
              "description": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A string that may contain Github Flavored Markdown syntax for optional processing by a mark down presentation engine"
              },
              "_description": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "useContext": {
                "description": "The content was developed with a focus and intent of supporting the contexts that are listed. These contexts may be general categories (gender, age, ...) or may be references to specific programs (insurance plans, studies, ...) and may be used to assist with indexing and searching for appropriate naming system instances.",
                "type": "array"
              },
              "jurisdiction": {
                "description": "A legal or geographic region in which the naming system is intended to be used.",
                "type": "array"
              },
              "usage": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "_usage": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "uniqueId": {
                "description": "Indicates how the system may be identified when referenced in electronic exchange.",
                "items": {
                  "description": "A curated namespace that issues unique symbols within that namespace for the identification of concepts, people, devices, etc.  Represents a \"System\" used within the Identifier and Coding data types.",
                  "properties": {
                    "id": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "type": "array"
                    },
                    "modifierExtension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                      "type": "array"
                    },
                    "type": {
                      "description": "Identifies the unique identifier scheme used for this particular identifier.",
                      "enum": [
                        "oid",
                        "uuid",
                        "uri",
                        "other"
                      ]
                    },
                    "_type": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "value": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "_value": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "preferred": {
                      "description": "Indicates whether this identifier is the \"preferred\" identifier of this type.",
                      "pattern": "^true|false$",
                      "type": "boolean"
                    },
                    "_preferred": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "comment": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "_comment": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "period": {
                      "description": "A time period defined by a start and end date and optionally time.",
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                },
                "type": "array"
              }
            },
            "additionalProperties": false,
            "required": [
              "uniqueId",
              "resourceType"
            ]
          },
          {
            "description": "A request to supply a diet, formula feeding (enteral) or oral nutritional supplement to a patient/resident.",
            "properties": {
              "resourceType": {
                "description": "This is a NutritionOrder resource",
                "const": "NutritionOrder"
              },
              "id": {
                "description": "The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.",
                "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                "type": "string"
              },
              "meta": {
                "description": "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
                "additionalProperties": false
              },
              "implicitRules": {
                "pattern": "^\\S*$",
                "type": "string",
                "description": "String of characters used to identify a name or a resource"
              },
              "_implicitRules": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "language": {
                "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                "type": "string",
                "description": "A string which has at least one character and no leading or trailing whitespace and where there is no whitespace other than single spaces in the contents"
              },
              "_language": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "text": {
                "description": "A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it \"clinically safe\" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.",
                "additionalProperties": false
              },
              "contained": {
                "description": "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope.",
                "type": "array"
              },
              "extension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                "type": "array"
              },
              "modifierExtension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                "type": "array"
              },
              "identifier": {
                "description": "Identifiers assigned to this order by the order sender or by the order receiver.",
                "type": "array"
              },
              "instantiatesCanonical": {
                "description": "The URL pointing to a FHIR-defined protocol, guideline, orderset or other definition that is adhered to in whole or in part by this NutritionOrder.",
                "type": "array"
              },
              "instantiatesUri": {
                "description": "The URL pointing to an externally maintained protocol, guideline, orderset or other definition that is adhered to in whole or in part by this NutritionOrder.",
                "type": "array"
              },
              "_instantiatesUri": {
                "description": "Extensions for instantiatesUri",
                "type": "array"
              },
              "instantiates": {
                "description": "The URL pointing to a protocol, guideline, orderset or other definition that is adhered to in whole or in part by this NutritionOrder.",
                "type": "array"
              },
              "_instantiates": {
                "description": "Extensions for instantiates",
                "type": "array"
              },
              "status": {
                "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                "type": "string",
                "description": "A string which has at least one character and no leading or trailing whitespace and where there is no whitespace other than single spaces in the contents"
              },
              "_status": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "intent": {
                "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                "type": "string",
                "description": "A string which has at least one character and no leading or trailing whitespace and where there is no whitespace other than single spaces in the contents"
              },
              "_intent": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "patient": {
                "description": "A reference from one resource to another.",
                "additionalProperties": false
              },
              "encounter": {
                "description": "A reference from one resource to another.",
                "additionalProperties": false
              },
              "dateTime": {
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                "type": "string",
                "description": "A date, date-time or partial date (e.g. just year or year + month).  If hours and minutes are specified, a time zone SHALL be populated. The format is a union of the schema types gYear, gYearMonth, date and dateTime. Seconds must be provided due to schema type constraints but may be zero-filled and may be ignored.                 Dates SHALL be valid dates."
              },
              "_dateTime": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "orderer": {
                "description": "A reference from one resource to another.",
                "additionalProperties": false
              },
              "allergyIntolerance": {
                "description": "A link to a record of allergies or intolerances  which should be included in the nutrition order.",
                "type": "array"
              },
              "foodPreferenceModifier": {
                "description": "This modifier is used to convey order-specific modifiers about the type of food that should be given. These can be derived from patient allergies, intolerances, or preferences such as Halal, Vegan or Kosher. This modifier applies to the entire nutrition order inclusive of the oral diet, nutritional supplements and enteral formula feedings.",
                "type": "array"
              },
              "excludeFoodModifier": {
                "description": "This modifier is used to convey Order-specific modifier about the type of oral food or oral fluids that should not be given. These can be derived from patient allergies, intolerances, or preferences such as No Red Meat, No Soy or No Wheat or  Gluten-Free.  While it should not be necessary to repeat allergy or intolerance information captured in the referenced AllergyIntolerance resource in the excludeFoodModifier, this element may be used to convey additional specificity related to foods that should be eliminated from the patient’s diet for any reason.  This modifier applies to the entire nutrition order inclusive of the oral diet, nutritional supplements and enteral formula feedings.",
                "type": "array"
              },
              "oralDiet": {
                "description": "Diet given orally in contrast to enteral (tube) feeding.",
                "properties": {
                  "id": {
                    "pattern": "^[ \\r\\n\\t\\S]+$",
                    "type": "string",
                    "description": "A sequence of Unicode characters"
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "type": "array"
                  },
                  "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                    "type": "array"
                  },
                  "type": {
                    "description": "The kind of diet or dietary restriction such as fiber restricted diet or diabetic diet.",
                    "type": "array"
                  },
                  "schedule": {
                    "description": "The time period and frequency at which the diet should be given.  The diet should be given for the combination of all schedules if more than one schedule is present.",
                    "items": {
                      "description": "Specifies an event that may occur multiple times. Timing schedules are used to record when things are planned, expected or requested to occur. The most common usage is in dosage instructions for medications. They are also used when planning care of various kinds, and may be used for reporting the schedule to which past regular activities were carried out.",
                      "additionalProperties": false
                    },
                    "type": "array"
                  },
                  "nutrient": {
                    "description": "Class that defines the quantity and type of nutrient modifications (for example carbohydrate, fiber or sodium) required for the oral diet.",
                    "items": {
                      "description": "A request to supply a diet, formula feeding (enteral) or oral nutritional supplement to a patient/resident.",
                      "properties": {
                        "id": {
                          "pattern": "^[ \\r\\n\\t\\S]+$",
                          "type": "string",
                          "description": "A sequence of Unicode characters"
                        },
                        "extension": {
                          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                          "type": "array"
                        },
                        "modifierExtension": {
                          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                          "type": "array"
                        },
                        "modifier": {
                          "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                          "additionalProperties": false
                        },
                        "amount": {
                          "description": "A measured amount (or an amount that can potentially be measured). Note that measured amounts include amounts that are not precisely quantified, including amounts involving arbitrary units and floating currencies.",
                          "additionalProperties": false
                        }
                      },
                      "additionalProperties": false
                    },
                    "type": "array"
                  },
                  "texture": {
                    "description": "Class that describes any texture modifications required for the patient to safely consume various types of solid foods.",
                    "items": {
                      "description": "A request to supply a diet, formula feeding (enteral) or oral nutritional supplement to a patient/resident.",
                      "properties": {
                        "id": {
                          "pattern": "^[ \\r\\n\\t\\S]+$",
                          "type": "string",
                          "description": "A sequence of Unicode characters"
                        },
                        "extension": {
                          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                          "type": "array"
                        },
                        "modifierExtension": {
                          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                          "type": "array"
                        },
                        "modifier": {
                          "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                          "additionalProperties": false
                        },
                        "foodType": {
                          "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                          "additionalProperties": false
                        }
                      },
                      "additionalProperties": false
                    },
                    "type": "array"
                  },
                  "fluidConsistencyType": {
                    "description": "The required consistency (e.g. honey-thick, nectar-thick, thin, thickened.) of liquids or fluids served to the patient.",
                    "type": "array"
                  },
                  "instruction": {
                    "pattern": "^[ \\r\\n\\t\\S]+$",
                    "type": "string",
                    "description": "A sequence of Unicode characters"
                  },
                  "_instruction": {
                    "description": "Base definition for all elements in a resource.",
                    "additionalProperties": false
                  }
                },
                "additionalProperties": false
              },
              "supplement": {
                "description": "Oral nutritional products given in order to add further nutritional value to the patient's diet.",
                "items": {
                  "description": "A request to supply a diet, formula feeding (enteral) or oral nutritional supplement to a patient/resident.",
                  "properties": {
                    "id": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "type": "array"
                    },
                    "modifierExtension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                      "type": "array"
                    },
                    "type": {
                      "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                      "additionalProperties": false
                    },
                    "productName": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "_productName": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "schedule": {
                      "description": "The time period and frequency at which the supplement(s) should be given.  The supplement should be given for the combination of all schedules if more than one schedule is present.",
                      "type": "array"
                    },
                    "quantity": {
                      "description": "A measured amount (or an amount that can potentially be measured). Note that measured amounts include amounts that are not precisely quantified, including amounts involving arbitrary units and floating currencies.",
                      "additionalProperties": false
                    },
                    "instruction": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "_instruction": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                },
                "type": "array"
              },
              "enteralFormula": {
                "description": "Feeding provided through the gastrointestinal tract via a tube, catheter, or stoma that delivers nutrition distal to the oral cavity.",
                "properties": {
                  "id": {
                    "pattern": "^[ \\r\\n\\t\\S]+$",
                    "type": "string",
                    "description": "A sequence of Unicode characters"
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "type": "array"
                  },
                  "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                    "type": "array"
                  },
                  "baseFormulaType": {
                    "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                    "additionalProperties": false
                  },
                  "baseFormulaProductName": {
                    "pattern": "^[ \\r\\n\\t\\S]+$",
                    "type": "string",
                    "description": "A sequence of Unicode characters"
                  },
                  "_baseFormulaProductName": {
                    "description": "Base definition for all elements in a resource.",
                    "additionalProperties": false
                  },
                  "additiveType": {
                    "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                    "additionalProperties": false
                  },
                  "additiveProductName": {
                    "pattern": "^[ \\r\\n\\t\\S]+$",
                    "type": "string",
                    "description": "A sequence of Unicode characters"
                  },
                  "_additiveProductName": {
                    "description": "Base definition for all elements in a resource.",
                    "additionalProperties": false
                  },
                  "caloricDensity": {
                    "description": "A measured amount (or an amount that can potentially be measured). Note that measured amounts include amounts that are not precisely quantified, including amounts involving arbitrary units and floating currencies.",
                    "additionalProperties": false
                  },
                  "routeofAdministration": {
                    "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                    "additionalProperties": false
                  },
                  "administration": {
                    "description": "Formula administration instructions as structured data.  This repeating structure allows for changing the administration rate or volume over time for both bolus and continuous feeding.  An example of this would be an instruction to increase the rate of continuous feeding every 2 hours.",
                    "items": {
                      "description": "A request to supply a diet, formula feeding (enteral) or oral nutritional supplement to a patient/resident.",
                      "properties": {
                        "id": {
                          "pattern": "^[ \\r\\n\\t\\S]+$",
                          "type": "string",
                          "description": "A sequence of Unicode characters"
                        },
                        "extension": {
                          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                          "type": "array"
                        },
                        "modifierExtension": {
                          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                          "type": "array"
                        },
                        "schedule": {
                          "description": "Specifies an event that may occur multiple times. Timing schedules are used to record when things are planned, expected or requested to occur. The most common usage is in dosage instructions for medications. They are also used when planning care of various kinds, and may be used for reporting the schedule to which past regular activities were carried out.",
                          "additionalProperties": false
                        },
                        "quantity": {
                          "description": "A measured amount (or an amount that can potentially be measured). Note that measured amounts include amounts that are not precisely quantified, including amounts involving arbitrary units and floating currencies.",
                          "additionalProperties": false
                        },
                        "rateQuantity": {
                          "description": "A measured amount (or an amount that can potentially be measured). Note that measured amounts include amounts that are not precisely quantified, including amounts involving arbitrary units and floating currencies.",
                          "additionalProperties": false
                        },
                        "rateRatio": {
                          "description": "The rate of administration of formula via a feeding pump, e.g. 60 mL per hour, according to the specified schedule.",
                          "additionalProperties": false
                        }
                      },
                      "additionalProperties": false
                    },
                    "type": "array"
                  },
                  "maxVolumeToDeliver": {
                    "description": "A measured amount (or an amount that can potentially be measured). Note that measured amounts include amounts that are not precisely quantified, including amounts involving arbitrary units and floating currencies.",
                    "additionalProperties": false
                  },
                  "administrationInstruction": {
                    "pattern": "^[ \\r\\n\\t\\S]+$",
                    "type": "string",
                    "description": "A sequence of Unicode characters"
                  },
                  "_administrationInstruction": {
                    "description": "Base definition for all elements in a resource.",
                    "additionalProperties": false
                  }
                },
                "additionalProperties": false
              },
              "note": {
                "description": "Comments made about the {{title}} by the requester, performer, subject or other participants.",
                "type": "array"
              }
            },
            "additionalProperties": false,
            "required": [
              "patient",
              "resourceType"
            ]
          },
          {
            "description": "Measurements and simple assertions made about a patient, device or other subject.",
            "properties": {
              "resourceType": {
                "description": "This is a Observation resource",
                "const": "Observation"
              },
              "id": {
                "description": "The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.",
                "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                "type": "string"
              },
              "meta": {
                "description": "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
                "additionalProperties": false
              },
              "implicitRules": {
                "pattern": "^\\S*$",
                "type": "string",
                "description": "String of characters used to identify a name or a resource"
              },
              "_implicitRules": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "language": {
                "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                "type": "string",
                "description": "A string which has at least one character and no leading or trailing whitespace and where there is no whitespace other than single spaces in the contents"
              },
              "_language": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "text": {
                "description": "A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it \"clinically safe\" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.",
                "additionalProperties": false
              },
              "contained": {
                "description": "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope.",
                "type": "array"
              },
              "extension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                "type": "array"
              },
              "modifierExtension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                "type": "array"
              },
              "identifier": {
                "description": "A unique identifier assigned to this observation.",
                "type": "array"
              },
              "basedOn": {
                "description": "A plan, proposal or order that is fulfilled in whole or in part by this event.  For example, a MedicationRequest may require a patient to have laboratory test performed before  it is dispensed.",
                "type": "array"
              },
              "partOf": {
                "description": "A larger event of which this particular Observation is a component or step.  For example,  an observation as part of a procedure.",
                "type": "array"
              },
              "status": {
                "description": "The status of the result value.",
                "enum": [
                  "registered",
                  "preliminary",
                  "final",
                  "amended",
                  "corrected",
                  "cancelled",
                  "entered-in-error",
                  "unknown"
                ]
              },
              "_status": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "category": {
                "description": "A code that classifies the general type of observation being made.",
                "type": "array"
              },
              "code": {
                "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                "additionalProperties": false
              },
              "subject": {
                "description": "A reference from one resource to another.",
                "additionalProperties": false
              },
              "focus": {
                "description": "The actual focus of an observation when it is not the patient of record representing something or someone associated with the patient such as a spouse, parent, fetus, or donor. For example, fetus observations in a mother's record.  The focus of an observation could also be an existing condition,  an intervention, the subject's diet,  another observation of the subject,  or a body structure such as tumor or implanted device.   An example use case would be using the Observation resource to capture whether the mother is trained to change her child's tracheostomy tube. In this example, the child is the patient of record and the mother is the focus.",
                "type": "array"
              },
              "encounter": {
                "description": "A reference from one resource to another.",
                "additionalProperties": false
              },
              "effectiveDateTime": {
                "description": "The time or time-period the observed value is asserted as being true. For biological subjects - e.g. human patients - this is usually called the \"physiologically relevant time\". This is usually either the time of the procedure or of specimen collection, but very often the source of the date/time is not known, only the date/time itself.",
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                "type": "string"
              },
              "_effectiveDateTime": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "effectivePeriod": {
                "description": "A time period defined by a start and end date and optionally time.",
                "additionalProperties": false
              },
              "effectiveTiming": {
                "description": "Specifies an event that may occur multiple times. Timing schedules are used to record when things are planned, expected or requested to occur. The most common usage is in dosage instructions for medications. They are also used when planning care of various kinds, and may be used for reporting the schedule to which past regular activities were carried out.",
                "additionalProperties": false
              },
              "effectiveInstant": {
                "description": "The time or time-period the observed value is asserted as being true. For biological subjects - e.g. human patients - this is usually called the \"physiologically relevant time\". This is usually either the time of the procedure or of specimen collection, but very often the source of the date/time is not known, only the date/time itself.",
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
                "type": "string"
              },
              "_effectiveInstant": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "issued": {
                "description": "The date and time this version of the observation was made available to providers, typically after the results have been reviewed and verified.",
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
                "type": "string"
              },
              "_issued": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "performer": {
                "description": "Who was responsible for asserting the observed value as \"true\".",
                "type": "array"
              },
              "valueQuantity": {
                "description": "A measured amount (or an amount that can potentially be measured). Note that measured amounts include amounts that are not precisely quantified, including amounts involving arbitrary units and floating currencies.",
                "additionalProperties": false
              },
              "valueCodeableConcept": {
                "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                "additionalProperties": false
              },
              "valueString": {
                "description": "The information determined as a result of making the observation, if the information has a simple value.",
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string"
              },
              "_valueString": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "valueBoolean": {
                "description": "The information determined as a result of making the observation, if the information has a simple value.",
                "pattern": "^true|false$",
                "type": "boolean"
              },
              "_valueBoolean": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "valueInteger": {
                "description": "The information determined as a result of making the observation, if the information has a simple value.",
                "pattern": "^-?([0]|([1-9][0-9]*))$",
                "type": "number"
              },
              "_valueInteger": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "valueRange": {
                "description": "The information determined as a result of making the observation, if the information has a simple value.",
                "additionalProperties": false
              },
              "valueRatio": {
                "description": "The information determined as a result of making the observation, if the information has a simple value.",
                "additionalProperties": false
              },
              "valueSampledData": {
                "description": "The information determined as a result of making the observation, if the information has a simple value.",
                "additionalProperties": false
              },
              "valueTime": {
                "description": "The information determined as a result of making the observation, if the information has a simple value.",
                "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$",
                "type": "string"
              },
              "_valueTime": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "valueDateTime": {
                "description": "The information determined as a result of making the observation, if the information has a simple value.",
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                "type": "string"
              },
              "_valueDateTime": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "valuePeriod": {
                "description": "A time period defined by a start and end date and optionally time.",
                "additionalProperties": false
              },
              "dataAbsentReason": {
                "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                "additionalProperties": false
              },
              "interpretation": {
                "description": "A categorical assessment of an observation value.  For example, high, low, normal.",
                "type": "array"
              },
              "note": {
                "description": "Comments about the observation or the results.",
                "type": "array"
              },
              "bodySite": {
                "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                "additionalProperties": false
              },
              "method": {
                "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                "additionalProperties": false
              },
              "specimen": {
                "description": "A reference from one resource to another.",
                "additionalProperties": false
              },
              "device": {
                "description": "A reference from one resource to another.",
                "additionalProperties": false
              },
              "referenceRange": {
                "description": "Guidance on how to interpret the value by comparison to a normal or recommended range.  Multiple reference ranges are interpreted as an \"OR\".   In other words, to represent two distinct target populations, two `referenceRange` elements would be used.",
                "items": {
                  "description": "Measurements and simple assertions made about a patient, device or other subject.",
                  "properties": {
                    "id": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "type": "array"
                    },
                    "modifierExtension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                      "type": "array"
                    },
                    "low": {
                      "description": "A measured amount (or an amount that can potentially be measured). Note that measured amounts include amounts that are not precisely quantified, including amounts involving arbitrary units and floating currencies.",
                      "additionalProperties": false
                    },
                    "high": {
                      "description": "A measured amount (or an amount that can potentially be measured). Note that measured amounts include amounts that are not precisely quantified, including amounts involving arbitrary units and floating currencies.",
                      "additionalProperties": false
                    },
                    "type": {
                      "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                      "additionalProperties": false
                    },
                    "appliesTo": {
                      "description": "Codes to indicate the target population this reference range applies to.  For example, a reference range may be based on the normal population or a particular sex or race.  Multiple `appliesTo`  are interpreted as an \"AND\" of the target populations.  For example, to represent a target population of African American females, both a code of female and a code for African American would be used.",
                      "type": "array"
                    },
                    "age": {
                      "description": "The age at which this reference range is applicable. This is a neonatal age (e.g. number of weeks at term) if the meaning says so.",
                      "additionalProperties": false
                    },
                    "text": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "_text": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                },
                "type": "array"
              },
              "hasMember": {
                "description": "This observation is a group observation (e.g. a battery, a panel of tests, a set of vital sign measurements) that includes the target as a member of the group.",
                "type": "array"
              },
              "derivedFrom": {
                "description": "The target resource that represents a measurement from which this observation value is derived. For example, a calculated anion gap or a fetal measurement based on an ultrasound image.",
                "type": "array"
              },
              "component": {
                "description": "Some observations have multiple component observations.  These component observations are expressed as separate code value pairs that share the same attributes.  Examples include systolic and diastolic component observations for blood pressure measurement and multiple component observations for genetics observations.",
                "items": {
                  "description": "Measurements and simple assertions made about a patient, device or other subject.",
                  "properties": {
                    "id": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "type": "array"
                    },
                    "modifierExtension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                      "type": "array"
                    },
                    "code": {
                      "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                      "additionalProperties": false
                    },
                    "valueQuantity": {
                      "description": "A measured amount (or an amount that can potentially be measured). Note that measured amounts include amounts that are not precisely quantified, including amounts involving arbitrary units and floating currencies.",
                      "additionalProperties": false
                    },
                    "valueCodeableConcept": {
                      "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                      "additionalProperties": false
                    },
                    "valueString": {
                      "description": "The information determined as a result of making the observation, if the information has a simple value.",
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string"
                    },
                    "_valueString": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "valueBoolean": {
                      "description": "The information determined as a result of making the observation, if the information has a simple value.",
                      "pattern": "^true|false$",
                      "type": "boolean"
                    },
                    "_valueBoolean": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "valueInteger": {
                      "description": "The information determined as a result of making the observation, if the information has a simple value.",
                      "pattern": "^-?([0]|([1-9][0-9]*))$",
                      "type": "number"
                    },
                    "_valueInteger": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "valueRange": {
                      "description": "The information determined as a result of making the observation, if the information has a simple value.",
                      "additionalProperties": false
                    },
                    "valueRatio": {
                      "description": "The information determined as a result of making the observation, if the information has a simple value.",
                      "additionalProperties": false
                    },
                    "valueSampledData": {
                      "description": "The information determined as a result of making the observation, if the information has a simple value.",
                      "additionalProperties": false
                    },
                    "valueTime": {
                      "description": "The information determined as a result of making the observation, if the information has a simple value.",
                      "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$",
                      "type": "string"
                    },
                    "_valueTime": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "valueDateTime": {
                      "description": "The information determined as a result of making the observation, if the information has a simple value.",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                      "type": "string"
                    },
                    "_valueDateTime": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "valuePeriod": {
                      "description": "A time period defined by a start and end date and optionally time.",
                      "additionalProperties": false
                    },
                    "dataAbsentReason": {
                      "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                      "additionalProperties": false
                    },
                    "interpretation": {
                      "description": "A categorical assessment of an observation value.  For example, high, low, normal.",
                      "type": "array"
                    },
                    "referenceRange": {
                      "description": "Guidance on how to interpret the value by comparison to a normal or recommended range.",
                      "type": "array"
                    }
                  },
                  "additionalProperties": false,
                  "required": [
                    "code"
                  ]
                },
                "type": "array"
              }
            },
            "additionalProperties": false,
            "required": [
              "code",
              "resourceType"
            ]
          },
          {
            "description": "Set of definitional characteristics for a kind of observation or measurement produced or consumed by an orderable health care service.",
            "properties": {
              "resourceType": {
                "description": "This is a ObservationDefinition resource",
                "const": "ObservationDefinition"
              },
              "id": {
                "description": "The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.",
                "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                "type": "string"
              },
              "meta": {
                "description": "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
                "additionalProperties": false
              },
              "implicitRules": {
                "pattern": "^\\S*$",
                "type": "string",
                "description": "String of characters used to identify a name or a resource"
              },
              "_implicitRules": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "language": {
                "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                "type": "string",
                "description": "A string which has at least one character and no leading or trailing whitespace and where there is no whitespace other than single spaces in the contents"
              },
              "_language": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "text": {
                "description": "A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it \"clinically safe\" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.",
                "additionalProperties": false
              },
              "contained": {
                "description": "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope.",
                "type": "array"
              },
              "extension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                "type": "array"
              },
              "modifierExtension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                "type": "array"
              },
              "category": {
                "description": "A code that classifies the general type of observation.",
                "type": "array"
              },
              "code": {
                "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                "additionalProperties": false
              },
              "identifier": {
                "description": "A unique identifier assigned to this ObservationDefinition artifact.",
                "type": "array"
              },
              "permittedDataType": {
                "description": "The data types allowed for the value element of the instance observations conforming to this ObservationDefinition.",
                "items": {
                  "enum": [
                    "Quantity",
                    "CodeableConcept",
                    "string",
                    "boolean",
                    "integer",
                    "Range",
                    "Ratio",
                    "SampledData",
                    "time",
                    "dateTime",
                    "Period"
                  ]
                },
                "type": "array"
              },
              "_permittedDataType": {
                "description": "Extensions for permittedDataType",
                "type": "array"
              },
              "multipleResultsAllowed": {
                "description": "Multiple results allowed for observations conforming to this ObservationDefinition.",
                "pattern": "^true|false$",
                "type": "boolean"
              },
              "_multipleResultsAllowed": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "method": {
                "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                "additionalProperties": false
              },
              "preferredReportName": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "_preferredReportName": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "quantitativeDetails": {
                "description": "Characteristics for quantitative results of this observation.",
                "properties": {
                  "id": {
                    "pattern": "^[ \\r\\n\\t\\S]+$",
                    "type": "string",
                    "description": "A sequence of Unicode characters"
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "type": "array"
                  },
                  "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                    "type": "array"
                  },
                  "customaryUnit": {
                    "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                    "additionalProperties": false
                  },
                  "unit": {
                    "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                    "additionalProperties": false
                  },
                  "conversionFactor": {
                    "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                    "type": "number",
                    "description": "A rational number with implicit precision"
                  },
                  "_conversionFactor": {
                    "description": "Base definition for all elements in a resource.",
                    "additionalProperties": false
                  },
                  "decimalPrecision": {
                    "pattern": "^-?([0]|([1-9][0-9]*))$",
                    "type": "number",
                    "description": "A whole number"
                  },
                  "_decimalPrecision": {
                    "description": "Base definition for all elements in a resource.",
                    "additionalProperties": false
                  }
                },
                "additionalProperties": false
              },
              "qualifiedInterval": {
                "description": "Multiple  ranges of results qualified by different contexts for ordinal or continuous observations conforming to this ObservationDefinition.",
                "items": {
                  "description": "Set of definitional characteristics for a kind of observation or measurement produced or consumed by an orderable health care service.",
                  "properties": {
                    "id": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "type": "array"
                    },
                    "modifierExtension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                      "type": "array"
                    },
                    "category": {
                      "description": "The category of interval of values for continuous or ordinal observations conforming to this ObservationDefinition.",
                      "enum": [
                        "reference",
                        "critical",
                        "absolute"
                      ]
                    },
                    "_category": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "range": {
                      "description": "The low and high values determining the interval. There may be only one of the two.",
                      "additionalProperties": false
                    },
                    "context": {
                      "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                      "additionalProperties": false
                    },
                    "appliesTo": {
                      "description": "Codes to indicate the target population this reference range applies to.",
                      "type": "array"
                    },
                    "gender": {
                      "description": "Sex of the population the range applies to.",
                      "enum": [
                        "male",
                        "female",
                        "other",
                        "unknown"
                      ]
                    },
                    "_gender": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "age": {
                      "description": "The age at which this reference range is applicable. This is a neonatal age (e.g. number of weeks at term) if the meaning says so.",
                      "additionalProperties": false
                    },
                    "gestationalAge": {
                      "description": "The gestational age to which this reference range is applicable, in the context of pregnancy.",
                      "additionalProperties": false
                    },
                    "condition": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "_condition": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                },
                "type": "array"
              },
              "validCodedValueSet": {
                "description": "A reference from one resource to another.",
                "additionalProperties": false
              },
              "normalCodedValueSet": {
                "description": "A reference from one resource to another.",
                "additionalProperties": false
              },
              "abnormalCodedValueSet": {
                "description": "A reference from one resource to another.",
                "additionalProperties": false
              },
              "criticalCodedValueSet": {
                "description": "A reference from one resource to another.",
                "additionalProperties": false
              }
            },
            "additionalProperties": false,
            "required": [
              "code",
              "resourceType"
            ]
          },
          {
            "description": "A formal computable definition of an operation (on the RESTful interface) or a named query (using the search interaction).",
            "properties": {
              "resourceType": {
                "description": "This is a OperationDefinition resource",
                "const": "OperationDefinition"
              },
              "id": {
                "description": "The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.",
                "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                "type": "string"
              },
              "meta": {
                "description": "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
                "additionalProperties": false
              },
              "implicitRules": {
                "pattern": "^\\S*$",
                "type": "string",
                "description": "String of characters used to identify a name or a resource"
              },
              "_implicitRules": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "language": {
                "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                "type": "string",
                "description": "A string which has at least one character and no leading or trailing whitespace and where there is no whitespace other than single spaces in the contents"
              },
              "_language": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "text": {
                "description": "A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it \"clinically safe\" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.",
                "additionalProperties": false
              },
              "contained": {
                "description": "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope.",
                "type": "array"
              },
              "extension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                "type": "array"
              },
              "modifierExtension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                "type": "array"
              },
              "url": {
                "pattern": "^\\S*$",
                "type": "string",
                "description": "String of characters used to identify a name or a resource"
              },
              "_url": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "version": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "_version": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "name": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "_name": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "title": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "_title": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "status": {
                "description": "The status of this operation definition. Enables tracking the life-cycle of the content.",
                "enum": [
                  "draft",
                  "active",
                  "retired",
                  "unknown"
                ]
              },
              "_status": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "kind": {
                "description": "Whether this is an operation or a named query.",
                "enum": [
                  "operation",
                  "query"
                ]
              },
              "_kind": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "experimental": {
                "description": "A Boolean value to indicate that this operation definition is authored for testing purposes (or education/evaluation/marketing) and is not intended to be used for genuine usage.",
                "pattern": "^true|false$",
                "type": "boolean"
              },
              "_experimental": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "date": {
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                "type": "string",
                "description": "A date, date-time or partial date (e.g. just year or year + month).  If hours and minutes are specified, a time zone SHALL be populated. The format is a union of the schema types gYear, gYearMonth, date and dateTime. Seconds must be provided due to schema type constraints but may be zero-filled and may be ignored.                 Dates SHALL be valid dates."
              },
              "_date": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "publisher": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "_publisher": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "contact": {
                "description": "Contact details to assist a user in finding and communicating with the publisher.",
                "type": "array"
              },
              "description": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A string that may contain Github Flavored Markdown syntax for optional processing by a mark down presentation engine"
              },
              "_description": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "useContext": {
                "description": "The content was developed with a focus and intent of supporting the contexts that are listed. These contexts may be general categories (gender, age, ...) or may be references to specific programs (insurance plans, studies, ...) and may be used to assist with indexing and searching for appropriate operation definition instances.",
                "type": "array"
              },
              "jurisdiction": {
                "description": "A legal or geographic region in which the operation definition is intended to be used.",
                "type": "array"
              },
              "purpose": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A string that may contain Github Flavored Markdown syntax for optional processing by a mark down presentation engine"
              },
              "_purpose": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "affectsState": {
                "description": "Whether the operation affects state. Side effects such as producing audit trail entries do not count as 'affecting  state'.",
                "pattern": "^true|false$",
                "type": "boolean"
              },
              "_affectsState": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "code": {
                "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                "type": "string",
                "description": "A string which has at least one character and no leading or trailing whitespace and where there is no whitespace other than single spaces in the contents"
              },
              "_code": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "comment": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A string that may contain Github Flavored Markdown syntax for optional processing by a mark down presentation engine"
              },
              "_comment": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "base": {
                "pattern": "^\\S*$",
                "type": "string",
                "description": "A URI that is a reference to a canonical URL on a FHIR resource"
              },
              "resource": {
                "description": "The types on which this operation can be executed.",
                "type": "array"
              },
              "_resource": {
                "description": "Extensions for resource",
                "type": "array"
              },
              "system": {
                "description": "Indicates whether this operation or named query can be invoked at the system level (e.g. without needing to choose a resource type for the context).",
                "pattern": "^true|false$",
                "type": "boolean"
              },
              "_system": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "type": {
                "description": "Indicates whether this operation or named query can be invoked at the resource type level for any given resource type level (e.g. without needing to choose a specific resource id for the context).",
                "pattern": "^true|false$",
                "type": "boolean"
              },
              "_type": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "instance": {
                "description": "Indicates whether this operation can be invoked on a particular instance of one of the given types.",
                "pattern": "^true|false$",
                "type": "boolean"
              },
              "_instance": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "inputProfile": {
                "pattern": "^\\S*$",
                "type": "string",
                "description": "A URI that is a reference to a canonical URL on a FHIR resource"
              },
              "outputProfile": {
                "pattern": "^\\S*$",
                "type": "string",
                "description": "A URI that is a reference to a canonical URL on a FHIR resource"
              },
              "parameter": {
                "description": "The parameters for the operation/query.",
                "items": {
                  "description": "A formal computable definition of an operation (on the RESTful interface) or a named query (using the search interaction).",
                  "properties": {
                    "id": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "type": "array"
                    },
                    "modifierExtension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                      "type": "array"
                    },
                    "name": {
                      "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                      "type": "string",
                      "description": "A string which has at least one character and no leading or trailing whitespace and where there is no whitespace other than single spaces in the contents"
                    },
                    "_name": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "use": {
                      "description": "Whether this is an input or an output parameter.",
                      "enum": [
                        "in",
                        "out"
                      ]
                    },
                    "_use": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "min": {
                      "pattern": "^-?([0]|([1-9][0-9]*))$",
                      "type": "number",
                      "description": "A whole number"
                    },
                    "_min": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "max": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "_max": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "documentation": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "_documentation": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "type": {
                      "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                      "type": "string",
                      "description": "A string which has at least one character and no leading or trailing whitespace and where there is no whitespace other than single spaces in the contents"
                    },
                    "_type": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "targetProfile": {
                      "description": "Used when the type is \"Reference\" or \"canonical\", and identifies a profile structure or implementation Guide that applies to the target of the reference this parameter refers to. If any profiles are specified, then the content must conform to at least one of them. The URL can be a local reference - to a contained StructureDefinition, or a reference to another StructureDefinition or Implementation Guide by a canonical URL. When an implementation guide is specified, the target resource SHALL conform to at least one profile defined in the implementation guide.",
                      "type": "array"
                    },
                    "searchType": {
                      "description": "How the parameter is understood as a search parameter. This is only used if the parameter type is 'string'.",
                      "enum": [
                        "number",
                        "date",
                        "string",
                        "token",
                        "reference",
                        "composite",
                        "quantity",
                        "uri",
                        "special"
                      ]
                    },
                    "_searchType": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "binding": {
                      "description": "Binds to a value set if this parameter is coded (code, Coding, CodeableConcept).",
                      "properties": {
                        "id": {
                          "pattern": "^[ \\r\\n\\t\\S]+$",
                          "type": "string",
                          "description": "A sequence of Unicode characters"
                        },
                        "extension": {
                          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                          "type": "array"
                        },
                        "modifierExtension": {
                          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                          "type": "array"
                        },
                        "strength": {
                          "description": "Indicates the degree of conformance expectations associated with this binding - that is, the degree to which the provided value set must be adhered to in the instances.",
                          "enum": [
                            "required",
                            "extensible",
                            "preferred",
                            "example"
                          ]
                        },
                        "_strength": {
                          "description": "Base definition for all elements in a resource.",
                          "additionalProperties": false
                        },
                        "valueSet": {
                          "pattern": "^\\S*$",
                          "type": "string",
                          "description": "A URI that is a reference to a canonical URL on a FHIR resource"
                        }
                      },
                      "additionalProperties": false,
                      "required": [
                        "valueSet"
                      ]
                    },
                    "referencedFrom": {
                      "description": "Identifies other resource parameters within the operation invocation that are expected to resolve to this resource.",
                      "items": {
                        "description": "A formal computable definition of an operation (on the RESTful interface) or a named query (using the search interaction).",
                        "properties": {
                          "id": {
                            "pattern": "^[ \\r\\n\\t\\S]+$",
                            "type": "string",
                            "description": "A sequence of Unicode characters"
                          },
                          "extension": {
                            "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                            "type": "array"
                          },
                          "modifierExtension": {
                            "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                            "type": "array"
                          },
                          "source": {
                            "pattern": "^[ \\r\\n\\t\\S]+$",
                            "type": "string",
                            "description": "A sequence of Unicode characters"
                          },
                          "_source": {
                            "description": "Base definition for all elements in a resource.",
                            "additionalProperties": false
                          },
                          "sourceId": {
                            "pattern": "^[ \\r\\n\\t\\S]+$",
                            "type": "string",
                            "description": "A sequence of Unicode characters"
                          },
                          "_sourceId": {
                            "description": "Base definition for all elements in a resource.",
                            "additionalProperties": false
                          }
                        },
                        "additionalProperties": false
                      },
                      "type": "array"
                    },
                    "part": {
                      "description": "The parts of a nested Parameter.",
                      "type": "array"
                    }
                  },
                  "additionalProperties": false
                },
                "type": "array"
              },
              "overload": {
                "description": "Defines an appropriate combination of parameters to use when invoking this operation, to help code generators when generating overloaded parameter sets for this operation.",
                "items": {
                  "description": "A formal computable definition of an operation (on the RESTful interface) or a named query (using the search interaction).",
                  "properties": {
                    "id": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "type": "array"
                    },
                    "modifierExtension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                      "type": "array"
                    },
                    "parameterName": {
                      "description": "Name of parameter to include in overload.",
                      "type": "array"
                    },
                    "_parameterName": {
                      "description": "Extensions for parameterName",
                      "type": "array"
                    },
                    "comment": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "_comment": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                },
                "type": "array"
              }
            },
            "additionalProperties": false,
            "required": [
              "resourceType"
            ]
          },
          {
            "description": "A collection of error, warning, or information messages that result from a system action.",
            "properties": {
              "resourceType": {
                "description": "This is a OperationOutcome resource",
                "const": "OperationOutcome"
              },
              "id": {
                "description": "The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.",
                "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                "type": "string"
              },
              "meta": {
                "description": "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
                "additionalProperties": false
              },
              "implicitRules": {
                "pattern": "^\\S*$",
                "type": "string",
                "description": "String of characters used to identify a name or a resource"
              },
              "_implicitRules": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "language": {
                "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                "type": "string",
                "description": "A string which has at least one character and no leading or trailing whitespace and where there is no whitespace other than single spaces in the contents"
              },
              "_language": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "text": {
                "description": "A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it \"clinically safe\" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.",
                "additionalProperties": false
              },
              "contained": {
                "description": "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope.",
                "type": "array"
              },
              "extension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                "type": "array"
              },
              "modifierExtension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                "type": "array"
              },
              "issue": {
                "description": "An error, warning, or information message that results from a system action.",
                "items": {
                  "description": "A collection of error, warning, or information messages that result from a system action.",
                  "properties": {
                    "id": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "type": "array"
                    },
                    "modifierExtension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                      "type": "array"
                    },
                    "severity": {
                      "description": "Indicates whether the issue indicates a variation from successful processing.",
                      "enum": [
                        "fatal",
                        "error",
                        "warning",
                        "information"
                      ]
                    },
                    "_severity": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "code": {
                      "description": "Describes the type of the issue. The system that creates an OperationOutcome SHALL choose the most applicable code from the IssueType value set, and may additional provide its own code for the error in the details element.",
                      "enum": [
                        "invalid",
                        "structure",
                        "required",
                        "value",
                        "invariant",
                        "security",
                        "login",
                        "unknown",
                        "expired",
                        "forbidden",
                        "suppressed",
                        "processing",
                        "not-supported",
                        "duplicate",
                        "multiple-matches",
                        "not-found",
                        "deleted",
                        "too-long",
                        "code-invalid",
                        "extension",
                        "too-costly",
                        "business-rule",
                        "conflict",
                        "transient",
                        "lock-error",
                        "no-store",
                        "exception",
                        "timeout",
                        "incomplete",
                        "throttled",
                        "informational"
                      ]
                    },
                    "_code": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "details": {
                      "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                      "additionalProperties": false
                    },
                    "diagnostics": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "_diagnostics": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "location": {
                      "description": "This element is deprecated because it is XML specific. It is replaced by issue.expression, which is format independent, and simpler to parse. \n\nFor resource issues, this will be a simple XPath limited to element names, repetition indicators and the default child accessor that identifies one of the elements in the resource that caused this issue to be raised.  For HTTP errors, will be \"http.\" + the parameter name.",
                      "type": "array"
                    },
                    "_location": {
                      "description": "Extensions for location",
                      "type": "array"
                    },
                    "expression": {
                      "description": "A [simple subset of FHIRPath](fhirpath.html#simple) limited to element names, repetition indicators and the default child accessor that identifies one of the elements in the resource that caused this issue to be raised.",
                      "type": "array"
                    },
                    "_expression": {
                      "description": "Extensions for expression",
                      "type": "array"
                    }
                  },
                  "additionalProperties": false
                },
                "type": "array"
              }
            },
            "additionalProperties": false,
            "required": [
              "issue",
              "resourceType"
            ]
          },
          {
            "description": "A formally or informally recognized grouping of people or organizations formed for the purpose of achieving some form of collective action.  Includes companies, institutions, corporations, departments, community groups, healthcare practice groups, payer/insurer, etc.",
            "properties": {
              "resourceType": {
                "description": "This is a Organization resource",
                "const": "Organization"
              },
              "id": {
                "description": "The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.",
                "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                "type": "string"
              },
              "meta": {
                "description": "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
                "additionalProperties": false
              },
              "implicitRules": {
                "pattern": "^\\S*$",
                "type": "string",
                "description": "String of characters used to identify a name or a resource"
              },
              "_implicitRules": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "language": {
                "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                "type": "string",
                "description": "A string which has at least one character and no leading or trailing whitespace and where there is no whitespace other than single spaces in the contents"
              },
              "_language": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "text": {
                "description": "A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it \"clinically safe\" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.",
                "additionalProperties": false
              },
              "contained": {
                "description": "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope.",
                "type": "array"
              },
              "extension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                "type": "array"
              },
              "modifierExtension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                "type": "array"
              },
              "identifier": {
                "description": "Identifier for the organization that is used to identify the organization across multiple disparate systems.",
                "type": "array"
              },
              "active": {
                "description": "Whether the organization's record is still in active use.",
                "pattern": "^true|false$",
                "type": "boolean"
              },
              "_active": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "type": {
                "description": "The kind(s) of organization that this is.",
                "type": "array"
              },
              "name": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "_name": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "alias": {
                "description": "A list of alternate names that the organization is known as, or was known as in the past.",
                "type": "array"
              },
              "_alias": {
                "description": "Extensions for alias",
                "type": "array"
              },
              "telecom": {
                "description": "A contact detail for the organization.",
                "type": "array"
              },
              "address": {
                "description": "An address for the organization.",
                "items": {
                  "description": "An address expressed using postal conventions (as opposed to GPS or other location definition formats).  This data type may be used to convey addresses for use in delivering mail as well as for visiting locations which might not be valid for mail delivery.  There are a variety of postal address formats defined around the world.",
                  "additionalProperties": false
                },
                "type": "array"
              },
              "partOf": {
                "description": "A reference from one resource to another.",
                "additionalProperties": false
              },
              "contact": {
                "description": "Contact for the organization for a certain purpose.",
                "items": {
                  "description": "A formally or informally recognized grouping of people or organizations formed for the purpose of achieving some form of collective action.  Includes companies, institutions, corporations, departments, community groups, healthcare practice groups, payer/insurer, etc.",
                  "properties": {
                    "id": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "type": "array"
                    },
                    "modifierExtension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                      "type": "array"
                    },
                    "purpose": {
                      "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                      "additionalProperties": false
                    },
                    "name": {
                      "description": "A name associated with the contact.",
                      "additionalProperties": false
                    },
                    "telecom": {
                      "description": "A contact detail (e.g. a telephone number or an email address) by which the party may be contacted.",
                      "type": "array"
                    },
                    "address": {
                      "description": "An address expressed using postal conventions (as opposed to GPS or other location definition formats).  This data type may be used to convey addresses for use in delivering mail as well as for visiting locations which might not be valid for mail delivery.  There are a variety of postal address formats defined around the world.",
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                },
                "type": "array"
              },
              "endpoint": {
                "description": "Technical endpoints providing access to services operated for the organization.",
                "type": "array"
              }
            },
            "additionalProperties": false,
            "required": [
              "resourceType"
            ]
          },
          {
            "description": "Defines an affiliation/assotiation/relationship between 2 distinct oganizations, that is not a part-of relationship/sub-division relationship.",
            "properties": {
              "resourceType": {
                "description": "This is a OrganizationAffiliation resource",
                "const": "OrganizationAffiliation"
              },
              "id": {
                "description": "The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.",
                "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                "type": "string"
              },
              "meta": {
                "description": "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
                "additionalProperties": false
              },
              "implicitRules": {
                "pattern": "^\\S*$",
                "type": "string",
                "description": "String of characters used to identify a name or a resource"
              },
              "_implicitRules": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "language": {
                "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                "type": "string",
                "description": "A string which has at least one character and no leading or trailing whitespace and where there is no whitespace other than single spaces in the contents"
              },
              "_language": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "text": {
                "description": "A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it \"clinically safe\" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.",
                "additionalProperties": false
              },
              "contained": {
                "description": "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope.",
                "type": "array"
              },
              "extension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                "type": "array"
              },
              "modifierExtension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                "type": "array"
              },
              "identifier": {
                "description": "Business identifiers that are specific to this role.",
                "type": "array"
              },
              "active": {
                "description": "Whether this organization affiliation record is in active use.",
                "pattern": "^true|false$",
                "type": "boolean"
              },
              "_active": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "period": {
                "description": "A time period defined by a start and end date and optionally time.",
                "additionalProperties": false
              },
              "organization": {
                "description": "A reference from one resource to another.",
                "additionalProperties": false
              },
              "participatingOrganization": {
                "description": "A reference from one resource to another.",
                "additionalProperties": false
              },
              "network": {
                "description": "Health insurance provider network in which the participatingOrganization provides the role's services (if defined) at the indicated locations (if defined).",
                "type": "array"
              },
              "code": {
                "description": "Definition of the role the participatingOrganization plays in the association.",
                "type": "array"
              },
              "specialty": {
                "description": "Specific specialty of the participatingOrganization in the context of the role.",
                "type": "array"
              },
              "location": {
                "description": "The location(s) at which the role occurs.",
                "type": "array"
              },
              "healthcareService": {
                "description": "Healthcare services provided through the role.",
                "type": "array"
              },
              "telecom": {
                "description": "Contact details at the participatingOrganization relevant to this Affiliation.",
                "type": "array"
              },
              "endpoint": {
                "description": "Technical endpoints providing access to services operated for this role.",
                "type": "array"
              }
            },
            "additionalProperties": false,
            "required": [
              "resourceType"
            ]
          },
          {
            "description": "This resource is a non-persisted resource used to pass information into and back from an [operation](operations.html). It has no other use, and there is no RESTful endpoint associated with it.",
            "properties": {
              "resourceType": {
                "description": "This is a Parameters resource",
                "const": "Parameters"
              },
              "id": {
                "description": "The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.",
                "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                "type": "string"
              },
              "meta": {
                "description": "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
                "additionalProperties": false
              },
              "implicitRules": {
                "pattern": "^\\S*$",
                "type": "string",
                "description": "String of characters used to identify a name or a resource"
              },
              "_implicitRules": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "language": {
                "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                "type": "string",
                "description": "A string which has at least one character and no leading or trailing whitespace and where there is no whitespace other than single spaces in the contents"
              },
              "_language": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "parameter": {
                "description": "A parameter passed to or received from the operation.",
                "items": {
                  "description": "This resource is a non-persisted resource used to pass information into and back from an [operation](operations.html). It has no other use, and there is no RESTful endpoint associated with it.",
                  "properties": {
                    "id": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "type": "array"
                    },
                    "modifierExtension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                      "type": "array"
                    },
                    "name": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "_name": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "valueBase64Binary": {
                      "description": "If the parameter is a data type.",
                      "pattern": "^(\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+$",
                      "type": "string"
                    },
                    "_valueBase64Binary": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "valueBoolean": {
                      "description": "If the parameter is a data type.",
                      "pattern": "^true|false$",
                      "type": "boolean"
                    },
                    "_valueBoolean": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "valueCanonical": {
                      "description": "If the parameter is a data type.",
                      "pattern": "^\\S*$",
                      "type": "string"
                    },
                    "_valueCanonical": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "valueCode": {
                      "description": "If the parameter is a data type.",
                      "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                      "type": "string"
                    },
                    "_valueCode": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "valueDate": {
                      "description": "If the parameter is a data type.",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                      "type": "string"
                    },
                    "_valueDate": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "valueDateTime": {
                      "description": "If the parameter is a data type.",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                      "type": "string"
                    },
                    "_valueDateTime": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "valueDecimal": {
                      "description": "If the parameter is a data type.",
                      "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                      "type": "number"
                    },
                    "_valueDecimal": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "valueId": {
                      "description": "If the parameter is a data type.",
                      "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                      "type": "string"
                    },
                    "_valueId": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "valueInstant": {
                      "description": "If the parameter is a data type.",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
                      "type": "string"
                    },
                    "_valueInstant": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "valueInteger": {
                      "description": "If the parameter is a data type.",
                      "pattern": "^-?([0]|([1-9][0-9]*))$",
                      "type": "number"
                    },
                    "_valueInteger": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "valueMarkdown": {
                      "description": "If the parameter is a data type.",
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string"
                    },
                    "_valueMarkdown": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "valueOid": {
                      "description": "If the parameter is a data type.",
                      "pattern": "^urn:oid:[0-2](\\.(0|[1-9][0-9]*))+$",
                      "type": "string"
                    },
                    "_valueOid": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "valuePositiveInt": {
                      "description": "If the parameter is a data type.",
                      "pattern": "^[1-9][0-9]*$",
                      "type": "number"
                    },
                    "_valuePositiveInt": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "valueString": {
                      "description": "If the parameter is a data type.",
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string"
                    },
                    "_valueString": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "valueTime": {
                      "description": "If the parameter is a data type.",
                      "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$",
                      "type": "string"
                    },
                    "_valueTime": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "valueUnsignedInt": {
                      "description": "If the parameter is a data type.",
                      "pattern": "^[0]|([1-9][0-9]*)$",
                      "type": "number"
                    },
                    "_valueUnsignedInt": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "valueUri": {
                      "description": "If the parameter is a data type.",
                      "pattern": "^\\S*$",
                      "type": "string"
                    },
                    "_valueUri": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "valueUrl": {
                      "description": "If the parameter is a data type.",
                      "pattern": "^\\S*$",
                      "type": "string"
                    },
                    "_valueUrl": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "valueUuid": {
                      "description": "If the parameter is a data type.",
                      "pattern": "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                      "type": "string"
                    },
                    "_valueUuid": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "valueAddress": {
                      "description": "An address expressed using postal conventions (as opposed to GPS or other location definition formats).  This data type may be used to convey addresses for use in delivering mail as well as for visiting locations which might not be valid for mail delivery.  There are a variety of postal address formats defined around the world.",
                      "additionalProperties": false
                    },
                    "valueAge": {
                      "description": "If the parameter is a data type.",
                      "additionalProperties": false
                    },
                    "valueAnnotation": {
                      "description": "A  text note which also  contains information about who made the statement and when.",
                      "additionalProperties": false
                    },
                    "valueAttachment": {
                      "description": "For referring to data content defined in other formats.",
                      "additionalProperties": false
                    },
                    "valueCodeableConcept": {
                      "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                      "additionalProperties": false
                    },
                    "valueCoding": {
                      "description": "A reference to a code defined by a terminology system.",
                      "additionalProperties": false
                    },
                    "valueContactPoint": {
                      "description": "Details for all kinds of technology mediated contact points for a person or organization, including telephone, email, etc.",
                      "additionalProperties": false
                    },
                    "valueCount": {
                      "description": "If the parameter is a data type.",
                      "additionalProperties": false
                    },
                    "valueDistance": {
                      "description": "If the parameter is a data type.",
                      "additionalProperties": false
                    },
                    "valueDuration": {
                      "description": "If the parameter is a data type.",
                      "additionalProperties": false
                    },
                    "valueHumanName": {
                      "description": "If the parameter is a data type.",
                      "additionalProperties": false
                    },
                    "valueIdentifier": {
                      "description": "An identifier - identifies some entity uniquely and unambiguously. Typically this is used for business identifiers.",
                      "additionalProperties": false
                    },
                    "valueMoney": {
                      "description": "If the parameter is a data type.",
                      "additionalProperties": false
                    },
                    "valuePeriod": {
                      "description": "A time period defined by a start and end date and optionally time.",
                      "additionalProperties": false
                    },
                    "valueQuantity": {
                      "description": "A measured amount (or an amount that can potentially be measured). Note that measured amounts include amounts that are not precisely quantified, including amounts involving arbitrary units and floating currencies.",
                      "additionalProperties": false
                    },
                    "valueRange": {
                      "description": "If the parameter is a data type.",
                      "additionalProperties": false
                    },
                    "valueRatio": {
                      "description": "If the parameter is a data type.",
                      "additionalProperties": false
                    },
                    "valueReference": {
                      "description": "A reference from one resource to another.",
                      "additionalProperties": false
                    },
                    "valueSampledData": {
                      "description": "If the parameter is a data type.",
                      "additionalProperties": false
                    },
                    "valueSignature": {
                      "description": "A signature along with supporting context. The signature may be a digital signature that is cryptographic in nature, or some other signature acceptable to the domain. This other signature may be as simple as a graphical image representing a hand-written signature, or a signature ceremony Different signature approaches have different utilities.",
                      "additionalProperties": false
                    },
                    "valueTiming": {
                      "description": "Specifies an event that may occur multiple times. Timing schedules are used to record when things are planned, expected or requested to occur. The most common usage is in dosage instructions for medications. They are also used when planning care of various kinds, and may be used for reporting the schedule to which past regular activities were carried out.",
                      "additionalProperties": false
                    },
                    "valueContactDetail": {
                      "description": "Specifies contact information for a person or organization.",
                      "additionalProperties": false
                    },
                    "valueContributor": {
                      "description": "If the parameter is a data type.",
                      "additionalProperties": false
                    },
                    "valueDataRequirement": {
                      "description": "Describes a required data item for evaluation in terms of the type of data, and optional code or date-based filters of the data.",
                      "additionalProperties": false
                    },
                    "valueExpression": {
                      "description": "If the parameter is a data type.",
                      "additionalProperties": false
                    },
                    "valueParameterDefinition": {
                      "description": "The parameters to the module. This collection specifies both the input and output parameters. Input parameters are provided by the caller as part of the $evaluate operation. Output parameters are included in the GuidanceResponse.",
                      "additionalProperties": false
                    },
                    "valueRelatedArtifact": {
                      "description": "Related artifacts such as additional documentation, justification, or bibliographic references.",
                      "additionalProperties": false
                    },
                    "valueTriggerDefinition": {
                      "description": "A description of a triggering event. Triggering events can be named events, data events, or periodic, as determined by the type element.",
                      "additionalProperties": false
                    },
                    "valueUsageContext": {
                      "description": "Specifies clinical/business/etc. metadata that can be used to retrieve, index and/or categorize an artifact. This metadata can either be specific to the applicable population (e.g., age category, DRG) or the specific context of care (e.g., venue, care setting, provider of care).",
                      "additionalProperties": false
                    },
                    "valueDosage": {
                      "description": "Indicates how the medication is/was taken or should be taken by the patient.",
                      "additionalProperties": false
                    },
                    "valueMeta": {
                      "description": "If the parameter is a data type.",
                      "additionalProperties": false
                    },
                    "resource": {
                      "description": "If the parameter is a whole resource."
                    },
                    "part": {
                      "description": "A named part of a multi-part parameter.",
                      "type": "array"
                    }
                  },
                  "additionalProperties": false
                },
                "type": "array"
              }
            },
            "additionalProperties": false,
            "required": [
              "resourceType"
            ]
          },
          {
            "description": "Demographics and other administrative information about an individual or animal receiving care or other health-related services.",
            "properties": {
              "resourceType": {
                "description": "This is a Patient resource",
                "const": "Patient"
              },
              "id": {
                "description": "The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.",
                "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                "type": "string"
              },
              "meta": {
                "description": "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
                "additionalProperties": false
              },
              "implicitRules": {
                "pattern": "^\\S*$",
                "type": "string",
                "description": "String of characters used to identify a name or a resource"
              },
              "_implicitRules": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "language": {
                "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                "type": "string",
                "description": "A string which has at least one character and no leading or trailing whitespace and where there is no whitespace other than single spaces in the contents"
              },
              "_language": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "text": {
                "description": "A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it \"clinically safe\" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.",
                "additionalProperties": false
              },
              "contained": {
                "description": "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope.",
                "type": "array"
              },
              "extension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                "type": "array"
              },
              "modifierExtension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                "type": "array"
              },
              "identifier": {
                "description": "An identifier for this patient.",
                "type": "array"
              },
              "active": {
                "description": "Whether this patient record is in active use. \nMany systems use this property to mark as non-current patients, such as those that have not been seen for a period of time based on an organization's business rules.\n\nIt is often used to filter patient lists to exclude inactive patients\n\nDeceased patients may also be marked as inactive for the same reasons, but may be active for some time after death.",
                "pattern": "^true|false$",
                "type": "boolean"
              },
              "_active": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "name": {
                "description": "A name associated with the individual.",
                "items": {
                  "description": "A human's name with the ability to identify parts and usage.",
                  "additionalProperties": false
                },
                "type": "array"
              },
              "telecom": {
                "description": "A contact detail (e.g. a telephone number or an email address) by which the individual may be contacted.",
                "type": "array"
              },
              "gender": {
                "description": "Administrative Gender - the gender that the patient is considered to have for administration and record keeping purposes.",
                "enum": [
                  "male",
                  "female",
                  "other",
                  "unknown"
                ]
              },
              "_gender": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "birthDate": {
                "description": "The date of birth for the individual.",
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                "type": "string"
              },
              "_birthDate": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "deceasedBoolean": {
                "description": "Indicates if the individual is deceased or not.",
                "pattern": "^true|false$",
                "type": "boolean"
              },
              "_deceasedBoolean": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "deceasedDateTime": {
                "description": "Indicates if the individual is deceased or not.",
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                "type": "string"
              },
              "_deceasedDateTime": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "address": {
                "description": "An address for the individual.",
                "type": "array"
              },
              "maritalStatus": {
                "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                "additionalProperties": false
              },
              "multipleBirthBoolean": {
                "description": "Indicates whether the patient is part of a multiple (boolean) or indicates the actual birth order (integer).",
                "pattern": "^true|false$",
                "type": "boolean"
              },
              "_multipleBirthBoolean": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "multipleBirthInteger": {
                "description": "Indicates whether the patient is part of a multiple (boolean) or indicates the actual birth order (integer).",
                "pattern": "^-?([0]|([1-9][0-9]*))$",
                "type": "number"
              },
              "_multipleBirthInteger": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "photo": {
                "description": "Image of the patient.",
                "type": "array"
              },
              "contact": {
                "description": "A contact party (e.g. guardian, partner, friend) for the patient.",
                "items": {
                  "description": "Demographics and other administrative information about an individual or animal receiving care or other health-related services.",
                  "properties": {
                    "id": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "type": "array"
                    },
                    "modifierExtension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                      "type": "array"
                    },
                    "relationship": {
                      "description": "The nature of the relationship between the patient and the contact person.",
                      "type": "array"
                    },
                    "name": {
                      "description": "A human's name with the ability to identify parts and usage.",
                      "additionalProperties": false
                    },
                    "telecom": {
                      "description": "A contact detail for the person, e.g. a telephone number or an email address.",
                      "type": "array"
                    },
                    "address": {
                      "description": "An address expressed using postal conventions (as opposed to GPS or other location definition formats).  This data type may be used to convey addresses for use in delivering mail as well as for visiting locations which might not be valid for mail delivery.  There are a variety of postal address formats defined around the world.",
                      "additionalProperties": false
                    },
                    "gender": {
                      "description": "Administrative Gender - the gender that the contact person is considered to have for administration and record keeping purposes.",
                      "enum": [
                        "male",
                        "female",
                        "other",
                        "unknown"
                      ]
                    },
                    "_gender": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "organization": {
                      "description": "A reference from one resource to another.",
                      "additionalProperties": false
                    },
                    "period": {
                      "description": "A time period defined by a start and end date and optionally time.",
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                },
                "type": "array"
              },
              "communication": {
                "description": "A language which may be used to communicate with the patient about his or her health.",
                "items": {
                  "description": "Demographics and other administrative information about an individual or animal receiving care or other health-related services.",
                  "properties": {
                    "id": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "type": "array"
                    },
                    "modifierExtension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                      "type": "array"
                    },
                    "language": {
                      "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                      "additionalProperties": false
                    },
                    "preferred": {
                      "description": "Indicates whether or not the patient prefers this language (over other languages he masters up a certain level).",
                      "pattern": "^true|false$",
                      "type": "boolean"
                    },
                    "_preferred": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false,
                  "required": [
                    "language"
                  ]
                },
                "type": "array"
              },
              "generalPractitioner": {
                "description": "Patient's nominated care provider.",
                "type": "array"
              },
              "managingOrganization": {
                "description": "A reference from one resource to another.",
                "additionalProperties": false
              },
              "link": {
                "description": "Link to another patient resource that concerns the same actual patient.",
                "items": {
                  "description": "Demographics and other administrative information about an individual or animal receiving care or other health-related services.",
                  "properties": {
                    "id": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "type": "array"
                    },
                    "modifierExtension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                      "type": "array"
                    },
                    "other": {
                      "description": "A reference from one resource to another.",
                      "additionalProperties": false
                    },
                    "type": {
                      "description": "The type of link between this patient resource and another patient resource.",
                      "enum": [
                        "replaced-by",
                        "replaces",
                        "refer",
                        "seealso"
                      ]
                    },
                    "_type": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false,
                  "required": [
                    "other"
                  ]
                },
                "type": "array"
              }
            },
            "additionalProperties": false,
            "required": [
              "resourceType"
            ]
          },
          {
            "description": "This resource provides the status of the payment for goods and services rendered, and the request and response resource references.",
            "properties": {
              "resourceType": {
                "description": "This is a PaymentNotice resource",
                "const": "PaymentNotice"
              },
              "id": {
                "description": "The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.",
                "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                "type": "string"
              },
              "meta": {
                "description": "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
                "additionalProperties": false
              },
              "implicitRules": {
                "pattern": "^\\S*$",
                "type": "string",
                "description": "String of characters used to identify a name or a resource"
              },
              "_implicitRules": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "language": {
                "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                "type": "string",
                "description": "A string which has at least one character and no leading or trailing whitespace and where there is no whitespace other than single spaces in the contents"
              },
              "_language": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "text": {
                "description": "A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it \"clinically safe\" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.",
                "additionalProperties": false
              },
              "contained": {
                "description": "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope.",
                "type": "array"
              },
              "extension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                "type": "array"
              },
              "modifierExtension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                "type": "array"
              },
              "identifier": {
                "description": "A unique identifier assigned to this payment notice.",
                "type": "array"
              },
              "status": {
                "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                "type": "string",
                "description": "A string which has at least one character and no leading or trailing whitespace and where there is no whitespace other than single spaces in the contents"
              },
              "_status": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "request": {
                "description": "A reference from one resource to another.",
                "additionalProperties": false
              },
              "response": {
                "description": "A reference from one resource to another.",
                "additionalProperties": false
              },
              "created": {
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                "type": "string",
                "description": "A date, date-time or partial date (e.g. just year or year + month).  If hours and minutes are specified, a time zone SHALL be populated. The format is a union of the schema types gYear, gYearMonth, date and dateTime. Seconds must be provided due to schema type constraints but may be zero-filled and may be ignored.                 Dates SHALL be valid dates."
              },
              "_created": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "provider": {
                "description": "A reference from one resource to another.",
                "additionalProperties": false
              },
              "payment": {
                "description": "A reference from one resource to another.",
                "additionalProperties": false
              },
              "paymentDate": {
                "description": "The date when the above payment action occurred.",
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                "type": "string"
              },
              "_paymentDate": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "payee": {
                "description": "A reference from one resource to another.",
                "additionalProperties": false
              },
              "recipient": {
                "description": "A reference from one resource to another.",
                "additionalProperties": false
              },
              "amount": {
                "description": "The amount sent to the payee.",
                "additionalProperties": false
              },
              "paymentStatus": {
                "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                "additionalProperties": false
              }
            },
            "additionalProperties": false,
            "required": [
              "amount",
              "recipient",
              "payment",
              "resourceType"
            ]
          },
          {
            "description": "This resource provides the details including amount of a payment and allocates the payment items being paid.",
            "properties": {
              "resourceType": {
                "description": "This is a PaymentReconciliation resource",
                "const": "PaymentReconciliation"
              },
              "id": {
                "description": "The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.",
                "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                "type": "string"
              },
              "meta": {
                "description": "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
                "additionalProperties": false
              },
              "implicitRules": {
                "pattern": "^\\S*$",
                "type": "string",
                "description": "String of characters used to identify a name or a resource"
              },
              "_implicitRules": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "language": {
                "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                "type": "string",
                "description": "A string which has at least one character and no leading or trailing whitespace and where there is no whitespace other than single spaces in the contents"
              },
              "_language": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "text": {
                "description": "A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it \"clinically safe\" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.",
                "additionalProperties": false
              },
              "contained": {
                "description": "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope.",
                "type": "array"
              },
              "extension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                "type": "array"
              },
              "modifierExtension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                "type": "array"
              },
              "identifier": {
                "description": "A unique identifier assigned to this payment reconciliation.",
                "type": "array"
              },
              "status": {
                "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                "type": "string",
                "description": "A string which has at least one character and no leading or trailing whitespace and where there is no whitespace other than single spaces in the contents"
              },
              "_status": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "period": {
                "description": "A time period defined by a start and end date and optionally time.",
                "additionalProperties": false
              },
              "created": {
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                "type": "string",
                "description": "A date, date-time or partial date (e.g. just year or year + month).  If hours and minutes are specified, a time zone SHALL be populated. The format is a union of the schema types gYear, gYearMonth, date and dateTime. Seconds must be provided due to schema type constraints but may be zero-filled and may be ignored.                 Dates SHALL be valid dates."
              },
              "_created": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "paymentIssuer": {
                "description": "A reference from one resource to another.",
                "additionalProperties": false
              },
              "request": {
                "description": "A reference from one resource to another.",
                "additionalProperties": false
              },
              "requestor": {
                "description": "A reference from one resource to another.",
                "additionalProperties": false
              },
              "outcome": {
                "description": "The outcome of a request for a reconciliation.",
                "enum": [
                  "queued",
                  "complete",
                  "error",
                  "partial"
                ]
              },
              "_outcome": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "disposition": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "_disposition": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "paymentDate": {
                "description": "The date of payment as indicated on the financial instrument.",
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                "type": "string"
              },
              "_paymentDate": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "paymentAmount": {
                "description": "Total payment amount as indicated on the financial instrument.",
                "additionalProperties": false
              },
              "paymentIdentifier": {
                "description": "An identifier - identifies some entity uniquely and unambiguously. Typically this is used for business identifiers.",
                "additionalProperties": false
              },
              "detail": {
                "description": "Distribution of the payment amount for a previously acknowledged payable.",
                "items": {
                  "description": "This resource provides the details including amount of a payment and allocates the payment items being paid.",
                  "properties": {
                    "id": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "type": "array"
                    },
                    "modifierExtension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                      "type": "array"
                    },
                    "identifier": {
                      "description": "An identifier - identifies some entity uniquely and unambiguously. Typically this is used for business identifiers.",
                      "additionalProperties": false
                    },
                    "predecessor": {
                      "description": "An identifier - identifies some entity uniquely and unambiguously. Typically this is used for business identifiers.",
                      "additionalProperties": false
                    },
                    "type": {
                      "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                      "additionalProperties": false
                    },
                    "request": {
                      "description": "A reference from one resource to another.",
                      "additionalProperties": false
                    },
                    "submitter": {
                      "description": "A reference from one resource to another.",
                      "additionalProperties": false
                    },
                    "response": {
                      "description": "A reference from one resource to another.",
                      "additionalProperties": false
                    },
                    "date": {
                      "description": "The date from the response resource containing a commitment to pay.",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                      "type": "string"
                    },
                    "_date": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "responsible": {
                      "description": "A reference from one resource to another.",
                      "additionalProperties": false
                    },
                    "payee": {
                      "description": "A reference from one resource to another.",
                      "additionalProperties": false
                    },
                    "amount": {
                      "description": "The monetary amount allocated from the total payment to the payable.",
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false,
                  "required": [
                    "type"
                  ]
                },
                "type": "array"
              },
              "formCode": {
                "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                "additionalProperties": false
              },
              "processNote": {
                "description": "A note that describes or explains the processing in a human readable form.",
                "items": {
                  "description": "This resource provides the details including amount of a payment and allocates the payment items being paid.",
                  "properties": {
                    "id": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "type": "array"
                    },
                    "modifierExtension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                      "type": "array"
                    },
                    "type": {
                      "description": "The business purpose of the note text.",
                      "enum": [
                        "display",
                        "print",
                        "printoper"
                      ]
                    },
                    "_type": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "text": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "_text": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                },
                "type": "array"
              }
            },
            "additionalProperties": false,
            "required": [
              "paymentAmount",
              "resourceType"
            ]
          },
          {
            "description": "Demographics and administrative information about a person independent of a specific health-related context.",
            "properties": {
              "resourceType": {
                "description": "This is a Person resource",
                "const": "Person"
              },
              "id": {
                "description": "The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.",
                "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                "type": "string"
              },
              "meta": {
                "description": "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
                "additionalProperties": false
              },
              "implicitRules": {
                "pattern": "^\\S*$",
                "type": "string",
                "description": "String of characters used to identify a name or a resource"
              },
              "_implicitRules": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "language": {
                "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                "type": "string",
                "description": "A string which has at least one character and no leading or trailing whitespace and where there is no whitespace other than single spaces in the contents"
              },
              "_language": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "text": {
                "description": "A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it \"clinically safe\" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.",
                "additionalProperties": false
              },
              "contained": {
                "description": "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope.",
                "type": "array"
              },
              "extension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                "type": "array"
              },
              "modifierExtension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                "type": "array"
              },
              "identifier": {
                "description": "Identifier for a person within a particular scope.",
                "type": "array"
              },
              "name": {
                "description": "A name associated with the person.",
                "type": "array"
              },
              "telecom": {
                "description": "A contact detail for the person, e.g. a telephone number or an email address.",
                "type": "array"
              },
              "gender": {
                "description": "Administrative Gender.",
                "enum": [
                  "male",
                  "female",
                  "other",
                  "unknown"
                ]
              },
              "_gender": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "birthDate": {
                "description": "The birth date for the person.",
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                "type": "string"
              },
              "_birthDate": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "address": {
                "description": "One or more addresses for the person.",
                "type": "array"
              },
              "photo": {
                "description": "For referring to data content defined in other formats.",
                "additionalProperties": false
              },
              "managingOrganization": {
                "description": "A reference from one resource to another.",
                "additionalProperties": false
              },
              "active": {
                "description": "Whether this person's record is in active use.",
                "pattern": "^true|false$",
                "type": "boolean"
              },
              "_active": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "link": {
                "description": "Link to a resource that concerns the same actual person.",
                "items": {
                  "description": "Demographics and administrative information about a person independent of a specific health-related context.",
                  "properties": {
                    "id": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "type": "array"
                    },
                    "modifierExtension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                      "type": "array"
                    },
                    "target": {
                      "description": "A reference from one resource to another.",
                      "additionalProperties": false
                    },
                    "assurance": {
                      "description": "Level of assurance that this link is associated with the target resource.",
                      "enum": [
                        "level1",
                        "level2",
                        "level3",
                        "level4"
                      ]
                    },
                    "_assurance": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false,
                  "required": [
                    "target"
                  ]
                },
                "type": "array"
              }
            },
            "additionalProperties": false,
            "required": [
              "resourceType"
            ]
          },
          {
            "description": "This resource allows for the definition of various types of plans as a sharable, consumable, and executable artifact. The resource is general enough to support the description of a broad range of clinical artifacts such as clinical decision support rules, order sets and protocols.",
            "properties": {
              "resourceType": {
                "description": "This is a PlanDefinition resource",
                "const": "PlanDefinition"
              },
              "id": {
                "description": "The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.",
                "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                "type": "string"
              },
              "meta": {
                "description": "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
                "additionalProperties": false
              },
              "implicitRules": {
                "pattern": "^\\S*$",
                "type": "string",
                "description": "String of characters used to identify a name or a resource"
              },
              "_implicitRules": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "language": {
                "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                "type": "string",
                "description": "A string which has at least one character and no leading or trailing whitespace and where there is no whitespace other than single spaces in the contents"
              },
              "_language": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "text": {
                "description": "A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it \"clinically safe\" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.",
                "additionalProperties": false
              },
              "contained": {
                "description": "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope.",
                "type": "array"
              },
              "extension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                "type": "array"
              },
              "modifierExtension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                "type": "array"
              },
              "url": {
                "pattern": "^\\S*$",
                "type": "string",
                "description": "String of characters used to identify a name or a resource"
              },
              "_url": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "identifier": {
                "description": "A formal identifier that is used to identify this plan definition when it is represented in other formats, or referenced in a specification, model, design or an instance.",
                "type": "array"
              },
              "version": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "_version": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "name": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "_name": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "title": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "_title": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "subtitle": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "_subtitle": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "type": {
                "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                "additionalProperties": false
              },
              "status": {
                "description": "The status of this plan definition. Enables tracking the life-cycle of the content.",
                "enum": [
                  "draft",
                  "active",
                  "retired",
                  "unknown"
                ]
              },
              "_status": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "experimental": {
                "description": "A Boolean value to indicate that this plan definition is authored for testing purposes (or education/evaluation/marketing) and is not intended to be used for genuine usage.",
                "pattern": "^true|false$",
                "type": "boolean"
              },
              "_experimental": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "subjectCodeableConcept": {
                "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                "additionalProperties": false
              },
              "subjectReference": {
                "description": "A reference from one resource to another.",
                "additionalProperties": false
              },
              "date": {
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                "type": "string",
                "description": "A date, date-time or partial date (e.g. just year or year + month).  If hours and minutes are specified, a time zone SHALL be populated. The format is a union of the schema types gYear, gYearMonth, date and dateTime. Seconds must be provided due to schema type constraints but may be zero-filled and may be ignored.                 Dates SHALL be valid dates."
              },
              "_date": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "publisher": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "_publisher": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "contact": {
                "description": "Contact details to assist a user in finding and communicating with the publisher.",
                "type": "array"
              },
              "description": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A string that may contain Github Flavored Markdown syntax for optional processing by a mark down presentation engine"
              },
              "_description": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "useContext": {
                "description": "The content was developed with a focus and intent of supporting the contexts that are listed. These contexts may be general categories (gender, age, ...) or may be references to specific programs (insurance plans, studies, ...) and may be used to assist with indexing and searching for appropriate plan definition instances.",
                "type": "array"
              },
              "jurisdiction": {
                "description": "A legal or geographic region in which the plan definition is intended to be used.",
                "type": "array"
              },
              "purpose": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A string that may contain Github Flavored Markdown syntax for optional processing by a mark down presentation engine"
              },
              "_purpose": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "usage": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "_usage": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "copyright": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A string that may contain Github Flavored Markdown syntax for optional processing by a mark down presentation engine"
              },
              "_copyright": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "approvalDate": {
                "description": "The date on which the resource content was approved by the publisher. Approval happens once when the content is officially approved for usage.",
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                "type": "string"
              },
              "_approvalDate": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "lastReviewDate": {
                "description": "The date on which the resource content was last reviewed. Review happens periodically after approval but does not change the original approval date.",
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                "type": "string"
              },
              "_lastReviewDate": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "effectivePeriod": {
                "description": "A time period defined by a start and end date and optionally time.",
                "additionalProperties": false
              },
              "topic": {
                "description": "Descriptive topics related to the content of the plan definition. Topics provide a high-level categorization of the definition that can be useful for filtering and searching.",
                "type": "array"
              },
              "author": {
                "description": "An individiual or organization primarily involved in the creation and maintenance of the content.",
                "type": "array"
              },
              "editor": {
                "description": "An individual or organization primarily responsible for internal coherence of the content.",
                "type": "array"
              },
              "reviewer": {
                "description": "An individual or organization primarily responsible for review of some aspect of the content.",
                "type": "array"
              },
              "endorser": {
                "description": "An individual or organization responsible for officially endorsing the content for use in some setting.",
                "type": "array"
              },
              "relatedArtifact": {
                "description": "Related artifacts such as additional documentation, justification, or bibliographic references.",
                "type": "array"
              },
              "library": {
                "description": "A reference to a Library resource containing any formal logic used by the plan definition.",
                "type": "array"
              },
              "goal": {
                "description": "Goals that describe what the activities within the plan are intended to achieve. For example, weight loss, restoring an activity of daily living, obtaining herd immunity via immunization, meeting a process improvement objective, etc.",
                "items": {
                  "description": "This resource allows for the definition of various types of plans as a sharable, consumable, and executable artifact. The resource is general enough to support the description of a broad range of clinical artifacts such as clinical decision support rules, order sets and protocols.",
                  "properties": {
                    "id": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "type": "array"
                    },
                    "modifierExtension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                      "type": "array"
                    },
                    "category": {
                      "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                      "additionalProperties": false
                    },
                    "description": {
                      "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                      "additionalProperties": false
                    },
                    "priority": {
                      "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                      "additionalProperties": false
                    },
                    "start": {
                      "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                      "additionalProperties": false
                    },
                    "addresses": {
                      "description": "Identifies problems, conditions, issues, or concerns the goal is intended to address.",
                      "type": "array"
                    },
                    "documentation": {
                      "description": "Didactic or other informational resources associated with the goal that provide further supporting information about the goal. Information resources can include inline text commentary and links to web resources.",
                      "type": "array"
                    },
                    "target": {
                      "description": "Indicates what should be done and within what timeframe.",
                      "items": {
                        "description": "This resource allows for the definition of various types of plans as a sharable, consumable, and executable artifact. The resource is general enough to support the description of a broad range of clinical artifacts such as clinical decision support rules, order sets and protocols.",
                        "properties": {
                          "id": {
                            "pattern": "^[ \\r\\n\\t\\S]+$",
                            "type": "string",
                            "description": "A sequence of Unicode characters"
                          },
                          "extension": {
                            "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                            "type": "array"
                          },
                          "modifierExtension": {
                            "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                            "type": "array"
                          },
                          "measure": {
                            "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                            "additionalProperties": false
                          },
                          "detailQuantity": {
                            "description": "A measured amount (or an amount that can potentially be measured). Note that measured amounts include amounts that are not precisely quantified, including amounts involving arbitrary units and floating currencies.",
                            "additionalProperties": false
                          },
                          "detailRange": {
                            "description": "The target value of the measure to be achieved to signify fulfillment of the goal, e.g. 150 pounds or 7.0%. Either the high or low or both values of the range can be specified. When a low value is missing, it indicates that the goal is achieved at any value at or below the high value. Similarly, if the high value is missing, it indicates that the goal is achieved at any value at or above the low value.",
                            "additionalProperties": false
                          },
                          "detailCodeableConcept": {
                            "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                            "additionalProperties": false
                          },
                          "due": {
                            "description": "Indicates the timeframe after the start of the goal in which the goal should be met.",
                            "additionalProperties": false
                          }
                        },
                        "additionalProperties": false
                      },
                      "type": "array"
                    }
                  },
                  "additionalProperties": false,
                  "required": [
                    "description"
                  ]
                },
                "type": "array"
              },
              "action": {
                "description": "An action or group of actions to be taken as part of the plan.",
                "items": {
                  "description": "This resource allows for the definition of various types of plans as a sharable, consumable, and executable artifact. The resource is general enough to support the description of a broad range of clinical artifacts such as clinical decision support rules, order sets and protocols.",
                  "properties": {
                    "id": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "type": "array"
                    },
                    "modifierExtension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                      "type": "array"
                    },
                    "prefix": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "_prefix": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "title": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "_title": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "description": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "_description": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "textEquivalent": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "_textEquivalent": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "priority": {
                      "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                      "type": "string",
                      "description": "A string which has at least one character and no leading or trailing whitespace and where there is no whitespace other than single spaces in the contents"
                    },
                    "_priority": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "code": {
                      "description": "A code that provides meaning for the action or action group. For example, a section may have a LOINC code for the section of a documentation template.",
                      "type": "array"
                    },
                    "reason": {
                      "description": "A description of why this action is necessary or appropriate.",
                      "type": "array"
                    },
                    "documentation": {
                      "description": "Didactic or other informational resources associated with the action that can be provided to the CDS recipient. Information resources can include inline text commentary and links to web resources.",
                      "type": "array"
                    },
                    "goalId": {
                      "description": "Identifies goals that this action supports. The reference must be to a goal element defined within this plan definition.",
                      "items": {
                        "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                        "type": "string",
                        "description": "Any combination of letters, numerals, \"-\" and \".\", with a length limit of 64 characters.  (This might be an integer, an unprefixed OID, UUID or any other identifier pattern that meets these constraints.)  Ids are case-insensitive."
                      },
                      "type": "array"
                    },
                    "_goalId": {
                      "description": "Extensions for goalId",
                      "type": "array"
                    },
                    "subjectCodeableConcept": {
                      "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                      "additionalProperties": false
                    },
                    "subjectReference": {
                      "description": "A reference from one resource to another.",
                      "additionalProperties": false
                    },
                    "trigger": {
                      "description": "A description of when the action should be triggered.",
                      "type": "array"
                    },
                    "condition": {
                      "description": "An expression that describes applicability criteria or start/stop conditions for the action.",
                      "items": {
                        "description": "This resource allows for the definition of various types of plans as a sharable, consumable, and executable artifact. The resource is general enough to support the description of a broad range of clinical artifacts such as clinical decision support rules, order sets and protocols.",
                        "properties": {
                          "id": {
                            "pattern": "^[ \\r\\n\\t\\S]+$",
                            "type": "string",
                            "description": "A sequence of Unicode characters"
                          },
                          "extension": {
                            "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                            "type": "array"
                          },
                          "modifierExtension": {
                            "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                            "type": "array"
                          },
                          "kind": {
                            "description": "The kind of condition.",
                            "enum": [
                              "applicability",
                              "start",
                              "stop"
                            ]
                          },
                          "_kind": {
                            "description": "Base definition for all elements in a resource.",
                            "additionalProperties": false
                          },
                          "expression": {
                            "description": "An expression that returns true or false, indicating whether the condition is satisfied.",
                            "additionalProperties": false
                          }
                        },
                        "additionalProperties": false
                      },
                      "type": "array"
                    },
                    "input": {
                      "description": "Defines input data requirements for the action.",
                      "type": "array"
                    },
                    "output": {
                      "description": "Defines the outputs of the action, if any.",
                      "type": "array"
                    },
                    "relatedAction": {
                      "description": "A relationship to another action such as \"before\" or \"30-60 minutes after start of\".",
                      "items": {
                        "description": "This resource allows for the definition of various types of plans as a sharable, consumable, and executable artifact. The resource is general enough to support the description of a broad range of clinical artifacts such as clinical decision support rules, order sets and protocols.",
                        "properties": {
                          "id": {
                            "pattern": "^[ \\r\\n\\t\\S]+$",
                            "type": "string",
                            "description": "A sequence of Unicode characters"
                          },
                          "extension": {
                            "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                            "type": "array"
                          },
                          "modifierExtension": {
                            "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                            "type": "array"
                          },
                          "actionId": {
                            "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                            "type": "string",
                            "description": "Any combination of letters, numerals, \"-\" and \".\", with a length limit of 64 characters.  (This might be an integer, an unprefixed OID, UUID or any other identifier pattern that meets these constraints.)  Ids are case-insensitive."
                          },
                          "_actionId": {
                            "description": "Base definition for all elements in a resource.",
                            "additionalProperties": false
                          },
                          "relationship": {
                            "description": "The relationship of this action to the related action.",
                            "enum": [
                              "before-start",
                              "before",
                              "before-end",
                              "concurrent-with-start",
                              "concurrent",
                              "concurrent-with-end",
                              "after-start",
                              "after",
                              "after-end"
                            ]
                          },
                          "_relationship": {
                            "description": "Base definition for all elements in a resource.",
                            "additionalProperties": false
                          },
                          "offsetDuration": {
                            "description": "A duration or range of durations to apply to the relationship. For example, 30-60 minutes before.",
                            "additionalProperties": false
                          },
                          "offsetRange": {
                            "description": "A duration or range of durations to apply to the relationship. For example, 30-60 minutes before.",
                            "additionalProperties": false
                          }
                        },
                        "additionalProperties": false
                      },
                      "type": "array"
                    },
                    "timingDateTime": {
                      "description": "An optional value describing when the action should be performed.",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                      "type": "string"
                    },
                    "_timingDateTime": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "timingAge": {
                      "description": "An optional value describing when the action should be performed.",
                      "additionalProperties": false
                    },
                    "timingPeriod": {
                      "description": "A time period defined by a start and end date and optionally time.",
                      "additionalProperties": false
                    },
                    "timingDuration": {
                      "description": "An optional value describing when the action should be performed.",
                      "additionalProperties": false
                    },
                    "timingRange": {
                      "description": "An optional value describing when the action should be performed.",
                      "additionalProperties": false
                    },
                    "timingTiming": {
                      "description": "Specifies an event that may occur multiple times. Timing schedules are used to record when things are planned, expected or requested to occur. The most common usage is in dosage instructions for medications. They are also used when planning care of various kinds, and may be used for reporting the schedule to which past regular activities were carried out.",
                      "additionalProperties": false
                    },
                    "participant": {
                      "description": "Indicates who should participate in performing the action described.",
                      "items": {
                        "description": "This resource allows for the definition of various types of plans as a sharable, consumable, and executable artifact. The resource is general enough to support the description of a broad range of clinical artifacts such as clinical decision support rules, order sets and protocols.",
                        "properties": {
                          "id": {
                            "pattern": "^[ \\r\\n\\t\\S]+$",
                            "type": "string",
                            "description": "A sequence of Unicode characters"
                          },
                          "extension": {
                            "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                            "type": "array"
                          },
                          "modifierExtension": {
                            "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                            "type": "array"
                          },
                          "type": {
                            "description": "The type of participant in the action.",
                            "enum": [
                              "patient",
                              "practitioner",
                              "related-person",
                              "device"
                            ]
                          },
                          "_type": {
                            "description": "Base definition for all elements in a resource.",
                            "additionalProperties": false
                          },
                          "role": {
                            "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                            "additionalProperties": false
                          }
                        },
                        "additionalProperties": false
                      },
                      "type": "array"
                    },
                    "type": {
                      "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                      "additionalProperties": false
                    },
                    "groupingBehavior": {
                      "description": "Defines the grouping behavior for the action and its children.",
                      "enum": [
                        "visual-group",
                        "logical-group",
                        "sentence-group"
                      ]
                    },
                    "_groupingBehavior": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "selectionBehavior": {
                      "description": "Defines the selection behavior for the action and its children.",
                      "enum": [
                        "any",
                        "all",
                        "all-or-none",
                        "exactly-one",
                        "at-most-one",
                        "one-or-more"
                      ]
                    },
                    "_selectionBehavior": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "requiredBehavior": {
                      "description": "Defines the required behavior for the action.",
                      "enum": [
                        "must",
                        "could",
                        "must-unless-documented"
                      ]
                    },
                    "_requiredBehavior": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "precheckBehavior": {
                      "description": "Defines whether the action should usually be preselected.",
                      "enum": [
                        "yes",
                        "no"
                      ]
                    },
                    "_precheckBehavior": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "cardinalityBehavior": {
                      "description": "Defines whether the action can be selected multiple times.",
                      "enum": [
                        "single",
                        "multiple"
                      ]
                    },
                    "_cardinalityBehavior": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "definitionCanonical": {
                      "description": "A reference to an ActivityDefinition that describes the action to be taken in detail, or a PlanDefinition that describes a series of actions to be taken.",
                      "pattern": "^\\S*$",
                      "type": "string"
                    },
                    "_definitionCanonical": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "definitionUri": {
                      "description": "A reference to an ActivityDefinition that describes the action to be taken in detail, or a PlanDefinition that describes a series of actions to be taken.",
                      "pattern": "^\\S*$",
                      "type": "string"
                    },
                    "_definitionUri": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "transform": {
                      "pattern": "^\\S*$",
                      "type": "string",
                      "description": "A URI that is a reference to a canonical URL on a FHIR resource"
                    },
                    "dynamicValue": {
                      "description": "Customizations that should be applied to the statically defined resource. For example, if the dosage of a medication must be computed based on the patient's weight, a customization would be used to specify an expression that calculated the weight, and the path on the resource that would contain the result.",
                      "items": {
                        "description": "This resource allows for the definition of various types of plans as a sharable, consumable, and executable artifact. The resource is general enough to support the description of a broad range of clinical artifacts such as clinical decision support rules, order sets and protocols.",
                        "properties": {
                          "id": {
                            "pattern": "^[ \\r\\n\\t\\S]+$",
                            "type": "string",
                            "description": "A sequence of Unicode characters"
                          },
                          "extension": {
                            "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                            "type": "array"
                          },
                          "modifierExtension": {
                            "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                            "type": "array"
                          },
                          "path": {
                            "pattern": "^[ \\r\\n\\t\\S]+$",
                            "type": "string",
                            "description": "A sequence of Unicode characters"
                          },
                          "_path": {
                            "description": "Base definition for all elements in a resource.",
                            "additionalProperties": false
                          },
                          "expression": {
                            "description": "An expression specifying the value of the customized element.",
                            "additionalProperties": false
                          }
                        },
                        "additionalProperties": false
                      },
                      "type": "array"
                    },
                    "action": {
                      "description": "Sub actions that are contained within the action. The behavior of this action determines the functionality of the sub-actions. For example, a selection behavior of at-most-one indicates that of the sub-actions, at most one may be chosen as part of realizing the action definition.",
                      "type": "array"
                    }
                  },
                  "additionalProperties": false
                },
                "type": "array"
              }
            },
            "additionalProperties": false,
            "required": [
              "resourceType"
            ]
          },
          {
            "description": "A person who is directly or indirectly involved in the provisioning of healthcare.",
            "properties": {
              "resourceType": {
                "description": "This is a Practitioner resource",
                "const": "Practitioner"
              },
              "id": {
                "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                "type": "string",
                "description": "Any combination of letters, numerals, \"-\" and \".\", with a length limit of 64 characters.  (This might be an integer, an unprefixed OID, UUID or any other identifier pattern that meets these constraints.)  Ids are case-insensitive."
              },
              "meta": {
                "description": "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
                "additionalProperties": false
              },
              "implicitRules": {
                "pattern": "^\\S*$",
                "type": "string",
                "description": "String of characters used to identify a name or a resource"
              },
              "_implicitRules": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "language": {
                "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                "type": "string",
                "description": "A string which has at least one character and no leading or trailing whitespace and where there is no whitespace other than single spaces in the contents"
              },
              "_language": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "text": {
                "description": "A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it \"clinically safe\" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.",
                "additionalProperties": false
              },
              "contained": {
                "description": "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope.",
                "type": "array"
              },
              "extension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                "type": "array"
              },
              "modifierExtension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                "type": "array"
              },
              "identifier": {
                "description": "An identifier that applies to this person in this role.",
                "type": "array"
              },
              "active": {
                "description": "Whether this practitioner's record is in active use.",
                "pattern": "^true|false$",
                "type": "boolean"
              },
              "_active": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "name": {
                "description": "The name(s) associated with the practitioner.",
                "type": "array"
              },
              "telecom": {
                "description": "A contact detail for the practitioner, e.g. a telephone number or an email address.",
                "type": "array"
              },
              "address": {
                "description": "Address(es) of the practitioner that are not role specific (typically home address). \rWork addresses are not typically entered in this property as they are usually role dependent.",
                "type": "array"
              },
              "gender": {
                "description": "Administrative Gender - the gender that the person is considered to have for administration and record keeping purposes.",
                "enum": [
                  "male",
                  "female",
                  "other",
                  "unknown"
                ]
              },
              "_gender": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "birthDate": {
                "description": "The date of birth for the practitioner.",
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                "type": "string"
              },
              "_birthDate": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "photo": {
                "description": "Image of the person.",
                "type": "array"
              },
              "qualification": {
                "description": "The official certifications, training, and licenses that authorize or otherwise pertain to the provision of care by the practitioner.  For example, a medical license issued by a medical board authorizing the practitioner to practice medicine within a certian locality.",
                "items": {
                  "description": "A person who is directly or indirectly involved in the provisioning of healthcare.",
                  "properties": {
                    "id": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "type": "array"
                    },
                    "modifierExtension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                      "type": "array"
                    },
                    "identifier": {
                      "description": "An identifier that applies to this person's qualification in this role.",
                      "type": "array"
                    },
                    "code": {
                      "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                      "additionalProperties": false
                    },
                    "period": {
                      "description": "A time period defined by a start and end date and optionally time.",
                      "additionalProperties": false
                    },
                    "issuer": {
                      "description": "A reference from one resource to another.",
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false,
                  "required": [
                    "code"
                  ]
                },
                "type": "array"
              },
              "communication": {
                "description": "A language the practitioner can use in patient communication.",
                "type": "array"
              }
            },
            "additionalProperties": false,
            "required": [
              "resourceType"
            ]
          },
          {
            "description": "A specific set of Roles/Locations/specialties/services that a practitioner may perform at an organization for a period of time.",
            "properties": {
              "resourceType": {
                "description": "This is a PractitionerRole resource",
                "const": "PractitionerRole"
              },
              "id": {
                "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                "type": "string",
                "description": "Any combination of letters, numerals, \"-\" and \".\", with a length limit of 64 characters.  (This might be an integer, an unprefixed OID, UUID or any other identifier pattern that meets these constraints.)  Ids are case-insensitive."
              },
              "meta": {
                "description": "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
                "additionalProperties": false
              },
              "implicitRules": {
                "pattern": "^\\S*$",
                "type": "string",
                "description": "String of characters used to identify a name or a resource"
              },
              "_implicitRules": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "language": {
                "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                "type": "string",
                "description": "A string which has at least one character and no leading or trailing whitespace and where there is no whitespace other than single spaces in the contents"
              },
              "_language": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "text": {
                "description": "A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it \"clinically safe\" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.",
                "additionalProperties": false
              },
              "contained": {
                "description": "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope.",
                "type": "array"
              },
              "extension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                "type": "array"
              },
              "modifierExtension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                "type": "array"
              },
              "identifier": {
                "description": "Business Identifiers that are specific to a role/location.",
                "type": "array"
              },
              "active": {
                "description": "Whether this practitioner role record is in active use.",
                "pattern": "^true|false$",
                "type": "boolean"
              },
              "_active": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "period": {
                "description": "A time period defined by a start and end date and optionally time.",
                "additionalProperties": false
              },
              "practitioner": {
                "description": "A reference from one resource to another.",
                "additionalProperties": false
              },
              "organization": {
                "description": "A reference from one resource to another.",
                "additionalProperties": false
              },
              "code": {
                "description": "Roles which this practitioner is authorized to perform for the organization.",
                "type": "array"
              },
              "specialty": {
                "description": "Specific specialty of the practitioner.",
                "type": "array"
              },
              "location": {
                "description": "The location(s) at which this practitioner provides care.",
                "type": "array"
              },
              "healthcareService": {
                "description": "The list of healthcare services that this worker provides for this role's Organization/Location(s).",
                "type": "array"
              },
              "telecom": {
                "description": "Contact details that are specific to the role/location/service.",
                "type": "array"
              },
              "availableTime": {
                "description": "A collection of times the practitioner is available or performing this role at the location and/or healthcareservice.",
                "items": {
                  "description": "A specific set of Roles/Locations/specialties/services that a practitioner may perform at an organization for a period of time.",
                  "properties": {
                    "id": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "type": "array"
                    },
                    "modifierExtension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                      "type": "array"
                    },
                    "daysOfWeek": {
                      "description": "Indicates which days of the week are available between the start and end Times.",
                      "type": "array"
                    },
                    "_daysOfWeek": {
                      "description": "Extensions for daysOfWeek",
                      "type": "array"
                    },
                    "allDay": {
                      "description": "Is this always available? (hence times are irrelevant) e.g. 24 hour service.",
                      "pattern": "^true|false$",
                      "type": "boolean"
                    },
                    "_allDay": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "availableStartTime": {
                      "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$",
                      "type": "string",
                      "description": "A time during the day, with no date specified"
                    },
                    "_availableStartTime": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "availableEndTime": {
                      "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$",
                      "type": "string",
                      "description": "A time during the day, with no date specified"
                    },
                    "_availableEndTime": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                },
                "type": "array"
              },
              "notAvailable": {
                "description": "The practitioner is not available or performing this role during this period of time due to the provided reason.",
                "items": {
                  "description": "A specific set of Roles/Locations/specialties/services that a practitioner may perform at an organization for a period of time.",
                  "properties": {
                    "id": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "type": "array"
                    },
                    "modifierExtension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                      "type": "array"
                    },
                    "description": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "_description": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "during": {
                      "description": "A time period defined by a start and end date and optionally time.",
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                },
                "type": "array"
              },
              "availabilityExceptions": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "_availabilityExceptions": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "endpoint": {
                "description": "Technical endpoints providing access to services operated for the practitioner with this role.",
                "type": "array"
              }
            },
            "additionalProperties": false,
            "required": [
              "resourceType"
            ]
          },
          {
            "description": "An action that is or was performed on or for a patient. This can be a physical intervention like an operation, or less invasive like long term services, counseling, or hypnotherapy.",
            "properties": {
              "resourceType": {
                "description": "This is a Procedure resource",
                "const": "Procedure"
              },
              "id": {
                "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                "type": "string",
                "description": "Any combination of letters, numerals, \"-\" and \".\", with a length limit of 64 characters.  (This might be an integer, an unprefixed OID, UUID or any other identifier pattern that meets these constraints.)  Ids are case-insensitive."
              },
              "meta": {
                "description": "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
                "additionalProperties": false
              },
              "implicitRules": {
                "pattern": "^\\S*$",
                "type": "string",
                "description": "String of characters used to identify a name or a resource"
              },
              "_implicitRules": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "language": {
                "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                "type": "string",
                "description": "A string which has at least one character and no leading or trailing whitespace and where there is no whitespace other than single spaces in the contents"
              },
              "_language": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "text": {
                "description": "A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it \"clinically safe\" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.",
                "additionalProperties": false
              },
              "contained": {
                "description": "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope.",
                "type": "array"
              },
              "extension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                "type": "array"
              },
              "modifierExtension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                "type": "array"
              },
              "identifier": {
                "description": "Business identifiers assigned to this procedure by the performer or other systems which remain constant as the resource is updated and is propagated from server to server.",
                "type": "array"
              },
              "instantiatesCanonical": {
                "description": "The URL pointing to a FHIR-defined protocol, guideline, order set or other definition that is adhered to in whole or in part by this Procedure.",
                "type": "array"
              },
              "instantiatesUri": {
                "description": "The URL pointing to an externally maintained protocol, guideline, order set or other definition that is adhered to in whole or in part by this Procedure.",
                "type": "array"
              },
              "_instantiatesUri": {
                "description": "Extensions for instantiatesUri",
                "type": "array"
              },
              "basedOn": {
                "description": "A reference to a resource that contains details of the request for this procedure.",
                "type": "array"
              },
              "partOf": {
                "description": "A larger event of which this particular procedure is a component or step.",
                "type": "array"
              },
              "status": {
                "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                "type": "string",
                "description": "A string which has at least one character and no leading or trailing whitespace and where there is no whitespace other than single spaces in the contents"
              },
              "_status": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "statusReason": {
                "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                "additionalProperties": false
              },
              "category": {
                "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                "additionalProperties": false
              },
              "code": {
                "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                "additionalProperties": false
              },
              "subject": {
                "description": "A reference from one resource to another.",
                "additionalProperties": false
              },
              "encounter": {
                "description": "A reference from one resource to another.",
                "additionalProperties": false
              },
              "performedDateTime": {
                "description": "Estimated or actual date, date-time, period, or age when the procedure was performed.  Allows a period to support complex procedures that span more than one date, and also allows for the length of the procedure to be captured.",
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                "type": "string"
              },
              "_performedDateTime": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "performedPeriod": {
                "description": "A time period defined by a start and end date and optionally time.",
                "additionalProperties": false
              },
              "performedString": {
                "description": "Estimated or actual date, date-time, period, or age when the procedure was performed.  Allows a period to support complex procedures that span more than one date, and also allows for the length of the procedure to be captured.",
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string"
              },
              "_performedString": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "performedAge": {
                "description": "Estimated or actual date, date-time, period, or age when the procedure was performed.  Allows a period to support complex procedures that span more than one date, and also allows for the length of the procedure to be captured.",
                "additionalProperties": false
              },
              "performedRange": {
                "description": "Estimated or actual date, date-time, period, or age when the procedure was performed.  Allows a period to support complex procedures that span more than one date, and also allows for the length of the procedure to be captured.",
                "additionalProperties": false
              },
              "recorder": {
                "description": "A reference from one resource to another.",
                "additionalProperties": false
              },
              "asserter": {
                "description": "A reference from one resource to another.",
                "additionalProperties": false
              },
              "performer": {
                "description": "Limited to \"real\" people rather than equipment.",
                "items": {
                  "description": "An action that is or was performed on or for a patient. This can be a physical intervention like an operation, or less invasive like long term services, counseling, or hypnotherapy.",
                  "properties": {
                    "id": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "type": "array"
                    },
                    "modifierExtension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                      "type": "array"
                    },
                    "function": {
                      "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                      "additionalProperties": false
                    },
                    "actor": {
                      "description": "A reference from one resource to another.",
                      "additionalProperties": false
                    },
                    "onBehalfOf": {
                      "description": "A reference from one resource to another.",
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false,
                  "required": [
                    "actor"
                  ]
                },
                "type": "array"
              },
              "location": {
                "description": "A reference from one resource to another.",
                "additionalProperties": false
              },
              "reasonCode": {
                "description": "The coded reason why the procedure was performed. This may be a coded entity of some type, or may simply be present as text.",
                "type": "array"
              },
              "reasonReference": {
                "description": "The justification of why the procedure was performed.",
                "type": "array"
              },
              "bodySite": {
                "description": "Detailed and structured anatomical location information. Multiple locations are allowed - e.g. multiple punch biopsies of a lesion.",
                "type": "array"
              },
              "outcome": {
                "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                "additionalProperties": false
              },
              "report": {
                "description": "This could be a histology result, pathology report, surgical report, etc.",
                "type": "array"
              },
              "complication": {
                "description": "Any complications that occurred during the procedure, or in the immediate post-performance period. These are generally tracked separately from the notes, which will typically describe the procedure itself rather than any 'post procedure' issues.",
                "type": "array"
              },
              "complicationDetail": {
                "description": "Any complications that occurred during the procedure, or in the immediate post-performance period.",
                "type": "array"
              },
              "followUp": {
                "description": "If the procedure required specific follow up - e.g. removal of sutures. The follow up may be represented as a simple note or could potentially be more complex, in which case the CarePlan resource can be used.",
                "type": "array"
              },
              "note": {
                "description": "Any other notes and comments about the procedure.",
                "type": "array"
              },
              "focalDevice": {
                "description": "A device that is implanted, removed or otherwise manipulated (calibration, battery replacement, fitting a prosthesis, attaching a wound-vac, etc.) as a focal portion of the Procedure.",
                "items": {
                  "description": "An action that is or was performed on or for a patient. This can be a physical intervention like an operation, or less invasive like long term services, counseling, or hypnotherapy.",
                  "properties": {
                    "id": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "type": "array"
                    },
                    "modifierExtension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                      "type": "array"
                    },
                    "action": {
                      "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                      "additionalProperties": false
                    },
                    "manipulated": {
                      "description": "A reference from one resource to another.",
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false,
                  "required": [
                    "manipulated"
                  ]
                },
                "type": "array"
              },
              "usedReference": {
                "description": "Identifies medications, devices and any other substance used as part of the procedure.",
                "type": "array"
              },
              "usedCode": {
                "description": "Identifies coded items that were used as part of the procedure.",
                "type": "array"
              }
            },
            "additionalProperties": false,
            "required": [
              "subject",
              "resourceType"
            ]
          },
          {
            "description": "Provenance of a resource is a record that describes entities and processes involved in producing and delivering or otherwise influencing that resource. Provenance provides a critical foundation for assessing authenticity, enabling trust, and allowing reproducibility. Provenance assertions are a form of contextual metadata and can themselves become important records with their own provenance. Provenance statement indicates clinical significance in terms of confidence in authenticity, reliability, and trustworthiness, integrity, and stage in lifecycle (e.g. Document Completion - has the artifact been legally authenticated), all of which may impact security, privacy, and trust policies.",
            "properties": {
              "resourceType": {
                "description": "This is a Provenance resource",
                "const": "Provenance"
              },
              "id": {
                "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                "type": "string",
                "description": "Any combination of letters, numerals, \"-\" and \".\", with a length limit of 64 characters.  (This might be an integer, an unprefixed OID, UUID or any other identifier pattern that meets these constraints.)  Ids are case-insensitive."
              },
              "meta": {
                "description": "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
                "additionalProperties": false
              },
              "implicitRules": {
                "pattern": "^\\S*$",
                "type": "string",
                "description": "String of characters used to identify a name or a resource"
              },
              "_implicitRules": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "language": {
                "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                "type": "string",
                "description": "A string which has at least one character and no leading or trailing whitespace and where there is no whitespace other than single spaces in the contents"
              },
              "_language": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "text": {
                "description": "A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it \"clinically safe\" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.",
                "additionalProperties": false
              },
              "contained": {
                "description": "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope.",
                "type": "array"
              },
              "extension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                "type": "array"
              },
              "modifierExtension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                "type": "array"
              },
              "target": {
                "description": "The Reference(s) that were generated or updated by  the activity described in this resource. A provenance can point to more than one target if multiple resources were created/updated by the same activity.",
                "type": "array"
              },
              "occurredPeriod": {
                "description": "A time period defined by a start and end date and optionally time.",
                "additionalProperties": false
              },
              "occurredDateTime": {
                "description": "The period during which the activity occurred.",
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                "type": "string"
              },
              "_occurredDateTime": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "recorded": {
                "description": "The instant of time at which the activity was recorded.",
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
                "type": "string"
              },
              "_recorded": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "policy": {
                "description": "Policy or plan the activity was defined by. Typically, a single activity may have multiple applicable policy documents, such as patient consent, guarantor funding, etc.",
                "type": "array"
              },
              "_policy": {
                "description": "Extensions for policy",
                "type": "array"
              },
              "location": {
                "description": "A reference from one resource to another.",
                "additionalProperties": false
              },
              "reason": {
                "description": "The reason that the activity was taking place.",
                "type": "array"
              },
              "activity": {
                "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                "additionalProperties": false
              },
              "agent": {
                "description": "An actor taking a role in an activity  for which it can be assigned some degree of responsibility for the activity taking place.",
                "items": {
                  "description": "Provenance of a resource is a record that describes entities and processes involved in producing and delivering or otherwise influencing that resource. Provenance provides a critical foundation for assessing authenticity, enabling trust, and allowing reproducibility. Provenance assertions are a form of contextual metadata and can themselves become important records with their own provenance. Provenance statement indicates clinical significance in terms of confidence in authenticity, reliability, and trustworthiness, integrity, and stage in lifecycle (e.g. Document Completion - has the artifact been legally authenticated), all of which may impact security, privacy, and trust policies.",
                  "properties": {
                    "id": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "type": "array"
                    },
                    "modifierExtension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                      "type": "array"
                    },
                    "type": {
                      "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                      "additionalProperties": false
                    },
                    "role": {
                      "description": "The function of the agent with respect to the activity. The security role enabling the agent with respect to the activity.",
                      "type": "array"
                    },
                    "who": {
                      "description": "A reference from one resource to another.",
                      "additionalProperties": false
                    },
                    "onBehalfOf": {
                      "description": "A reference from one resource to another.",
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false,
                  "required": [
                    "who"
                  ]
                },
                "type": "array"
              },
              "entity": {
                "description": "An entity used in this activity.",
                "items": {
                  "description": "Provenance of a resource is a record that describes entities and processes involved in producing and delivering or otherwise influencing that resource. Provenance provides a critical foundation for assessing authenticity, enabling trust, and allowing reproducibility. Provenance assertions are a form of contextual metadata and can themselves become important records with their own provenance. Provenance statement indicates clinical significance in terms of confidence in authenticity, reliability, and trustworthiness, integrity, and stage in lifecycle (e.g. Document Completion - has the artifact been legally authenticated), all of which may impact security, privacy, and trust policies.",
                  "properties": {
                    "id": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "type": "array"
                    },
                    "modifierExtension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                      "type": "array"
                    },
                    "role": {
                      "description": "How the entity was used during the activity.",
                      "enum": [
                        "derivation",
                        "revision",
                        "quotation",
                        "source",
                        "removal"
                      ]
                    },
                    "_role": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "what": {
                      "description": "A reference from one resource to another.",
                      "additionalProperties": false
                    },
                    "agent": {
                      "description": "The entity is attributed to an agent to express the agent's responsibility for that entity, possibly along with other agents. This description can be understood as shorthand for saying that the agent was responsible for the activity which generated the entity.",
                      "type": "array"
                    }
                  },
                  "additionalProperties": false,
                  "required": [
                    "what"
                  ]
                },
                "type": "array"
              },
              "signature": {
                "description": "A digital signature on the target Reference(s). The signer should match a Provenance.agent. The purpose of the signature is indicated.",
                "type": "array"
              }
            },
            "additionalProperties": false,
            "required": [
              "agent",
              "resourceType",
              "target"
            ]
          },
          {
            "description": "A structured set of questions intended to guide the collection of answers from end-users. Questionnaires provide detailed control over order, presentation, phraseology and grouping to allow coherent, consistent data collection.",
            "properties": {
              "resourceType": {
                "description": "This is a Questionnaire resource",
                "const": "Questionnaire"
              },
              "id": {
                "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                "type": "string",
                "description": "Any combination of letters, numerals, \"-\" and \".\", with a length limit of 64 characters.  (This might be an integer, an unprefixed OID, UUID or any other identifier pattern that meets these constraints.)  Ids are case-insensitive."
              },
              "meta": {
                "description": "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
                "additionalProperties": false
              },
              "implicitRules": {
                "pattern": "^\\S*$",
                "type": "string",
                "description": "String of characters used to identify a name or a resource"
              },
              "_implicitRules": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "language": {
                "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                "type": "string",
                "description": "A string which has at least one character and no leading or trailing whitespace and where there is no whitespace other than single spaces in the contents"
              },
              "_language": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "text": {
                "description": "A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it \"clinically safe\" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.",
                "additionalProperties": false
              },
              "contained": {
                "description": "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope.",
                "type": "array"
              },
              "extension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                "type": "array"
              },
              "modifierExtension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                "type": "array"
              },
              "url": {
                "pattern": "^\\S*$",
                "type": "string",
                "description": "String of characters used to identify a name or a resource"
              },
              "_url": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "identifier": {
                "description": "A formal identifier that is used to identify this questionnaire when it is represented in other formats, or referenced in a specification, model, design or an instance.",
                "type": "array"
              },
              "version": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "_version": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "name": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "_name": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "title": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "_title": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "derivedFrom": {
                "description": "The URL of a Questionnaire that this Questionnaire is based on.",
                "type": "array"
              },
              "status": {
                "description": "The status of this questionnaire. Enables tracking the life-cycle of the content.",
                "enum": [
                  "draft",
                  "active",
                  "retired",
                  "unknown"
                ]
              },
              "_status": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "experimental": {
                "description": "A Boolean value to indicate that this questionnaire is authored for testing purposes (or education/evaluation/marketing) and is not intended to be used for genuine usage.",
                "pattern": "^true|false$",
                "type": "boolean"
              },
              "_experimental": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "subjectType": {
                "description": "The types of subjects that can be the subject of responses created for the questionnaire.",
                "type": "array"
              },
              "_subjectType": {
                "description": "Extensions for subjectType",
                "type": "array"
              },
              "date": {
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                "type": "string",
                "description": "A date, date-time or partial date (e.g. just year or year + month).  If hours and minutes are specified, a time zone SHALL be populated. The format is a union of the schema types gYear, gYearMonth, date and dateTime. Seconds must be provided due to schema type constraints but may be zero-filled and may be ignored.                 Dates SHALL be valid dates."
              },
              "_date": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "publisher": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "_publisher": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "contact": {
                "description": "Contact details to assist a user in finding and communicating with the publisher.",
                "type": "array"
              },
              "description": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A string that may contain Github Flavored Markdown syntax for optional processing by a mark down presentation engine"
              },
              "_description": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "useContext": {
                "description": "The content was developed with a focus and intent of supporting the contexts that are listed. These contexts may be general categories (gender, age, ...) or may be references to specific programs (insurance plans, studies, ...) and may be used to assist with indexing and searching for appropriate questionnaire instances.",
                "type": "array"
              },
              "jurisdiction": {
                "description": "A legal or geographic region in which the questionnaire is intended to be used.",
                "type": "array"
              },
              "purpose": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A string that may contain Github Flavored Markdown syntax for optional processing by a mark down presentation engine"
              },
              "_purpose": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "copyright": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A string that may contain Github Flavored Markdown syntax for optional processing by a mark down presentation engine"
              },
              "_copyright": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "approvalDate": {
                "description": "The date on which the resource content was approved by the publisher. Approval happens once when the content is officially approved for usage.",
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                "type": "string"
              },
              "_approvalDate": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "lastReviewDate": {
                "description": "The date on which the resource content was last reviewed. Review happens periodically after approval but does not change the original approval date.",
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                "type": "string"
              },
              "_lastReviewDate": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "effectivePeriod": {
                "description": "A time period defined by a start and end date and optionally time.",
                "additionalProperties": false
              },
              "code": {
                "description": "An identifier for this question or group of questions in a particular terminology such as LOINC.",
                "type": "array"
              },
              "item": {
                "description": "A particular question, question grouping or display text that is part of the questionnaire.",
                "items": {
                  "description": "A structured set of questions intended to guide the collection of answers from end-users. Questionnaires provide detailed control over order, presentation, phraseology and grouping to allow coherent, consistent data collection.",
                  "properties": {
                    "id": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "type": "array"
                    },
                    "modifierExtension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                      "type": "array"
                    },
                    "linkId": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "_linkId": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "definition": {
                      "pattern": "^\\S*$",
                      "type": "string",
                      "description": "String of characters used to identify a name or a resource"
                    },
                    "_definition": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "code": {
                      "description": "A terminology code that corresponds to this group or question (e.g. a code from LOINC, which defines many questions and answers).",
                      "type": "array"
                    },
                    "prefix": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "_prefix": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "text": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "_text": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "type": {
                      "description": "The type of questionnaire item this is - whether text for display, a grouping of other items or a particular type of data to be captured (string, integer, coded choice, etc.).",
                      "enum": [
                        "group",
                        "display",
                        "boolean",
                        "decimal",
                        "integer",
                        "date",
                        "dateTime",
                        "time",
                        "string",
                        "text",
                        "url",
                        "choice",
                        "open-choice",
                        "attachment",
                        "reference",
                        "quantity"
                      ]
                    },
                    "_type": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "enableWhen": {
                      "description": "A constraint indicating that this item should only be enabled (displayed/allow answers to be captured) when the specified condition is true.",
                      "items": {
                        "description": "A structured set of questions intended to guide the collection of answers from end-users. Questionnaires provide detailed control over order, presentation, phraseology and grouping to allow coherent, consistent data collection.",
                        "properties": {
                          "id": {
                            "pattern": "^[ \\r\\n\\t\\S]+$",
                            "type": "string",
                            "description": "A sequence of Unicode characters"
                          },
                          "extension": {
                            "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                            "type": "array"
                          },
                          "modifierExtension": {
                            "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                            "type": "array"
                          },
                          "question": {
                            "pattern": "^[ \\r\\n\\t\\S]+$",
                            "type": "string",
                            "description": "A sequence of Unicode characters"
                          },
                          "_question": {
                            "description": "Base definition for all elements in a resource.",
                            "additionalProperties": false
                          },
                          "operator": {
                            "description": "Specifies the criteria by which the question is enabled.",
                            "enum": [
                              "exists",
                              "=",
                              "!=",
                              ">",
                              "<",
                              ">=",
                              "<="
                            ]
                          },
                          "_operator": {
                            "description": "Base definition for all elements in a resource.",
                            "additionalProperties": false
                          },
                          "answerBoolean": {
                            "description": "A value that the referenced question is tested using the specified operator in order for the item to be enabled.",
                            "pattern": "^true|false$",
                            "type": "boolean"
                          },
                          "_answerBoolean": {
                            "description": "Base definition for all elements in a resource.",
                            "additionalProperties": false
                          },
                          "answerDecimal": {
                            "description": "A value that the referenced question is tested using the specified operator in order for the item to be enabled.",
                            "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                            "type": "number"
                          },
                          "_answerDecimal": {
                            "description": "Base definition for all elements in a resource.",
                            "additionalProperties": false
                          },
                          "answerInteger": {
                            "description": "A value that the referenced question is tested using the specified operator in order for the item to be enabled.",
                            "pattern": "^-?([0]|([1-9][0-9]*))$",
                            "type": "number"
                          },
                          "_answerInteger": {
                            "description": "Base definition for all elements in a resource.",
                            "additionalProperties": false
                          },
                          "answerDate": {
                            "description": "A value that the referenced question is tested using the specified operator in order for the item to be enabled.",
                            "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                            "type": "string"
                          },
                          "_answerDate": {
                            "description": "Base definition for all elements in a resource.",
                            "additionalProperties": false
                          },
                          "answerDateTime": {
                            "description": "A value that the referenced question is tested using the specified operator in order for the item to be enabled.",
                            "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                            "type": "string"
                          },
                          "_answerDateTime": {
                            "description": "Base definition for all elements in a resource.",
                            "additionalProperties": false
                          },
                          "answerTime": {
                            "description": "A value that the referenced question is tested using the specified operator in order for the item to be enabled.",
                            "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$",
                            "type": "string"
                          },
                          "_answerTime": {
                            "description": "Base definition for all elements in a resource.",
                            "additionalProperties": false
                          },
                          "answerString": {
                            "description": "A value that the referenced question is tested using the specified operator in order for the item to be enabled.",
                            "pattern": "^[ \\r\\n\\t\\S]+$",
                            "type": "string"
                          },
                          "_answerString": {
                            "description": "Base definition for all elements in a resource.",
                            "additionalProperties": false
                          },
                          "answerCoding": {
                            "description": "A reference to a code defined by a terminology system.",
                            "additionalProperties": false
                          },
                          "answerQuantity": {
                            "description": "A measured amount (or an amount that can potentially be measured). Note that measured amounts include amounts that are not precisely quantified, including amounts involving arbitrary units and floating currencies.",
                            "additionalProperties": false
                          },
                          "answerReference": {
                            "description": "A reference from one resource to another.",
                            "additionalProperties": false
                          }
                        },
                        "additionalProperties": false
                      },
                      "type": "array"
                    },
                    "enableBehavior": {
                      "description": "Controls how multiple enableWhen values are interpreted -  whether all or any must be true.",
                      "enum": [
                        "all",
                        "any"
                      ]
                    },
                    "_enableBehavior": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "required": {
                      "description": "An indication, if true, that the item must be present in a \"completed\" QuestionnaireResponse.  If false, the item may be skipped when answering the questionnaire.",
                      "pattern": "^true|false$",
                      "type": "boolean"
                    },
                    "_required": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "repeats": {
                      "description": "An indication, if true, that the item may occur multiple times in the response, collecting multiple answers for questions or multiple sets of answers for groups.",
                      "pattern": "^true|false$",
                      "type": "boolean"
                    },
                    "_repeats": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "readOnly": {
                      "description": "An indication, when true, that the value cannot be changed by a human respondent to the Questionnaire.",
                      "pattern": "^true|false$",
                      "type": "boolean"
                    },
                    "_readOnly": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "maxLength": {
                      "pattern": "^-?([0]|([1-9][0-9]*))$",
                      "type": "number",
                      "description": "A whole number"
                    },
                    "_maxLength": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "answerValueSet": {
                      "pattern": "^\\S*$",
                      "type": "string",
                      "description": "A URI that is a reference to a canonical URL on a FHIR resource"
                    },
                    "answerOption": {
                      "description": "One of the permitted answers for a \"choice\" or \"open-choice\" question.",
                      "items": {
                        "description": "A structured set of questions intended to guide the collection of answers from end-users. Questionnaires provide detailed control over order, presentation, phraseology and grouping to allow coherent, consistent data collection.",
                        "properties": {
                          "id": {
                            "pattern": "^[ \\r\\n\\t\\S]+$",
                            "type": "string",
                            "description": "A sequence of Unicode characters"
                          },
                          "extension": {
                            "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                            "type": "array"
                          },
                          "modifierExtension": {
                            "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                            "type": "array"
                          },
                          "valueInteger": {
                            "description": "A potential answer that's allowed as the answer to this question.",
                            "pattern": "^-?([0]|([1-9][0-9]*))$",
                            "type": "number"
                          },
                          "_valueInteger": {
                            "description": "Base definition for all elements in a resource.",
                            "additionalProperties": false
                          },
                          "valueDate": {
                            "description": "A potential answer that's allowed as the answer to this question.",
                            "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                            "type": "string"
                          },
                          "_valueDate": {
                            "description": "Base definition for all elements in a resource.",
                            "additionalProperties": false
                          },
                          "valueTime": {
                            "description": "A potential answer that's allowed as the answer to this question.",
                            "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$",
                            "type": "string"
                          },
                          "_valueTime": {
                            "description": "Base definition for all elements in a resource.",
                            "additionalProperties": false
                          },
                          "valueString": {
                            "description": "A potential answer that's allowed as the answer to this question.",
                            "pattern": "^[ \\r\\n\\t\\S]+$",
                            "type": "string"
                          },
                          "_valueString": {
                            "description": "Base definition for all elements in a resource.",
                            "additionalProperties": false
                          },
                          "valueCoding": {
                            "description": "A reference to a code defined by a terminology system.",
                            "additionalProperties": false
                          },
                          "valueReference": {
                            "description": "A reference from one resource to another.",
                            "additionalProperties": false
                          },
                          "initialSelected": {
                            "description": "Indicates whether the answer value is selected when the list of possible answers is initially shown.",
                            "pattern": "^true|false$",
                            "type": "boolean"
                          },
                          "_initialSelected": {
                            "description": "Base definition for all elements in a resource.",
                            "additionalProperties": false
                          }
                        },
                        "additionalProperties": false
                      },
                      "type": "array"
                    },
                    "initial": {
                      "description": "One or more values that should be pre-populated in the answer when initially rendering the questionnaire for user input.",
                      "items": {
                        "description": "A structured set of questions intended to guide the collection of answers from end-users. Questionnaires provide detailed control over order, presentation, phraseology and grouping to allow coherent, consistent data collection.",
                        "properties": {
                          "id": {
                            "pattern": "^[ \\r\\n\\t\\S]+$",
                            "type": "string",
                            "description": "A sequence of Unicode characters"
                          },
                          "extension": {
                            "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                            "type": "array"
                          },
                          "modifierExtension": {
                            "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                            "type": "array"
                          },
                          "valueBoolean": {
                            "description": "The actual value to for an initial answer.",
                            "pattern": "^true|false$",
                            "type": "boolean"
                          },
                          "_valueBoolean": {
                            "description": "Base definition for all elements in a resource.",
                            "additionalProperties": false
                          },
                          "valueDecimal": {
                            "description": "The actual value to for an initial answer.",
                            "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                            "type": "number"
                          },
                          "_valueDecimal": {
                            "description": "Base definition for all elements in a resource.",
                            "additionalProperties": false
                          },
                          "valueInteger": {
                            "description": "The actual value to for an initial answer.",
                            "pattern": "^-?([0]|([1-9][0-9]*))$",
                            "type": "number"
                          },
                          "_valueInteger": {
                            "description": "Base definition for all elements in a resource.",
                            "additionalProperties": false
                          },
                          "valueDate": {
                            "description": "The actual value to for an initial answer.",
                            "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                            "type": "string"
                          },
                          "_valueDate": {
                            "description": "Base definition for all elements in a resource.",
                            "additionalProperties": false
                          },
                          "valueDateTime": {
                            "description": "The actual value to for an initial answer.",
                            "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                            "type": "string"
                          },
                          "_valueDateTime": {
                            "description": "Base definition for all elements in a resource.",
                            "additionalProperties": false
                          },
                          "valueTime": {
                            "description": "The actual value to for an initial answer.",
                            "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$",
                            "type": "string"
                          },
                          "_valueTime": {
                            "description": "Base definition for all elements in a resource.",
                            "additionalProperties": false
                          },
                          "valueString": {
                            "description": "The actual value to for an initial answer.",
                            "pattern": "^[ \\r\\n\\t\\S]+$",
                            "type": "string"
                          },
                          "_valueString": {
                            "description": "Base definition for all elements in a resource.",
                            "additionalProperties": false
                          },
                          "valueUri": {
                            "description": "The actual value to for an initial answer.",
                            "pattern": "^\\S*$",
                            "type": "string"
                          },
                          "_valueUri": {
                            "description": "Base definition for all elements in a resource.",
                            "additionalProperties": false
                          },
                          "valueAttachment": {
                            "description": "For referring to data content defined in other formats.",
                            "additionalProperties": false
                          },
                          "valueCoding": {
                            "description": "A reference to a code defined by a terminology system.",
                            "additionalProperties": false
                          },
                          "valueQuantity": {
                            "description": "A measured amount (or an amount that can potentially be measured). Note that measured amounts include amounts that are not precisely quantified, including amounts involving arbitrary units and floating currencies.",
                            "additionalProperties": false
                          },
                          "valueReference": {
                            "description": "A reference from one resource to another.",
                            "additionalProperties": false
                          }
                        },
                        "additionalProperties": false
                      },
                      "type": "array"
                    },
                    "item": {
                      "description": "Text, questions and other groups to be nested beneath a question or group.",
                      "type": "array"
                    }
                  },
                  "additionalProperties": false
                },
                "type": "array"
              }
            },
            "additionalProperties": false,
            "required": [
              "resourceType"
            ]
          },
          {
            "description": "A structured set of questions and their answers. The questions are ordered and grouped into coherent subsets, corresponding to the structure of the grouping of the questionnaire being responded to.",
            "properties": {
              "resourceType": {
                "description": "This is a QuestionnaireResponse resource",
                "const": "QuestionnaireResponse"
              },
              "id": {
                "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                "type": "string",
                "description": "Any combination of letters, numerals, \"-\" and \".\", with a length limit of 64 characters.  (This might be an integer, an unprefixed OID, UUID or any other identifier pattern that meets these constraints.)  Ids are case-insensitive."
              },
              "meta": {
                "description": "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
                "additionalProperties": false
              },
              "implicitRules": {
                "pattern": "^\\S*$",
                "type": "string",
                "description": "String of characters used to identify a name or a resource"
              },
              "_implicitRules": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "language": {
                "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                "type": "string",
                "description": "A string which has at least one character and no leading or trailing whitespace and where there is no whitespace other than single spaces in the contents"
              },
              "_language": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "text": {
                "description": "A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it \"clinically safe\" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.",
                "additionalProperties": false
              },
              "contained": {
                "description": "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope.",
                "type": "array"
              },
              "extension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                "type": "array"
              },
              "modifierExtension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                "type": "array"
              },
              "identifier": {
                "description": "An identifier - identifies some entity uniquely and unambiguously. Typically this is used for business identifiers.",
                "additionalProperties": false
              },
              "basedOn": {
                "description": "The order, proposal or plan that is fulfilled in whole or in part by this QuestionnaireResponse.  For example, a ServiceRequest seeking an intake assessment or a decision support recommendation to assess for post-partum depression.",
                "type": "array"
              },
              "partOf": {
                "description": "A procedure or observation that this questionnaire was performed as part of the execution of.  For example, the surgery a checklist was executed as part of.",
                "type": "array"
              },
              "questionnaire": {
                "pattern": "^\\S*$",
                "type": "string",
                "description": "A URI that is a reference to a canonical URL on a FHIR resource"
              },
              "status": {
                "description": "The position of the questionnaire response within its overall lifecycle.",
                "enum": [
                  "in-progress",
                  "completed",
                  "amended",
                  "entered-in-error",
                  "stopped"
                ]
              },
              "_status": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "subject": {
                "description": "A reference from one resource to another.",
                "additionalProperties": false
              },
              "encounter": {
                "description": "A reference from one resource to another.",
                "additionalProperties": false
              },
              "authored": {
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                "type": "string",
                "description": "A date, date-time or partial date (e.g. just year or year + month).  If hours and minutes are specified, a time zone SHALL be populated. The format is a union of the schema types gYear, gYearMonth, date and dateTime. Seconds must be provided due to schema type constraints but may be zero-filled and may be ignored.                 Dates SHALL be valid dates."
              },
              "_authored": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "author": {
                "description": "A reference from one resource to another.",
                "additionalProperties": false
              },
              "source": {
                "description": "A reference from one resource to another.",
                "additionalProperties": false
              },
              "item": {
                "description": "A group or question item from the original questionnaire for which answers are provided.",
                "items": {
                  "description": "A structured set of questions and their answers. The questions are ordered and grouped into coherent subsets, corresponding to the structure of the grouping of the questionnaire being responded to.",
                  "properties": {
                    "id": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "type": "array"
                    },
                    "modifierExtension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                      "type": "array"
                    },
                    "linkId": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "_linkId": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "definition": {
                      "pattern": "^\\S*$",
                      "type": "string",
                      "description": "String of characters used to identify a name or a resource"
                    },
                    "_definition": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "text": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "_text": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "answer": {
                      "description": "The respondent's answer(s) to the question.",
                      "items": {
                        "description": "A structured set of questions and their answers. The questions are ordered and grouped into coherent subsets, corresponding to the structure of the grouping of the questionnaire being responded to.",
                        "properties": {
                          "id": {
                            "pattern": "^[ \\r\\n\\t\\S]+$",
                            "type": "string",
                            "description": "A sequence of Unicode characters"
                          },
                          "extension": {
                            "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                            "type": "array"
                          },
                          "modifierExtension": {
                            "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                            "type": "array"
                          },
                          "valueBoolean": {
                            "description": "The answer (or one of the answers) provided by the respondent to the question.",
                            "pattern": "^true|false$",
                            "type": "boolean"
                          },
                          "_valueBoolean": {
                            "description": "Base definition for all elements in a resource.",
                            "additionalProperties": false
                          },
                          "valueDecimal": {
                            "description": "The answer (or one of the answers) provided by the respondent to the question.",
                            "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                            "type": "number"
                          },
                          "_valueDecimal": {
                            "description": "Base definition for all elements in a resource.",
                            "additionalProperties": false
                          },
                          "valueInteger": {
                            "description": "The answer (or one of the answers) provided by the respondent to the question.",
                            "pattern": "^-?([0]|([1-9][0-9]*))$",
                            "type": "number"
                          },
                          "_valueInteger": {
                            "description": "Base definition for all elements in a resource.",
                            "additionalProperties": false
                          },
                          "valueDate": {
                            "description": "The answer (or one of the answers) provided by the respondent to the question.",
                            "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                            "type": "string"
                          },
                          "_valueDate": {
                            "description": "Base definition for all elements in a resource.",
                            "additionalProperties": false
                          },
                          "valueDateTime": {
                            "description": "The answer (or one of the answers) provided by the respondent to the question.",
                            "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                            "type": "string"
                          },
                          "_valueDateTime": {
                            "description": "Base definition for all elements in a resource.",
                            "additionalProperties": false
                          },
                          "valueTime": {
                            "description": "The answer (or one of the answers) provided by the respondent to the question.",
                            "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$",
                            "type": "string"
                          },
                          "_valueTime": {
                            "description": "Base definition for all elements in a resource.",
                            "additionalProperties": false
                          },
                          "valueString": {
                            "description": "The answer (or one of the answers) provided by the respondent to the question.",
                            "pattern": "^[ \\r\\n\\t\\S]+$",
                            "type": "string"
                          },
                          "_valueString": {
                            "description": "Base definition for all elements in a resource.",
                            "additionalProperties": false
                          },
                          "valueUri": {
                            "description": "The answer (or one of the answers) provided by the respondent to the question.",
                            "pattern": "^\\S*$",
                            "type": "string"
                          },
                          "_valueUri": {
                            "description": "Base definition for all elements in a resource.",
                            "additionalProperties": false
                          },
                          "valueAttachment": {
                            "description": "For referring to data content defined in other formats.",
                            "additionalProperties": false
                          },
                          "valueCoding": {
                            "description": "A reference to a code defined by a terminology system.",
                            "additionalProperties": false
                          },
                          "valueQuantity": {
                            "description": "A measured amount (or an amount that can potentially be measured). Note that measured amounts include amounts that are not precisely quantified, including amounts involving arbitrary units and floating currencies.",
                            "additionalProperties": false
                          },
                          "valueReference": {
                            "description": "A reference from one resource to another.",
                            "additionalProperties": false
                          },
                          "item": {
                            "description": "Nested groups and/or questions found within this particular answer.",
                            "type": "array"
                          }
                        },
                        "additionalProperties": false
                      },
                      "type": "array"
                    },
                    "item": {
                      "description": "Questions or sub-groups nested beneath a question or group.",
                      "type": "array"
                    }
                  },
                  "additionalProperties": false
                },
                "type": "array"
              }
            },
            "additionalProperties": false,
            "required": [
              "resourceType"
            ]
          },
          {
            "description": "Information about a person that is involved in the care for a patient, but who is not the target of healthcare, nor has a formal responsibility in the care process.",
            "properties": {
              "resourceType": {
                "description": "This is a RelatedPerson resource",
                "const": "RelatedPerson"
              },
              "id": {
                "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                "type": "string",
                "description": "Any combination of letters, numerals, \"-\" and \".\", with a length limit of 64 characters.  (This might be an integer, an unprefixed OID, UUID or any other identifier pattern that meets these constraints.)  Ids are case-insensitive."
              },
              "meta": {
                "description": "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
                "additionalProperties": false
              },
              "implicitRules": {
                "pattern": "^\\S*$",
                "type": "string",
                "description": "String of characters used to identify a name or a resource"
              },
              "_implicitRules": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "language": {
                "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                "type": "string",
                "description": "A string which has at least one character and no leading or trailing whitespace and where there is no whitespace other than single spaces in the contents"
              },
              "_language": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "text": {
                "description": "A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it \"clinically safe\" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.",
                "additionalProperties": false
              },
              "contained": {
                "description": "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope.",
                "type": "array"
              },
              "extension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                "type": "array"
              },
              "modifierExtension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                "type": "array"
              },
              "identifier": {
                "description": "Identifier for a person within a particular scope.",
                "type": "array"
              },
              "active": {
                "description": "Whether this related person record is in active use.",
                "pattern": "^true|false$",
                "type": "boolean"
              },
              "_active": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "patient": {
                "description": "A reference from one resource to another.",
                "additionalProperties": false
              },
              "relationship": {
                "description": "The nature of the relationship between a patient and the related person.",
                "type": "array"
              },
              "name": {
                "description": "A name associated with the person.",
                "type": "array"
              },
              "telecom": {
                "description": "A contact detail for the person, e.g. a telephone number or an email address.",
                "type": "array"
              },
              "gender": {
                "description": "Administrative Gender - the gender that the person is considered to have for administration and record keeping purposes.",
                "enum": [
                  "male",
                  "female",
                  "other",
                  "unknown"
                ]
              },
              "_gender": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "birthDate": {
                "description": "The date on which the related person was born.",
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                "type": "string"
              },
              "_birthDate": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "address": {
                "description": "Address where the related person can be contacted or visited.",
                "type": "array"
              },
              "photo": {
                "description": "Image of the person.",
                "type": "array"
              },
              "period": {
                "description": "A time period defined by a start and end date and optionally time.",
                "additionalProperties": false
              },
              "communication": {
                "description": "A language which may be used to communicate with about the patient's health.",
                "items": {
                  "description": "Information about a person that is involved in the care for a patient, but who is not the target of healthcare, nor has a formal responsibility in the care process.",
                  "properties": {
                    "id": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "type": "array"
                    },
                    "modifierExtension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                      "type": "array"
                    },
                    "language": {
                      "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                      "additionalProperties": false
                    },
                    "preferred": {
                      "description": "Indicates whether or not the patient prefers this language (over other languages he masters up a certain level).",
                      "pattern": "^true|false$",
                      "type": "boolean"
                    },
                    "_preferred": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false,
                  "required": [
                    "language"
                  ]
                },
                "type": "array"
              }
            },
            "additionalProperties": false,
            "required": [
              "patient",
              "resourceType"
            ]
          },
          {
            "description": "A group of related requests that can be used to capture intended activities that have inter-dependencies such as \"give this medication after that one\".",
            "properties": {
              "resourceType": {
                "description": "This is a RequestGroup resource",
                "const": "RequestGroup"
              },
              "id": {
                "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                "type": "string",
                "description": "Any combination of letters, numerals, \"-\" and \".\", with a length limit of 64 characters.  (This might be an integer, an unprefixed OID, UUID or any other identifier pattern that meets these constraints.)  Ids are case-insensitive."
              },
              "meta": {
                "description": "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
                "additionalProperties": false
              },
              "implicitRules": {
                "pattern": "^\\S*$",
                "type": "string",
                "description": "String of characters used to identify a name or a resource"
              },
              "_implicitRules": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "language": {
                "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                "type": "string",
                "description": "A string which has at least one character and no leading or trailing whitespace and where there is no whitespace other than single spaces in the contents"
              },
              "_language": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "text": {
                "description": "A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it \"clinically safe\" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.",
                "additionalProperties": false
              },
              "contained": {
                "description": "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope.",
                "type": "array"
              },
              "extension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                "type": "array"
              },
              "modifierExtension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                "type": "array"
              },
              "identifier": {
                "description": "Allows a service to provide a unique, business identifier for the request.",
                "type": "array"
              },
              "instantiatesCanonical": {
                "description": "A canonical URL referencing a FHIR-defined protocol, guideline, orderset or other definition that is adhered to in whole or in part by this request.",
                "type": "array"
              },
              "_instantiatesCanonical": {
                "description": "Extensions for instantiatesCanonical",
                "type": "array"
              },
              "instantiatesUri": {
                "description": "A URL referencing an externally defined protocol, guideline, orderset or other definition that is adhered to in whole or in part by this request.",
                "type": "array"
              },
              "_instantiatesUri": {
                "description": "Extensions for instantiatesUri",
                "type": "array"
              },
              "basedOn": {
                "description": "A plan, proposal or order that is fulfilled in whole or in part by this request.",
                "type": "array"
              },
              "replaces": {
                "description": "Completed or terminated request(s) whose function is taken by this new request.",
                "type": "array"
              },
              "groupIdentifier": {
                "description": "An identifier - identifies some entity uniquely and unambiguously. Typically this is used for business identifiers.",
                "additionalProperties": false
              },
              "status": {
                "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                "type": "string",
                "description": "A string which has at least one character and no leading or trailing whitespace and where there is no whitespace other than single spaces in the contents"
              },
              "_status": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "intent": {
                "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                "type": "string",
                "description": "A string which has at least one character and no leading or trailing whitespace and where there is no whitespace other than single spaces in the contents"
              },
              "_intent": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "priority": {
                "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                "type": "string",
                "description": "A string which has at least one character and no leading or trailing whitespace and where there is no whitespace other than single spaces in the contents"
              },
              "_priority": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "code": {
                "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                "additionalProperties": false
              },
              "subject": {
                "description": "A reference from one resource to another.",
                "additionalProperties": false
              },
              "encounter": {
                "description": "A reference from one resource to another.",
                "additionalProperties": false
              },
              "authoredOn": {
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                "type": "string",
                "description": "A date, date-time or partial date (e.g. just year or year + month).  If hours and minutes are specified, a time zone SHALL be populated. The format is a union of the schema types gYear, gYearMonth, date and dateTime. Seconds must be provided due to schema type constraints but may be zero-filled and may be ignored.                 Dates SHALL be valid dates."
              },
              "_authoredOn": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "author": {
                "description": "A reference from one resource to another.",
                "additionalProperties": false
              },
              "reasonCode": {
                "description": "Describes the reason for the request group in coded or textual form.",
                "type": "array"
              },
              "reasonReference": {
                "description": "Indicates another resource whose existence justifies this request group.",
                "type": "array"
              },
              "note": {
                "description": "Provides a mechanism to communicate additional information about the response.",
                "type": "array"
              },
              "action": {
                "description": "The actions, if any, produced by the evaluation of the artifact.",
                "items": {
                  "description": "A group of related requests that can be used to capture intended activities that have inter-dependencies such as \"give this medication after that one\".",
                  "properties": {
                    "id": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "type": "array"
                    },
                    "modifierExtension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                      "type": "array"
                    },
                    "prefix": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "_prefix": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "title": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "_title": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "description": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "_description": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "textEquivalent": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "_textEquivalent": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "priority": {
                      "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                      "type": "string",
                      "description": "A string which has at least one character and no leading or trailing whitespace and where there is no whitespace other than single spaces in the contents"
                    },
                    "_priority": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "code": {
                      "description": "A code that provides meaning for the action or action group. For example, a section may have a LOINC code for a section of a documentation template.",
                      "type": "array"
                    },
                    "documentation": {
                      "description": "Didactic or other informational resources associated with the action that can be provided to the CDS recipient. Information resources can include inline text commentary and links to web resources.",
                      "type": "array"
                    },
                    "condition": {
                      "description": "An expression that describes applicability criteria, or start/stop conditions for the action.",
                      "items": {
                        "description": "A group of related requests that can be used to capture intended activities that have inter-dependencies such as \"give this medication after that one\".",
                        "properties": {
                          "id": {
                            "pattern": "^[ \\r\\n\\t\\S]+$",
                            "type": "string",
                            "description": "A sequence of Unicode characters"
                          },
                          "extension": {
                            "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                            "type": "array"
                          },
                          "modifierExtension": {
                            "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                            "type": "array"
                          },
                          "kind": {
                            "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                            "type": "string",
                            "description": "A string which has at least one character and no leading or trailing whitespace and where there is no whitespace other than single spaces in the contents"
                          },
                          "_kind": {
                            "description": "Base definition for all elements in a resource.",
                            "additionalProperties": false
                          },
                          "expression": {
                            "description": "An expression that returns true or false, indicating whether or not the condition is satisfied.",
                            "additionalProperties": false
                          }
                        },
                        "additionalProperties": false
                      },
                      "type": "array"
                    },
                    "relatedAction": {
                      "description": "A relationship to another action such as \"before\" or \"30-60 minutes after start of\".",
                      "items": {
                        "description": "A group of related requests that can be used to capture intended activities that have inter-dependencies such as \"give this medication after that one\".",
                        "properties": {
                          "id": {
                            "pattern": "^[ \\r\\n\\t\\S]+$",
                            "type": "string",
                            "description": "A sequence of Unicode characters"
                          },
                          "extension": {
                            "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                            "type": "array"
                          },
                          "modifierExtension": {
                            "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                            "type": "array"
                          },
                          "actionId": {
                            "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                            "type": "string",
                            "description": "Any combination of letters, numerals, \"-\" and \".\", with a length limit of 64 characters.  (This might be an integer, an unprefixed OID, UUID or any other identifier pattern that meets these constraints.)  Ids are case-insensitive."
                          },
                          "_actionId": {
                            "description": "Base definition for all elements in a resource.",
                            "additionalProperties": false
                          },
                          "relationship": {
                            "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                            "type": "string",
                            "description": "A string which has at least one character and no leading or trailing whitespace and where there is no whitespace other than single spaces in the contents"
                          },
                          "_relationship": {
                            "description": "Base definition for all elements in a resource.",
                            "additionalProperties": false
                          },
                          "offsetDuration": {
                            "description": "A duration or range of durations to apply to the relationship. For example, 30-60 minutes before.",
                            "additionalProperties": false
                          },
                          "offsetRange": {
                            "description": "A duration or range of durations to apply to the relationship. For example, 30-60 minutes before.",
                            "additionalProperties": false
                          }
                        },
                        "additionalProperties": false
                      },
                      "type": "array"
                    },
                    "timingDateTime": {
                      "description": "An optional value describing when the action should be performed.",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                      "type": "string"
                    },
                    "_timingDateTime": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "timingAge": {
                      "description": "An optional value describing when the action should be performed.",
                      "additionalProperties": false
                    },
                    "timingPeriod": {
                      "description": "A time period defined by a start and end date and optionally time.",
                      "additionalProperties": false
                    },
                    "timingDuration": {
                      "description": "An optional value describing when the action should be performed.",
                      "additionalProperties": false
                    },
                    "timingRange": {
                      "description": "An optional value describing when the action should be performed.",
                      "additionalProperties": false
                    },
                    "timingTiming": {
                      "description": "Specifies an event that may occur multiple times. Timing schedules are used to record when things are planned, expected or requested to occur. The most common usage is in dosage instructions for medications. They are also used when planning care of various kinds, and may be used for reporting the schedule to which past regular activities were carried out.",
                      "additionalProperties": false
                    },
                    "participant": {
                      "description": "The participant that should perform or be responsible for this action.",
                      "type": "array"
                    },
                    "type": {
                      "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                      "additionalProperties": false
                    },
                    "groupingBehavior": {
                      "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                      "type": "string",
                      "description": "A string which has at least one character and no leading or trailing whitespace and where there is no whitespace other than single spaces in the contents"
                    },
                    "_groupingBehavior": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "selectionBehavior": {
                      "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                      "type": "string",
                      "description": "A string which has at least one character and no leading or trailing whitespace and where there is no whitespace other than single spaces in the contents"
                    },
                    "_selectionBehavior": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "requiredBehavior": {
                      "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                      "type": "string",
                      "description": "A string which has at least one character and no leading or trailing whitespace and where there is no whitespace other than single spaces in the contents"
                    },
                    "_requiredBehavior": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "precheckBehavior": {
                      "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                      "type": "string",
                      "description": "A string which has at least one character and no leading or trailing whitespace and where there is no whitespace other than single spaces in the contents"
                    },
                    "_precheckBehavior": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "cardinalityBehavior": {
                      "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                      "type": "string",
                      "description": "A string which has at least one character and no leading or trailing whitespace and where there is no whitespace other than single spaces in the contents"
                    },
                    "_cardinalityBehavior": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "resource": {
                      "description": "A reference from one resource to another.",
                      "additionalProperties": false
                    },
                    "action": {
                      "description": "Sub actions.",
                      "type": "array"
                    }
                  },
                  "additionalProperties": false
                },
                "type": "array"
              }
            },
            "additionalProperties": false,
            "required": [
              "resourceType"
            ]
          },
          {
            "description": "The ResearchDefinition resource describes the conditional state (population and any exposures being compared within the population) and outcome (if specified) that the knowledge (evidence, assertion, recommendation) is about.",
            "properties": {
              "resourceType": {
                "description": "This is a ResearchDefinition resource",
                "const": "ResearchDefinition"
              },
              "id": {
                "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                "type": "string",
                "description": "Any combination of letters, numerals, \"-\" and \".\", with a length limit of 64 characters.  (This might be an integer, an unprefixed OID, UUID or any other identifier pattern that meets these constraints.)  Ids are case-insensitive."
              },
              "meta": {
                "description": "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
                "additionalProperties": false
              },
              "implicitRules": {
                "pattern": "^\\S*$",
                "type": "string",
                "description": "String of characters used to identify a name or a resource"
              },
              "_implicitRules": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "language": {
                "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                "type": "string",
                "description": "A string which has at least one character and no leading or trailing whitespace and where there is no whitespace other than single spaces in the contents"
              },
              "_language": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "text": {
                "description": "A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it \"clinically safe\" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.",
                "additionalProperties": false
              },
              "contained": {
                "description": "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope.",
                "type": "array"
              },
              "extension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                "type": "array"
              },
              "modifierExtension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                "type": "array"
              },
              "url": {
                "pattern": "^\\S*$",
                "type": "string",
                "description": "String of characters used to identify a name or a resource"
              },
              "_url": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "identifier": {
                "description": "A formal identifier that is used to identify this research definition when it is represented in other formats, or referenced in a specification, model, design or an instance.",
                "type": "array"
              },
              "version": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "_version": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "name": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "_name": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "title": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "_title": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "shortTitle": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "_shortTitle": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "subtitle": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "_subtitle": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "status": {
                "description": "The status of this research definition. Enables tracking the life-cycle of the content.",
                "enum": [
                  "draft",
                  "active",
                  "retired",
                  "unknown"
                ]
              },
              "_status": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "experimental": {
                "description": "A Boolean value to indicate that this research definition is authored for testing purposes (or education/evaluation/marketing) and is not intended to be used for genuine usage.",
                "pattern": "^true|false$",
                "type": "boolean"
              },
              "_experimental": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "subjectCodeableConcept": {
                "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                "additionalProperties": false
              },
              "subjectReference": {
                "description": "A reference from one resource to another.",
                "additionalProperties": false
              },
              "date": {
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                "type": "string",
                "description": "A date, date-time or partial date (e.g. just year or year + month).  If hours and minutes are specified, a time zone SHALL be populated. The format is a union of the schema types gYear, gYearMonth, date and dateTime. Seconds must be provided due to schema type constraints but may be zero-filled and may be ignored.                 Dates SHALL be valid dates."
              },
              "_date": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "publisher": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "_publisher": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "contact": {
                "description": "Contact details to assist a user in finding and communicating with the publisher.",
                "type": "array"
              },
              "description": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A string that may contain Github Flavored Markdown syntax for optional processing by a mark down presentation engine"
              },
              "_description": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "comment": {
                "description": "A human-readable string to clarify or explain concepts about the resource.",
                "type": "array"
              },
              "_comment": {
                "description": "Extensions for comment",
                "type": "array"
              },
              "useContext": {
                "description": "The content was developed with a focus and intent of supporting the contexts that are listed. These contexts may be general categories (gender, age, ...) or may be references to specific programs (insurance plans, studies, ...) and may be used to assist with indexing and searching for appropriate research definition instances.",
                "type": "array"
              },
              "jurisdiction": {
                "description": "A legal or geographic region in which the research definition is intended to be used.",
                "type": "array"
              },
              "purpose": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A string that may contain Github Flavored Markdown syntax for optional processing by a mark down presentation engine"
              },
              "_purpose": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "usage": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "_usage": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "copyright": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A string that may contain Github Flavored Markdown syntax for optional processing by a mark down presentation engine"
              },
              "_copyright": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "approvalDate": {
                "description": "The date on which the resource content was approved by the publisher. Approval happens once when the content is officially approved for usage.",
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                "type": "string"
              },
              "_approvalDate": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "lastReviewDate": {
                "description": "The date on which the resource content was last reviewed. Review happens periodically after approval but does not change the original approval date.",
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                "type": "string"
              },
              "_lastReviewDate": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "effectivePeriod": {
                "description": "A time period defined by a start and end date and optionally time.",
                "additionalProperties": false
              },
              "topic": {
                "description": "Descriptive topics related to the content of the ResearchDefinition. Topics provide a high-level categorization grouping types of ResearchDefinitions that can be useful for filtering and searching.",
                "type": "array"
              },
              "author": {
                "description": "An individiual or organization primarily involved in the creation and maintenance of the content.",
                "type": "array"
              },
              "editor": {
                "description": "An individual or organization primarily responsible for internal coherence of the content.",
                "type": "array"
              },
              "reviewer": {
                "description": "An individual or organization primarily responsible for review of some aspect of the content.",
                "type": "array"
              },
              "endorser": {
                "description": "An individual or organization responsible for officially endorsing the content for use in some setting.",
                "type": "array"
              },
              "relatedArtifact": {
                "description": "Related artifacts such as additional documentation, justification, or bibliographic references.",
                "type": "array"
              },
              "library": {
                "description": "A reference to a Library resource containing the formal logic used by the ResearchDefinition.",
                "type": "array"
              },
              "population": {
                "description": "A reference from one resource to another.",
                "additionalProperties": false
              },
              "exposure": {
                "description": "A reference from one resource to another.",
                "additionalProperties": false
              },
              "exposureAlternative": {
                "description": "A reference from one resource to another.",
                "additionalProperties": false
              },
              "outcome": {
                "description": "A reference from one resource to another.",
                "additionalProperties": false
              }
            },
            "additionalProperties": false,
            "required": [
              "resourceType",
              "population"
            ]
          },
          {
            "description": "The ResearchElementDefinition resource describes a \"PICO\" element that knowledge (evidence, assertion, recommendation) is about.",
            "properties": {
              "resourceType": {
                "description": "This is a ResearchElementDefinition resource",
                "const": "ResearchElementDefinition"
              },
              "id": {
                "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                "type": "string",
                "description": "Any combination of letters, numerals, \"-\" and \".\", with a length limit of 64 characters.  (This might be an integer, an unprefixed OID, UUID or any other identifier pattern that meets these constraints.)  Ids are case-insensitive."
              },
              "meta": {
                "description": "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
                "additionalProperties": false
              },
              "implicitRules": {
                "pattern": "^\\S*$",
                "type": "string",
                "description": "String of characters used to identify a name or a resource"
              },
              "_implicitRules": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "language": {
                "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                "type": "string",
                "description": "A string which has at least one character and no leading or trailing whitespace and where there is no whitespace other than single spaces in the contents"
              },
              "_language": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "text": {
                "description": "A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it \"clinically safe\" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.",
                "additionalProperties": false
              },
              "contained": {
                "description": "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope.",
                "type": "array"
              },
              "extension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                "type": "array"
              },
              "modifierExtension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                "type": "array"
              },
              "url": {
                "pattern": "^\\S*$",
                "type": "string",
                "description": "String of characters used to identify a name or a resource"
              },
              "_url": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "identifier": {
                "description": "A formal identifier that is used to identify this research element definition when it is represented in other formats, or referenced in a specification, model, design or an instance.",
                "type": "array"
              },
              "version": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "_version": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "name": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "_name": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "title": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "_title": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "shortTitle": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "_shortTitle": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "subtitle": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "_subtitle": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "status": {
                "description": "The status of this research element definition. Enables tracking the life-cycle of the content.",
                "enum": [
                  "draft",
                  "active",
                  "retired",
                  "unknown"
                ]
              },
              "_status": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "experimental": {
                "description": "A Boolean value to indicate that this research element definition is authored for testing purposes (or education/evaluation/marketing) and is not intended to be used for genuine usage.",
                "pattern": "^true|false$",
                "type": "boolean"
              },
              "_experimental": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "subjectCodeableConcept": {
                "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                "additionalProperties": false
              },
              "subjectReference": {
                "description": "A reference from one resource to another.",
                "additionalProperties": false
              },
              "date": {
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                "type": "string",
                "description": "A date, date-time or partial date (e.g. just year or year + month).  If hours and minutes are specified, a time zone SHALL be populated. The format is a union of the schema types gYear, gYearMonth, date and dateTime. Seconds must be provided due to schema type constraints but may be zero-filled and may be ignored.                 Dates SHALL be valid dates."
              },
              "_date": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "publisher": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "_publisher": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "contact": {
                "description": "Contact details to assist a user in finding and communicating with the publisher.",
                "type": "array"
              },
              "description": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A string that may contain Github Flavored Markdown syntax for optional processing by a mark down presentation engine"
              },
              "_description": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "comment": {
                "description": "A human-readable string to clarify or explain concepts about the resource.",
                "type": "array"
              },
              "_comment": {
                "description": "Extensions for comment",
                "type": "array"
              },
              "useContext": {
                "description": "The content was developed with a focus and intent of supporting the contexts that are listed. These contexts may be general categories (gender, age, ...) or may be references to specific programs (insurance plans, studies, ...) and may be used to assist with indexing and searching for appropriate research element definition instances.",
                "type": "array"
              },
              "jurisdiction": {
                "description": "A legal or geographic region in which the research element definition is intended to be used.",
                "type": "array"
              },
              "purpose": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A string that may contain Github Flavored Markdown syntax for optional processing by a mark down presentation engine"
              },
              "_purpose": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "usage": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "_usage": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "copyright": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A string that may contain Github Flavored Markdown syntax for optional processing by a mark down presentation engine"
              },
              "_copyright": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "approvalDate": {
                "description": "The date on which the resource content was approved by the publisher. Approval happens once when the content is officially approved for usage.",
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                "type": "string"
              },
              "_approvalDate": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "lastReviewDate": {
                "description": "The date on which the resource content was last reviewed. Review happens periodically after approval but does not change the original approval date.",
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                "type": "string"
              },
              "_lastReviewDate": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "effectivePeriod": {
                "description": "A time period defined by a start and end date and optionally time.",
                "additionalProperties": false
              },
              "topic": {
                "description": "Descriptive topics related to the content of the ResearchElementDefinition. Topics provide a high-level categorization grouping types of ResearchElementDefinitions that can be useful for filtering and searching.",
                "type": "array"
              },
              "author": {
                "description": "An individiual or organization primarily involved in the creation and maintenance of the content.",
                "type": "array"
              },
              "editor": {
                "description": "An individual or organization primarily responsible for internal coherence of the content.",
                "type": "array"
              },
              "reviewer": {
                "description": "An individual or organization primarily responsible for review of some aspect of the content.",
                "type": "array"
              },
              "endorser": {
                "description": "An individual or organization responsible for officially endorsing the content for use in some setting.",
                "type": "array"
              },
              "relatedArtifact": {
                "description": "Related artifacts such as additional documentation, justification, or bibliographic references.",
                "type": "array"
              },
              "library": {
                "description": "A reference to a Library resource containing the formal logic used by the ResearchElementDefinition.",
                "type": "array"
              },
              "type": {
                "description": "The type of research element, a population, an exposure, or an outcome.",
                "enum": [
                  "population",
                  "exposure",
                  "outcome"
                ]
              },
              "_type": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "variableType": {
                "description": "The type of the outcome (e.g. Dichotomous, Continuous, or Descriptive).",
                "enum": [
                  "dichotomous",
                  "continuous",
                  "descriptive"
                ]
              },
              "_variableType": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "characteristic": {
                "description": "A characteristic that defines the members of the research element. Multiple characteristics are applied with \"and\" semantics.",
                "items": {
                  "description": "The ResearchElementDefinition resource describes a \"PICO\" element that knowledge (evidence, assertion, recommendation) is about.",
                  "properties": {
                    "id": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "type": "array"
                    },
                    "modifierExtension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                      "type": "array"
                    },
                    "definitionCodeableConcept": {
                      "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                      "additionalProperties": false
                    },
                    "definitionCanonical": {
                      "description": "Define members of the research element using Codes (such as condition, medication, or observation), Expressions ( using an expression language such as FHIRPath or CQL) or DataRequirements (such as Diabetes diagnosis onset in the last year).",
                      "pattern": "^\\S*$",
                      "type": "string"
                    },
                    "_definitionCanonical": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "definitionExpression": {
                      "description": "Define members of the research element using Codes (such as condition, medication, or observation), Expressions ( using an expression language such as FHIRPath or CQL) or DataRequirements (such as Diabetes diagnosis onset in the last year).",
                      "additionalProperties": false
                    },
                    "definitionDataRequirement": {
                      "description": "Describes a required data item for evaluation in terms of the type of data, and optional code or date-based filters of the data.",
                      "additionalProperties": false
                    },
                    "usageContext": {
                      "description": "Use UsageContext to define the members of the population, such as Age Ranges, Genders, Settings.",
                      "type": "array"
                    },
                    "exclude": {
                      "description": "When true, members with this characteristic are excluded from the element.",
                      "pattern": "^true|false$",
                      "type": "boolean"
                    },
                    "_exclude": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "unitOfMeasure": {
                      "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                      "additionalProperties": false
                    },
                    "studyEffectiveDescription": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "_studyEffectiveDescription": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "studyEffectiveDateTime": {
                      "description": "Indicates what effective period the study covers.",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                      "type": "string"
                    },
                    "_studyEffectiveDateTime": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "studyEffectivePeriod": {
                      "description": "A time period defined by a start and end date and optionally time.",
                      "additionalProperties": false
                    },
                    "studyEffectiveDuration": {
                      "description": "Indicates what effective period the study covers.",
                      "additionalProperties": false
                    },
                    "studyEffectiveTiming": {
                      "description": "Specifies an event that may occur multiple times. Timing schedules are used to record when things are planned, expected or requested to occur. The most common usage is in dosage instructions for medications. They are also used when planning care of various kinds, and may be used for reporting the schedule to which past regular activities were carried out.",
                      "additionalProperties": false
                    },
                    "studyEffectiveTimeFromStart": {
                      "description": "Indicates duration from the study initiation.",
                      "additionalProperties": false
                    },
                    "studyEffectiveGroupMeasure": {
                      "description": "Indicates how elements are aggregated within the study effective period.",
                      "enum": [
                        "mean",
                        "median",
                        "mean-of-mean",
                        "mean-of-median",
                        "median-of-mean",
                        "median-of-median"
                      ]
                    },
                    "_studyEffectiveGroupMeasure": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "participantEffectiveDescription": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "_participantEffectiveDescription": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "participantEffectiveDateTime": {
                      "description": "Indicates what effective period the study covers.",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                      "type": "string"
                    },
                    "_participantEffectiveDateTime": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "participantEffectivePeriod": {
                      "description": "A time period defined by a start and end date and optionally time.",
                      "additionalProperties": false
                    },
                    "participantEffectiveDuration": {
                      "description": "Indicates what effective period the study covers.",
                      "additionalProperties": false
                    },
                    "participantEffectiveTiming": {
                      "description": "Specifies an event that may occur multiple times. Timing schedules are used to record when things are planned, expected or requested to occur. The most common usage is in dosage instructions for medications. They are also used when planning care of various kinds, and may be used for reporting the schedule to which past regular activities were carried out.",
                      "additionalProperties": false
                    },
                    "participantEffectiveTimeFromStart": {
                      "description": "Indicates duration from the participant's study entry.",
                      "additionalProperties": false
                    },
                    "participantEffectiveGroupMeasure": {
                      "description": "Indicates how elements are aggregated within the study effective period.",
                      "enum": [
                        "mean",
                        "median",
                        "mean-of-mean",
                        "mean-of-median",
                        "median-of-mean",
                        "median-of-median"
                      ]
                    },
                    "_participantEffectiveGroupMeasure": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                },
                "type": "array"
              }
            },
            "additionalProperties": false,
            "required": [
              "characteristic",
              "resourceType"
            ]
          },
          {
            "description": "A process where a researcher or organization plans and then executes a series of steps intended to increase the field of healthcare-related knowledge.  This includes studies of safety, efficacy, comparative effectiveness and other information about medications, devices, therapies and other interventional and investigative techniques.  A ResearchStudy involves the gathering of information about human or animal subjects.",
            "properties": {
              "resourceType": {
                "description": "This is a ResearchStudy resource",
                "const": "ResearchStudy"
              },
              "id": {
                "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                "type": "string",
                "description": "Any combination of letters, numerals, \"-\" and \".\", with a length limit of 64 characters.  (This might be an integer, an unprefixed OID, UUID or any other identifier pattern that meets these constraints.)  Ids are case-insensitive."
              },
              "meta": {
                "description": "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
                "additionalProperties": false
              },
              "implicitRules": {
                "pattern": "^\\S*$",
                "type": "string",
                "description": "String of characters used to identify a name or a resource"
              },
              "_implicitRules": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "language": {
                "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                "type": "string",
                "description": "A string which has at least one character and no leading or trailing whitespace and where there is no whitespace other than single spaces in the contents"
              },
              "_language": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "text": {
                "description": "A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it \"clinically safe\" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.",
                "additionalProperties": false
              },
              "contained": {
                "description": "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope.",
                "type": "array"
              },
              "extension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                "type": "array"
              },
              "modifierExtension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                "type": "array"
              },
              "identifier": {
                "description": "Identifiers assigned to this research study by the sponsor or other systems.",
                "type": "array"
              },
              "title": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "_title": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "protocol": {
                "description": "The set of steps expected to be performed as part of the execution of the study.",
                "type": "array"
              },
              "partOf": {
                "description": "A larger research study of which this particular study is a component or step.",
                "type": "array"
              },
              "status": {
                "description": "The current state of the study.",
                "enum": [
                  "active",
                  "administratively-completed",
                  "approved",
                  "closed-to-accrual",
                  "closed-to-accrual-and-intervention",
                  "completed",
                  "disapproved",
                  "in-review",
                  "temporarily-closed-to-accrual",
                  "temporarily-closed-to-accrual-and-intervention",
                  "withdrawn"
                ]
              },
              "_status": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "primaryPurposeType": {
                "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                "additionalProperties": false
              },
              "phase": {
                "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                "additionalProperties": false
              },
              "category": {
                "description": "Codes categorizing the type of study such as investigational vs. observational, type of blinding, type of randomization, safety vs. efficacy, etc.",
                "type": "array"
              },
              "focus": {
                "description": "The medication(s), food(s), therapy(ies), device(s) or other concerns or interventions that the study is seeking to gain more information about.",
                "type": "array"
              },
              "condition": {
                "description": "The condition that is the focus of the study.  For example, In a study to examine risk factors for Lupus, might have as an inclusion criterion \"healthy volunteer\", but the target condition code would be a Lupus SNOMED code.",
                "type": "array"
              },
              "contact": {
                "description": "Contact details to assist a user in learning more about or engaging with the study.",
                "type": "array"
              },
              "relatedArtifact": {
                "description": "Citations, references and other related documents.",
                "type": "array"
              },
              "keyword": {
                "description": "Key terms to aid in searching for or filtering the study.",
                "type": "array"
              },
              "location": {
                "description": "Indicates a country, state or other region where the study is taking place.",
                "type": "array"
              },
              "description": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A string that may contain Github Flavored Markdown syntax for optional processing by a mark down presentation engine"
              },
              "_description": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "enrollment": {
                "description": "Reference to a Group that defines the criteria for and quantity of subjects participating in the study.  E.g. \" 200 female Europeans between the ages of 20 and 45 with early onset diabetes\".",
                "type": "array"
              },
              "period": {
                "description": "A time period defined by a start and end date and optionally time.",
                "additionalProperties": false
              },
              "sponsor": {
                "description": "A reference from one resource to another.",
                "additionalProperties": false
              },
              "principalInvestigator": {
                "description": "A reference from one resource to another.",
                "additionalProperties": false
              },
              "site": {
                "description": "A facility in which study activities are conducted.",
                "type": "array"
              },
              "reasonStopped": {
                "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                "additionalProperties": false
              },
              "note": {
                "description": "Comments made about the study by the performer, subject or other participants.",
                "type": "array"
              },
              "arm": {
                "description": "Describes an expected sequence of events for one of the participants of a study.  E.g. Exposure to drug A, wash-out, exposure to drug B, wash-out, follow-up.",
                "items": {
                  "description": "A process where a researcher or organization plans and then executes a series of steps intended to increase the field of healthcare-related knowledge.  This includes studies of safety, efficacy, comparative effectiveness and other information about medications, devices, therapies and other interventional and investigative techniques.  A ResearchStudy involves the gathering of information about human or animal subjects.",
                  "properties": {
                    "id": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "type": "array"
                    },
                    "modifierExtension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                      "type": "array"
                    },
                    "name": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "_name": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "type": {
                      "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                      "additionalProperties": false
                    },
                    "description": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "_description": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                },
                "type": "array"
              },
              "objective": {
                "description": "A goal that the study is aiming to achieve in terms of a scientific question to be answered by the analysis of data collected during the study.",
                "items": {
                  "description": "A process where a researcher or organization plans and then executes a series of steps intended to increase the field of healthcare-related knowledge.  This includes studies of safety, efficacy, comparative effectiveness and other information about medications, devices, therapies and other interventional and investigative techniques.  A ResearchStudy involves the gathering of information about human or animal subjects.",
                  "properties": {
                    "id": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "type": "array"
                    },
                    "modifierExtension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                      "type": "array"
                    },
                    "name": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "_name": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "type": {
                      "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                },
                "type": "array"
              }
            },
            "additionalProperties": false,
            "required": [
              "resourceType"
            ]
          },
          {
            "description": "A physical entity which is the primary unit of operational and/or administrative interest in a study.",
            "properties": {
              "resourceType": {
                "description": "This is a ResearchSubject resource",
                "const": "ResearchSubject"
              },
              "id": {
                "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                "type": "string",
                "description": "Any combination of letters, numerals, \"-\" and \".\", with a length limit of 64 characters.  (This might be an integer, an unprefixed OID, UUID or any other identifier pattern that meets these constraints.)  Ids are case-insensitive."
              },
              "meta": {
                "description": "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
                "additionalProperties": false
              },
              "implicitRules": {
                "pattern": "^\\S*$",
                "type": "string",
                "description": "String of characters used to identify a name or a resource"
              },
              "_implicitRules": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "language": {
                "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                "type": "string",
                "description": "A string which has at least one character and no leading or trailing whitespace and where there is no whitespace other than single spaces in the contents"
              },
              "_language": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "text": {
                "description": "A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it \"clinically safe\" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.",
                "additionalProperties": false
              },
              "contained": {
                "description": "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope.",
                "type": "array"
              },
              "extension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                "type": "array"
              },
              "modifierExtension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                "type": "array"
              },
              "identifier": {
                "description": "Identifiers assigned to this research subject for a study.",
                "type": "array"
              },
              "status": {
                "description": "The current state of the subject.",
                "enum": [
                  "candidate",
                  "eligible",
                  "follow-up",
                  "ineligible",
                  "not-registered",
                  "off-study",
                  "on-study",
                  "on-study-intervention",
                  "on-study-observation",
                  "pending-on-study",
                  "potential-candidate",
                  "screening",
                  "withdrawn"
                ]
              },
              "_status": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "period": {
                "description": "A time period defined by a start and end date and optionally time.",
                "additionalProperties": false
              },
              "study": {
                "description": "A reference from one resource to another.",
                "additionalProperties": false
              },
              "individual": {
                "description": "A reference from one resource to another.",
                "additionalProperties": false
              },
              "assignedArm": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "_assignedArm": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "actualArm": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "_actualArm": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "consent": {
                "description": "A reference from one resource to another.",
                "additionalProperties": false
              }
            },
            "additionalProperties": false,
            "required": [
              "study",
              "individual",
              "resourceType"
            ]
          },
          {
            "description": "An assessment of the likely outcome(s) for a patient or other subject as well as the likelihood of each outcome.",
            "properties": {
              "resourceType": {
                "description": "This is a RiskAssessment resource",
                "const": "RiskAssessment"
              },
              "id": {
                "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                "type": "string",
                "description": "Any combination of letters, numerals, \"-\" and \".\", with a length limit of 64 characters.  (This might be an integer, an unprefixed OID, UUID or any other identifier pattern that meets these constraints.)  Ids are case-insensitive."
              },
              "meta": {
                "description": "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
                "additionalProperties": false
              },
              "implicitRules": {
                "pattern": "^\\S*$",
                "type": "string",
                "description": "String of characters used to identify a name or a resource"
              },
              "_implicitRules": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "language": {
                "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                "type": "string",
                "description": "A string which has at least one character and no leading or trailing whitespace and where there is no whitespace other than single spaces in the contents"
              },
              "_language": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "text": {
                "description": "A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it \"clinically safe\" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.",
                "additionalProperties": false
              },
              "contained": {
                "description": "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope.",
                "type": "array"
              },
              "extension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                "type": "array"
              },
              "modifierExtension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                "type": "array"
              },
              "identifier": {
                "description": "Business identifier assigned to the risk assessment.",
                "type": "array"
              },
              "basedOn": {
                "description": "A reference from one resource to another.",
                "additionalProperties": false
              },
              "parent": {
                "description": "A reference from one resource to another.",
                "additionalProperties": false
              },
              "status": {
                "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                "type": "string",
                "description": "A string which has at least one character and no leading or trailing whitespace and where there is no whitespace other than single spaces in the contents"
              },
              "_status": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "method": {
                "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                "additionalProperties": false
              },
              "code": {
                "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                "additionalProperties": false
              },
              "subject": {
                "description": "A reference from one resource to another.",
                "additionalProperties": false
              },
              "encounter": {
                "description": "A reference from one resource to another.",
                "additionalProperties": false
              },
              "occurrenceDateTime": {
                "description": "The date (and possibly time) the risk assessment was performed.",
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                "type": "string"
              },
              "_occurrenceDateTime": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "occurrencePeriod": {
                "description": "A time period defined by a start and end date and optionally time.",
                "additionalProperties": false
              },
              "condition": {
                "description": "A reference from one resource to another.",
                "additionalProperties": false
              },
              "performer": {
                "description": "A reference from one resource to another.",
                "additionalProperties": false
              },
              "reasonCode": {
                "description": "The reason the risk assessment was performed.",
                "type": "array"
              },
              "reasonReference": {
                "description": "Resources supporting the reason the risk assessment was performed.",
                "type": "array"
              },
              "basis": {
                "description": "Indicates the source data considered as part of the assessment (for example, FamilyHistory, Observations, Procedures, Conditions, etc.).",
                "type": "array"
              },
              "prediction": {
                "description": "Describes the expected outcome for the subject.",
                "items": {
                  "description": "An assessment of the likely outcome(s) for a patient or other subject as well as the likelihood of each outcome.",
                  "properties": {
                    "id": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "type": "array"
                    },
                    "modifierExtension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                      "type": "array"
                    },
                    "outcome": {
                      "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                      "additionalProperties": false
                    },
                    "probabilityDecimal": {
                      "description": "Indicates how likely the outcome is (in the specified timeframe).",
                      "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                      "type": "number"
                    },
                    "_probabilityDecimal": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "probabilityRange": {
                      "description": "Indicates how likely the outcome is (in the specified timeframe).",
                      "additionalProperties": false
                    },
                    "qualitativeRisk": {
                      "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                      "additionalProperties": false
                    },
                    "relativeRisk": {
                      "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                      "type": "number",
                      "description": "A rational number with implicit precision"
                    },
                    "_relativeRisk": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "whenPeriod": {
                      "description": "A time period defined by a start and end date and optionally time.",
                      "additionalProperties": false
                    },
                    "whenRange": {
                      "description": "Indicates the period of time or age range of the subject to which the specified probability applies.",
                      "additionalProperties": false
                    },
                    "rationale": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "_rationale": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                },
                "type": "array"
              },
              "mitigation": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "_mitigation": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "note": {
                "description": "Additional comments about the risk assessment.",
                "type": "array"
              }
            },
            "additionalProperties": false,
            "required": [
              "subject",
              "resourceType"
            ]
          },
          {
            "description": "The RiskEvidenceSynthesis resource describes the likelihood of an outcome in a population plus exposure state where the risk estimate is derived from a combination of research studies.",
            "properties": {
              "resourceType": {
                "description": "This is a RiskEvidenceSynthesis resource",
                "const": "RiskEvidenceSynthesis"
              },
              "id": {
                "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                "type": "string",
                "description": "Any combination of letters, numerals, \"-\" and \".\", with a length limit of 64 characters.  (This might be an integer, an unprefixed OID, UUID or any other identifier pattern that meets these constraints.)  Ids are case-insensitive."
              },
              "meta": {
                "description": "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
                "additionalProperties": false
              },
              "implicitRules": {
                "pattern": "^\\S*$",
                "type": "string",
                "description": "String of characters used to identify a name or a resource"
              },
              "_implicitRules": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "language": {
                "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                "type": "string",
                "description": "A string which has at least one character and no leading or trailing whitespace and where there is no whitespace other than single spaces in the contents"
              },
              "_language": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "text": {
                "description": "A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it \"clinically safe\" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.",
                "additionalProperties": false
              },
              "contained": {
                "description": "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope.",
                "type": "array"
              },
              "extension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                "type": "array"
              },
              "modifierExtension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                "type": "array"
              },
              "url": {
                "pattern": "^\\S*$",
                "type": "string",
                "description": "String of characters used to identify a name or a resource"
              },
              "_url": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "identifier": {
                "description": "A formal identifier that is used to identify this risk evidence synthesis when it is represented in other formats, or referenced in a specification, model, design or an instance.",
                "type": "array"
              },
              "version": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "_version": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "name": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "_name": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "title": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "_title": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "status": {
                "description": "The status of this risk evidence synthesis. Enables tracking the life-cycle of the content.",
                "enum": [
                  "draft",
                  "active",
                  "retired",
                  "unknown"
                ]
              },
              "_status": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "date": {
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                "type": "string",
                "description": "A date, date-time or partial date (e.g. just year or year + month).  If hours and minutes are specified, a time zone SHALL be populated. The format is a union of the schema types gYear, gYearMonth, date and dateTime. Seconds must be provided due to schema type constraints but may be zero-filled and may be ignored.                 Dates SHALL be valid dates."
              },
              "_date": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "publisher": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "_publisher": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "contact": {
                "description": "Contact details to assist a user in finding and communicating with the publisher.",
                "type": "array"
              },
              "description": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A string that may contain Github Flavored Markdown syntax for optional processing by a mark down presentation engine"
              },
              "_description": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "note": {
                "description": "A human-readable string to clarify or explain concepts about the resource.",
                "type": "array"
              },
              "useContext": {
                "description": "The content was developed with a focus and intent of supporting the contexts that are listed. These contexts may be general categories (gender, age, ...) or may be references to specific programs (insurance plans, studies, ...) and may be used to assist with indexing and searching for appropriate risk evidence synthesis instances.",
                "type": "array"
              },
              "jurisdiction": {
                "description": "A legal or geographic region in which the risk evidence synthesis is intended to be used.",
                "type": "array"
              },
              "copyright": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A string that may contain Github Flavored Markdown syntax for optional processing by a mark down presentation engine"
              },
              "_copyright": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "approvalDate": {
                "description": "The date on which the resource content was approved by the publisher. Approval happens once when the content is officially approved for usage.",
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                "type": "string"
              },
              "_approvalDate": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "lastReviewDate": {
                "description": "The date on which the resource content was last reviewed. Review happens periodically after approval but does not change the original approval date.",
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                "type": "string"
              },
              "_lastReviewDate": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "effectivePeriod": {
                "description": "A time period defined by a start and end date and optionally time.",
                "additionalProperties": false
              },
              "topic": {
                "description": "Descriptive topics related to the content of the RiskEvidenceSynthesis. Topics provide a high-level categorization grouping types of EffectEvidenceSynthesiss that can be useful for filtering and searching.",
                "type": "array"
              },
              "author": {
                "description": "An individiual or organization primarily involved in the creation and maintenance of the content.",
                "type": "array"
              },
              "editor": {
                "description": "An individual or organization primarily responsible for internal coherence of the content.",
                "type": "array"
              },
              "reviewer": {
                "description": "An individual or organization primarily responsible for review of some aspect of the content.",
                "type": "array"
              },
              "endorser": {
                "description": "An individual or organization responsible for officially endorsing the content for use in some setting.",
                "type": "array"
              },
              "relatedArtifact": {
                "description": "Related artifacts such as additional documentation, justification, or bibliographic references.",
                "type": "array"
              },
              "synthesisType": {
                "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                "additionalProperties": false
              },
              "studyType": {
                "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                "additionalProperties": false
              },
              "population": {
                "description": "A reference from one resource to another.",
                "additionalProperties": false
              },
              "exposure": {
                "description": "A reference from one resource to another.",
                "additionalProperties": false
              },
              "outcome": {
                "description": "A reference from one resource to another.",
                "additionalProperties": false
              },
              "sampleSize": {
                "description": "A description of the size of the sample involved in the synthesis.",
                "properties": {
                  "id": {
                    "pattern": "^[ \\r\\n\\t\\S]+$",
                    "type": "string",
                    "description": "A sequence of Unicode characters"
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "type": "array"
                  },
                  "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                    "type": "array"
                  },
                  "description": {
                    "pattern": "^[ \\r\\n\\t\\S]+$",
                    "type": "string",
                    "description": "A sequence of Unicode characters"
                  },
                  "_description": {
                    "description": "Base definition for all elements in a resource.",
                    "additionalProperties": false
                  },
                  "numberOfStudies": {
                    "pattern": "^-?([0]|([1-9][0-9]*))$",
                    "type": "number",
                    "description": "A whole number"
                  },
                  "_numberOfStudies": {
                    "description": "Base definition for all elements in a resource.",
                    "additionalProperties": false
                  },
                  "numberOfParticipants": {
                    "pattern": "^-?([0]|([1-9][0-9]*))$",
                    "type": "number",
                    "description": "A whole number"
                  },
                  "_numberOfParticipants": {
                    "description": "Base definition for all elements in a resource.",
                    "additionalProperties": false
                  }
                },
                "additionalProperties": false
              },
              "riskEstimate": {
                "description": "The estimated risk of the outcome.",
                "properties": {
                  "id": {
                    "pattern": "^[ \\r\\n\\t\\S]+$",
                    "type": "string",
                    "description": "A sequence of Unicode characters"
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "type": "array"
                  },
                  "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                    "type": "array"
                  },
                  "description": {
                    "pattern": "^[ \\r\\n\\t\\S]+$",
                    "type": "string",
                    "description": "A sequence of Unicode characters"
                  },
                  "_description": {
                    "description": "Base definition for all elements in a resource.",
                    "additionalProperties": false
                  },
                  "type": {
                    "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                    "additionalProperties": false
                  },
                  "value": {
                    "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                    "type": "number",
                    "description": "A rational number with implicit precision"
                  },
                  "_value": {
                    "description": "Base definition for all elements in a resource.",
                    "additionalProperties": false
                  },
                  "unitOfMeasure": {
                    "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                    "additionalProperties": false
                  },
                  "denominatorCount": {
                    "pattern": "^-?([0]|([1-9][0-9]*))$",
                    "type": "number",
                    "description": "A whole number"
                  },
                  "_denominatorCount": {
                    "description": "Base definition for all elements in a resource.",
                    "additionalProperties": false
                  },
                  "numeratorCount": {
                    "pattern": "^-?([0]|([1-9][0-9]*))$",
                    "type": "number",
                    "description": "A whole number"
                  },
                  "_numeratorCount": {
                    "description": "Base definition for all elements in a resource.",
                    "additionalProperties": false
                  },
                  "precisionEstimate": {
                    "description": "A description of the precision of the estimate for the effect.",
                    "items": {
                      "description": "The RiskEvidenceSynthesis resource describes the likelihood of an outcome in a population plus exposure state where the risk estimate is derived from a combination of research studies.",
                      "properties": {
                        "id": {
                          "pattern": "^[ \\r\\n\\t\\S]+$",
                          "type": "string",
                          "description": "A sequence of Unicode characters"
                        },
                        "extension": {
                          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                          "type": "array"
                        },
                        "modifierExtension": {
                          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                          "type": "array"
                        },
                        "type": {
                          "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                          "additionalProperties": false
                        },
                        "level": {
                          "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                          "type": "number",
                          "description": "A rational number with implicit precision"
                        },
                        "_level": {
                          "description": "Base definition for all elements in a resource.",
                          "additionalProperties": false
                        },
                        "from": {
                          "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                          "type": "number",
                          "description": "A rational number with implicit precision"
                        },
                        "_from": {
                          "description": "Base definition for all elements in a resource.",
                          "additionalProperties": false
                        },
                        "to": {
                          "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                          "type": "number",
                          "description": "A rational number with implicit precision"
                        },
                        "_to": {
                          "description": "Base definition for all elements in a resource.",
                          "additionalProperties": false
                        }
                      },
                      "additionalProperties": false
                    },
                    "type": "array"
                  }
                },
                "additionalProperties": false
              },
              "certainty": {
                "description": "A description of the certainty of the risk estimate.",
                "items": {
                  "description": "The RiskEvidenceSynthesis resource describes the likelihood of an outcome in a population plus exposure state where the risk estimate is derived from a combination of research studies.",
                  "properties": {
                    "id": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "type": "array"
                    },
                    "modifierExtension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                      "type": "array"
                    },
                    "rating": {
                      "description": "A rating of the certainty of the effect estimate.",
                      "type": "array"
                    },
                    "note": {
                      "description": "A human-readable string to clarify or explain concepts about the resource.",
                      "type": "array"
                    },
                    "certaintySubcomponent": {
                      "description": "A description of a component of the overall certainty.",
                      "items": {
                        "description": "The RiskEvidenceSynthesis resource describes the likelihood of an outcome in a population plus exposure state where the risk estimate is derived from a combination of research studies.",
                        "properties": {
                          "id": {
                            "pattern": "^[ \\r\\n\\t\\S]+$",
                            "type": "string",
                            "description": "A sequence of Unicode characters"
                          },
                          "extension": {
                            "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                            "type": "array"
                          },
                          "modifierExtension": {
                            "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                            "type": "array"
                          },
                          "type": {
                            "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                            "additionalProperties": false
                          },
                          "rating": {
                            "description": "A rating of a subcomponent of rating certainty.",
                            "type": "array"
                          },
                          "note": {
                            "description": "A human-readable string to clarify or explain concepts about the resource.",
                            "type": "array"
                          }
                        },
                        "additionalProperties": false
                      },
                      "type": "array"
                    }
                  },
                  "additionalProperties": false
                },
                "type": "array"
              }
            },
            "additionalProperties": false,
            "required": [
              "outcome",
              "resourceType",
              "population"
            ]
          },
          {
            "description": "A container for slots of time that may be available for booking appointments.",
            "properties": {
              "resourceType": {
                "description": "This is a Schedule resource",
                "const": "Schedule"
              },
              "id": {
                "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                "type": "string",
                "description": "Any combination of letters, numerals, \"-\" and \".\", with a length limit of 64 characters.  (This might be an integer, an unprefixed OID, UUID or any other identifier pattern that meets these constraints.)  Ids are case-insensitive."
              },
              "meta": {
                "description": "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
                "additionalProperties": false
              },
              "implicitRules": {
                "pattern": "^\\S*$",
                "type": "string",
                "description": "String of characters used to identify a name or a resource"
              },
              "_implicitRules": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "language": {
                "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                "type": "string",
                "description": "A string which has at least one character and no leading or trailing whitespace and where there is no whitespace other than single spaces in the contents"
              },
              "_language": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "text": {
                "description": "A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it \"clinically safe\" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.",
                "additionalProperties": false
              },
              "contained": {
                "description": "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope.",
                "type": "array"
              },
              "extension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                "type": "array"
              },
              "modifierExtension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                "type": "array"
              },
              "identifier": {
                "description": "External Ids for this item.",
                "type": "array"
              },
              "active": {
                "description": "Whether this schedule record is in active use or should not be used (such as was entered in error).",
                "pattern": "^true|false$",
                "type": "boolean"
              },
              "_active": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "serviceCategory": {
                "description": "A broad categorization of the service that is to be performed during this appointment.",
                "type": "array"
              },
              "serviceType": {
                "description": "The specific service that is to be performed during this appointment.",
                "type": "array"
              },
              "specialty": {
                "description": "The specialty of a practitioner that would be required to perform the service requested in this appointment.",
                "type": "array"
              },
              "actor": {
                "description": "Slots that reference this schedule resource provide the availability details to these referenced resource(s).",
                "type": "array"
              },
              "planningHorizon": {
                "description": "A time period defined by a start and end date and optionally time.",
                "additionalProperties": false
              },
              "comment": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "_comment": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              }
            },
            "additionalProperties": false,
            "required": [
              "actor",
              "resourceType"
            ]
          },
          {
            "description": "A search parameter that defines a named search item that can be used to search/filter on a resource.",
            "properties": {
              "resourceType": {
                "description": "This is a SearchParameter resource",
                "const": "SearchParameter"
              },
              "id": {
                "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                "type": "string",
                "description": "Any combination of letters, numerals, \"-\" and \".\", with a length limit of 64 characters.  (This might be an integer, an unprefixed OID, UUID or any other identifier pattern that meets these constraints.)  Ids are case-insensitive."
              },
              "meta": {
                "description": "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
                "additionalProperties": false
              },
              "implicitRules": {
                "pattern": "^\\S*$",
                "type": "string",
                "description": "String of characters used to identify a name or a resource"
              },
              "_implicitRules": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "language": {
                "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                "type": "string",
                "description": "A string which has at least one character and no leading or trailing whitespace and where there is no whitespace other than single spaces in the contents"
              },
              "_language": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "text": {
                "description": "A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it \"clinically safe\" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.",
                "additionalProperties": false
              },
              "contained": {
                "description": "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope.",
                "type": "array"
              },
              "extension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                "type": "array"
              },
              "modifierExtension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                "type": "array"
              },
              "url": {
                "pattern": "^\\S*$",
                "type": "string",
                "description": "String of characters used to identify a name or a resource"
              },
              "_url": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "version": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "_version": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "name": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "_name": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "derivedFrom": {
                "pattern": "^\\S*$",
                "type": "string",
                "description": "A URI that is a reference to a canonical URL on a FHIR resource"
              },
              "status": {
                "description": "The status of this search parameter. Enables tracking the life-cycle of the content.",
                "enum": [
                  "draft",
                  "active",
                  "retired",
                  "unknown"
                ]
              },
              "_status": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "experimental": {
                "description": "A Boolean value to indicate that this search parameter is authored for testing purposes (or education/evaluation/marketing) and is not intended to be used for genuine usage.",
                "pattern": "^true|false$",
                "type": "boolean"
              },
              "_experimental": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "date": {
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                "type": "string",
                "description": "A date, date-time or partial date (e.g. just year or year + month).  If hours and minutes are specified, a time zone SHALL be populated. The format is a union of the schema types gYear, gYearMonth, date and dateTime. Seconds must be provided due to schema type constraints but may be zero-filled and may be ignored.                 Dates SHALL be valid dates."
              },
              "_date": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "publisher": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "_publisher": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "contact": {
                "description": "Contact details to assist a user in finding and communicating with the publisher.",
                "type": "array"
              },
              "description": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A string that may contain Github Flavored Markdown syntax for optional processing by a mark down presentation engine"
              },
              "_description": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "useContext": {
                "description": "The content was developed with a focus and intent of supporting the contexts that are listed. These contexts may be general categories (gender, age, ...) or may be references to specific programs (insurance plans, studies, ...) and may be used to assist with indexing and searching for appropriate search parameter instances.",
                "type": "array"
              },
              "jurisdiction": {
                "description": "A legal or geographic region in which the search parameter is intended to be used.",
                "type": "array"
              },
              "purpose": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A string that may contain Github Flavored Markdown syntax for optional processing by a mark down presentation engine"
              },
              "_purpose": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "code": {
                "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                "type": "string",
                "description": "A string which has at least one character and no leading or trailing whitespace and where there is no whitespace other than single spaces in the contents"
              },
              "_code": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "base": {
                "description": "The base resource type(s) that this search parameter can be used against.",
                "type": "array"
              },
              "_base": {
                "description": "Extensions for base",
                "type": "array"
              },
              "type": {
                "description": "The type of value that a search parameter may contain, and how the content is interpreted.",
                "enum": [
                  "number",
                  "date",
                  "string",
                  "token",
                  "reference",
                  "composite",
                  "quantity",
                  "uri",
                  "special"
                ]
              },
              "_type": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "expression": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "_expression": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "xpath": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "_xpath": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "xpathUsage": {
                "description": "How the search parameter relates to the set of elements returned by evaluating the xpath query.",
                "enum": [
                  "normal",
                  "phonetic",
                  "nearby",
                  "distance",
                  "other"
                ]
              },
              "_xpathUsage": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "target": {
                "description": "Types of resource (if a resource is referenced).",
                "type": "array"
              },
              "_target": {
                "description": "Extensions for target",
                "type": "array"
              },
              "multipleOr": {
                "description": "Whether multiple values are allowed for each time the parameter exists. Values are separated by commas, and the parameter matches if any of the values match.",
                "pattern": "^true|false$",
                "type": "boolean"
              },
              "_multipleOr": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "multipleAnd": {
                "description": "Whether multiple parameters are allowed - e.g. more than one parameter with the same name. The search matches if all the parameters match.",
                "pattern": "^true|false$",
                "type": "boolean"
              },
              "_multipleAnd": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "comparator": {
                "description": "Comparators supported for the search parameter.",
                "items": {
                  "enum": [
                    "eq",
                    "ne",
                    "gt",
                    "lt",
                    "ge",
                    "le",
                    "sa",
                    "eb",
                    "ap"
                  ]
                },
                "type": "array"
              },
              "_comparator": {
                "description": "Extensions for comparator",
                "type": "array"
              },
              "modifier": {
                "description": "A modifier supported for the search parameter.",
                "items": {
                  "enum": [
                    "missing",
                    "exact",
                    "contains",
                    "not",
                    "text",
                    "in",
                    "not-in",
                    "below",
                    "above",
                    "type",
                    "identifier",
                    "ofType"
                  ]
                },
                "type": "array"
              },
              "_modifier": {
                "description": "Extensions for modifier",
                "type": "array"
              },
              "chain": {
                "description": "Contains the names of any search parameters which may be chained to the containing search parameter. Chained parameters may be added to search parameters of type reference and specify that resources will only be returned if they contain a reference to a resource which matches the chained parameter value. Values for this field should be drawn from SearchParameter.code for a parameter on the target resource type.",
                "type": "array"
              },
              "_chain": {
                "description": "Extensions for chain",
                "type": "array"
              },
              "component": {
                "description": "Used to define the parts of a composite search parameter.",
                "items": {
                  "description": "A search parameter that defines a named search item that can be used to search/filter on a resource.",
                  "properties": {
                    "id": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "type": "array"
                    },
                    "modifierExtension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                      "type": "array"
                    },
                    "definition": {
                      "pattern": "^\\S*$",
                      "type": "string",
                      "description": "A URI that is a reference to a canonical URL on a FHIR resource"
                    },
                    "expression": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "_expression": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false,
                  "required": [
                    "definition"
                  ]
                },
                "type": "array"
              }
            },
            "additionalProperties": false,
            "required": [
              "resourceType"
            ]
          },
          {
            "description": "A record of a request for service such as diagnostic investigations, treatments, or operations to be performed.",
            "properties": {
              "resourceType": {
                "description": "This is a ServiceRequest resource",
                "const": "ServiceRequest"
              },
              "id": {
                "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                "type": "string",
                "description": "Any combination of letters, numerals, \"-\" and \".\", with a length limit of 64 characters.  (This might be an integer, an unprefixed OID, UUID or any other identifier pattern that meets these constraints.)  Ids are case-insensitive."
              },
              "meta": {
                "description": "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
                "additionalProperties": false
              },
              "implicitRules": {
                "pattern": "^\\S*$",
                "type": "string",
                "description": "String of characters used to identify a name or a resource"
              },
              "_implicitRules": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "language": {
                "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                "type": "string",
                "description": "A string which has at least one character and no leading or trailing whitespace and where there is no whitespace other than single spaces in the contents"
              },
              "_language": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "text": {
                "description": "A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it \"clinically safe\" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.",
                "additionalProperties": false
              },
              "contained": {
                "description": "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope.",
                "type": "array"
              },
              "extension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                "type": "array"
              },
              "modifierExtension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                "type": "array"
              },
              "identifier": {
                "description": "Identifiers assigned to this order instance by the orderer and/or the receiver and/or order fulfiller.",
                "type": "array"
              },
              "instantiatesCanonical": {
                "description": "The URL pointing to a FHIR-defined protocol, guideline, orderset or other definition that is adhered to in whole or in part by this ServiceRequest.",
                "type": "array"
              },
              "instantiatesUri": {
                "description": "The URL pointing to an externally maintained protocol, guideline, orderset or other definition that is adhered to in whole or in part by this ServiceRequest.",
                "type": "array"
              },
              "_instantiatesUri": {
                "description": "Extensions for instantiatesUri",
                "type": "array"
              },
              "basedOn": {
                "description": "Plan/proposal/order fulfilled by this request.",
                "type": "array"
              },
              "replaces": {
                "description": "The request takes the place of the referenced completed or terminated request(s).",
                "type": "array"
              },
              "requisition": {
                "description": "An identifier - identifies some entity uniquely and unambiguously. Typically this is used for business identifiers.",
                "additionalProperties": false
              },
              "status": {
                "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                "type": "string",
                "description": "A string which has at least one character and no leading or trailing whitespace and where there is no whitespace other than single spaces in the contents"
              },
              "_status": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "intent": {
                "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                "type": "string",
                "description": "A string which has at least one character and no leading or trailing whitespace and where there is no whitespace other than single spaces in the contents"
              },
              "_intent": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "category": {
                "description": "A code that classifies the service for searching, sorting and display purposes (e.g. \"Surgical Procedure\").",
                "type": "array"
              },
              "priority": {
                "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                "type": "string",
                "description": "A string which has at least one character and no leading or trailing whitespace and where there is no whitespace other than single spaces in the contents"
              },
              "_priority": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "doNotPerform": {
                "description": "Set this to true if the record is saying that the service/procedure should NOT be performed.",
                "pattern": "^true|false$",
                "type": "boolean"
              },
              "_doNotPerform": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "code": {
                "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                "additionalProperties": false
              },
              "orderDetail": {
                "description": "Additional details and instructions about the how the services are to be delivered.   For example, and order for a urinary catheter may have an order detail for an external or indwelling catheter, or an order for a bandage may require additional instructions specifying how the bandage should be applied.",
                "type": "array"
              },
              "quantityQuantity": {
                "description": "A measured amount (or an amount that can potentially be measured). Note that measured amounts include amounts that are not precisely quantified, including amounts involving arbitrary units and floating currencies.",
                "additionalProperties": false
              },
              "quantityRatio": {
                "description": "An amount of service being requested which can be a quantity ( for example $1,500 home modification), a ratio ( for example, 20 half day visits per month), or a range (2.0 to 1.8 Gy per fraction).",
                "additionalProperties": false
              },
              "quantityRange": {
                "description": "An amount of service being requested which can be a quantity ( for example $1,500 home modification), a ratio ( for example, 20 half day visits per month), or a range (2.0 to 1.8 Gy per fraction).",
                "additionalProperties": false
              },
              "subject": {
                "description": "A reference from one resource to another.",
                "additionalProperties": false
              },
              "encounter": {
                "description": "A reference from one resource to another.",
                "additionalProperties": false
              },
              "occurrenceDateTime": {
                "description": "The date/time at which the requested service should occur.",
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                "type": "string"
              },
              "_occurrenceDateTime": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "occurrencePeriod": {
                "description": "A time period defined by a start and end date and optionally time.",
                "additionalProperties": false
              },
              "occurrenceTiming": {
                "description": "Specifies an event that may occur multiple times. Timing schedules are used to record when things are planned, expected or requested to occur. The most common usage is in dosage instructions for medications. They are also used when planning care of various kinds, and may be used for reporting the schedule to which past regular activities were carried out.",
                "additionalProperties": false
              },
              "asNeededBoolean": {
                "description": "If a CodeableConcept is present, it indicates the pre-condition for performing the service.  For example \"pain\", \"on flare-up\", etc.",
                "pattern": "^true|false$",
                "type": "boolean"
              },
              "_asNeededBoolean": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "asNeededCodeableConcept": {
                "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                "additionalProperties": false
              },
              "authoredOn": {
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                "type": "string",
                "description": "A date, date-time or partial date (e.g. just year or year + month).  If hours and minutes are specified, a time zone SHALL be populated. The format is a union of the schema types gYear, gYearMonth, date and dateTime. Seconds must be provided due to schema type constraints but may be zero-filled and may be ignored.                 Dates SHALL be valid dates."
              },
              "_authoredOn": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "requester": {
                "description": "A reference from one resource to another.",
                "additionalProperties": false
              },
              "performerType": {
                "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                "additionalProperties": false
              },
              "performer": {
                "description": "The desired performer for doing the requested service.  For example, the surgeon, dermatopathologist, endoscopist, etc.",
                "type": "array"
              },
              "locationCode": {
                "description": "The preferred location(s) where the procedure should actually happen in coded or free text form. E.g. at home or nursing day care center.",
                "type": "array"
              },
              "locationReference": {
                "description": "A reference to the the preferred location(s) where the procedure should actually happen. E.g. at home or nursing day care center.",
                "type": "array"
              },
              "reasonCode": {
                "description": "An explanation or justification for why this service is being requested in coded or textual form.   This is often for billing purposes.  May relate to the resources referred to in `supportingInfo`.",
                "type": "array"
              },
              "reasonReference": {
                "description": "Indicates another resource that provides a justification for why this service is being requested.   May relate to the resources referred to in `supportingInfo`.",
                "type": "array"
              },
              "insurance": {
                "description": "Insurance plans, coverage extensions, pre-authorizations and/or pre-determinations that may be needed for delivering the requested service.",
                "type": "array"
              },
              "supportingInfo": {
                "description": "Additional clinical information about the patient or specimen that may influence the services or their interpretations.     This information includes diagnosis, clinical findings and other observations.  In laboratory ordering these are typically referred to as \"ask at order entry questions (AOEs)\".  This includes observations explicitly requested by the producer (filler) to provide context or supporting information needed to complete the order. For example,  reporting the amount of inspired oxygen for blood gas measurements.",
                "type": "array"
              },
              "specimen": {
                "description": "One or more specimens that the laboratory procedure will use.",
                "type": "array"
              },
              "bodySite": {
                "description": "Anatomic location where the procedure should be performed. This is the target site.",
                "type": "array"
              },
              "note": {
                "description": "Any other notes and comments made about the service request. For example, internal billing notes.",
                "type": "array"
              },
              "patientInstruction": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "_patientInstruction": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "relevantHistory": {
                "description": "Key events in the history of the request.",
                "type": "array"
              }
            },
            "additionalProperties": false,
            "required": [
              "subject",
              "resourceType"
            ]
          },
          {
            "description": "A slot of time on a schedule that may be available for booking appointments.",
            "properties": {
              "resourceType": {
                "description": "This is a Slot resource",
                "const": "Slot"
              },
              "id": {
                "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                "type": "string",
                "description": "Any combination of letters, numerals, \"-\" and \".\", with a length limit of 64 characters.  (This might be an integer, an unprefixed OID, UUID or any other identifier pattern that meets these constraints.)  Ids are case-insensitive."
              },
              "meta": {
                "description": "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
                "additionalProperties": false
              },
              "implicitRules": {
                "pattern": "^\\S*$",
                "type": "string",
                "description": "String of characters used to identify a name or a resource"
              },
              "_implicitRules": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "language": {
                "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                "type": "string",
                "description": "A string which has at least one character and no leading or trailing whitespace and where there is no whitespace other than single spaces in the contents"
              },
              "_language": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "text": {
                "description": "A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it \"clinically safe\" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.",
                "additionalProperties": false
              },
              "contained": {
                "description": "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope.",
                "type": "array"
              },
              "extension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                "type": "array"
              },
              "modifierExtension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                "type": "array"
              },
              "identifier": {
                "description": "External Ids for this item.",
                "type": "array"
              },
              "serviceCategory": {
                "description": "A broad categorization of the service that is to be performed during this appointment.",
                "type": "array"
              },
              "serviceType": {
                "description": "The type of appointments that can be booked into this slot (ideally this would be an identifiable service - which is at a location, rather than the location itself). If provided then this overrides the value provided on the availability resource.",
                "type": "array"
              },
              "specialty": {
                "description": "The specialty of a practitioner that would be required to perform the service requested in this appointment.",
                "type": "array"
              },
              "appointmentType": {
                "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                "additionalProperties": false
              },
              "schedule": {
                "description": "A reference from one resource to another.",
                "additionalProperties": false
              },
              "status": {
                "description": "busy | free | busy-unavailable | busy-tentative | entered-in-error.",
                "enum": [
                  "busy",
                  "free",
                  "busy-unavailable",
                  "busy-tentative",
                  "entered-in-error"
                ]
              },
              "_status": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "start": {
                "description": "Date/Time that the slot is to begin.",
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
                "type": "string"
              },
              "_start": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "end": {
                "description": "Date/Time that the slot is to conclude.",
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
                "type": "string"
              },
              "_end": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "overbooked": {
                "description": "This slot has already been overbooked, appointments are unlikely to be accepted for this time.",
                "pattern": "^true|false$",
                "type": "boolean"
              },
              "_overbooked": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "comment": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "_comment": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              }
            },
            "additionalProperties": false,
            "required": [
              "schedule",
              "resourceType"
            ]
          },
          {
            "description": "A sample to be used for analysis.",
            "properties": {
              "resourceType": {
                "description": "This is a Specimen resource",
                "const": "Specimen"
              },
              "id": {
                "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                "type": "string",
                "description": "Any combination of letters, numerals, \"-\" and \".\", with a length limit of 64 characters.  (This might be an integer, an unprefixed OID, UUID or any other identifier pattern that meets these constraints.)  Ids are case-insensitive."
              },
              "meta": {
                "description": "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
                "additionalProperties": false
              },
              "implicitRules": {
                "pattern": "^\\S*$",
                "type": "string",
                "description": "String of characters used to identify a name or a resource"
              },
              "_implicitRules": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "language": {
                "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                "type": "string",
                "description": "A string which has at least one character and no leading or trailing whitespace and where there is no whitespace other than single spaces in the contents"
              },
              "_language": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "text": {
                "description": "A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it \"clinically safe\" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.",
                "additionalProperties": false
              },
              "contained": {
                "description": "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope.",
                "type": "array"
              },
              "extension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                "type": "array"
              },
              "modifierExtension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                "type": "array"
              },
              "identifier": {
                "description": "Id for specimen.",
                "type": "array"
              },
              "accessionIdentifier": {
                "description": "An identifier - identifies some entity uniquely and unambiguously. Typically this is used for business identifiers.",
                "additionalProperties": false
              },
              "status": {
                "description": "The availability of the specimen.",
                "enum": [
                  "available",
                  "unavailable",
                  "unsatisfactory",
                  "entered-in-error"
                ]
              },
              "_status": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "type": {
                "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                "additionalProperties": false
              },
              "subject": {
                "description": "A reference from one resource to another.",
                "additionalProperties": false
              },
              "receivedTime": {
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                "type": "string",
                "description": "A date, date-time or partial date (e.g. just year or year + month).  If hours and minutes are specified, a time zone SHALL be populated. The format is a union of the schema types gYear, gYearMonth, date and dateTime. Seconds must be provided due to schema type constraints but may be zero-filled and may be ignored.                 Dates SHALL be valid dates."
              },
              "_receivedTime": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "parent": {
                "description": "Reference to the parent (source) specimen which is used when the specimen was either derived from or a component of another specimen.",
                "type": "array"
              },
              "request": {
                "description": "Details concerning a service request that required a specimen to be collected.",
                "type": "array"
              },
              "collection": {
                "description": "Details concerning the specimen collection.",
                "properties": {
                  "id": {
                    "pattern": "^[ \\r\\n\\t\\S]+$",
                    "type": "string",
                    "description": "A sequence of Unicode characters"
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "type": "array"
                  },
                  "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                    "type": "array"
                  },
                  "collector": {
                    "description": "A reference from one resource to another.",
                    "additionalProperties": false
                  },
                  "collectedDateTime": {
                    "description": "Time when specimen was collected from subject - the physiologically relevant time.",
                    "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                    "type": "string"
                  },
                  "_collectedDateTime": {
                    "description": "Base definition for all elements in a resource.",
                    "additionalProperties": false
                  },
                  "collectedPeriod": {
                    "description": "A time period defined by a start and end date and optionally time.",
                    "additionalProperties": false
                  },
                  "duration": {
                    "description": "The span of time over which the collection of a specimen occurred.",
                    "additionalProperties": false
                  },
                  "quantity": {
                    "description": "A measured amount (or an amount that can potentially be measured). Note that measured amounts include amounts that are not precisely quantified, including amounts involving arbitrary units and floating currencies.",
                    "additionalProperties": false
                  },
                  "method": {
                    "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                    "additionalProperties": false
                  },
                  "bodySite": {
                    "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                    "additionalProperties": false
                  },
                  "fastingStatusCodeableConcept": {
                    "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                    "additionalProperties": false
                  },
                  "fastingStatusDuration": {
                    "description": "Abstinence or reduction from some or all food, drink, or both, for a period of time prior to sample collection.",
                    "additionalProperties": false
                  }
                },
                "additionalProperties": false
              },
              "processing": {
                "description": "Details concerning processing and processing steps for the specimen.",
                "items": {
                  "description": "A sample to be used for analysis.",
                  "properties": {
                    "id": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "type": "array"
                    },
                    "modifierExtension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                      "type": "array"
                    },
                    "description": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "_description": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "procedure": {
                      "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                      "additionalProperties": false
                    },
                    "additive": {
                      "description": "Material used in the processing step.",
                      "type": "array"
                    },
                    "timeDateTime": {
                      "description": "A record of the time or period when the specimen processing occurred.  For example the time of sample fixation or the period of time the sample was in formalin.",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                      "type": "string"
                    },
                    "_timeDateTime": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "timePeriod": {
                      "description": "A time period defined by a start and end date and optionally time.",
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                },
                "type": "array"
              },
              "container": {
                "description": "The container holding the specimen.  The recursive nature of containers; i.e. blood in tube in tray in rack is not addressed here.",
                "items": {
                  "description": "A sample to be used for analysis.",
                  "properties": {
                    "id": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "type": "array"
                    },
                    "modifierExtension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                      "type": "array"
                    },
                    "identifier": {
                      "description": "Id for container. There may be multiple; a manufacturer's bar code, lab assigned identifier, etc. The container ID may differ from the specimen id in some circumstances.",
                      "type": "array"
                    },
                    "description": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "_description": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "type": {
                      "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                      "additionalProperties": false
                    },
                    "capacity": {
                      "description": "A measured amount (or an amount that can potentially be measured). Note that measured amounts include amounts that are not precisely quantified, including amounts involving arbitrary units and floating currencies.",
                      "additionalProperties": false
                    },
                    "specimenQuantity": {
                      "description": "A measured amount (or an amount that can potentially be measured). Note that measured amounts include amounts that are not precisely quantified, including amounts involving arbitrary units and floating currencies.",
                      "additionalProperties": false
                    },
                    "additiveCodeableConcept": {
                      "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                      "additionalProperties": false
                    },
                    "additiveReference": {
                      "description": "A reference from one resource to another.",
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                },
                "type": "array"
              },
              "condition": {
                "description": "A mode or state of being that describes the nature of the specimen.",
                "type": "array"
              },
              "note": {
                "description": "To communicate any details or issues about the specimen or during the specimen collection. (for example: broken vial, sent with patient, frozen).",
                "type": "array"
              }
            },
            "additionalProperties": false,
            "required": [
              "resourceType"
            ]
          },
          {
            "description": "A kind of specimen with associated set of requirements.",
            "properties": {
              "resourceType": {
                "description": "This is a SpecimenDefinition resource",
                "const": "SpecimenDefinition"
              },
              "id": {
                "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                "type": "string",
                "description": "Any combination of letters, numerals, \"-\" and \".\", with a length limit of 64 characters.  (This might be an integer, an unprefixed OID, UUID or any other identifier pattern that meets these constraints.)  Ids are case-insensitive."
              },
              "meta": {
                "description": "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
                "additionalProperties": false
              },
              "implicitRules": {
                "pattern": "^\\S*$",
                "type": "string",
                "description": "String of characters used to identify a name or a resource"
              },
              "_implicitRules": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "language": {
                "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                "type": "string",
                "description": "A string which has at least one character and no leading or trailing whitespace and where there is no whitespace other than single spaces in the contents"
              },
              "_language": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "text": {
                "description": "A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it \"clinically safe\" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.",
                "additionalProperties": false
              },
              "contained": {
                "description": "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope.",
                "type": "array"
              },
              "extension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                "type": "array"
              },
              "modifierExtension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                "type": "array"
              },
              "identifier": {
                "description": "An identifier - identifies some entity uniquely and unambiguously. Typically this is used for business identifiers.",
                "additionalProperties": false
              },
              "typeCollected": {
                "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                "additionalProperties": false
              },
              "patientPreparation": {
                "description": "Preparation of the patient for specimen collection.",
                "type": "array"
              },
              "timeAspect": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "_timeAspect": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "collection": {
                "description": "The action to be performed for collecting the specimen.",
                "type": "array"
              },
              "typeTested": {
                "description": "Specimen conditioned in a container as expected by the testing laboratory.",
                "items": {
                  "description": "A kind of specimen with associated set of requirements.",
                  "properties": {
                    "id": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "type": "array"
                    },
                    "modifierExtension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                      "type": "array"
                    },
                    "isDerived": {
                      "description": "Primary of secondary specimen.",
                      "pattern": "^true|false$",
                      "type": "boolean"
                    },
                    "_isDerived": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "type": {
                      "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                      "additionalProperties": false
                    },
                    "preference": {
                      "description": "The preference for this type of conditioned specimen.",
                      "enum": [
                        "preferred",
                        "alternate"
                      ]
                    },
                    "_preference": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "container": {
                      "description": "The specimen's container.",
                      "properties": {
                        "id": {
                          "pattern": "^[ \\r\\n\\t\\S]+$",
                          "type": "string",
                          "description": "A sequence of Unicode characters"
                        },
                        "extension": {
                          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                          "type": "array"
                        },
                        "modifierExtension": {
                          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                          "type": "array"
                        },
                        "material": {
                          "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                          "additionalProperties": false
                        },
                        "type": {
                          "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                          "additionalProperties": false
                        },
                        "cap": {
                          "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                          "additionalProperties": false
                        },
                        "description": {
                          "pattern": "^[ \\r\\n\\t\\S]+$",
                          "type": "string",
                          "description": "A sequence of Unicode characters"
                        },
                        "_description": {
                          "description": "Base definition for all elements in a resource.",
                          "additionalProperties": false
                        },
                        "capacity": {
                          "description": "A measured amount (or an amount that can potentially be measured). Note that measured amounts include amounts that are not precisely quantified, including amounts involving arbitrary units and floating currencies.",
                          "additionalProperties": false
                        },
                        "minimumVolumeQuantity": {
                          "description": "A measured amount (or an amount that can potentially be measured). Note that measured amounts include amounts that are not precisely quantified, including amounts involving arbitrary units and floating currencies.",
                          "additionalProperties": false
                        },
                        "minimumVolumeString": {
                          "description": "The minimum volume to be conditioned in the container.",
                          "pattern": "^[ \\r\\n\\t\\S]+$",
                          "type": "string"
                        },
                        "_minimumVolumeString": {
                          "description": "Base definition for all elements in a resource.",
                          "additionalProperties": false
                        },
                        "additive": {
                          "description": "Substance introduced in the kind of container to preserve, maintain or enhance the specimen. Examples: Formalin, Citrate, EDTA.",
                          "items": {
                            "description": "A kind of specimen with associated set of requirements.",
                            "properties": {
                              "id": {
                                "pattern": "^[ \\r\\n\\t\\S]+$",
                                "type": "string",
                                "description": "A sequence of Unicode characters"
                              },
                              "extension": {
                                "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                                "type": "array"
                              },
                              "modifierExtension": {
                                "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                                "type": "array"
                              },
                              "additiveCodeableConcept": {
                                "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                                "additionalProperties": false
                              },
                              "additiveReference": {
                                "description": "A reference from one resource to another.",
                                "additionalProperties": false
                              }
                            },
                            "additionalProperties": false
                          },
                          "type": "array"
                        },
                        "preparation": {
                          "pattern": "^[ \\r\\n\\t\\S]+$",
                          "type": "string",
                          "description": "A sequence of Unicode characters"
                        },
                        "_preparation": {
                          "description": "Base definition for all elements in a resource.",
                          "additionalProperties": false
                        }
                      },
                      "additionalProperties": false
                    },
                    "requirement": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "_requirement": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "retentionTime": {
                      "description": "The usual time that a specimen of this kind is retained after the ordered tests are completed, for the purpose of additional testing.",
                      "additionalProperties": false
                    },
                    "rejectionCriterion": {
                      "description": "Criterion for rejection of the specimen in its container by the laboratory.",
                      "type": "array"
                    },
                    "handling": {
                      "description": "Set of instructions for preservation/transport of the specimen at a defined temperature interval, prior the testing process.",
                      "items": {
                        "description": "A kind of specimen with associated set of requirements.",
                        "properties": {
                          "id": {
                            "pattern": "^[ \\r\\n\\t\\S]+$",
                            "type": "string",
                            "description": "A sequence of Unicode characters"
                          },
                          "extension": {
                            "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                            "type": "array"
                          },
                          "modifierExtension": {
                            "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                            "type": "array"
                          },
                          "temperatureQualifier": {
                            "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                            "additionalProperties": false
                          },
                          "temperatureRange": {
                            "description": "The temperature interval for this set of handling instructions.",
                            "additionalProperties": false
                          },
                          "maxDuration": {
                            "description": "The maximum time interval of preservation of the specimen with these conditions.",
                            "additionalProperties": false
                          },
                          "instruction": {
                            "pattern": "^[ \\r\\n\\t\\S]+$",
                            "type": "string",
                            "description": "A sequence of Unicode characters"
                          },
                          "_instruction": {
                            "description": "Base definition for all elements in a resource.",
                            "additionalProperties": false
                          }
                        },
                        "additionalProperties": false
                      },
                      "type": "array"
                    }
                  },
                  "additionalProperties": false
                },
                "type": "array"
              }
            },
            "additionalProperties": false,
            "required": [
              "resourceType"
            ]
          },
          {
            "description": "A definition of a FHIR structure. This resource is used to describe the underlying resources, data types defined in FHIR, and also for describing extensions and constraints on resources and data types.",
            "properties": {
              "resourceType": {
                "description": "This is a StructureDefinition resource",
                "const": "StructureDefinition"
              },
              "id": {
                "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                "type": "string",
                "description": "Any combination of letters, numerals, \"-\" and \".\", with a length limit of 64 characters.  (This might be an integer, an unprefixed OID, UUID or any other identifier pattern that meets these constraints.)  Ids are case-insensitive."
              },
              "meta": {
                "description": "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
                "additionalProperties": false
              },
              "implicitRules": {
                "pattern": "^\\S*$",
                "type": "string",
                "description": "String of characters used to identify a name or a resource"
              },
              "_implicitRules": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "language": {
                "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                "type": "string",
                "description": "A string which has at least one character and no leading or trailing whitespace and where there is no whitespace other than single spaces in the contents"
              },
              "_language": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "text": {
                "description": "A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it \"clinically safe\" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.",
                "additionalProperties": false
              },
              "contained": {
                "description": "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope.",
                "type": "array"
              },
              "extension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                "type": "array"
              },
              "modifierExtension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                "type": "array"
              },
              "url": {
                "pattern": "^\\S*$",
                "type": "string",
                "description": "String of characters used to identify a name or a resource"
              },
              "_url": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "identifier": {
                "description": "A formal identifier that is used to identify this structure definition when it is represented in other formats, or referenced in a specification, model, design or an instance.",
                "type": "array"
              },
              "version": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "_version": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "name": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "_name": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "title": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "_title": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "status": {
                "description": "The status of this structure definition. Enables tracking the life-cycle of the content.",
                "enum": [
                  "draft",
                  "active",
                  "retired",
                  "unknown"
                ]
              },
              "_status": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "experimental": {
                "description": "A Boolean value to indicate that this structure definition is authored for testing purposes (or education/evaluation/marketing) and is not intended to be used for genuine usage.",
                "pattern": "^true|false$",
                "type": "boolean"
              },
              "_experimental": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "date": {
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                "type": "string",
                "description": "A date, date-time or partial date (e.g. just year or year + month).  If hours and minutes are specified, a time zone SHALL be populated. The format is a union of the schema types gYear, gYearMonth, date and dateTime. Seconds must be provided due to schema type constraints but may be zero-filled and may be ignored.                 Dates SHALL be valid dates."
              },
              "_date": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "publisher": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "_publisher": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "contact": {
                "description": "Contact details to assist a user in finding and communicating with the publisher.",
                "type": "array"
              },
              "description": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A string that may contain Github Flavored Markdown syntax for optional processing by a mark down presentation engine"
              },
              "_description": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "useContext": {
                "description": "The content was developed with a focus and intent of supporting the contexts that are listed. These contexts may be general categories (gender, age, ...) or may be references to specific programs (insurance plans, studies, ...) and may be used to assist with indexing and searching for appropriate structure definition instances.",
                "type": "array"
              },
              "jurisdiction": {
                "description": "A legal or geographic region in which the structure definition is intended to be used.",
                "type": "array"
              },
              "purpose": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A string that may contain Github Flavored Markdown syntax for optional processing by a mark down presentation engine"
              },
              "_purpose": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "copyright": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A string that may contain Github Flavored Markdown syntax for optional processing by a mark down presentation engine"
              },
              "_copyright": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "keyword": {
                "description": "A set of key words or terms from external terminologies that may be used to assist with indexing and searching of templates nby describing the use of this structure definition, or the content it describes.",
                "type": "array"
              },
              "fhirVersion": {
                "description": "The version of the FHIR specification on which this StructureDefinition is based - this is the formal version of the specification, without the revision number, e.g. [publication].[major].[minor], which is 4.0.1. for this version.",
                "enum": [
                  "0.01",
                  "0.05",
                  "0.06",
                  "0.11",
                  "0.0.80",
                  "0.0.81",
                  "0.0.82",
                  "0.4.0",
                  "0.5.0",
                  "1.0.0",
                  "1.0.1",
                  "1.0.2",
                  "1.1.0",
                  "1.4.0",
                  "1.6.0",
                  "1.8.0",
                  "3.0.0",
                  "3.0.1",
                  "3.3.0",
                  "3.5.0",
                  "4.0.0",
                  "4.0.1"
                ]
              },
              "_fhirVersion": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "mapping": {
                "description": "An external specification that the content is mapped to.",
                "items": {
                  "description": "A definition of a FHIR structure. This resource is used to describe the underlying resources, data types defined in FHIR, and also for describing extensions and constraints on resources and data types.",
                  "properties": {
                    "id": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "type": "array"
                    },
                    "modifierExtension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                      "type": "array"
                    },
                    "identity": {
                      "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                      "type": "string",
                      "description": "Any combination of letters, numerals, \"-\" and \".\", with a length limit of 64 characters.  (This might be an integer, an unprefixed OID, UUID or any other identifier pattern that meets these constraints.)  Ids are case-insensitive."
                    },
                    "_identity": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "uri": {
                      "pattern": "^\\S*$",
                      "type": "string",
                      "description": "String of characters used to identify a name or a resource"
                    },
                    "_uri": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "name": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "_name": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "comment": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "_comment": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                },
                "type": "array"
              },
              "kind": {
                "description": "Defines the kind of structure that this definition is describing.",
                "enum": [
                  "primitive-type",
                  "complex-type",
                  "resource",
                  "logical"
                ]
              },
              "_kind": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "abstract": {
                "description": "Whether structure this definition describes is abstract or not  - that is, whether the structure is not intended to be instantiated. For Resources and Data types, abstract types will never be exchanged  between systems.",
                "pattern": "^true|false$",
                "type": "boolean"
              },
              "_abstract": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "context": {
                "description": "Identifies the types of resource or data type elements to which the extension can be applied.",
                "items": {
                  "description": "A definition of a FHIR structure. This resource is used to describe the underlying resources, data types defined in FHIR, and also for describing extensions and constraints on resources and data types.",
                  "properties": {
                    "id": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "type": "array"
                    },
                    "modifierExtension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                      "type": "array"
                    },
                    "type": {
                      "description": "Defines how to interpret the expression that defines what the context of the extension is.",
                      "enum": [
                        "fhirpath",
                        "element",
                        "extension"
                      ]
                    },
                    "_type": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "expression": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "_expression": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                },
                "type": "array"
              },
              "contextInvariant": {
                "description": "A set of rules as FHIRPath Invariants about when the extension can be used (e.g. co-occurrence variants for the extension). All the rules must be true.",
                "type": "array"
              },
              "_contextInvariant": {
                "description": "Extensions for contextInvariant",
                "type": "array"
              },
              "type": {
                "pattern": "^\\S*$",
                "type": "string",
                "description": "String of characters used to identify a name or a resource"
              },
              "_type": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "baseDefinition": {
                "pattern": "^\\S*$",
                "type": "string",
                "description": "A URI that is a reference to a canonical URL on a FHIR resource"
              },
              "derivation": {
                "description": "How the type relates to the baseDefinition.",
                "enum": [
                  "specialization",
                  "constraint"
                ]
              },
              "_derivation": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "snapshot": {
                "description": "A snapshot view is expressed in a standalone form that can be used and interpreted without considering the base StructureDefinition.",
                "properties": {
                  "id": {
                    "pattern": "^[ \\r\\n\\t\\S]+$",
                    "type": "string",
                    "description": "A sequence of Unicode characters"
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "type": "array"
                  },
                  "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                    "type": "array"
                  },
                  "element": {
                    "description": "Captures constraints on each element within the resource.",
                    "items": {
                      "description": "Captures constraints on each element within the resource, profile, or extension.",
                      "properties": {
                        "id": {
                          "pattern": "^[ \\r\\n\\t\\S]+$",
                          "type": "string",
                          "description": "A sequence of Unicode characters"
                        },
                        "extension": {
                          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                          "type": "array"
                        },
                        "modifierExtension": {
                          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                          "type": "array"
                        },
                        "path": {
                          "pattern": "^[ \\r\\n\\t\\S]+$",
                          "type": "string",
                          "description": "A sequence of Unicode characters"
                        },
                        "_path": {
                          "description": "Base definition for all elements in a resource.",
                          "additionalProperties": false
                        },
                        "representation": {
                          "description": "Codes that define how this element is represented in instances, when the deviation varies from the normal case.",
                          "items": {
                            "enum": [
                              "xmlAttr",
                              "xmlText",
                              "typeAttr",
                              "cdaText",
                              "xhtml"
                            ]
                          },
                          "type": "array"
                        },
                        "_representation": {
                          "description": "Extensions for representation",
                          "type": "array"
                        },
                        "sliceName": {
                          "pattern": "^[ \\r\\n\\t\\S]+$",
                          "type": "string",
                          "description": "A sequence of Unicode characters"
                        },
                        "_sliceName": {
                          "description": "Base definition for all elements in a resource.",
                          "additionalProperties": false
                        },
                        "sliceIsConstraining": {
                          "description": "If true, indicates that this slice definition is constraining a slice definition with the same name in an inherited profile. If false, the slice is not overriding any slice in an inherited profile. If missing, the slice might or might not be overriding a slice in an inherited profile, depending on the sliceName.",
                          "pattern": "^true|false$",
                          "type": "boolean"
                        },
                        "_sliceIsConstraining": {
                          "description": "Base definition for all elements in a resource.",
                          "additionalProperties": false
                        },
                        "label": {
                          "pattern": "^[ \\r\\n\\t\\S]+$",
                          "type": "string",
                          "description": "A sequence of Unicode characters"
                        },
                        "_label": {
                          "description": "Base definition for all elements in a resource.",
                          "additionalProperties": false
                        },
                        "code": {
                          "description": "A code that has the same meaning as the element in a particular terminology.",
                          "type": "array"
                        },
                        "slicing": {
                          "description": "Indicates that the element is sliced into a set of alternative definitions (i.e. in a structure definition, there are multiple different constraints on a single element in the base resource). Slicing can be used in any resource that has cardinality ..* on the base resource, or any resource with a choice of types. The set of slices is any elements that come after this in the element sequence that have the same path, until a shorter path occurs (the shorter path terminates the set).",
                          "properties": {
                            "id": {
                              "pattern": "^[ \\r\\n\\t\\S]+$",
                              "type": "string",
                              "description": "A sequence of Unicode characters"
                            },
                            "extension": {
                              "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                              "type": "array"
                            },
                            "modifierExtension": {
                              "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                              "type": "array"
                            },
                            "discriminator": {
                              "description": "Designates which child elements are used to discriminate between the slices when processing an instance. If one or more discriminators are provided, the value of the child elements in the instance data SHALL completely distinguish which slice the element in the resource matches based on the allowed values for those elements in each of the slices.",
                              "items": {
                                "description": "Captures constraints on each element within the resource, profile, or extension.",
                                "properties": {
                                  "id": {
                                    "pattern": "^[ \\r\\n\\t\\S]+$",
                                    "type": "string",
                                    "description": "A sequence of Unicode characters"
                                  },
                                  "extension": {
                                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                                    "type": "array"
                                  },
                                  "modifierExtension": {
                                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                                    "type": "array"
                                  },
                                  "type": {
                                    "description": "How the element value is interpreted when discrimination is evaluated.",
                                    "enum": [
                                      "value",
                                      "exists",
                                      "pattern",
                                      "type",
                                      "profile"
                                    ]
                                  },
                                  "_type": {
                                    "description": "Base definition for all elements in a resource.",
                                    "additionalProperties": false
                                  },
                                  "path": {
                                    "pattern": "^[ \\r\\n\\t\\S]+$",
                                    "type": "string",
                                    "description": "A sequence of Unicode characters"
                                  },
                                  "_path": {
                                    "description": "Base definition for all elements in a resource.",
                                    "additionalProperties": false
                                  }
                                },
                                "additionalProperties": false
                              },
                              "type": "array"
                            },
                            "description": {
                              "pattern": "^[ \\r\\n\\t\\S]+$",
                              "type": "string",
                              "description": "A sequence of Unicode characters"
                            },
                            "_description": {
                              "description": "Base definition for all elements in a resource.",
                              "additionalProperties": false
                            },
                            "ordered": {
                              "description": "If the matching elements have to occur in the same order as defined in the profile.",
                              "pattern": "^true|false$",
                              "type": "boolean"
                            },
                            "_ordered": {
                              "description": "Base definition for all elements in a resource.",
                              "additionalProperties": false
                            },
                            "rules": {
                              "description": "Whether additional slices are allowed or not. When the slices are ordered, profile authors can also say that additional slices are only allowed at the end.",
                              "enum": [
                                "closed",
                                "open",
                                "openAtEnd"
                              ]
                            },
                            "_rules": {
                              "description": "Base definition for all elements in a resource.",
                              "additionalProperties": false
                            }
                          },
                          "additionalProperties": false
                        },
                        "short": {
                          "pattern": "^[ \\r\\n\\t\\S]+$",
                          "type": "string",
                          "description": "A sequence of Unicode characters"
                        },
                        "_short": {
                          "description": "Base definition for all elements in a resource.",
                          "additionalProperties": false
                        },
                        "definition": {
                          "pattern": "^[ \\r\\n\\t\\S]+$",
                          "type": "string",
                          "description": "A string that may contain Github Flavored Markdown syntax for optional processing by a mark down presentation engine"
                        },
                        "_definition": {
                          "description": "Base definition for all elements in a resource.",
                          "additionalProperties": false
                        },
                        "comment": {
                          "pattern": "^[ \\r\\n\\t\\S]+$",
                          "type": "string",
                          "description": "A string that may contain Github Flavored Markdown syntax for optional processing by a mark down presentation engine"
                        },
                        "_comment": {
                          "description": "Base definition for all elements in a resource.",
                          "additionalProperties": false
                        },
                        "requirements": {
                          "pattern": "^[ \\r\\n\\t\\S]+$",
                          "type": "string",
                          "description": "A string that may contain Github Flavored Markdown syntax for optional processing by a mark down presentation engine"
                        },
                        "_requirements": {
                          "description": "Base definition for all elements in a resource.",
                          "additionalProperties": false
                        },
                        "alias": {
                          "description": "Identifies additional names by which this element might also be known.",
                          "type": "array"
                        },
                        "_alias": {
                          "description": "Extensions for alias",
                          "type": "array"
                        },
                        "min": {
                          "pattern": "^[0]|([1-9][0-9]*)$",
                          "type": "number",
                          "description": "An integer with a value that is not negative (e.g. >= 0)"
                        },
                        "_min": {
                          "description": "Base definition for all elements in a resource.",
                          "additionalProperties": false
                        },
                        "max": {
                          "pattern": "^[ \\r\\n\\t\\S]+$",
                          "type": "string",
                          "description": "A sequence of Unicode characters"
                        },
                        "_max": {
                          "description": "Base definition for all elements in a resource.",
                          "additionalProperties": false
                        },
                        "base": {
                          "description": "Information about the base definition of the element, provided to make it unnecessary for tools to trace the deviation of the element through the derived and related profiles. When the element definition is not the original definition of an element - i.g. either in a constraint on another type, or for elements from a super type in a snap shot - then the information in provided in the element definition may be different to the base definition. On the original definition of the element, it will be same.",
                          "properties": {
                            "id": {
                              "pattern": "^[ \\r\\n\\t\\S]+$",
                              "type": "string",
                              "description": "A sequence of Unicode characters"
                            },
                            "extension": {
                              "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                              "type": "array"
                            },
                            "modifierExtension": {
                              "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                              "type": "array"
                            },
                            "path": {
                              "pattern": "^[ \\r\\n\\t\\S]+$",
                              "type": "string",
                              "description": "A sequence of Unicode characters"
                            },
                            "_path": {
                              "description": "Base definition for all elements in a resource.",
                              "additionalProperties": false
                            },
                            "min": {
                              "pattern": "^[0]|([1-9][0-9]*)$",
                              "type": "number",
                              "description": "An integer with a value that is not negative (e.g. >= 0)"
                            },
                            "_min": {
                              "description": "Base definition for all elements in a resource.",
                              "additionalProperties": false
                            },
                            "max": {
                              "pattern": "^[ \\r\\n\\t\\S]+$",
                              "type": "string",
                              "description": "A sequence of Unicode characters"
                            },
                            "_max": {
                              "description": "Base definition for all elements in a resource.",
                              "additionalProperties": false
                            }
                          },
                          "additionalProperties": false
                        },
                        "contentReference": {
                          "pattern": "^\\S*$",
                          "type": "string",
                          "description": "String of characters used to identify a name or a resource"
                        },
                        "_contentReference": {
                          "description": "Base definition for all elements in a resource.",
                          "additionalProperties": false
                        },
                        "type": {
                          "description": "The data type or resource that the value of this element is permitted to be.",
                          "items": {
                            "description": "Captures constraints on each element within the resource, profile, or extension.",
                            "properties": {
                              "id": {
                                "pattern": "^[ \\r\\n\\t\\S]+$",
                                "type": "string",
                                "description": "A sequence of Unicode characters"
                              },
                              "extension": {
                                "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                                "type": "array"
                              },
                              "modifierExtension": {
                                "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                                "type": "array"
                              },
                              "code": {
                                "pattern": "^\\S*$",
                                "type": "string",
                                "description": "String of characters used to identify a name or a resource"
                              },
                              "_code": {
                                "description": "Base definition for all elements in a resource.",
                                "additionalProperties": false
                              },
                              "profile": {
                                "description": "Identifies a profile structure or implementation Guide that applies to the datatype this element refers to. If any profiles are specified, then the content must conform to at least one of them. The URL can be a local reference - to a contained StructureDefinition, or a reference to another StructureDefinition or Implementation Guide by a canonical URL. When an implementation guide is specified, the type SHALL conform to at least one profile defined in the implementation guide.",
                                "type": "array"
                              },
                              "targetProfile": {
                                "description": "Used when the type is \"Reference\" or \"canonical\", and identifies a profile structure or implementation Guide that applies to the target of the reference this element refers to. If any profiles are specified, then the content must conform to at least one of them. The URL can be a local reference - to a contained StructureDefinition, or a reference to another StructureDefinition or Implementation Guide by a canonical URL. When an implementation guide is specified, the target resource SHALL conform to at least one profile defined in the implementation guide.",
                                "type": "array"
                              },
                              "aggregation": {
                                "description": "If the type is a reference to another resource, how the resource is or can be aggregated - is it a contained resource, or a reference, and if the context is a bundle, is it included in the bundle.",
                                "items": {
                                  "enum": [
                                    "contained",
                                    "referenced",
                                    "bundled"
                                  ]
                                },
                                "type": "array"
                              },
                              "_aggregation": {
                                "description": "Extensions for aggregation",
                                "type": "array"
                              },
                              "versioning": {
                                "description": "Whether this reference needs to be version specific or version independent, or whether either can be used.",
                                "enum": [
                                  "either",
                                  "independent",
                                  "specific"
                                ]
                              },
                              "_versioning": {
                                "description": "Base definition for all elements in a resource.",
                                "additionalProperties": false
                              }
                            },
                            "additionalProperties": false
                          },
                          "type": "array"
                        },
                        "defaultValueBase64Binary": {
                          "description": "The value that should be used if there is no value stated in the instance (e.g. 'if not otherwise specified, the abstract is false').",
                          "pattern": "^(\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+$",
                          "type": "string"
                        },
                        "_defaultValueBase64Binary": {
                          "description": "Base definition for all elements in a resource.",
                          "additionalProperties": false
                        },
                        "defaultValueBoolean": {
                          "description": "The value that should be used if there is no value stated in the instance (e.g. 'if not otherwise specified, the abstract is false').",
                          "pattern": "^true|false$",
                          "type": "boolean"
                        },
                        "_defaultValueBoolean": {
                          "description": "Base definition for all elements in a resource.",
                          "additionalProperties": false
                        },
                        "defaultValueCanonical": {
                          "description": "The value that should be used if there is no value stated in the instance (e.g. 'if not otherwise specified, the abstract is false').",
                          "pattern": "^\\S*$",
                          "type": "string"
                        },
                        "_defaultValueCanonical": {
                          "description": "Base definition for all elements in a resource.",
                          "additionalProperties": false
                        },
                        "defaultValueCode": {
                          "description": "The value that should be used if there is no value stated in the instance (e.g. 'if not otherwise specified, the abstract is false').",
                          "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                          "type": "string"
                        },
                        "_defaultValueCode": {
                          "description": "Base definition for all elements in a resource.",
                          "additionalProperties": false
                        },
                        "defaultValueDate": {
                          "description": "The value that should be used if there is no value stated in the instance (e.g. 'if not otherwise specified, the abstract is false').",
                          "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                          "type": "string"
                        },
                        "_defaultValueDate": {
                          "description": "Base definition for all elements in a resource.",
                          "additionalProperties": false
                        },
                        "defaultValueDateTime": {
                          "description": "The value that should be used if there is no value stated in the instance (e.g. 'if not otherwise specified, the abstract is false').",
                          "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                          "type": "string"
                        },
                        "_defaultValueDateTime": {
                          "description": "Base definition for all elements in a resource.",
                          "additionalProperties": false
                        },
                        "defaultValueDecimal": {
                          "description": "The value that should be used if there is no value stated in the instance (e.g. 'if not otherwise specified, the abstract is false').",
                          "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                          "type": "number"
                        },
                        "_defaultValueDecimal": {
                          "description": "Base definition for all elements in a resource.",
                          "additionalProperties": false
                        },
                        "defaultValueId": {
                          "description": "The value that should be used if there is no value stated in the instance (e.g. 'if not otherwise specified, the abstract is false').",
                          "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                          "type": "string"
                        },
                        "_defaultValueId": {
                          "description": "Base definition for all elements in a resource.",
                          "additionalProperties": false
                        },
                        "defaultValueInstant": {
                          "description": "The value that should be used if there is no value stated in the instance (e.g. 'if not otherwise specified, the abstract is false').",
                          "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
                          "type": "string"
                        },
                        "_defaultValueInstant": {
                          "description": "Base definition for all elements in a resource.",
                          "additionalProperties": false
                        },
                        "defaultValueInteger": {
                          "description": "The value that should be used if there is no value stated in the instance (e.g. 'if not otherwise specified, the abstract is false').",
                          "pattern": "^-?([0]|([1-9][0-9]*))$",
                          "type": "number"
                        },
                        "_defaultValueInteger": {
                          "description": "Base definition for all elements in a resource.",
                          "additionalProperties": false
                        },
                        "defaultValueMarkdown": {
                          "description": "The value that should be used if there is no value stated in the instance (e.g. 'if not otherwise specified, the abstract is false').",
                          "pattern": "^[ \\r\\n\\t\\S]+$",
                          "type": "string"
                        },
                        "_defaultValueMarkdown": {
                          "description": "Base definition for all elements in a resource.",
                          "additionalProperties": false
                        },
                        "defaultValueOid": {
                          "description": "The value that should be used if there is no value stated in the instance (e.g. 'if not otherwise specified, the abstract is false').",
                          "pattern": "^urn:oid:[0-2](\\.(0|[1-9][0-9]*))+$",
                          "type": "string"
                        },
                        "_defaultValueOid": {
                          "description": "Base definition for all elements in a resource.",
                          "additionalProperties": false
                        },
                        "defaultValuePositiveInt": {
                          "description": "The value that should be used if there is no value stated in the instance (e.g. 'if not otherwise specified, the abstract is false').",
                          "pattern": "^[1-9][0-9]*$",
                          "type": "number"
                        },
                        "_defaultValuePositiveInt": {
                          "description": "Base definition for all elements in a resource.",
                          "additionalProperties": false
                        },
                        "defaultValueString": {
                          "description": "The value that should be used if there is no value stated in the instance (e.g. 'if not otherwise specified, the abstract is false').",
                          "pattern": "^[ \\r\\n\\t\\S]+$",
                          "type": "string"
                        },
                        "_defaultValueString": {
                          "description": "Base definition for all elements in a resource.",
                          "additionalProperties": false
                        },
                        "defaultValueTime": {
                          "description": "The value that should be used if there is no value stated in the instance (e.g. 'if not otherwise specified, the abstract is false').",
                          "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$",
                          "type": "string"
                        },
                        "_defaultValueTime": {
                          "description": "Base definition for all elements in a resource.",
                          "additionalProperties": false
                        },
                        "defaultValueUnsignedInt": {
                          "description": "The value that should be used if there is no value stated in the instance (e.g. 'if not otherwise specified, the abstract is false').",
                          "pattern": "^[0]|([1-9][0-9]*)$",
                          "type": "number"
                        },
                        "_defaultValueUnsignedInt": {
                          "description": "Base definition for all elements in a resource.",
                          "additionalProperties": false
                        },
                        "defaultValueUri": {
                          "description": "The value that should be used if there is no value stated in the instance (e.g. 'if not otherwise specified, the abstract is false').",
                          "pattern": "^\\S*$",
                          "type": "string"
                        },
                        "_defaultValueUri": {
                          "description": "Base definition for all elements in a resource.",
                          "additionalProperties": false
                        },
                        "defaultValueUrl": {
                          "description": "The value that should be used if there is no value stated in the instance (e.g. 'if not otherwise specified, the abstract is false').",
                          "pattern": "^\\S*$",
                          "type": "string"
                        },
                        "_defaultValueUrl": {
                          "description": "Base definition for all elements in a resource.",
                          "additionalProperties": false
                        },
                        "defaultValueUuid": {
                          "description": "The value that should be used if there is no value stated in the instance (e.g. 'if not otherwise specified, the abstract is false').",
                          "pattern": "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                          "type": "string"
                        },
                        "_defaultValueUuid": {
                          "description": "Base definition for all elements in a resource.",
                          "additionalProperties": false
                        },
                        "defaultValueAddress": {
                          "description": "An address expressed using postal conventions (as opposed to GPS or other location definition formats).  This data type may be used to convey addresses for use in delivering mail as well as for visiting locations which might not be valid for mail delivery.  There are a variety of postal address formats defined around the world.",
                          "additionalProperties": false
                        },
                        "defaultValueAge": {
                          "description": "The value that should be used if there is no value stated in the instance (e.g. 'if not otherwise specified, the abstract is false').",
                          "additionalProperties": false
                        },
                        "defaultValueAnnotation": {
                          "description": "A  text note which also  contains information about who made the statement and when.",
                          "additionalProperties": false
                        },
                        "defaultValueAttachment": {
                          "description": "For referring to data content defined in other formats.",
                          "additionalProperties": false
                        },
                        "defaultValueCodeableConcept": {
                          "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                          "additionalProperties": false
                        },
                        "defaultValueCoding": {
                          "description": "A reference to a code defined by a terminology system.",
                          "additionalProperties": false
                        },
                        "defaultValueContactPoint": {
                          "description": "Details for all kinds of technology mediated contact points for a person or organization, including telephone, email, etc.",
                          "additionalProperties": false
                        },
                        "defaultValueCount": {
                          "description": "The value that should be used if there is no value stated in the instance (e.g. 'if not otherwise specified, the abstract is false').",
                          "additionalProperties": false
                        },
                        "defaultValueDistance": {
                          "description": "The value that should be used if there is no value stated in the instance (e.g. 'if not otherwise specified, the abstract is false').",
                          "additionalProperties": false
                        },
                        "defaultValueDuration": {
                          "description": "The value that should be used if there is no value stated in the instance (e.g. 'if not otherwise specified, the abstract is false').",
                          "additionalProperties": false
                        },
                        "defaultValueHumanName": {
                          "description": "A human's name with the ability to identify parts and usage.",
                          "additionalProperties": false
                        },
                        "defaultValueIdentifier": {
                          "description": "An identifier - identifies some entity uniquely and unambiguously. Typically this is used for business identifiers.",
                          "additionalProperties": false
                        },
                        "defaultValueMoney": {
                          "description": "The value that should be used if there is no value stated in the instance (e.g. 'if not otherwise specified, the abstract is false').",
                          "additionalProperties": false
                        },
                        "defaultValuePeriod": {
                          "description": "A time period defined by a start and end date and optionally time.",
                          "additionalProperties": false
                        },
                        "defaultValueQuantity": {
                          "description": "A measured amount (or an amount that can potentially be measured). Note that measured amounts include amounts that are not precisely quantified, including amounts involving arbitrary units and floating currencies.",
                          "additionalProperties": false
                        },
                        "defaultValueRange": {
                          "description": "The value that should be used if there is no value stated in the instance (e.g. 'if not otherwise specified, the abstract is false').",
                          "additionalProperties": false
                        },
                        "defaultValueRatio": {
                          "description": "The value that should be used if there is no value stated in the instance (e.g. 'if not otherwise specified, the abstract is false').",
                          "additionalProperties": false
                        },
                        "defaultValueReference": {
                          "description": "A reference from one resource to another.",
                          "additionalProperties": false
                        },
                        "defaultValueSampledData": {
                          "description": "The value that should be used if there is no value stated in the instance (e.g. 'if not otherwise specified, the abstract is false').",
                          "additionalProperties": false
                        },
                        "defaultValueSignature": {
                          "description": "A signature along with supporting context. The signature may be a digital signature that is cryptographic in nature, or some other signature acceptable to the domain. This other signature may be as simple as a graphical image representing a hand-written signature, or a signature ceremony Different signature approaches have different utilities.",
                          "additionalProperties": false
                        },
                        "defaultValueTiming": {
                          "description": "Specifies an event that may occur multiple times. Timing schedules are used to record when things are planned, expected or requested to occur. The most common usage is in dosage instructions for medications. They are also used when planning care of various kinds, and may be used for reporting the schedule to which past regular activities were carried out.",
                          "additionalProperties": false
                        },
                        "defaultValueContactDetail": {
                          "description": "Specifies contact information for a person or organization.",
                          "additionalProperties": false
                        },
                        "defaultValueContributor": {
                          "description": "The value that should be used if there is no value stated in the instance (e.g. 'if not otherwise specified, the abstract is false').",
                          "additionalProperties": false
                        },
                        "defaultValueDataRequirement": {
                          "description": "Describes a required data item for evaluation in terms of the type of data, and optional code or date-based filters of the data.",
                          "additionalProperties": false
                        },
                        "defaultValueExpression": {
                          "description": "The value that should be used if there is no value stated in the instance (e.g. 'if not otherwise specified, the abstract is false').",
                          "additionalProperties": false
                        },
                        "defaultValueParameterDefinition": {
                          "description": "The parameters to the module. This collection specifies both the input and output parameters. Input parameters are provided by the caller as part of the $evaluate operation. Output parameters are included in the GuidanceResponse.",
                          "additionalProperties": false
                        },
                        "defaultValueRelatedArtifact": {
                          "description": "Related artifacts such as additional documentation, justification, or bibliographic references.",
                          "additionalProperties": false
                        },
                        "defaultValueTriggerDefinition": {
                          "description": "A description of a triggering event. Triggering events can be named events, data events, or periodic, as determined by the type element.",
                          "additionalProperties": false
                        },
                        "defaultValueUsageContext": {
                          "description": "Specifies clinical/business/etc. metadata that can be used to retrieve, index and/or categorize an artifact. This metadata can either be specific to the applicable population (e.g., age category, DRG) or the specific context of care (e.g., venue, care setting, provider of care).",
                          "additionalProperties": false
                        },
                        "defaultValueDosage": {
                          "description": "Indicates how the medication is/was taken or should be taken by the patient.",
                          "additionalProperties": false
                        },
                        "defaultValueMeta": {
                          "description": "The value that should be used if there is no value stated in the instance (e.g. 'if not otherwise specified, the abstract is false').",
                          "additionalProperties": false
                        },
                        "meaningWhenMissing": {
                          "pattern": "^[ \\r\\n\\t\\S]+$",
                          "type": "string",
                          "description": "A string that may contain Github Flavored Markdown syntax for optional processing by a mark down presentation engine"
                        },
                        "_meaningWhenMissing": {
                          "description": "Base definition for all elements in a resource.",
                          "additionalProperties": false
                        },
                        "orderMeaning": {
                          "pattern": "^[ \\r\\n\\t\\S]+$",
                          "type": "string",
                          "description": "A sequence of Unicode characters"
                        },
                        "_orderMeaning": {
                          "description": "Base definition for all elements in a resource.",
                          "additionalProperties": false
                        },
                        "fixedBase64Binary": {
                          "description": "Specifies a value that SHALL be exactly the value  for this element in the instance. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing.",
                          "pattern": "^(\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+$",
                          "type": "string"
                        },
                        "_fixedBase64Binary": {
                          "description": "Base definition for all elements in a resource.",
                          "additionalProperties": false
                        },
                        "fixedBoolean": {
                          "description": "Specifies a value that SHALL be exactly the value  for this element in the instance. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing.",
                          "pattern": "^true|false$",
                          "type": "boolean"
                        },
                        "_fixedBoolean": {
                          "description": "Base definition for all elements in a resource.",
                          "additionalProperties": false
                        },
                        "fixedCanonical": {
                          "description": "Specifies a value that SHALL be exactly the value  for this element in the instance. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing.",
                          "pattern": "^\\S*$",
                          "type": "string"
                        },
                        "_fixedCanonical": {
                          "description": "Base definition for all elements in a resource.",
                          "additionalProperties": false
                        },
                        "fixedCode": {
                          "description": "Specifies a value that SHALL be exactly the value  for this element in the instance. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing.",
                          "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                          "type": "string"
                        },
                        "_fixedCode": {
                          "description": "Base definition for all elements in a resource.",
                          "additionalProperties": false
                        },
                        "fixedDate": {
                          "description": "Specifies a value that SHALL be exactly the value  for this element in the instance. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing.",
                          "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                          "type": "string"
                        },
                        "_fixedDate": {
                          "description": "Base definition for all elements in a resource.",
                          "additionalProperties": false
                        },
                        "fixedDateTime": {
                          "description": "Specifies a value that SHALL be exactly the value  for this element in the instance. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing.",
                          "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                          "type": "string"
                        },
                        "_fixedDateTime": {
                          "description": "Base definition for all elements in a resource.",
                          "additionalProperties": false
                        },
                        "fixedDecimal": {
                          "description": "Specifies a value that SHALL be exactly the value  for this element in the instance. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing.",
                          "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                          "type": "number"
                        },
                        "_fixedDecimal": {
                          "description": "Base definition for all elements in a resource.",
                          "additionalProperties": false
                        },
                        "fixedId": {
                          "description": "Specifies a value that SHALL be exactly the value  for this element in the instance. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing.",
                          "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                          "type": "string"
                        },
                        "_fixedId": {
                          "description": "Base definition for all elements in a resource.",
                          "additionalProperties": false
                        },
                        "fixedInstant": {
                          "description": "Specifies a value that SHALL be exactly the value  for this element in the instance. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing.",
                          "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
                          "type": "string"
                        },
                        "_fixedInstant": {
                          "description": "Base definition for all elements in a resource.",
                          "additionalProperties": false
                        },
                        "fixedInteger": {
                          "description": "Specifies a value that SHALL be exactly the value  for this element in the instance. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing.",
                          "pattern": "^-?([0]|([1-9][0-9]*))$",
                          "type": "number"
                        },
                        "_fixedInteger": {
                          "description": "Base definition for all elements in a resource.",
                          "additionalProperties": false
                        },
                        "fixedMarkdown": {
                          "description": "Specifies a value that SHALL be exactly the value  for this element in the instance. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing.",
                          "pattern": "^[ \\r\\n\\t\\S]+$",
                          "type": "string"
                        },
                        "_fixedMarkdown": {
                          "description": "Base definition for all elements in a resource.",
                          "additionalProperties": false
                        },
                        "fixedOid": {
                          "description": "Specifies a value that SHALL be exactly the value  for this element in the instance. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing.",
                          "pattern": "^urn:oid:[0-2](\\.(0|[1-9][0-9]*))+$",
                          "type": "string"
                        },
                        "_fixedOid": {
                          "description": "Base definition for all elements in a resource.",
                          "additionalProperties": false
                        },
                        "fixedPositiveInt": {
                          "description": "Specifies a value that SHALL be exactly the value  for this element in the instance. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing.",
                          "pattern": "^[1-9][0-9]*$",
                          "type": "number"
                        },
                        "_fixedPositiveInt": {
                          "description": "Base definition for all elements in a resource.",
                          "additionalProperties": false
                        },
                        "fixedString": {
                          "description": "Specifies a value that SHALL be exactly the value  for this element in the instance. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing.",
                          "pattern": "^[ \\r\\n\\t\\S]+$",
                          "type": "string"
                        },
                        "_fixedString": {
                          "description": "Base definition for all elements in a resource.",
                          "additionalProperties": false
                        },
                        "fixedTime": {
                          "description": "Specifies a value that SHALL be exactly the value  for this element in the instance. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing.",
                          "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$",
                          "type": "string"
                        },
                        "_fixedTime": {
                          "description": "Base definition for all elements in a resource.",
                          "additionalProperties": false
                        },
                        "fixedUnsignedInt": {
                          "description": "Specifies a value that SHALL be exactly the value  for this element in the instance. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing.",
                          "pattern": "^[0]|([1-9][0-9]*)$",
                          "type": "number"
                        },
                        "_fixedUnsignedInt": {
                          "description": "Base definition for all elements in a resource.",
                          "additionalProperties": false
                        },
                        "fixedUri": {
                          "description": "Specifies a value that SHALL be exactly the value  for this element in the instance. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing.",
                          "pattern": "^\\S*$",
                          "type": "string"
                        },
                        "_fixedUri": {
                          "description": "Base definition for all elements in a resource.",
                          "additionalProperties": false
                        },
                        "fixedUrl": {
                          "description": "Specifies a value that SHALL be exactly the value  for this element in the instance. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing.",
                          "pattern": "^\\S*$",
                          "type": "string"
                        },
                        "_fixedUrl": {
                          "description": "Base definition for all elements in a resource.",
                          "additionalProperties": false
                        },
                        "fixedUuid": {
                          "description": "Specifies a value that SHALL be exactly the value  for this element in the instance. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing.",
                          "pattern": "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                          "type": "string"
                        },
                        "_fixedUuid": {
                          "description": "Base definition for all elements in a resource.",
                          "additionalProperties": false
                        },
                        "fixedAddress": {
                          "description": "An address expressed using postal conventions (as opposed to GPS or other location definition formats).  This data type may be used to convey addresses for use in delivering mail as well as for visiting locations which might not be valid for mail delivery.  There are a variety of postal address formats defined around the world.",
                          "additionalProperties": false
                        },
                        "fixedAge": {
                          "description": "Specifies a value that SHALL be exactly the value  for this element in the instance. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing.",
                          "additionalProperties": false
                        },
                        "fixedAnnotation": {
                          "description": "A  text note which also  contains information about who made the statement and when.",
                          "additionalProperties": false
                        },
                        "fixedAttachment": {
                          "description": "For referring to data content defined in other formats.",
                          "additionalProperties": false
                        },
                        "fixedCodeableConcept": {
                          "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                          "additionalProperties": false
                        },
                        "fixedCoding": {
                          "description": "A reference to a code defined by a terminology system.",
                          "additionalProperties": false
                        },
                        "fixedContactPoint": {
                          "description": "Details for all kinds of technology mediated contact points for a person or organization, including telephone, email, etc.",
                          "additionalProperties": false
                        },
                        "fixedCount": {
                          "description": "Specifies a value that SHALL be exactly the value  for this element in the instance. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing.",
                          "additionalProperties": false
                        },
                        "fixedDistance": {
                          "description": "Specifies a value that SHALL be exactly the value  for this element in the instance. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing.",
                          "additionalProperties": false
                        },
                        "fixedDuration": {
                          "description": "Specifies a value that SHALL be exactly the value  for this element in the instance. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing.",
                          "additionalProperties": false
                        },
                        "fixedHumanName": {
                          "description": "A human's name with the ability to identify parts and usage.",
                          "additionalProperties": false
                        },
                        "fixedIdentifier": {
                          "description": "An identifier - identifies some entity uniquely and unambiguously. Typically this is used for business identifiers.",
                          "additionalProperties": false
                        },
                        "fixedMoney": {
                          "description": "Specifies a value that SHALL be exactly the value  for this element in the instance. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing.",
                          "additionalProperties": false
                        },
                        "fixedPeriod": {
                          "description": "A time period defined by a start and end date and optionally time.",
                          "additionalProperties": false
                        },
                        "fixedQuantity": {
                          "description": "A measured amount (or an amount that can potentially be measured). Note that measured amounts include amounts that are not precisely quantified, including amounts involving arbitrary units and floating currencies.",
                          "additionalProperties": false
                        },
                        "fixedRange": {
                          "description": "Specifies a value that SHALL be exactly the value  for this element in the instance. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing.",
                          "additionalProperties": false
                        },
                        "fixedRatio": {
                          "description": "Specifies a value that SHALL be exactly the value  for this element in the instance. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing.",
                          "additionalProperties": false
                        },
                        "fixedReference": {
                          "description": "A reference from one resource to another.",
                          "additionalProperties": false
                        },
                        "fixedSampledData": {
                          "description": "Specifies a value that SHALL be exactly the value  for this element in the instance. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing.",
                          "additionalProperties": false
                        },
                        "fixedSignature": {
                          "description": "A signature along with supporting context. The signature may be a digital signature that is cryptographic in nature, or some other signature acceptable to the domain. This other signature may be as simple as a graphical image representing a hand-written signature, or a signature ceremony Different signature approaches have different utilities.",
                          "additionalProperties": false
                        },
                        "fixedTiming": {
                          "description": "Specifies an event that may occur multiple times. Timing schedules are used to record when things are planned, expected or requested to occur. The most common usage is in dosage instructions for medications. They are also used when planning care of various kinds, and may be used for reporting the schedule to which past regular activities were carried out.",
                          "additionalProperties": false
                        },
                        "fixedContactDetail": {
                          "description": "Specifies contact information for a person or organization.",
                          "additionalProperties": false
                        },
                        "fixedContributor": {
                          "description": "Specifies a value that SHALL be exactly the value  for this element in the instance. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing.",
                          "additionalProperties": false
                        },
                        "fixedDataRequirement": {
                          "description": "Describes a required data item for evaluation in terms of the type of data, and optional code or date-based filters of the data.",
                          "additionalProperties": false
                        },
                        "fixedExpression": {
                          "description": "Specifies a value that SHALL be exactly the value  for this element in the instance. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing.",
                          "additionalProperties": false
                        },
                        "fixedParameterDefinition": {
                          "description": "The parameters to the module. This collection specifies both the input and output parameters. Input parameters are provided by the caller as part of the $evaluate operation. Output parameters are included in the GuidanceResponse.",
                          "additionalProperties": false
                        },
                        "fixedRelatedArtifact": {
                          "description": "Related artifacts such as additional documentation, justification, or bibliographic references.",
                          "additionalProperties": false
                        },
                        "fixedTriggerDefinition": {
                          "description": "A description of a triggering event. Triggering events can be named events, data events, or periodic, as determined by the type element.",
                          "additionalProperties": false
                        },
                        "fixedUsageContext": {
                          "description": "Specifies clinical/business/etc. metadata that can be used to retrieve, index and/or categorize an artifact. This metadata can either be specific to the applicable population (e.g., age category, DRG) or the specific context of care (e.g., venue, care setting, provider of care).",
                          "additionalProperties": false
                        },
                        "fixedDosage": {
                          "description": "Indicates how the medication is/was taken or should be taken by the patient.",
                          "additionalProperties": false
                        },
                        "fixedMeta": {
                          "description": "Specifies a value that SHALL be exactly the value  for this element in the instance. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing.",
                          "additionalProperties": false
                        },
                        "patternBase64Binary": {
                          "description": "Specifies a value that the value in the instance SHALL follow - that is, any value in the pattern must be found in the instance. Other additional values may be found too. This is effectively constraint by example.  \n\nWhen pattern[x] is used to constrain a primitive, it means that the value provided in the pattern[x] must match the instance value exactly.\n\nWhen pattern[x] is used to constrain an array, it means that each element provided in the pattern[x] array must (recursively) match at least one element from the instance array.\n\nWhen pattern[x] is used to constrain a complex object, it means that each property in the pattern must be present in the complex object, and its value must recursively match -- i.e.,\n\n1. If primitive: it must match exactly the pattern value\n2. If a complex object: it must match (recursively) the pattern value\n3. If an array: it must match (recursively) the pattern value.",
                          "pattern": "^(\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+$",
                          "type": "string"
                        },
                        "_patternBase64Binary": {
                          "description": "Base definition for all elements in a resource.",
                          "additionalProperties": false
                        },
                        "patternBoolean": {
                          "description": "Specifies a value that the value in the instance SHALL follow - that is, any value in the pattern must be found in the instance. Other additional values may be found too. This is effectively constraint by example.  \n\nWhen pattern[x] is used to constrain a primitive, it means that the value provided in the pattern[x] must match the instance value exactly.\n\nWhen pattern[x] is used to constrain an array, it means that each element provided in the pattern[x] array must (recursively) match at least one element from the instance array.\n\nWhen pattern[x] is used to constrain a complex object, it means that each property in the pattern must be present in the complex object, and its value must recursively match -- i.e.,\n\n1. If primitive: it must match exactly the pattern value\n2. If a complex object: it must match (recursively) the pattern value\n3. If an array: it must match (recursively) the pattern value.",
                          "pattern": "^true|false$",
                          "type": "boolean"
                        },
                        "_patternBoolean": {
                          "description": "Base definition for all elements in a resource.",
                          "additionalProperties": false
                        },
                        "patternCanonical": {
                          "description": "Specifies a value that the value in the instance SHALL follow - that is, any value in the pattern must be found in the instance. Other additional values may be found too. This is effectively constraint by example.  \n\nWhen pattern[x] is used to constrain a primitive, it means that the value provided in the pattern[x] must match the instance value exactly.\n\nWhen pattern[x] is used to constrain an array, it means that each element provided in the pattern[x] array must (recursively) match at least one element from the instance array.\n\nWhen pattern[x] is used to constrain a complex object, it means that each property in the pattern must be present in the complex object, and its value must recursively match -- i.e.,\n\n1. If primitive: it must match exactly the pattern value\n2. If a complex object: it must match (recursively) the pattern value\n3. If an array: it must match (recursively) the pattern value.",
                          "pattern": "^\\S*$",
                          "type": "string"
                        },
                        "_patternCanonical": {
                          "description": "Base definition for all elements in a resource.",
                          "additionalProperties": false
                        },
                        "patternCode": {
                          "description": "Specifies a value that the value in the instance SHALL follow - that is, any value in the pattern must be found in the instance. Other additional values may be found too. This is effectively constraint by example.  \n\nWhen pattern[x] is used to constrain a primitive, it means that the value provided in the pattern[x] must match the instance value exactly.\n\nWhen pattern[x] is used to constrain an array, it means that each element provided in the pattern[x] array must (recursively) match at least one element from the instance array.\n\nWhen pattern[x] is used to constrain a complex object, it means that each property in the pattern must be present in the complex object, and its value must recursively match -- i.e.,\n\n1. If primitive: it must match exactly the pattern value\n2. If a complex object: it must match (recursively) the pattern value\n3. If an array: it must match (recursively) the pattern value.",
                          "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                          "type": "string"
                        },
                        "_patternCode": {
                          "description": "Base definition for all elements in a resource.",
                          "additionalProperties": false
                        },
                        "patternDate": {
                          "description": "Specifies a value that the value in the instance SHALL follow - that is, any value in the pattern must be found in the instance. Other additional values may be found too. This is effectively constraint by example.  \n\nWhen pattern[x] is used to constrain a primitive, it means that the value provided in the pattern[x] must match the instance value exactly.\n\nWhen pattern[x] is used to constrain an array, it means that each element provided in the pattern[x] array must (recursively) match at least one element from the instance array.\n\nWhen pattern[x] is used to constrain a complex object, it means that each property in the pattern must be present in the complex object, and its value must recursively match -- i.e.,\n\n1. If primitive: it must match exactly the pattern value\n2. If a complex object: it must match (recursively) the pattern value\n3. If an array: it must match (recursively) the pattern value.",
                          "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                          "type": "string"
                        },
                        "_patternDate": {
                          "description": "Base definition for all elements in a resource.",
                          "additionalProperties": false
                        },
                        "patternDateTime": {
                          "description": "Specifies a value that the value in the instance SHALL follow - that is, any value in the pattern must be found in the instance. Other additional values may be found too. This is effectively constraint by example.  \n\nWhen pattern[x] is used to constrain a primitive, it means that the value provided in the pattern[x] must match the instance value exactly.\n\nWhen pattern[x] is used to constrain an array, it means that each element provided in the pattern[x] array must (recursively) match at least one element from the instance array.\n\nWhen pattern[x] is used to constrain a complex object, it means that each property in the pattern must be present in the complex object, and its value must recursively match -- i.e.,\n\n1. If primitive: it must match exactly the pattern value\n2. If a complex object: it must match (recursively) the pattern value\n3. If an array: it must match (recursively) the pattern value.",
                          "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                          "type": "string"
                        },
                        "_patternDateTime": {
                          "description": "Base definition for all elements in a resource.",
                          "additionalProperties": false
                        },
                        "patternDecimal": {
                          "description": "Specifies a value that the value in the instance SHALL follow - that is, any value in the pattern must be found in the instance. Other additional values may be found too. This is effectively constraint by example.  \n\nWhen pattern[x] is used to constrain a primitive, it means that the value provided in the pattern[x] must match the instance value exactly.\n\nWhen pattern[x] is used to constrain an array, it means that each element provided in the pattern[x] array must (recursively) match at least one element from the instance array.\n\nWhen pattern[x] is used to constrain a complex object, it means that each property in the pattern must be present in the complex object, and its value must recursively match -- i.e.,\n\n1. If primitive: it must match exactly the pattern value\n2. If a complex object: it must match (recursively) the pattern value\n3. If an array: it must match (recursively) the pattern value.",
                          "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                          "type": "number"
                        },
                        "_patternDecimal": {
                          "description": "Base definition for all elements in a resource.",
                          "additionalProperties": false
                        },
                        "patternId": {
                          "description": "Specifies a value that the value in the instance SHALL follow - that is, any value in the pattern must be found in the instance. Other additional values may be found too. This is effectively constraint by example.  \n\nWhen pattern[x] is used to constrain a primitive, it means that the value provided in the pattern[x] must match the instance value exactly.\n\nWhen pattern[x] is used to constrain an array, it means that each element provided in the pattern[x] array must (recursively) match at least one element from the instance array.\n\nWhen pattern[x] is used to constrain a complex object, it means that each property in the pattern must be present in the complex object, and its value must recursively match -- i.e.,\n\n1. If primitive: it must match exactly the pattern value\n2. If a complex object: it must match (recursively) the pattern value\n3. If an array: it must match (recursively) the pattern value.",
                          "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                          "type": "string"
                        },
                        "_patternId": {
                          "description": "Base definition for all elements in a resource.",
                          "additionalProperties": false
                        },
                        "patternInstant": {
                          "description": "Specifies a value that the value in the instance SHALL follow - that is, any value in the pattern must be found in the instance. Other additional values may be found too. This is effectively constraint by example.  \n\nWhen pattern[x] is used to constrain a primitive, it means that the value provided in the pattern[x] must match the instance value exactly.\n\nWhen pattern[x] is used to constrain an array, it means that each element provided in the pattern[x] array must (recursively) match at least one element from the instance array.\n\nWhen pattern[x] is used to constrain a complex object, it means that each property in the pattern must be present in the complex object, and its value must recursively match -- i.e.,\n\n1. If primitive: it must match exactly the pattern value\n2. If a complex object: it must match (recursively) the pattern value\n3. If an array: it must match (recursively) the pattern value.",
                          "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
                          "type": "string"
                        },
                        "_patternInstant": {
                          "description": "Base definition for all elements in a resource.",
                          "additionalProperties": false
                        },
                        "patternInteger": {
                          "description": "Specifies a value that the value in the instance SHALL follow - that is, any value in the pattern must be found in the instance. Other additional values may be found too. This is effectively constraint by example.  \n\nWhen pattern[x] is used to constrain a primitive, it means that the value provided in the pattern[x] must match the instance value exactly.\n\nWhen pattern[x] is used to constrain an array, it means that each element provided in the pattern[x] array must (recursively) match at least one element from the instance array.\n\nWhen pattern[x] is used to constrain a complex object, it means that each property in the pattern must be present in the complex object, and its value must recursively match -- i.e.,\n\n1. If primitive: it must match exactly the pattern value\n2. If a complex object: it must match (recursively) the pattern value\n3. If an array: it must match (recursively) the pattern value.",
                          "pattern": "^-?([0]|([1-9][0-9]*))$",
                          "type": "number"
                        },
                        "_patternInteger": {
                          "description": "Base definition for all elements in a resource.",
                          "additionalProperties": false
                        },
                        "patternMarkdown": {
                          "description": "Specifies a value that the value in the instance SHALL follow - that is, any value in the pattern must be found in the instance. Other additional values may be found too. This is effectively constraint by example.  \n\nWhen pattern[x] is used to constrain a primitive, it means that the value provided in the pattern[x] must match the instance value exactly.\n\nWhen pattern[x] is used to constrain an array, it means that each element provided in the pattern[x] array must (recursively) match at least one element from the instance array.\n\nWhen pattern[x] is used to constrain a complex object, it means that each property in the pattern must be present in the complex object, and its value must recursively match -- i.e.,\n\n1. If primitive: it must match exactly the pattern value\n2. If a complex object: it must match (recursively) the pattern value\n3. If an array: it must match (recursively) the pattern value.",
                          "pattern": "^[ \\r\\n\\t\\S]+$",
                          "type": "string"
                        },
                        "_patternMarkdown": {
                          "description": "Base definition for all elements in a resource.",
                          "additionalProperties": false
                        },
                        "patternOid": {
                          "description": "Specifies a value that the value in the instance SHALL follow - that is, any value in the pattern must be found in the instance. Other additional values may be found too. This is effectively constraint by example.  \n\nWhen pattern[x] is used to constrain a primitive, it means that the value provided in the pattern[x] must match the instance value exactly.\n\nWhen pattern[x] is used to constrain an array, it means that each element provided in the pattern[x] array must (recursively) match at least one element from the instance array.\n\nWhen pattern[x] is used to constrain a complex object, it means that each property in the pattern must be present in the complex object, and its value must recursively match -- i.e.,\n\n1. If primitive: it must match exactly the pattern value\n2. If a complex object: it must match (recursively) the pattern value\n3. If an array: it must match (recursively) the pattern value.",
                          "pattern": "^urn:oid:[0-2](\\.(0|[1-9][0-9]*))+$",
                          "type": "string"
                        },
                        "_patternOid": {
                          "description": "Base definition for all elements in a resource.",
                          "additionalProperties": false
                        },
                        "patternPositiveInt": {
                          "description": "Specifies a value that the value in the instance SHALL follow - that is, any value in the pattern must be found in the instance. Other additional values may be found too. This is effectively constraint by example.  \n\nWhen pattern[x] is used to constrain a primitive, it means that the value provided in the pattern[x] must match the instance value exactly.\n\nWhen pattern[x] is used to constrain an array, it means that each element provided in the pattern[x] array must (recursively) match at least one element from the instance array.\n\nWhen pattern[x] is used to constrain a complex object, it means that each property in the pattern must be present in the complex object, and its value must recursively match -- i.e.,\n\n1. If primitive: it must match exactly the pattern value\n2. If a complex object: it must match (recursively) the pattern value\n3. If an array: it must match (recursively) the pattern value.",
                          "pattern": "^[1-9][0-9]*$",
                          "type": "number"
                        },
                        "_patternPositiveInt": {
                          "description": "Base definition for all elements in a resource.",
                          "additionalProperties": false
                        },
                        "patternString": {
                          "description": "Specifies a value that the value in the instance SHALL follow - that is, any value in the pattern must be found in the instance. Other additional values may be found too. This is effectively constraint by example.  \n\nWhen pattern[x] is used to constrain a primitive, it means that the value provided in the pattern[x] must match the instance value exactly.\n\nWhen pattern[x] is used to constrain an array, it means that each element provided in the pattern[x] array must (recursively) match at least one element from the instance array.\n\nWhen pattern[x] is used to constrain a complex object, it means that each property in the pattern must be present in the complex object, and its value must recursively match -- i.e.,\n\n1. If primitive: it must match exactly the pattern value\n2. If a complex object: it must match (recursively) the pattern value\n3. If an array: it must match (recursively) the pattern value.",
                          "pattern": "^[ \\r\\n\\t\\S]+$",
                          "type": "string"
                        },
                        "_patternString": {
                          "description": "Base definition for all elements in a resource.",
                          "additionalProperties": false
                        },
                        "patternTime": {
                          "description": "Specifies a value that the value in the instance SHALL follow - that is, any value in the pattern must be found in the instance. Other additional values may be found too. This is effectively constraint by example.  \n\nWhen pattern[x] is used to constrain a primitive, it means that the value provided in the pattern[x] must match the instance value exactly.\n\nWhen pattern[x] is used to constrain an array, it means that each element provided in the pattern[x] array must (recursively) match at least one element from the instance array.\n\nWhen pattern[x] is used to constrain a complex object, it means that each property in the pattern must be present in the complex object, and its value must recursively match -- i.e.,\n\n1. If primitive: it must match exactly the pattern value\n2. If a complex object: it must match (recursively) the pattern value\n3. If an array: it must match (recursively) the pattern value.",
                          "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$",
                          "type": "string"
                        },
                        "_patternTime": {
                          "description": "Base definition for all elements in a resource.",
                          "additionalProperties": false
                        },
                        "patternUnsignedInt": {
                          "description": "Specifies a value that the value in the instance SHALL follow - that is, any value in the pattern must be found in the instance. Other additional values may be found too. This is effectively constraint by example.  \n\nWhen pattern[x] is used to constrain a primitive, it means that the value provided in the pattern[x] must match the instance value exactly.\n\nWhen pattern[x] is used to constrain an array, it means that each element provided in the pattern[x] array must (recursively) match at least one element from the instance array.\n\nWhen pattern[x] is used to constrain a complex object, it means that each property in the pattern must be present in the complex object, and its value must recursively match -- i.e.,\n\n1. If primitive: it must match exactly the pattern value\n2. If a complex object: it must match (recursively) the pattern value\n3. If an array: it must match (recursively) the pattern value.",
                          "pattern": "^[0]|([1-9][0-9]*)$",
                          "type": "number"
                        },
                        "_patternUnsignedInt": {
                          "description": "Base definition for all elements in a resource.",
                          "additionalProperties": false
                        },
                        "patternUri": {
                          "description": "Specifies a value that the value in the instance SHALL follow - that is, any value in the pattern must be found in the instance. Other additional values may be found too. This is effectively constraint by example.  \n\nWhen pattern[x] is used to constrain a primitive, it means that the value provided in the pattern[x] must match the instance value exactly.\n\nWhen pattern[x] is used to constrain an array, it means that each element provided in the pattern[x] array must (recursively) match at least one element from the instance array.\n\nWhen pattern[x] is used to constrain a complex object, it means that each property in the pattern must be present in the complex object, and its value must recursively match -- i.e.,\n\n1. If primitive: it must match exactly the pattern value\n2. If a complex object: it must match (recursively) the pattern value\n3. If an array: it must match (recursively) the pattern value.",
                          "pattern": "^\\S*$",
                          "type": "string"
                        },
                        "_patternUri": {
                          "description": "Base definition for all elements in a resource.",
                          "additionalProperties": false
                        },
                        "patternUrl": {
                          "description": "Specifies a value that the value in the instance SHALL follow - that is, any value in the pattern must be found in the instance. Other additional values may be found too. This is effectively constraint by example.  \n\nWhen pattern[x] is used to constrain a primitive, it means that the value provided in the pattern[x] must match the instance value exactly.\n\nWhen pattern[x] is used to constrain an array, it means that each element provided in the pattern[x] array must (recursively) match at least one element from the instance array.\n\nWhen pattern[x] is used to constrain a complex object, it means that each property in the pattern must be present in the complex object, and its value must recursively match -- i.e.,\n\n1. If primitive: it must match exactly the pattern value\n2. If a complex object: it must match (recursively) the pattern value\n3. If an array: it must match (recursively) the pattern value.",
                          "pattern": "^\\S*$",
                          "type": "string"
                        },
                        "_patternUrl": {
                          "description": "Base definition for all elements in a resource.",
                          "additionalProperties": false
                        },
                        "patternUuid": {
                          "description": "Specifies a value that the value in the instance SHALL follow - that is, any value in the pattern must be found in the instance. Other additional values may be found too. This is effectively constraint by example.  \n\nWhen pattern[x] is used to constrain a primitive, it means that the value provided in the pattern[x] must match the instance value exactly.\n\nWhen pattern[x] is used to constrain an array, it means that each element provided in the pattern[x] array must (recursively) match at least one element from the instance array.\n\nWhen pattern[x] is used to constrain a complex object, it means that each property in the pattern must be present in the complex object, and its value must recursively match -- i.e.,\n\n1. If primitive: it must match exactly the pattern value\n2. If a complex object: it must match (recursively) the pattern value\n3. If an array: it must match (recursively) the pattern value.",
                          "pattern": "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                          "type": "string"
                        },
                        "_patternUuid": {
                          "description": "Base definition for all elements in a resource.",
                          "additionalProperties": false
                        },
                        "patternAddress": {
                          "description": "An address expressed using postal conventions (as opposed to GPS or other location definition formats).  This data type may be used to convey addresses for use in delivering mail as well as for visiting locations which might not be valid for mail delivery.  There are a variety of postal address formats defined around the world.",
                          "additionalProperties": false
                        },
                        "patternAge": {
                          "description": "Specifies a value that the value in the instance SHALL follow - that is, any value in the pattern must be found in the instance. Other additional values may be found too. This is effectively constraint by example.  \n\nWhen pattern[x] is used to constrain a primitive, it means that the value provided in the pattern[x] must match the instance value exactly.\n\nWhen pattern[x] is used to constrain an array, it means that each element provided in the pattern[x] array must (recursively) match at least one element from the instance array.\n\nWhen pattern[x] is used to constrain a complex object, it means that each property in the pattern must be present in the complex object, and its value must recursively match -- i.e.,\n\n1. If primitive: it must match exactly the pattern value\n2. If a complex object: it must match (recursively) the pattern value\n3. If an array: it must match (recursively) the pattern value.",
                          "additionalProperties": false
                        },
                        "patternAnnotation": {
                          "description": "A  text note which also  contains information about who made the statement and when.",
                          "additionalProperties": false
                        },
                        "patternAttachment": {
                          "description": "For referring to data content defined in other formats.",
                          "additionalProperties": false
                        },
                        "patternCodeableConcept": {
                          "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                          "additionalProperties": false
                        },
                        "patternCoding": {
                          "description": "A reference to a code defined by a terminology system.",
                          "additionalProperties": false
                        },
                        "patternContactPoint": {
                          "description": "Details for all kinds of technology mediated contact points for a person or organization, including telephone, email, etc.",
                          "additionalProperties": false
                        },
                        "patternCount": {
                          "description": "Specifies a value that the value in the instance SHALL follow - that is, any value in the pattern must be found in the instance. Other additional values may be found too. This is effectively constraint by example.  \n\nWhen pattern[x] is used to constrain a primitive, it means that the value provided in the pattern[x] must match the instance value exactly.\n\nWhen pattern[x] is used to constrain an array, it means that each element provided in the pattern[x] array must (recursively) match at least one element from the instance array.\n\nWhen pattern[x] is used to constrain a complex object, it means that each property in the pattern must be present in the complex object, and its value must recursively match -- i.e.,\n\n1. If primitive: it must match exactly the pattern value\n2. If a complex object: it must match (recursively) the pattern value\n3. If an array: it must match (recursively) the pattern value.",
                          "additionalProperties": false
                        },
                        "patternDistance": {
                          "description": "Specifies a value that the value in the instance SHALL follow - that is, any value in the pattern must be found in the instance. Other additional values may be found too. This is effectively constraint by example.  \n\nWhen pattern[x] is used to constrain a primitive, it means that the value provided in the pattern[x] must match the instance value exactly.\n\nWhen pattern[x] is used to constrain an array, it means that each element provided in the pattern[x] array must (recursively) match at least one element from the instance array.\n\nWhen pattern[x] is used to constrain a complex object, it means that each property in the pattern must be present in the complex object, and its value must recursively match -- i.e.,\n\n1. If primitive: it must match exactly the pattern value\n2. If a complex object: it must match (recursively) the pattern value\n3. If an array: it must match (recursively) the pattern value.",
                          "additionalProperties": false
                        },
                        "patternDuration": {
                          "description": "Specifies a value that the value in the instance SHALL follow - that is, any value in the pattern must be found in the instance. Other additional values may be found too. This is effectively constraint by example.  \n\nWhen pattern[x] is used to constrain a primitive, it means that the value provided in the pattern[x] must match the instance value exactly.\n\nWhen pattern[x] is used to constrain an array, it means that each element provided in the pattern[x] array must (recursively) match at least one element from the instance array.\n\nWhen pattern[x] is used to constrain a complex object, it means that each property in the pattern must be present in the complex object, and its value must recursively match -- i.e.,\n\n1. If primitive: it must match exactly the pattern value\n2. If a complex object: it must match (recursively) the pattern value\n3. If an array: it must match (recursively) the pattern value.",
                          "additionalProperties": false
                        },
                        "patternHumanName": {
                          "description": "A human's name with the ability to identify parts and usage.",
                          "additionalProperties": false
                        },
                        "patternIdentifier": {
                          "description": "An identifier - identifies some entity uniquely and unambiguously. Typically this is used for business identifiers.",
                          "additionalProperties": false
                        },
                        "patternMoney": {
                          "description": "Specifies a value that the value in the instance SHALL follow - that is, any value in the pattern must be found in the instance. Other additional values may be found too. This is effectively constraint by example.  \n\nWhen pattern[x] is used to constrain a primitive, it means that the value provided in the pattern[x] must match the instance value exactly.\n\nWhen pattern[x] is used to constrain an array, it means that each element provided in the pattern[x] array must (recursively) match at least one element from the instance array.\n\nWhen pattern[x] is used to constrain a complex object, it means that each property in the pattern must be present in the complex object, and its value must recursively match -- i.e.,\n\n1. If primitive: it must match exactly the pattern value\n2. If a complex object: it must match (recursively) the pattern value\n3. If an array: it must match (recursively) the pattern value.",
                          "additionalProperties": false
                        },
                        "patternPeriod": {
                          "description": "A time period defined by a start and end date and optionally time.",
                          "additionalProperties": false
                        },
                        "patternQuantity": {
                          "description": "A measured amount (or an amount that can potentially be measured). Note that measured amounts include amounts that are not precisely quantified, including amounts involving arbitrary units and floating currencies.",
                          "additionalProperties": false
                        },
                        "patternRange": {
                          "description": "Specifies a value that the value in the instance SHALL follow - that is, any value in the pattern must be found in the instance. Other additional values may be found too. This is effectively constraint by example.  \n\nWhen pattern[x] is used to constrain a primitive, it means that the value provided in the pattern[x] must match the instance value exactly.\n\nWhen pattern[x] is used to constrain an array, it means that each element provided in the pattern[x] array must (recursively) match at least one element from the instance array.\n\nWhen pattern[x] is used to constrain a complex object, it means that each property in the pattern must be present in the complex object, and its value must recursively match -- i.e.,\n\n1. If primitive: it must match exactly the pattern value\n2. If a complex object: it must match (recursively) the pattern value\n3. If an array: it must match (recursively) the pattern value.",
                          "additionalProperties": false
                        },
                        "patternRatio": {
                          "description": "Specifies a value that the value in the instance SHALL follow - that is, any value in the pattern must be found in the instance. Other additional values may be found too. This is effectively constraint by example.  \n\nWhen pattern[x] is used to constrain a primitive, it means that the value provided in the pattern[x] must match the instance value exactly.\n\nWhen pattern[x] is used to constrain an array, it means that each element provided in the pattern[x] array must (recursively) match at least one element from the instance array.\n\nWhen pattern[x] is used to constrain a complex object, it means that each property in the pattern must be present in the complex object, and its value must recursively match -- i.e.,\n\n1. If primitive: it must match exactly the pattern value\n2. If a complex object: it must match (recursively) the pattern value\n3. If an array: it must match (recursively) the pattern value.",
                          "additionalProperties": false
                        },
                        "patternReference": {
                          "description": "A reference from one resource to another.",
                          "additionalProperties": false
                        },
                        "patternSampledData": {
                          "description": "Specifies a value that the value in the instance SHALL follow - that is, any value in the pattern must be found in the instance. Other additional values may be found too. This is effectively constraint by example.  \n\nWhen pattern[x] is used to constrain a primitive, it means that the value provided in the pattern[x] must match the instance value exactly.\n\nWhen pattern[x] is used to constrain an array, it means that each element provided in the pattern[x] array must (recursively) match at least one element from the instance array.\n\nWhen pattern[x] is used to constrain a complex object, it means that each property in the pattern must be present in the complex object, and its value must recursively match -- i.e.,\n\n1. If primitive: it must match exactly the pattern value\n2. If a complex object: it must match (recursively) the pattern value\n3. If an array: it must match (recursively) the pattern value.",
                          "additionalProperties": false
                        },
                        "patternSignature": {
                          "description": "A signature along with supporting context. The signature may be a digital signature that is cryptographic in nature, or some other signature acceptable to the domain. This other signature may be as simple as a graphical image representing a hand-written signature, or a signature ceremony Different signature approaches have different utilities.",
                          "additionalProperties": false
                        },
                        "patternTiming": {
                          "description": "Specifies an event that may occur multiple times. Timing schedules are used to record when things are planned, expected or requested to occur. The most common usage is in dosage instructions for medications. They are also used when planning care of various kinds, and may be used for reporting the schedule to which past regular activities were carried out.",
                          "additionalProperties": false
                        },
                        "patternContactDetail": {
                          "description": "Specifies contact information for a person or organization.",
                          "additionalProperties": false
                        },
                        "patternContributor": {
                          "description": "Specifies a value that the value in the instance SHALL follow - that is, any value in the pattern must be found in the instance. Other additional values may be found too. This is effectively constraint by example.  \n\nWhen pattern[x] is used to constrain a primitive, it means that the value provided in the pattern[x] must match the instance value exactly.\n\nWhen pattern[x] is used to constrain an array, it means that each element provided in the pattern[x] array must (recursively) match at least one element from the instance array.\n\nWhen pattern[x] is used to constrain a complex object, it means that each property in the pattern must be present in the complex object, and its value must recursively match -- i.e.,\n\n1. If primitive: it must match exactly the pattern value\n2. If a complex object: it must match (recursively) the pattern value\n3. If an array: it must match (recursively) the pattern value.",
                          "additionalProperties": false
                        },
                        "patternDataRequirement": {
                          "description": "Describes a required data item for evaluation in terms of the type of data, and optional code or date-based filters of the data.",
                          "additionalProperties": false
                        },
                        "patternExpression": {
                          "description": "Specifies a value that the value in the instance SHALL follow - that is, any value in the pattern must be found in the instance. Other additional values may be found too. This is effectively constraint by example.  \n\nWhen pattern[x] is used to constrain a primitive, it means that the value provided in the pattern[x] must match the instance value exactly.\n\nWhen pattern[x] is used to constrain an array, it means that each element provided in the pattern[x] array must (recursively) match at least one element from the instance array.\n\nWhen pattern[x] is used to constrain a complex object, it means that each property in the pattern must be present in the complex object, and its value must recursively match -- i.e.,\n\n1. If primitive: it must match exactly the pattern value\n2. If a complex object: it must match (recursively) the pattern value\n3. If an array: it must match (recursively) the pattern value.",
                          "additionalProperties": false
                        },
                        "patternParameterDefinition": {
                          "description": "The parameters to the module. This collection specifies both the input and output parameters. Input parameters are provided by the caller as part of the $evaluate operation. Output parameters are included in the GuidanceResponse.",
                          "additionalProperties": false
                        },
                        "patternRelatedArtifact": {
                          "description": "Related artifacts such as additional documentation, justification, or bibliographic references.",
                          "additionalProperties": false
                        },
                        "patternTriggerDefinition": {
                          "description": "A description of a triggering event. Triggering events can be named events, data events, or periodic, as determined by the type element.",
                          "additionalProperties": false
                        },
                        "patternUsageContext": {
                          "description": "Specifies clinical/business/etc. metadata that can be used to retrieve, index and/or categorize an artifact. This metadata can either be specific to the applicable population (e.g., age category, DRG) or the specific context of care (e.g., venue, care setting, provider of care).",
                          "additionalProperties": false
                        },
                        "patternDosage": {
                          "description": "Indicates how the medication is/was taken or should be taken by the patient.",
                          "additionalProperties": false
                        },
                        "patternMeta": {
                          "description": "Specifies a value that the value in the instance SHALL follow - that is, any value in the pattern must be found in the instance. Other additional values may be found too. This is effectively constraint by example.  \n\nWhen pattern[x] is used to constrain a primitive, it means that the value provided in the pattern[x] must match the instance value exactly.\n\nWhen pattern[x] is used to constrain an array, it means that each element provided in the pattern[x] array must (recursively) match at least one element from the instance array.\n\nWhen pattern[x] is used to constrain a complex object, it means that each property in the pattern must be present in the complex object, and its value must recursively match -- i.e.,\n\n1. If primitive: it must match exactly the pattern value\n2. If a complex object: it must match (recursively) the pattern value\n3. If an array: it must match (recursively) the pattern value.",
                          "additionalProperties": false
                        },
                        "example": {
                          "description": "A sample value for this element demonstrating the type of information that would typically be found in the element.",
                          "items": {
                            "description": "Captures constraints on each element within the resource, profile, or extension.",
                            "properties": {
                              "id": {
                                "pattern": "^[ \\r\\n\\t\\S]+$",
                                "type": "string",
                                "description": "A sequence of Unicode characters"
                              },
                              "extension": {
                                "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                                "type": "array"
                              },
                              "modifierExtension": {
                                "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                                "type": "array"
                              },
                              "label": {
                                "pattern": "^[ \\r\\n\\t\\S]+$",
                                "type": "string",
                                "description": "A sequence of Unicode characters"
                              },
                              "_label": {
                                "description": "Base definition for all elements in a resource.",
                                "additionalProperties": false
                              },
                              "valueBase64Binary": {
                                "description": "The actual value for the element, which must be one of the types allowed for this element.",
                                "pattern": "^(\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+$",
                                "type": "string"
                              },
                              "_valueBase64Binary": {
                                "description": "Base definition for all elements in a resource.",
                                "additionalProperties": false
                              },
                              "valueBoolean": {
                                "description": "The actual value for the element, which must be one of the types allowed for this element.",
                                "pattern": "^true|false$",
                                "type": "boolean"
                              },
                              "_valueBoolean": {
                                "description": "Base definition for all elements in a resource.",
                                "additionalProperties": false
                              },
                              "valueCanonical": {
                                "description": "The actual value for the element, which must be one of the types allowed for this element.",
                                "pattern": "^\\S*$",
                                "type": "string"
                              },
                              "_valueCanonical": {
                                "description": "Base definition for all elements in a resource.",
                                "additionalProperties": false
                              },
                              "valueCode": {
                                "description": "The actual value for the element, which must be one of the types allowed for this element.",
                                "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                                "type": "string"
                              },
                              "_valueCode": {
                                "description": "Base definition for all elements in a resource.",
                                "additionalProperties": false
                              },
                              "valueDate": {
                                "description": "The actual value for the element, which must be one of the types allowed for this element.",
                                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                                "type": "string"
                              },
                              "_valueDate": {
                                "description": "Base definition for all elements in a resource.",
                                "additionalProperties": false
                              },
                              "valueDateTime": {
                                "description": "The actual value for the element, which must be one of the types allowed for this element.",
                                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                                "type": "string"
                              },
                              "_valueDateTime": {
                                "description": "Base definition for all elements in a resource.",
                                "additionalProperties": false
                              },
                              "valueDecimal": {
                                "description": "The actual value for the element, which must be one of the types allowed for this element.",
                                "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                                "type": "number"
                              },
                              "_valueDecimal": {
                                "description": "Base definition for all elements in a resource.",
                                "additionalProperties": false
                              },
                              "valueId": {
                                "description": "The actual value for the element, which must be one of the types allowed for this element.",
                                "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                                "type": "string"
                              },
                              "_valueId": {
                                "description": "Base definition for all elements in a resource.",
                                "additionalProperties": false
                              },
                              "valueInstant": {
                                "description": "The actual value for the element, which must be one of the types allowed for this element.",
                                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
                                "type": "string"
                              },
                              "_valueInstant": {
                                "description": "Base definition for all elements in a resource.",
                                "additionalProperties": false
                              },
                              "valueInteger": {
                                "description": "The actual value for the element, which must be one of the types allowed for this element.",
                                "pattern": "^-?([0]|([1-9][0-9]*))$",
                                "type": "number"
                              },
                              "_valueInteger": {
                                "description": "Base definition for all elements in a resource.",
                                "additionalProperties": false
                              },
                              "valueMarkdown": {
                                "description": "The actual value for the element, which must be one of the types allowed for this element.",
                                "pattern": "^[ \\r\\n\\t\\S]+$",
                                "type": "string"
                              },
                              "_valueMarkdown": {
                                "description": "Base definition for all elements in a resource.",
                                "additionalProperties": false
                              },
                              "valueOid": {
                                "description": "The actual value for the element, which must be one of the types allowed for this element.",
                                "pattern": "^urn:oid:[0-2](\\.(0|[1-9][0-9]*))+$",
                                "type": "string"
                              },
                              "_valueOid": {
                                "description": "Base definition for all elements in a resource.",
                                "additionalProperties": false
                              },
                              "valuePositiveInt": {
                                "description": "The actual value for the element, which must be one of the types allowed for this element.",
                                "pattern": "^[1-9][0-9]*$",
                                "type": "number"
                              },
                              "_valuePositiveInt": {
                                "description": "Base definition for all elements in a resource.",
                                "additionalProperties": false
                              },
                              "valueString": {
                                "description": "The actual value for the element, which must be one of the types allowed for this element.",
                                "pattern": "^[ \\r\\n\\t\\S]+$",
                                "type": "string"
                              },
                              "_valueString": {
                                "description": "Base definition for all elements in a resource.",
                                "additionalProperties": false
                              },
                              "valueTime": {
                                "description": "The actual value for the element, which must be one of the types allowed for this element.",
                                "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$",
                                "type": "string"
                              },
                              "_valueTime": {
                                "description": "Base definition for all elements in a resource.",
                                "additionalProperties": false
                              },
                              "valueUnsignedInt": {
                                "description": "The actual value for the element, which must be one of the types allowed for this element.",
                                "pattern": "^[0]|([1-9][0-9]*)$",
                                "type": "number"
                              },
                              "_valueUnsignedInt": {
                                "description": "Base definition for all elements in a resource.",
                                "additionalProperties": false
                              },
                              "valueUri": {
                                "description": "The actual value for the element, which must be one of the types allowed for this element.",
                                "pattern": "^\\S*$",
                                "type": "string"
                              },
                              "_valueUri": {
                                "description": "Base definition for all elements in a resource.",
                                "additionalProperties": false
                              },
                              "valueUrl": {
                                "description": "The actual value for the element, which must be one of the types allowed for this element.",
                                "pattern": "^\\S*$",
                                "type": "string"
                              },
                              "_valueUrl": {
                                "description": "Base definition for all elements in a resource.",
                                "additionalProperties": false
                              },
                              "valueUuid": {
                                "description": "The actual value for the element, which must be one of the types allowed for this element.",
                                "pattern": "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                                "type": "string"
                              },
                              "_valueUuid": {
                                "description": "Base definition for all elements in a resource.",
                                "additionalProperties": false
                              },
                              "valueAddress": {
                                "description": "An address expressed using postal conventions (as opposed to GPS or other location definition formats).  This data type may be used to convey addresses for use in delivering mail as well as for visiting locations which might not be valid for mail delivery.  There are a variety of postal address formats defined around the world.",
                                "additionalProperties": false
                              },
                              "valueAge": {
                                "description": "The actual value for the element, which must be one of the types allowed for this element.",
                                "additionalProperties": false
                              },
                              "valueAnnotation": {
                                "description": "A  text note which also  contains information about who made the statement and when.",
                                "additionalProperties": false
                              },
                              "valueAttachment": {
                                "description": "For referring to data content defined in other formats.",
                                "additionalProperties": false
                              },
                              "valueCodeableConcept": {
                                "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                                "additionalProperties": false
                              },
                              "valueCoding": {
                                "description": "A reference to a code defined by a terminology system.",
                                "additionalProperties": false
                              },
                              "valueContactPoint": {
                                "description": "Details for all kinds of technology mediated contact points for a person or organization, including telephone, email, etc.",
                                "additionalProperties": false
                              },
                              "valueCount": {
                                "description": "The actual value for the element, which must be one of the types allowed for this element.",
                                "additionalProperties": false
                              },
                              "valueDistance": {
                                "description": "The actual value for the element, which must be one of the types allowed for this element.",
                                "additionalProperties": false
                              },
                              "valueDuration": {
                                "description": "The actual value for the element, which must be one of the types allowed for this element.",
                                "additionalProperties": false
                              },
                              "valueHumanName": {
                                "description": "A human's name with the ability to identify parts and usage.",
                                "additionalProperties": false
                              },
                              "valueIdentifier": {
                                "description": "An identifier - identifies some entity uniquely and unambiguously. Typically this is used for business identifiers.",
                                "additionalProperties": false
                              },
                              "valueMoney": {
                                "description": "The actual value for the element, which must be one of the types allowed for this element.",
                                "additionalProperties": false
                              },
                              "valuePeriod": {
                                "description": "A time period defined by a start and end date and optionally time.",
                                "additionalProperties": false
                              },
                              "valueQuantity": {
                                "description": "A measured amount (or an amount that can potentially be measured). Note that measured amounts include amounts that are not precisely quantified, including amounts involving arbitrary units and floating currencies.",
                                "additionalProperties": false
                              },
                              "valueRange": {
                                "description": "The actual value for the element, which must be one of the types allowed for this element.",
                                "additionalProperties": false
                              },
                              "valueRatio": {
                                "description": "The actual value for the element, which must be one of the types allowed for this element.",
                                "additionalProperties": false
                              },
                              "valueReference": {
                                "description": "A reference from one resource to another.",
                                "additionalProperties": false
                              },
                              "valueSampledData": {
                                "description": "The actual value for the element, which must be one of the types allowed for this element.",
                                "additionalProperties": false
                              },
                              "valueSignature": {
                                "description": "A signature along with supporting context. The signature may be a digital signature that is cryptographic in nature, or some other signature acceptable to the domain. This other signature may be as simple as a graphical image representing a hand-written signature, or a signature ceremony Different signature approaches have different utilities.",
                                "additionalProperties": false
                              },
                              "valueTiming": {
                                "description": "Specifies an event that may occur multiple times. Timing schedules are used to record when things are planned, expected or requested to occur. The most common usage is in dosage instructions for medications. They are also used when planning care of various kinds, and may be used for reporting the schedule to which past regular activities were carried out.",
                                "additionalProperties": false
                              },
                              "valueContactDetail": {
                                "description": "Specifies contact information for a person or organization.",
                                "additionalProperties": false
                              },
                              "valueContributor": {
                                "description": "The actual value for the element, which must be one of the types allowed for this element.",
                                "additionalProperties": false
                              },
                              "valueDataRequirement": {
                                "description": "Describes a required data item for evaluation in terms of the type of data, and optional code or date-based filters of the data.",
                                "additionalProperties": false
                              },
                              "valueExpression": {
                                "description": "The actual value for the element, which must be one of the types allowed for this element.",
                                "additionalProperties": false
                              },
                              "valueParameterDefinition": {
                                "description": "The parameters to the module. This collection specifies both the input and output parameters. Input parameters are provided by the caller as part of the $evaluate operation. Output parameters are included in the GuidanceResponse.",
                                "additionalProperties": false
                              },
                              "valueRelatedArtifact": {
                                "description": "Related artifacts such as additional documentation, justification, or bibliographic references.",
                                "additionalProperties": false
                              },
                              "valueTriggerDefinition": {
                                "description": "A description of a triggering event. Triggering events can be named events, data events, or periodic, as determined by the type element.",
                                "additionalProperties": false
                              },
                              "valueUsageContext": {
                                "description": "Specifies clinical/business/etc. metadata that can be used to retrieve, index and/or categorize an artifact. This metadata can either be specific to the applicable population (e.g., age category, DRG) or the specific context of care (e.g., venue, care setting, provider of care).",
                                "additionalProperties": false
                              },
                              "valueDosage": {
                                "description": "Indicates how the medication is/was taken or should be taken by the patient.",
                                "additionalProperties": false
                              },
                              "valueMeta": {
                                "description": "The actual value for the element, which must be one of the types allowed for this element.",
                                "additionalProperties": false
                              }
                            },
                            "additionalProperties": false
                          },
                          "type": "array"
                        },
                        "minValueDate": {
                          "description": "The minimum allowed value for the element. The value is inclusive. This is allowed for the types date, dateTime, instant, time, decimal, integer, and Quantity.",
                          "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                          "type": "string"
                        },
                        "_minValueDate": {
                          "description": "Base definition for all elements in a resource.",
                          "additionalProperties": false
                        },
                        "minValueDateTime": {
                          "description": "The minimum allowed value for the element. The value is inclusive. This is allowed for the types date, dateTime, instant, time, decimal, integer, and Quantity.",
                          "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                          "type": "string"
                        },
                        "_minValueDateTime": {
                          "description": "Base definition for all elements in a resource.",
                          "additionalProperties": false
                        },
                        "minValueInstant": {
                          "description": "The minimum allowed value for the element. The value is inclusive. This is allowed for the types date, dateTime, instant, time, decimal, integer, and Quantity.",
                          "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
                          "type": "string"
                        },
                        "_minValueInstant": {
                          "description": "Base definition for all elements in a resource.",
                          "additionalProperties": false
                        },
                        "minValueTime": {
                          "description": "The minimum allowed value for the element. The value is inclusive. This is allowed for the types date, dateTime, instant, time, decimal, integer, and Quantity.",
                          "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$",
                          "type": "string"
                        },
                        "_minValueTime": {
                          "description": "Base definition for all elements in a resource.",
                          "additionalProperties": false
                        },
                        "minValueDecimal": {
                          "description": "The minimum allowed value for the element. The value is inclusive. This is allowed for the types date, dateTime, instant, time, decimal, integer, and Quantity.",
                          "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                          "type": "number"
                        },
                        "_minValueDecimal": {
                          "description": "Base definition for all elements in a resource.",
                          "additionalProperties": false
                        },
                        "minValueInteger": {
                          "description": "The minimum allowed value for the element. The value is inclusive. This is allowed for the types date, dateTime, instant, time, decimal, integer, and Quantity.",
                          "pattern": "^-?([0]|([1-9][0-9]*))$",
                          "type": "number"
                        },
                        "_minValueInteger": {
                          "description": "Base definition for all elements in a resource.",
                          "additionalProperties": false
                        },
                        "minValuePositiveInt": {
                          "description": "The minimum allowed value for the element. The value is inclusive. This is allowed for the types date, dateTime, instant, time, decimal, integer, and Quantity.",
                          "pattern": "^[1-9][0-9]*$",
                          "type": "number"
                        },
                        "_minValuePositiveInt": {
                          "description": "Base definition for all elements in a resource.",
                          "additionalProperties": false
                        },
                        "minValueUnsignedInt": {
                          "description": "The minimum allowed value for the element. The value is inclusive. This is allowed for the types date, dateTime, instant, time, decimal, integer, and Quantity.",
                          "pattern": "^[0]|([1-9][0-9]*)$",
                          "type": "number"
                        },
                        "_minValueUnsignedInt": {
                          "description": "Base definition for all elements in a resource.",
                          "additionalProperties": false
                        },
                        "minValueQuantity": {
                          "description": "A measured amount (or an amount that can potentially be measured). Note that measured amounts include amounts that are not precisely quantified, including amounts involving arbitrary units and floating currencies.",
                          "additionalProperties": false
                        },
                        "maxValueDate": {
                          "description": "The maximum allowed value for the element. The value is inclusive. This is allowed for the types date, dateTime, instant, time, decimal, integer, and Quantity.",
                          "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                          "type": "string"
                        },
                        "_maxValueDate": {
                          "description": "Base definition for all elements in a resource.",
                          "additionalProperties": false
                        },
                        "maxValueDateTime": {
                          "description": "The maximum allowed value for the element. The value is inclusive. This is allowed for the types date, dateTime, instant, time, decimal, integer, and Quantity.",
                          "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                          "type": "string"
                        },
                        "_maxValueDateTime": {
                          "description": "Base definition for all elements in a resource.",
                          "additionalProperties": false
                        },
                        "maxValueInstant": {
                          "description": "The maximum allowed value for the element. The value is inclusive. This is allowed for the types date, dateTime, instant, time, decimal, integer, and Quantity.",
                          "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
                          "type": "string"
                        },
                        "_maxValueInstant": {
                          "description": "Base definition for all elements in a resource.",
                          "additionalProperties": false
                        },
                        "maxValueTime": {
                          "description": "The maximum allowed value for the element. The value is inclusive. This is allowed for the types date, dateTime, instant, time, decimal, integer, and Quantity.",
                          "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$",
                          "type": "string"
                        },
                        "_maxValueTime": {
                          "description": "Base definition for all elements in a resource.",
                          "additionalProperties": false
                        },
                        "maxValueDecimal": {
                          "description": "The maximum allowed value for the element. The value is inclusive. This is allowed for the types date, dateTime, instant, time, decimal, integer, and Quantity.",
                          "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                          "type": "number"
                        },
                        "_maxValueDecimal": {
                          "description": "Base definition for all elements in a resource.",
                          "additionalProperties": false
                        },
                        "maxValueInteger": {
                          "description": "The maximum allowed value for the element. The value is inclusive. This is allowed for the types date, dateTime, instant, time, decimal, integer, and Quantity.",
                          "pattern": "^-?([0]|([1-9][0-9]*))$",
                          "type": "number"
                        },
                        "_maxValueInteger": {
                          "description": "Base definition for all elements in a resource.",
                          "additionalProperties": false
                        },
                        "maxValuePositiveInt": {
                          "description": "The maximum allowed value for the element. The value is inclusive. This is allowed for the types date, dateTime, instant, time, decimal, integer, and Quantity.",
                          "pattern": "^[1-9][0-9]*$",
                          "type": "number"
                        },
                        "_maxValuePositiveInt": {
                          "description": "Base definition for all elements in a resource.",
                          "additionalProperties": false
                        },
                        "maxValueUnsignedInt": {
                          "description": "The maximum allowed value for the element. The value is inclusive. This is allowed for the types date, dateTime, instant, time, decimal, integer, and Quantity.",
                          "pattern": "^[0]|([1-9][0-9]*)$",
                          "type": "number"
                        },
                        "_maxValueUnsignedInt": {
                          "description": "Base definition for all elements in a resource.",
                          "additionalProperties": false
                        },
                        "maxValueQuantity": {
                          "description": "A measured amount (or an amount that can potentially be measured). Note that measured amounts include amounts that are not precisely quantified, including amounts involving arbitrary units and floating currencies.",
                          "additionalProperties": false
                        },
                        "maxLength": {
                          "pattern": "^-?([0]|([1-9][0-9]*))$",
                          "type": "number",
                          "description": "A whole number"
                        },
                        "_maxLength": {
                          "description": "Base definition for all elements in a resource.",
                          "additionalProperties": false
                        },
                        "condition": {
                          "description": "A reference to an invariant that may make additional statements about the cardinality or value in the instance.",
                          "type": "array"
                        },
                        "_condition": {
                          "description": "Extensions for condition",
                          "type": "array"
                        },
                        "constraint": {
                          "description": "Formal constraints such as co-occurrence and other constraints that can be computationally evaluated within the context of the instance.",
                          "items": {
                            "description": "Captures constraints on each element within the resource, profile, or extension.",
                            "properties": {
                              "id": {
                                "pattern": "^[ \\r\\n\\t\\S]+$",
                                "type": "string",
                                "description": "A sequence of Unicode characters"
                              },
                              "extension": {
                                "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                                "type": "array"
                              },
                              "modifierExtension": {
                                "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                                "type": "array"
                              },
                              "key": {
                                "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                                "type": "string",
                                "description": "Any combination of letters, numerals, \"-\" and \".\", with a length limit of 64 characters.  (This might be an integer, an unprefixed OID, UUID or any other identifier pattern that meets these constraints.)  Ids are case-insensitive."
                              },
                              "_key": {
                                "description": "Base definition for all elements in a resource.",
                                "additionalProperties": false
                              },
                              "requirements": {
                                "pattern": "^[ \\r\\n\\t\\S]+$",
                                "type": "string",
                                "description": "A sequence of Unicode characters"
                              },
                              "_requirements": {
                                "description": "Base definition for all elements in a resource.",
                                "additionalProperties": false
                              },
                              "severity": {
                                "description": "Identifies the impact constraint violation has on the conformance of the instance.",
                                "enum": [
                                  "error",
                                  "warning"
                                ]
                              },
                              "_severity": {
                                "description": "Base definition for all elements in a resource.",
                                "additionalProperties": false
                              },
                              "human": {
                                "pattern": "^[ \\r\\n\\t\\S]+$",
                                "type": "string",
                                "description": "A sequence of Unicode characters"
                              },
                              "_human": {
                                "description": "Base definition for all elements in a resource.",
                                "additionalProperties": false
                              },
                              "expression": {
                                "pattern": "^[ \\r\\n\\t\\S]+$",
                                "type": "string",
                                "description": "A sequence of Unicode characters"
                              },
                              "_expression": {
                                "description": "Base definition for all elements in a resource.",
                                "additionalProperties": false
                              },
                              "xpath": {
                                "pattern": "^[ \\r\\n\\t\\S]+$",
                                "type": "string",
                                "description": "A sequence of Unicode characters"
                              },
                              "_xpath": {
                                "description": "Base definition for all elements in a resource.",
                                "additionalProperties": false
                              },
                              "source": {
                                "pattern": "^\\S*$",
                                "type": "string",
                                "description": "A URI that is a reference to a canonical URL on a FHIR resource"
                              }
                            },
                            "additionalProperties": false
                          },
                          "type": "array"
                        },
                        "mustSupport": {
                          "description": "If true, implementations that produce or consume resources SHALL provide \"support\" for the element in some meaningful way.  If false, the element may be ignored and not supported. If false, whether to populate or use the data element in any way is at the discretion of the implementation.",
                          "pattern": "^true|false$",
                          "type": "boolean"
                        },
                        "_mustSupport": {
                          "description": "Base definition for all elements in a resource.",
                          "additionalProperties": false
                        },
                        "isModifier": {
                          "description": "If true, the value of this element affects the interpretation of the element or resource that contains it, and the value of the element cannot be ignored. Typically, this is used for status, negation and qualification codes. The effect of this is that the element cannot be ignored by systems: they SHALL either recognize the element and process it, and/or a pre-determination has been made that it is not relevant to their particular system.",
                          "pattern": "^true|false$",
                          "type": "boolean"
                        },
                        "_isModifier": {
                          "description": "Base definition for all elements in a resource.",
                          "additionalProperties": false
                        },
                        "isModifierReason": {
                          "pattern": "^[ \\r\\n\\t\\S]+$",
                          "type": "string",
                          "description": "A sequence of Unicode characters"
                        },
                        "_isModifierReason": {
                          "description": "Base definition for all elements in a resource.",
                          "additionalProperties": false
                        },
                        "isSummary": {
                          "description": "Whether the element should be included if a client requests a search with the parameter _summary=true.",
                          "pattern": "^true|false$",
                          "type": "boolean"
                        },
                        "_isSummary": {
                          "description": "Base definition for all elements in a resource.",
                          "additionalProperties": false
                        },
                        "binding": {
                          "description": "Binds to a value set if this element is coded (code, Coding, CodeableConcept, Quantity), or the data types (string, uri).",
                          "properties": {
                            "id": {
                              "pattern": "^[ \\r\\n\\t\\S]+$",
                              "type": "string",
                              "description": "A sequence of Unicode characters"
                            },
                            "extension": {
                              "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                              "type": "array"
                            },
                            "modifierExtension": {
                              "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                              "type": "array"
                            },
                            "strength": {
                              "description": "Indicates the degree of conformance expectations associated with this binding - that is, the degree to which the provided value set must be adhered to in the instances.",
                              "enum": [
                                "required",
                                "extensible",
                                "preferred",
                                "example"
                              ]
                            },
                            "_strength": {
                              "description": "Base definition for all elements in a resource.",
                              "additionalProperties": false
                            },
                            "description": {
                              "pattern": "^[ \\r\\n\\t\\S]+$",
                              "type": "string",
                              "description": "A sequence of Unicode characters"
                            },
                            "_description": {
                              "description": "Base definition for all elements in a resource.",
                              "additionalProperties": false
                            },
                            "valueSet": {
                              "pattern": "^\\S*$",
                              "type": "string",
                              "description": "A URI that is a reference to a canonical URL on a FHIR resource"
                            }
                          },
                          "additionalProperties": false
                        },
                        "mapping": {
                          "description": "Identifies a concept from an external specification that roughly corresponds to this element.",
                          "items": {
                            "description": "Captures constraints on each element within the resource, profile, or extension.",
                            "properties": {
                              "id": {
                                "pattern": "^[ \\r\\n\\t\\S]+$",
                                "type": "string",
                                "description": "A sequence of Unicode characters"
                              },
                              "extension": {
                                "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                                "type": "array"
                              },
                              "modifierExtension": {
                                "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                                "type": "array"
                              },
                              "identity": {
                                "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                                "type": "string",
                                "description": "Any combination of letters, numerals, \"-\" and \".\", with a length limit of 64 characters.  (This might be an integer, an unprefixed OID, UUID or any other identifier pattern that meets these constraints.)  Ids are case-insensitive."
                              },
                              "_identity": {
                                "description": "Base definition for all elements in a resource.",
                                "additionalProperties": false
                              },
                              "language": {
                                "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                                "type": "string",
                                "description": "A string which has at least one character and no leading or trailing whitespace and where there is no whitespace other than single spaces in the contents"
                              },
                              "_language": {
                                "description": "Base definition for all elements in a resource.",
                                "additionalProperties": false
                              },
                              "map": {
                                "pattern": "^[ \\r\\n\\t\\S]+$",
                                "type": "string",
                                "description": "A sequence of Unicode characters"
                              },
                              "_map": {
                                "description": "Base definition for all elements in a resource.",
                                "additionalProperties": false
                              },
                              "comment": {
                                "pattern": "^[ \\r\\n\\t\\S]+$",
                                "type": "string",
                                "description": "A sequence of Unicode characters"
                              },
                              "_comment": {
                                "description": "Base definition for all elements in a resource.",
                                "additionalProperties": false
                              }
                            },
                            "additionalProperties": false
                          },
                          "type": "array"
                        }
                      },
                      "additionalProperties": false
                    },
                    "type": "array"
                  }
                },
                "additionalProperties": false,
                "required": [
                  "element"
                ]
              },
              "differential": {
                "description": "A differential view is expressed relative to the base StructureDefinition - a statement of differences that it applies.",
                "properties": {
                  "id": {
                    "pattern": "^[ \\r\\n\\t\\S]+$",
                    "type": "string",
                    "description": "A sequence of Unicode characters"
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "type": "array"
                  },
                  "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                    "type": "array"
                  },
                  "element": {
                    "description": "Captures constraints on each element within the resource.",
                    "type": "array"
                  }
                },
                "additionalProperties": false,
                "required": [
                  "element"
                ]
              }
            },
            "additionalProperties": false,
            "required": [
              "resourceType"
            ]
          },
          {
            "description": "A Map of relationships between 2 structures that can be used to transform data.",
            "properties": {
              "resourceType": {
                "description": "This is a StructureMap resource",
                "const": "StructureMap"
              },
              "id": {
                "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                "type": "string",
                "description": "Any combination of letters, numerals, \"-\" and \".\", with a length limit of 64 characters.  (This might be an integer, an unprefixed OID, UUID or any other identifier pattern that meets these constraints.)  Ids are case-insensitive."
              },
              "meta": {
                "description": "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
                "additionalProperties": false
              },
              "implicitRules": {
                "pattern": "^\\S*$",
                "type": "string",
                "description": "String of characters used to identify a name or a resource"
              },
              "_implicitRules": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "language": {
                "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                "type": "string",
                "description": "A string which has at least one character and no leading or trailing whitespace and where there is no whitespace other than single spaces in the contents"
              },
              "_language": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "text": {
                "description": "A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it \"clinically safe\" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.",
                "additionalProperties": false
              },
              "contained": {
                "description": "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope.",
                "type": "array"
              },
              "extension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                "type": "array"
              },
              "modifierExtension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                "type": "array"
              },
              "url": {
                "pattern": "^\\S*$",
                "type": "string",
                "description": "String of characters used to identify a name or a resource"
              },
              "_url": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "identifier": {
                "description": "A formal identifier that is used to identify this structure map when it is represented in other formats, or referenced in a specification, model, design or an instance.",
                "type": "array"
              },
              "version": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "_version": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "name": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "_name": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "title": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "_title": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "status": {
                "description": "The status of this structure map. Enables tracking the life-cycle of the content.",
                "enum": [
                  "draft",
                  "active",
                  "retired",
                  "unknown"
                ]
              },
              "_status": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "experimental": {
                "description": "A Boolean value to indicate that this structure map is authored for testing purposes (or education/evaluation/marketing) and is not intended to be used for genuine usage.",
                "pattern": "^true|false$",
                "type": "boolean"
              },
              "_experimental": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "date": {
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                "type": "string",
                "description": "A date, date-time or partial date (e.g. just year or year + month).  If hours and minutes are specified, a time zone SHALL be populated. The format is a union of the schema types gYear, gYearMonth, date and dateTime. Seconds must be provided due to schema type constraints but may be zero-filled and may be ignored.                 Dates SHALL be valid dates."
              },
              "_date": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "publisher": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "_publisher": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "contact": {
                "description": "Contact details to assist a user in finding and communicating with the publisher.",
                "type": "array"
              },
              "description": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A string that may contain Github Flavored Markdown syntax for optional processing by a mark down presentation engine"
              },
              "_description": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "useContext": {
                "description": "The content was developed with a focus and intent of supporting the contexts that are listed. These contexts may be general categories (gender, age, ...) or may be references to specific programs (insurance plans, studies, ...) and may be used to assist with indexing and searching for appropriate structure map instances.",
                "type": "array"
              },
              "jurisdiction": {
                "description": "A legal or geographic region in which the structure map is intended to be used.",
                "type": "array"
              },
              "purpose": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A string that may contain Github Flavored Markdown syntax for optional processing by a mark down presentation engine"
              },
              "_purpose": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "copyright": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A string that may contain Github Flavored Markdown syntax for optional processing by a mark down presentation engine"
              },
              "_copyright": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "structure": {
                "description": "A structure definition used by this map. The structure definition may describe instances that are converted, or the instances that are produced.",
                "items": {
                  "description": "A Map of relationships between 2 structures that can be used to transform data.",
                  "properties": {
                    "id": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "type": "array"
                    },
                    "modifierExtension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                      "type": "array"
                    },
                    "url": {
                      "pattern": "^\\S*$",
                      "type": "string",
                      "description": "A URI that is a reference to a canonical URL on a FHIR resource"
                    },
                    "mode": {
                      "description": "How the referenced structure is used in this mapping.",
                      "enum": [
                        "source",
                        "queried",
                        "target",
                        "produced"
                      ]
                    },
                    "_mode": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "alias": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "_alias": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "documentation": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "_documentation": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false,
                  "required": [
                    "url"
                  ]
                },
                "type": "array"
              },
              "import": {
                "description": "Other maps used by this map (canonical URLs).",
                "type": "array"
              },
              "group": {
                "description": "Organizes the mapping into manageable chunks for human review/ease of maintenance.",
                "items": {
                  "description": "A Map of relationships between 2 structures that can be used to transform data.",
                  "properties": {
                    "id": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "type": "array"
                    },
                    "modifierExtension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                      "type": "array"
                    },
                    "name": {
                      "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                      "type": "string",
                      "description": "Any combination of letters, numerals, \"-\" and \".\", with a length limit of 64 characters.  (This might be an integer, an unprefixed OID, UUID or any other identifier pattern that meets these constraints.)  Ids are case-insensitive."
                    },
                    "_name": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "extends": {
                      "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                      "type": "string",
                      "description": "Any combination of letters, numerals, \"-\" and \".\", with a length limit of 64 characters.  (This might be an integer, an unprefixed OID, UUID or any other identifier pattern that meets these constraints.)  Ids are case-insensitive."
                    },
                    "_extends": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "typeMode": {
                      "description": "If this is the default rule set to apply for the source type or this combination of types.",
                      "enum": [
                        "none",
                        "types",
                        "type-and-types"
                      ]
                    },
                    "_typeMode": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "documentation": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "_documentation": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "input": {
                      "description": "A name assigned to an instance of data. The instance must be provided when the mapping is invoked.",
                      "items": {
                        "description": "A Map of relationships between 2 structures that can be used to transform data.",
                        "properties": {
                          "id": {
                            "pattern": "^[ \\r\\n\\t\\S]+$",
                            "type": "string",
                            "description": "A sequence of Unicode characters"
                          },
                          "extension": {
                            "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                            "type": "array"
                          },
                          "modifierExtension": {
                            "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                            "type": "array"
                          },
                          "name": {
                            "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                            "type": "string",
                            "description": "Any combination of letters, numerals, \"-\" and \".\", with a length limit of 64 characters.  (This might be an integer, an unprefixed OID, UUID or any other identifier pattern that meets these constraints.)  Ids are case-insensitive."
                          },
                          "_name": {
                            "description": "Base definition for all elements in a resource.",
                            "additionalProperties": false
                          },
                          "type": {
                            "pattern": "^[ \\r\\n\\t\\S]+$",
                            "type": "string",
                            "description": "A sequence of Unicode characters"
                          },
                          "_type": {
                            "description": "Base definition for all elements in a resource.",
                            "additionalProperties": false
                          },
                          "mode": {
                            "description": "Mode for this instance of data.",
                            "enum": [
                              "source",
                              "target"
                            ]
                          },
                          "_mode": {
                            "description": "Base definition for all elements in a resource.",
                            "additionalProperties": false
                          },
                          "documentation": {
                            "pattern": "^[ \\r\\n\\t\\S]+$",
                            "type": "string",
                            "description": "A sequence of Unicode characters"
                          },
                          "_documentation": {
                            "description": "Base definition for all elements in a resource.",
                            "additionalProperties": false
                          }
                        },
                        "additionalProperties": false
                      },
                      "type": "array"
                    },
                    "rule": {
                      "description": "Transform Rule from source to target.",
                      "items": {
                        "description": "A Map of relationships between 2 structures that can be used to transform data.",
                        "properties": {
                          "id": {
                            "pattern": "^[ \\r\\n\\t\\S]+$",
                            "type": "string",
                            "description": "A sequence of Unicode characters"
                          },
                          "extension": {
                            "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                            "type": "array"
                          },
                          "modifierExtension": {
                            "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                            "type": "array"
                          },
                          "name": {
                            "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                            "type": "string",
                            "description": "Any combination of letters, numerals, \"-\" and \".\", with a length limit of 64 characters.  (This might be an integer, an unprefixed OID, UUID or any other identifier pattern that meets these constraints.)  Ids are case-insensitive."
                          },
                          "_name": {
                            "description": "Base definition for all elements in a resource.",
                            "additionalProperties": false
                          },
                          "source": {
                            "description": "Source inputs to the mapping.",
                            "items": {
                              "description": "A Map of relationships between 2 structures that can be used to transform data.",
                              "properties": {
                                "id": {
                                  "pattern": "^[ \\r\\n\\t\\S]+$",
                                  "type": "string",
                                  "description": "A sequence of Unicode characters"
                                },
                                "extension": {
                                  "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                                  "type": "array"
                                },
                                "modifierExtension": {
                                  "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                                  "type": "array"
                                },
                                "context": {
                                  "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                                  "type": "string",
                                  "description": "Any combination of letters, numerals, \"-\" and \".\", with a length limit of 64 characters.  (This might be an integer, an unprefixed OID, UUID or any other identifier pattern that meets these constraints.)  Ids are case-insensitive."
                                },
                                "_context": {
                                  "description": "Base definition for all elements in a resource.",
                                  "additionalProperties": false
                                },
                                "min": {
                                  "pattern": "^-?([0]|([1-9][0-9]*))$",
                                  "type": "number",
                                  "description": "A whole number"
                                },
                                "_min": {
                                  "description": "Base definition for all elements in a resource.",
                                  "additionalProperties": false
                                },
                                "max": {
                                  "pattern": "^[ \\r\\n\\t\\S]+$",
                                  "type": "string",
                                  "description": "A sequence of Unicode characters"
                                },
                                "_max": {
                                  "description": "Base definition for all elements in a resource.",
                                  "additionalProperties": false
                                },
                                "type": {
                                  "pattern": "^[ \\r\\n\\t\\S]+$",
                                  "type": "string",
                                  "description": "A sequence of Unicode characters"
                                },
                                "_type": {
                                  "description": "Base definition for all elements in a resource.",
                                  "additionalProperties": false
                                },
                                "defaultValueBase64Binary": {
                                  "description": "A value to use if there is no existing value in the source object.",
                                  "pattern": "^(\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+$",
                                  "type": "string"
                                },
                                "_defaultValueBase64Binary": {
                                  "description": "Base definition for all elements in a resource.",
                                  "additionalProperties": false
                                },
                                "defaultValueBoolean": {
                                  "description": "A value to use if there is no existing value in the source object.",
                                  "pattern": "^true|false$",
                                  "type": "boolean"
                                },
                                "_defaultValueBoolean": {
                                  "description": "Base definition for all elements in a resource.",
                                  "additionalProperties": false
                                },
                                "defaultValueCanonical": {
                                  "description": "A value to use if there is no existing value in the source object.",
                                  "pattern": "^\\S*$",
                                  "type": "string"
                                },
                                "_defaultValueCanonical": {
                                  "description": "Base definition for all elements in a resource.",
                                  "additionalProperties": false
                                },
                                "defaultValueCode": {
                                  "description": "A value to use if there is no existing value in the source object.",
                                  "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                                  "type": "string"
                                },
                                "_defaultValueCode": {
                                  "description": "Base definition for all elements in a resource.",
                                  "additionalProperties": false
                                },
                                "defaultValueDate": {
                                  "description": "A value to use if there is no existing value in the source object.",
                                  "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                                  "type": "string"
                                },
                                "_defaultValueDate": {
                                  "description": "Base definition for all elements in a resource.",
                                  "additionalProperties": false
                                },
                                "defaultValueDateTime": {
                                  "description": "A value to use if there is no existing value in the source object.",
                                  "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                                  "type": "string"
                                },
                                "_defaultValueDateTime": {
                                  "description": "Base definition for all elements in a resource.",
                                  "additionalProperties": false
                                },
                                "defaultValueDecimal": {
                                  "description": "A value to use if there is no existing value in the source object.",
                                  "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                                  "type": "number"
                                },
                                "_defaultValueDecimal": {
                                  "description": "Base definition for all elements in a resource.",
                                  "additionalProperties": false
                                },
                                "defaultValueId": {
                                  "description": "A value to use if there is no existing value in the source object.",
                                  "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                                  "type": "string"
                                },
                                "_defaultValueId": {
                                  "description": "Base definition for all elements in a resource.",
                                  "additionalProperties": false
                                },
                                "defaultValueInstant": {
                                  "description": "A value to use if there is no existing value in the source object.",
                                  "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
                                  "type": "string"
                                },
                                "_defaultValueInstant": {
                                  "description": "Base definition for all elements in a resource.",
                                  "additionalProperties": false
                                },
                                "defaultValueInteger": {
                                  "description": "A value to use if there is no existing value in the source object.",
                                  "pattern": "^-?([0]|([1-9][0-9]*))$",
                                  "type": "number"
                                },
                                "_defaultValueInteger": {
                                  "description": "Base definition for all elements in a resource.",
                                  "additionalProperties": false
                                },
                                "defaultValueMarkdown": {
                                  "description": "A value to use if there is no existing value in the source object.",
                                  "pattern": "^[ \\r\\n\\t\\S]+$",
                                  "type": "string"
                                },
                                "_defaultValueMarkdown": {
                                  "description": "Base definition for all elements in a resource.",
                                  "additionalProperties": false
                                },
                                "defaultValueOid": {
                                  "description": "A value to use if there is no existing value in the source object.",
                                  "pattern": "^urn:oid:[0-2](\\.(0|[1-9][0-9]*))+$",
                                  "type": "string"
                                },
                                "_defaultValueOid": {
                                  "description": "Base definition for all elements in a resource.",
                                  "additionalProperties": false
                                },
                                "defaultValuePositiveInt": {
                                  "description": "A value to use if there is no existing value in the source object.",
                                  "pattern": "^[1-9][0-9]*$",
                                  "type": "number"
                                },
                                "_defaultValuePositiveInt": {
                                  "description": "Base definition for all elements in a resource.",
                                  "additionalProperties": false
                                },
                                "defaultValueString": {
                                  "description": "A value to use if there is no existing value in the source object.",
                                  "pattern": "^[ \\r\\n\\t\\S]+$",
                                  "type": "string"
                                },
                                "_defaultValueString": {
                                  "description": "Base definition for all elements in a resource.",
                                  "additionalProperties": false
                                },
                                "defaultValueTime": {
                                  "description": "A value to use if there is no existing value in the source object.",
                                  "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$",
                                  "type": "string"
                                },
                                "_defaultValueTime": {
                                  "description": "Base definition for all elements in a resource.",
                                  "additionalProperties": false
                                },
                                "defaultValueUnsignedInt": {
                                  "description": "A value to use if there is no existing value in the source object.",
                                  "pattern": "^[0]|([1-9][0-9]*)$",
                                  "type": "number"
                                },
                                "_defaultValueUnsignedInt": {
                                  "description": "Base definition for all elements in a resource.",
                                  "additionalProperties": false
                                },
                                "defaultValueUri": {
                                  "description": "A value to use if there is no existing value in the source object.",
                                  "pattern": "^\\S*$",
                                  "type": "string"
                                },
                                "_defaultValueUri": {
                                  "description": "Base definition for all elements in a resource.",
                                  "additionalProperties": false
                                },
                                "defaultValueUrl": {
                                  "description": "A value to use if there is no existing value in the source object.",
                                  "pattern": "^\\S*$",
                                  "type": "string"
                                },
                                "_defaultValueUrl": {
                                  "description": "Base definition for all elements in a resource.",
                                  "additionalProperties": false
                                },
                                "defaultValueUuid": {
                                  "description": "A value to use if there is no existing value in the source object.",
                                  "pattern": "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                                  "type": "string"
                                },
                                "_defaultValueUuid": {
                                  "description": "Base definition for all elements in a resource.",
                                  "additionalProperties": false
                                },
                                "defaultValueAddress": {
                                  "description": "An address expressed using postal conventions (as opposed to GPS or other location definition formats).  This data type may be used to convey addresses for use in delivering mail as well as for visiting locations which might not be valid for mail delivery.  There are a variety of postal address formats defined around the world.",
                                  "additionalProperties": false
                                },
                                "defaultValueAge": {
                                  "description": "A value to use if there is no existing value in the source object.",
                                  "additionalProperties": false
                                },
                                "defaultValueAnnotation": {
                                  "description": "A  text note which also  contains information about who made the statement and when.",
                                  "additionalProperties": false
                                },
                                "defaultValueAttachment": {
                                  "description": "For referring to data content defined in other formats.",
                                  "additionalProperties": false
                                },
                                "defaultValueCodeableConcept": {
                                  "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                                  "additionalProperties": false
                                },
                                "defaultValueCoding": {
                                  "description": "A reference to a code defined by a terminology system.",
                                  "additionalProperties": false
                                },
                                "defaultValueContactPoint": {
                                  "description": "Details for all kinds of technology mediated contact points for a person or organization, including telephone, email, etc.",
                                  "additionalProperties": false
                                },
                                "defaultValueCount": {
                                  "description": "A value to use if there is no existing value in the source object.",
                                  "additionalProperties": false
                                },
                                "defaultValueDistance": {
                                  "description": "A value to use if there is no existing value in the source object.",
                                  "additionalProperties": false
                                },
                                "defaultValueDuration": {
                                  "description": "A value to use if there is no existing value in the source object.",
                                  "additionalProperties": false
                                },
                                "defaultValueHumanName": {
                                  "description": "A human's name with the ability to identify parts and usage.",
                                  "additionalProperties": false
                                },
                                "defaultValueIdentifier": {
                                  "description": "An identifier - identifies some entity uniquely and unambiguously. Typically this is used for business identifiers.",
                                  "additionalProperties": false
                                },
                                "defaultValueMoney": {
                                  "description": "A value to use if there is no existing value in the source object.",
                                  "additionalProperties": false
                                },
                                "defaultValuePeriod": {
                                  "description": "A time period defined by a start and end date and optionally time.",
                                  "additionalProperties": false
                                },
                                "defaultValueQuantity": {
                                  "description": "A measured amount (or an amount that can potentially be measured). Note that measured amounts include amounts that are not precisely quantified, including amounts involving arbitrary units and floating currencies.",
                                  "additionalProperties": false
                                },
                                "defaultValueRange": {
                                  "description": "A value to use if there is no existing value in the source object.",
                                  "additionalProperties": false
                                },
                                "defaultValueRatio": {
                                  "description": "A value to use if there is no existing value in the source object.",
                                  "additionalProperties": false
                                },
                                "defaultValueReference": {
                                  "description": "A reference from one resource to another.",
                                  "additionalProperties": false
                                },
                                "defaultValueSampledData": {
                                  "description": "A value to use if there is no existing value in the source object.",
                                  "additionalProperties": false
                                },
                                "defaultValueSignature": {
                                  "description": "A signature along with supporting context. The signature may be a digital signature that is cryptographic in nature, or some other signature acceptable to the domain. This other signature may be as simple as a graphical image representing a hand-written signature, or a signature ceremony Different signature approaches have different utilities.",
                                  "additionalProperties": false
                                },
                                "defaultValueTiming": {
                                  "description": "Specifies an event that may occur multiple times. Timing schedules are used to record when things are planned, expected or requested to occur. The most common usage is in dosage instructions for medications. They are also used when planning care of various kinds, and may be used for reporting the schedule to which past regular activities were carried out.",
                                  "additionalProperties": false
                                },
                                "defaultValueContactDetail": {
                                  "description": "Specifies contact information for a person or organization.",
                                  "additionalProperties": false
                                },
                                "defaultValueContributor": {
                                  "description": "A value to use if there is no existing value in the source object.",
                                  "additionalProperties": false
                                },
                                "defaultValueDataRequirement": {
                                  "description": "Describes a required data item for evaluation in terms of the type of data, and optional code or date-based filters of the data.",
                                  "additionalProperties": false
                                },
                                "defaultValueExpression": {
                                  "description": "A value to use if there is no existing value in the source object.",
                                  "additionalProperties": false
                                },
                                "defaultValueParameterDefinition": {
                                  "description": "The parameters to the module. This collection specifies both the input and output parameters. Input parameters are provided by the caller as part of the $evaluate operation. Output parameters are included in the GuidanceResponse.",
                                  "additionalProperties": false
                                },
                                "defaultValueRelatedArtifact": {
                                  "description": "Related artifacts such as additional documentation, justification, or bibliographic references.",
                                  "additionalProperties": false
                                },
                                "defaultValueTriggerDefinition": {
                                  "description": "A description of a triggering event. Triggering events can be named events, data events, or periodic, as determined by the type element.",
                                  "additionalProperties": false
                                },
                                "defaultValueUsageContext": {
                                  "description": "Specifies clinical/business/etc. metadata that can be used to retrieve, index and/or categorize an artifact. This metadata can either be specific to the applicable population (e.g., age category, DRG) or the specific context of care (e.g., venue, care setting, provider of care).",
                                  "additionalProperties": false
                                },
                                "defaultValueDosage": {
                                  "description": "Indicates how the medication is/was taken or should be taken by the patient.",
                                  "additionalProperties": false
                                },
                                "defaultValueMeta": {
                                  "description": "A value to use if there is no existing value in the source object.",
                                  "additionalProperties": false
                                },
                                "element": {
                                  "pattern": "^[ \\r\\n\\t\\S]+$",
                                  "type": "string",
                                  "description": "A sequence of Unicode characters"
                                },
                                "_element": {
                                  "description": "Base definition for all elements in a resource.",
                                  "additionalProperties": false
                                },
                                "listMode": {
                                  "description": "How to handle the list mode for this element.",
                                  "enum": [
                                    "first",
                                    "not_first",
                                    "last",
                                    "not_last",
                                    "only_one"
                                  ]
                                },
                                "_listMode": {
                                  "description": "Base definition for all elements in a resource.",
                                  "additionalProperties": false
                                },
                                "variable": {
                                  "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                                  "type": "string",
                                  "description": "Any combination of letters, numerals, \"-\" and \".\", with a length limit of 64 characters.  (This might be an integer, an unprefixed OID, UUID or any other identifier pattern that meets these constraints.)  Ids are case-insensitive."
                                },
                                "_variable": {
                                  "description": "Base definition for all elements in a resource.",
                                  "additionalProperties": false
                                },
                                "condition": {
                                  "pattern": "^[ \\r\\n\\t\\S]+$",
                                  "type": "string",
                                  "description": "A sequence of Unicode characters"
                                },
                                "_condition": {
                                  "description": "Base definition for all elements in a resource.",
                                  "additionalProperties": false
                                },
                                "check": {
                                  "pattern": "^[ \\r\\n\\t\\S]+$",
                                  "type": "string",
                                  "description": "A sequence of Unicode characters"
                                },
                                "_check": {
                                  "description": "Base definition for all elements in a resource.",
                                  "additionalProperties": false
                                },
                                "logMessage": {
                                  "pattern": "^[ \\r\\n\\t\\S]+$",
                                  "type": "string",
                                  "description": "A sequence of Unicode characters"
                                },
                                "_logMessage": {
                                  "description": "Base definition for all elements in a resource.",
                                  "additionalProperties": false
                                }
                              },
                              "additionalProperties": false
                            },
                            "type": "array"
                          },
                          "target": {
                            "description": "Content to create because of this mapping rule.",
                            "items": {
                              "description": "A Map of relationships between 2 structures that can be used to transform data.",
                              "properties": {
                                "id": {
                                  "pattern": "^[ \\r\\n\\t\\S]+$",
                                  "type": "string",
                                  "description": "A sequence of Unicode characters"
                                },
                                "extension": {
                                  "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                                  "type": "array"
                                },
                                "modifierExtension": {
                                  "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                                  "type": "array"
                                },
                                "context": {
                                  "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                                  "type": "string",
                                  "description": "Any combination of letters, numerals, \"-\" and \".\", with a length limit of 64 characters.  (This might be an integer, an unprefixed OID, UUID or any other identifier pattern that meets these constraints.)  Ids are case-insensitive."
                                },
                                "_context": {
                                  "description": "Base definition for all elements in a resource.",
                                  "additionalProperties": false
                                },
                                "contextType": {
                                  "description": "How to interpret the context.",
                                  "enum": [
                                    "type",
                                    "variable"
                                  ]
                                },
                                "_contextType": {
                                  "description": "Base definition for all elements in a resource.",
                                  "additionalProperties": false
                                },
                                "element": {
                                  "pattern": "^[ \\r\\n\\t\\S]+$",
                                  "type": "string",
                                  "description": "A sequence of Unicode characters"
                                },
                                "_element": {
                                  "description": "Base definition for all elements in a resource.",
                                  "additionalProperties": false
                                },
                                "variable": {
                                  "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                                  "type": "string",
                                  "description": "Any combination of letters, numerals, \"-\" and \".\", with a length limit of 64 characters.  (This might be an integer, an unprefixed OID, UUID or any other identifier pattern that meets these constraints.)  Ids are case-insensitive."
                                },
                                "_variable": {
                                  "description": "Base definition for all elements in a resource.",
                                  "additionalProperties": false
                                },
                                "listMode": {
                                  "description": "If field is a list, how to manage the list.",
                                  "items": {
                                    "enum": [
                                      "first",
                                      "share",
                                      "last",
                                      "collate"
                                    ]
                                  },
                                  "type": "array"
                                },
                                "_listMode": {
                                  "description": "Extensions for listMode",
                                  "type": "array"
                                },
                                "listRuleId": {
                                  "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                                  "type": "string",
                                  "description": "Any combination of letters, numerals, \"-\" and \".\", with a length limit of 64 characters.  (This might be an integer, an unprefixed OID, UUID or any other identifier pattern that meets these constraints.)  Ids are case-insensitive."
                                },
                                "_listRuleId": {
                                  "description": "Base definition for all elements in a resource.",
                                  "additionalProperties": false
                                },
                                "transform": {
                                  "description": "How the data is copied / created.",
                                  "enum": [
                                    "create",
                                    "copy",
                                    "truncate",
                                    "escape",
                                    "cast",
                                    "append",
                                    "translate",
                                    "reference",
                                    "dateOp",
                                    "uuid",
                                    "pointer",
                                    "evaluate",
                                    "cc",
                                    "c",
                                    "qty",
                                    "id",
                                    "cp"
                                  ]
                                },
                                "_transform": {
                                  "description": "Base definition for all elements in a resource.",
                                  "additionalProperties": false
                                },
                                "parameter": {
                                  "description": "Parameters to the transform.",
                                  "items": {
                                    "description": "A Map of relationships between 2 structures that can be used to transform data.",
                                    "properties": {
                                      "id": {
                                        "pattern": "^[ \\r\\n\\t\\S]+$",
                                        "type": "string",
                                        "description": "A sequence of Unicode characters"
                                      },
                                      "extension": {
                                        "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                                        "type": "array"
                                      },
                                      "modifierExtension": {
                                        "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                                        "type": "array"
                                      },
                                      "valueId": {
                                        "description": "Parameter value - variable or literal.",
                                        "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                                        "type": "string"
                                      },
                                      "_valueId": {
                                        "description": "Base definition for all elements in a resource.",
                                        "additionalProperties": false
                                      },
                                      "valueString": {
                                        "description": "Parameter value - variable or literal.",
                                        "pattern": "^[ \\r\\n\\t\\S]+$",
                                        "type": "string"
                                      },
                                      "_valueString": {
                                        "description": "Base definition for all elements in a resource.",
                                        "additionalProperties": false
                                      },
                                      "valueBoolean": {
                                        "description": "Parameter value - variable or literal.",
                                        "pattern": "^true|false$",
                                        "type": "boolean"
                                      },
                                      "_valueBoolean": {
                                        "description": "Base definition for all elements in a resource.",
                                        "additionalProperties": false
                                      },
                                      "valueInteger": {
                                        "description": "Parameter value - variable or literal.",
                                        "pattern": "^-?([0]|([1-9][0-9]*))$",
                                        "type": "number"
                                      },
                                      "_valueInteger": {
                                        "description": "Base definition for all elements in a resource.",
                                        "additionalProperties": false
                                      },
                                      "valueDecimal": {
                                        "description": "Parameter value - variable or literal.",
                                        "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                                        "type": "number"
                                      },
                                      "_valueDecimal": {
                                        "description": "Base definition for all elements in a resource.",
                                        "additionalProperties": false
                                      }
                                    },
                                    "additionalProperties": false
                                  },
                                  "type": "array"
                                }
                              },
                              "additionalProperties": false
                            },
                            "type": "array"
                          },
                          "rule": {
                            "description": "Rules contained in this rule.",
                            "type": "array"
                          },
                          "dependent": {
                            "description": "Which other rules to apply in the context of this rule.",
                            "items": {
                              "description": "A Map of relationships between 2 structures that can be used to transform data.",
                              "properties": {
                                "id": {
                                  "pattern": "^[ \\r\\n\\t\\S]+$",
                                  "type": "string",
                                  "description": "A sequence of Unicode characters"
                                },
                                "extension": {
                                  "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                                  "type": "array"
                                },
                                "modifierExtension": {
                                  "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                                  "type": "array"
                                },
                                "name": {
                                  "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                                  "type": "string",
                                  "description": "Any combination of letters, numerals, \"-\" and \".\", with a length limit of 64 characters.  (This might be an integer, an unprefixed OID, UUID or any other identifier pattern that meets these constraints.)  Ids are case-insensitive."
                                },
                                "_name": {
                                  "description": "Base definition for all elements in a resource.",
                                  "additionalProperties": false
                                },
                                "variable": {
                                  "description": "Variable to pass to the rule or group.",
                                  "type": "array"
                                },
                                "_variable": {
                                  "description": "Extensions for variable",
                                  "type": "array"
                                }
                              },
                              "additionalProperties": false
                            },
                            "type": "array"
                          },
                          "documentation": {
                            "pattern": "^[ \\r\\n\\t\\S]+$",
                            "type": "string",
                            "description": "A sequence of Unicode characters"
                          },
                          "_documentation": {
                            "description": "Base definition for all elements in a resource.",
                            "additionalProperties": false
                          }
                        },
                        "additionalProperties": false,
                        "required": [
                          "source"
                        ]
                      },
                      "type": "array"
                    }
                  },
                  "additionalProperties": false,
                  "required": [
                    "input",
                    "rule"
                  ]
                },
                "type": "array"
              }
            },
            "additionalProperties": false,
            "required": [
              "resourceType",
              "group"
            ]
          },
          {
            "description": "The subscription resource is used to define a push-based subscription from a server to another system. Once a subscription is registered with the server, the server checks every resource that is created or updated, and if the resource matches the given criteria, it sends a message on the defined \"channel\" so that another system can take an appropriate action.",
            "properties": {
              "resourceType": {
                "description": "This is a Subscription resource",
                "const": "Subscription"
              },
              "id": {
                "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                "type": "string",
                "description": "Any combination of letters, numerals, \"-\" and \".\", with a length limit of 64 characters.  (This might be an integer, an unprefixed OID, UUID or any other identifier pattern that meets these constraints.)  Ids are case-insensitive."
              },
              "meta": {
                "description": "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
                "additionalProperties": false
              },
              "implicitRules": {
                "pattern": "^\\S*$",
                "type": "string",
                "description": "String of characters used to identify a name or a resource"
              },
              "_implicitRules": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "language": {
                "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                "type": "string",
                "description": "A string which has at least one character and no leading or trailing whitespace and where there is no whitespace other than single spaces in the contents"
              },
              "_language": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "text": {
                "description": "A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it \"clinically safe\" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.",
                "additionalProperties": false
              },
              "contained": {
                "description": "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope.",
                "type": "array"
              },
              "extension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                "type": "array"
              },
              "modifierExtension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                "type": "array"
              },
              "status": {
                "description": "The status of the subscription, which marks the server state for managing the subscription.",
                "enum": [
                  "requested",
                  "active",
                  "error",
                  "off"
                ]
              },
              "_status": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "contact": {
                "description": "Contact details for a human to contact about the subscription. The primary use of this for system administrator troubleshooting.",
                "type": "array"
              },
              "end": {
                "description": "The time for the server to turn the subscription off.",
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
                "type": "string"
              },
              "_end": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "reason": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "_reason": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "criteria": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "_criteria": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "error": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "_error": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "channel": {
                "description": "Details where to send notifications when resources are received that meet the criteria.",
                "properties": {
                  "id": {
                    "pattern": "^[ \\r\\n\\t\\S]+$",
                    "type": "string",
                    "description": "A sequence of Unicode characters"
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "type": "array"
                  },
                  "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                    "type": "array"
                  },
                  "type": {
                    "description": "The type of channel to send notifications on.",
                    "enum": [
                      "rest-hook",
                      "websocket",
                      "email",
                      "sms",
                      "message"
                    ]
                  },
                  "_type": {
                    "description": "Base definition for all elements in a resource.",
                    "additionalProperties": false
                  },
                  "endpoint": {
                    "description": "The url that describes the actual end-point to send messages to.",
                    "pattern": "^\\S*$",
                    "type": "string"
                  },
                  "_endpoint": {
                    "description": "Base definition for all elements in a resource.",
                    "additionalProperties": false
                  },
                  "payload": {
                    "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                    "type": "string",
                    "description": "A string which has at least one character and no leading or trailing whitespace and where there is no whitespace other than single spaces in the contents"
                  },
                  "_payload": {
                    "description": "Base definition for all elements in a resource.",
                    "additionalProperties": false
                  },
                  "header": {
                    "description": "Additional headers / information to send as part of the notification.",
                    "type": "array"
                  },
                  "_header": {
                    "description": "Extensions for header",
                    "type": "array"
                  }
                },
                "additionalProperties": false
              }
            },
            "additionalProperties": false,
            "required": [
              "channel",
              "resourceType"
            ]
          },
          {
            "description": "A homogeneous material with a definite composition.",
            "properties": {
              "resourceType": {
                "description": "This is a Substance resource",
                "const": "Substance"
              },
              "id": {
                "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                "type": "string",
                "description": "Any combination of letters, numerals, \"-\" and \".\", with a length limit of 64 characters.  (This might be an integer, an unprefixed OID, UUID or any other identifier pattern that meets these constraints.)  Ids are case-insensitive."
              },
              "meta": {
                "description": "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
                "additionalProperties": false
              },
              "implicitRules": {
                "pattern": "^\\S*$",
                "type": "string",
                "description": "String of characters used to identify a name or a resource"
              },
              "_implicitRules": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "language": {
                "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                "type": "string",
                "description": "A string which has at least one character and no leading or trailing whitespace and where there is no whitespace other than single spaces in the contents"
              },
              "_language": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "text": {
                "description": "A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it \"clinically safe\" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.",
                "additionalProperties": false
              },
              "contained": {
                "description": "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope.",
                "type": "array"
              },
              "extension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                "type": "array"
              },
              "modifierExtension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                "type": "array"
              },
              "identifier": {
                "description": "Unique identifier for the substance.",
                "type": "array"
              },
              "status": {
                "description": "A code to indicate if the substance is actively used.",
                "enum": [
                  "active",
                  "inactive",
                  "entered-in-error"
                ]
              },
              "_status": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "category": {
                "description": "A code that classifies the general type of substance.  This is used  for searching, sorting and display purposes.",
                "type": "array"
              },
              "code": {
                "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                "additionalProperties": false
              },
              "description": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "_description": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "instance": {
                "description": "Substance may be used to describe a kind of substance, or a specific package/container of the substance: an instance.",
                "items": {
                  "description": "A homogeneous material with a definite composition.",
                  "properties": {
                    "id": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "type": "array"
                    },
                    "modifierExtension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                      "type": "array"
                    },
                    "identifier": {
                      "description": "An identifier - identifies some entity uniquely and unambiguously. Typically this is used for business identifiers.",
                      "additionalProperties": false
                    },
                    "expiry": {
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                      "type": "string",
                      "description": "A date, date-time or partial date (e.g. just year or year + month).  If hours and minutes are specified, a time zone SHALL be populated. The format is a union of the schema types gYear, gYearMonth, date and dateTime. Seconds must be provided due to schema type constraints but may be zero-filled and may be ignored.                 Dates SHALL be valid dates."
                    },
                    "_expiry": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "quantity": {
                      "description": "A measured amount (or an amount that can potentially be measured). Note that measured amounts include amounts that are not precisely quantified, including amounts involving arbitrary units and floating currencies.",
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                },
                "type": "array"
              },
              "ingredient": {
                "description": "A substance can be composed of other substances.",
                "items": {
                  "description": "A homogeneous material with a definite composition.",
                  "properties": {
                    "id": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "type": "array"
                    },
                    "modifierExtension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                      "type": "array"
                    },
                    "quantity": {
                      "description": "The amount of the ingredient in the substance - a concentration ratio.",
                      "additionalProperties": false
                    },
                    "substanceCodeableConcept": {
                      "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                      "additionalProperties": false
                    },
                    "substanceReference": {
                      "description": "A reference from one resource to another.",
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                },
                "type": "array"
              }
            },
            "additionalProperties": false,
            "required": [
              "code",
              "resourceType"
            ]
          },
          {
            "description": "Nucleic acids are defined by three distinct elements: the base, sugar and linkage. Individual substance/moiety IDs will be created for each of these elements. The nucleotide sequence will be always entered in the 5’-3’ direction.",
            "properties": {
              "resourceType": {
                "description": "This is a SubstanceNucleicAcid resource",
                "const": "SubstanceNucleicAcid"
              },
              "id": {
                "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                "type": "string",
                "description": "Any combination of letters, numerals, \"-\" and \".\", with a length limit of 64 characters.  (This might be an integer, an unprefixed OID, UUID or any other identifier pattern that meets these constraints.)  Ids are case-insensitive."
              },
              "meta": {
                "description": "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
                "additionalProperties": false
              },
              "implicitRules": {
                "pattern": "^\\S*$",
                "type": "string",
                "description": "String of characters used to identify a name or a resource"
              },
              "_implicitRules": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "language": {
                "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                "type": "string",
                "description": "A string which has at least one character and no leading or trailing whitespace and where there is no whitespace other than single spaces in the contents"
              },
              "_language": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "text": {
                "description": "A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it \"clinically safe\" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.",
                "additionalProperties": false
              },
              "contained": {
                "description": "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope.",
                "type": "array"
              },
              "extension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                "type": "array"
              },
              "modifierExtension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                "type": "array"
              },
              "sequenceType": {
                "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                "additionalProperties": false
              },
              "numberOfSubunits": {
                "pattern": "^-?([0]|([1-9][0-9]*))$",
                "type": "number",
                "description": "A whole number"
              },
              "_numberOfSubunits": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "areaOfHybridisation": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "_areaOfHybridisation": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "oligoNucleotideType": {
                "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                "additionalProperties": false
              },
              "subunit": {
                "description": "Subunits are listed in order of decreasing length; sequences of the same length will be ordered by molecular weight; subunits that have identical sequences will be repeated multiple times.",
                "items": {
                  "description": "Nucleic acids are defined by three distinct elements: the base, sugar and linkage. Individual substance/moiety IDs will be created for each of these elements. The nucleotide sequence will be always entered in the 5’-3’ direction.",
                  "properties": {
                    "id": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "type": "array"
                    },
                    "modifierExtension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                      "type": "array"
                    },
                    "subunit": {
                      "pattern": "^-?([0]|([1-9][0-9]*))$",
                      "type": "number",
                      "description": "A whole number"
                    },
                    "_subunit": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "sequence": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "_sequence": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "length": {
                      "pattern": "^-?([0]|([1-9][0-9]*))$",
                      "type": "number",
                      "description": "A whole number"
                    },
                    "_length": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "sequenceAttachment": {
                      "description": "For referring to data content defined in other formats.",
                      "additionalProperties": false
                    },
                    "fivePrime": {
                      "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                      "additionalProperties": false
                    },
                    "threePrime": {
                      "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                      "additionalProperties": false
                    },
                    "linkage": {
                      "description": "The linkages between sugar residues will also be captured.",
                      "items": {
                        "description": "Nucleic acids are defined by three distinct elements: the base, sugar and linkage. Individual substance/moiety IDs will be created for each of these elements. The nucleotide sequence will be always entered in the 5’-3’ direction.",
                        "properties": {
                          "id": {
                            "pattern": "^[ \\r\\n\\t\\S]+$",
                            "type": "string",
                            "description": "A sequence of Unicode characters"
                          },
                          "extension": {
                            "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                            "type": "array"
                          },
                          "modifierExtension": {
                            "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                            "type": "array"
                          },
                          "connectivity": {
                            "pattern": "^[ \\r\\n\\t\\S]+$",
                            "type": "string",
                            "description": "A sequence of Unicode characters"
                          },
                          "_connectivity": {
                            "description": "Base definition for all elements in a resource.",
                            "additionalProperties": false
                          },
                          "identifier": {
                            "description": "An identifier - identifies some entity uniquely and unambiguously. Typically this is used for business identifiers.",
                            "additionalProperties": false
                          },
                          "name": {
                            "pattern": "^[ \\r\\n\\t\\S]+$",
                            "type": "string",
                            "description": "A sequence of Unicode characters"
                          },
                          "_name": {
                            "description": "Base definition for all elements in a resource.",
                            "additionalProperties": false
                          },
                          "residueSite": {
                            "pattern": "^[ \\r\\n\\t\\S]+$",
                            "type": "string",
                            "description": "A sequence of Unicode characters"
                          },
                          "_residueSite": {
                            "description": "Base definition for all elements in a resource.",
                            "additionalProperties": false
                          }
                        },
                        "additionalProperties": false
                      },
                      "type": "array"
                    },
                    "sugar": {
                      "description": "5.3.6.8.1 Sugar ID (Mandatory).",
                      "items": {
                        "description": "Nucleic acids are defined by three distinct elements: the base, sugar and linkage. Individual substance/moiety IDs will be created for each of these elements. The nucleotide sequence will be always entered in the 5’-3’ direction.",
                        "properties": {
                          "id": {
                            "pattern": "^[ \\r\\n\\t\\S]+$",
                            "type": "string",
                            "description": "A sequence of Unicode characters"
                          },
                          "extension": {
                            "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                            "type": "array"
                          },
                          "modifierExtension": {
                            "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                            "type": "array"
                          },
                          "identifier": {
                            "description": "An identifier - identifies some entity uniquely and unambiguously. Typically this is used for business identifiers.",
                            "additionalProperties": false
                          },
                          "name": {
                            "pattern": "^[ \\r\\n\\t\\S]+$",
                            "type": "string",
                            "description": "A sequence of Unicode characters"
                          },
                          "_name": {
                            "description": "Base definition for all elements in a resource.",
                            "additionalProperties": false
                          },
                          "residueSite": {
                            "pattern": "^[ \\r\\n\\t\\S]+$",
                            "type": "string",
                            "description": "A sequence of Unicode characters"
                          },
                          "_residueSite": {
                            "description": "Base definition for all elements in a resource.",
                            "additionalProperties": false
                          }
                        },
                        "additionalProperties": false
                      },
                      "type": "array"
                    }
                  },
                  "additionalProperties": false
                },
                "type": "array"
              }
            },
            "additionalProperties": false,
            "required": [
              "resourceType"
            ]
          },
          {
            "description": "Todo.",
            "properties": {
              "resourceType": {
                "description": "This is a SubstancePolymer resource",
                "const": "SubstancePolymer"
              },
              "id": {
                "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                "type": "string",
                "description": "Any combination of letters, numerals, \"-\" and \".\", with a length limit of 64 characters.  (This might be an integer, an unprefixed OID, UUID or any other identifier pattern that meets these constraints.)  Ids are case-insensitive."
              },
              "meta": {
                "description": "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
                "additionalProperties": false
              },
              "implicitRules": {
                "pattern": "^\\S*$",
                "type": "string",
                "description": "String of characters used to identify a name or a resource"
              },
              "_implicitRules": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "language": {
                "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                "type": "string",
                "description": "A string which has at least one character and no leading or trailing whitespace and where there is no whitespace other than single spaces in the contents"
              },
              "_language": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "text": {
                "description": "A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it \"clinically safe\" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.",
                "additionalProperties": false
              },
              "contained": {
                "description": "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope.",
                "type": "array"
              },
              "extension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                "type": "array"
              },
              "modifierExtension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                "type": "array"
              },
              "class": {
                "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                "additionalProperties": false
              },
              "geometry": {
                "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                "additionalProperties": false
              },
              "copolymerConnectivity": {
                "description": "Todo.",
                "type": "array"
              },
              "modification": {
                "description": "Todo.",
                "type": "array"
              },
              "_modification": {
                "description": "Extensions for modification",
                "type": "array"
              },
              "monomerSet": {
                "description": "Todo.",
                "items": {
                  "description": "Todo.",
                  "properties": {
                    "id": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "type": "array"
                    },
                    "modifierExtension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                      "type": "array"
                    },
                    "ratioType": {
                      "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                      "additionalProperties": false
                    },
                    "startingMaterial": {
                      "description": "Todo.",
                      "items": {
                        "description": "Todo.",
                        "properties": {
                          "id": {
                            "pattern": "^[ \\r\\n\\t\\S]+$",
                            "type": "string",
                            "description": "A sequence of Unicode characters"
                          },
                          "extension": {
                            "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                            "type": "array"
                          },
                          "modifierExtension": {
                            "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                            "type": "array"
                          },
                          "material": {
                            "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                            "additionalProperties": false
                          },
                          "type": {
                            "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                            "additionalProperties": false
                          },
                          "isDefining": {
                            "description": "Todo.",
                            "pattern": "^true|false$",
                            "type": "boolean"
                          },
                          "_isDefining": {
                            "description": "Base definition for all elements in a resource.",
                            "additionalProperties": false
                          },
                          "amount": {
                            "description": "Todo.",
                            "properties": {
                              "id": {
                                "pattern": "^[ \\r\\n\\t\\S]+$",
                                "type": "string",
                                "description": "A sequence of Unicode characters"
                              },
                              "extension": {
                                "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                                "type": "array"
                              },
                              "modifierExtension": {
                                "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                                "type": "array"
                              },
                              "amountQuantity": {
                                "description": "A measured amount (or an amount that can potentially be measured). Note that measured amounts include amounts that are not precisely quantified, including amounts involving arbitrary units and floating currencies.",
                                "additionalProperties": false
                              },
                              "amountRange": {
                                "description": "Used to capture quantitative values for a variety of elements. If only limits are given, the arithmetic mean would be the average. If only a single definite value for a given element is given, it would be captured in this field.",
                                "additionalProperties": false
                              },
                              "amountString": {
                                "description": "Used to capture quantitative values for a variety of elements. If only limits are given, the arithmetic mean would be the average. If only a single definite value for a given element is given, it would be captured in this field.",
                                "pattern": "^[ \\r\\n\\t\\S]+$",
                                "type": "string"
                              },
                              "_amountString": {
                                "description": "Base definition for all elements in a resource.",
                                "additionalProperties": false
                              },
                              "amountType": {
                                "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                                "additionalProperties": false
                              },
                              "amountText": {
                                "pattern": "^[ \\r\\n\\t\\S]+$",
                                "type": "string",
                                "description": "A sequence of Unicode characters"
                              },
                              "_amountText": {
                                "description": "Base definition for all elements in a resource.",
                                "additionalProperties": false
                              },
                              "referenceRange": {
                                "description": "Reference range of possible or expected values.",
                                "properties": {
                                  "id": {
                                    "pattern": "^[ \\r\\n\\t\\S]+$",
                                    "type": "string",
                                    "description": "A sequence of Unicode characters"
                                  },
                                  "extension": {
                                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                                    "type": "array"
                                  },
                                  "modifierExtension": {
                                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                                    "type": "array"
                                  },
                                  "lowLimit": {
                                    "description": "A measured amount (or an amount that can potentially be measured). Note that measured amounts include amounts that are not precisely quantified, including amounts involving arbitrary units and floating currencies.",
                                    "additionalProperties": false
                                  },
                                  "highLimit": {
                                    "description": "A measured amount (or an amount that can potentially be measured). Note that measured amounts include amounts that are not precisely quantified, including amounts involving arbitrary units and floating currencies.",
                                    "additionalProperties": false
                                  }
                                },
                                "additionalProperties": false
                              }
                            },
                            "additionalProperties": false
                          }
                        },
                        "additionalProperties": false
                      },
                      "type": "array"
                    }
                  },
                  "additionalProperties": false
                },
                "type": "array"
              },
              "repeat": {
                "description": "Todo.",
                "items": {
                  "description": "Todo.",
                  "properties": {
                    "id": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "type": "array"
                    },
                    "modifierExtension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                      "type": "array"
                    },
                    "numberOfUnits": {
                      "pattern": "^-?([0]|([1-9][0-9]*))$",
                      "type": "number",
                      "description": "A whole number"
                    },
                    "_numberOfUnits": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "averageMolecularFormula": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "_averageMolecularFormula": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "repeatUnitAmountType": {
                      "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                      "additionalProperties": false
                    },
                    "repeatUnit": {
                      "description": "Todo.",
                      "items": {
                        "description": "Todo.",
                        "properties": {
                          "id": {
                            "pattern": "^[ \\r\\n\\t\\S]+$",
                            "type": "string",
                            "description": "A sequence of Unicode characters"
                          },
                          "extension": {
                            "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                            "type": "array"
                          },
                          "modifierExtension": {
                            "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                            "type": "array"
                          },
                          "orientationOfPolymerisation": {
                            "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                            "additionalProperties": false
                          },
                          "repeatUnit": {
                            "pattern": "^[ \\r\\n\\t\\S]+$",
                            "type": "string",
                            "description": "A sequence of Unicode characters"
                          },
                          "_repeatUnit": {
                            "description": "Base definition for all elements in a resource.",
                            "additionalProperties": false
                          },
                          "amount": {
                            "description": "Todo.",
                            "additionalProperties": false
                          },
                          "degreeOfPolymerisation": {
                            "description": "Todo.",
                            "items": {
                              "description": "Todo.",
                              "properties": {
                                "id": {
                                  "pattern": "^[ \\r\\n\\t\\S]+$",
                                  "type": "string",
                                  "description": "A sequence of Unicode characters"
                                },
                                "extension": {
                                  "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                                  "type": "array"
                                },
                                "modifierExtension": {
                                  "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                                  "type": "array"
                                },
                                "degree": {
                                  "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                                  "additionalProperties": false
                                },
                                "amount": {
                                  "description": "Todo.",
                                  "additionalProperties": false
                                }
                              },
                              "additionalProperties": false
                            },
                            "type": "array"
                          },
                          "structuralRepresentation": {
                            "description": "Todo.",
                            "items": {
                              "description": "Todo.",
                              "properties": {
                                "id": {
                                  "pattern": "^[ \\r\\n\\t\\S]+$",
                                  "type": "string",
                                  "description": "A sequence of Unicode characters"
                                },
                                "extension": {
                                  "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                                  "type": "array"
                                },
                                "modifierExtension": {
                                  "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                                  "type": "array"
                                },
                                "type": {
                                  "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                                  "additionalProperties": false
                                },
                                "representation": {
                                  "pattern": "^[ \\r\\n\\t\\S]+$",
                                  "type": "string",
                                  "description": "A sequence of Unicode characters"
                                },
                                "_representation": {
                                  "description": "Base definition for all elements in a resource.",
                                  "additionalProperties": false
                                },
                                "attachment": {
                                  "description": "For referring to data content defined in other formats.",
                                  "additionalProperties": false
                                }
                              },
                              "additionalProperties": false
                            },
                            "type": "array"
                          }
                        },
                        "additionalProperties": false
                      },
                      "type": "array"
                    }
                  },
                  "additionalProperties": false
                },
                "type": "array"
              }
            },
            "additionalProperties": false,
            "required": [
              "resourceType"
            ]
          },
          {
            "description": "A SubstanceProtein is defined as a single unit of a linear amino acid sequence, or a combination of subunits that are either covalently linked or have a defined invariant stoichiometric relationship. This includes all synthetic, recombinant and purified SubstanceProteins of defined sequence, whether the use is therapeutic or prophylactic. This set of elements will be used to describe albumins, coagulation factors, cytokines, growth factors, peptide/SubstanceProtein hormones, enzymes, toxins, toxoids, recombinant vaccines, and immunomodulators.",
            "properties": {
              "resourceType": {
                "description": "This is a SubstanceProtein resource",
                "const": "SubstanceProtein"
              },
              "id": {
                "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                "type": "string",
                "description": "Any combination of letters, numerals, \"-\" and \".\", with a length limit of 64 characters.  (This might be an integer, an unprefixed OID, UUID or any other identifier pattern that meets these constraints.)  Ids are case-insensitive."
              },
              "meta": {
                "description": "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
                "additionalProperties": false
              },
              "implicitRules": {
                "pattern": "^\\S*$",
                "type": "string",
                "description": "String of characters used to identify a name or a resource"
              },
              "_implicitRules": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "language": {
                "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                "type": "string",
                "description": "A string which has at least one character and no leading or trailing whitespace and where there is no whitespace other than single spaces in the contents"
              },
              "_language": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "text": {
                "description": "A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it \"clinically safe\" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.",
                "additionalProperties": false
              },
              "contained": {
                "description": "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope.",
                "type": "array"
              },
              "extension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                "type": "array"
              },
              "modifierExtension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                "type": "array"
              },
              "sequenceType": {
                "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                "additionalProperties": false
              },
              "numberOfSubunits": {
                "pattern": "^-?([0]|([1-9][0-9]*))$",
                "type": "number",
                "description": "A whole number"
              },
              "_numberOfSubunits": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "disulfideLinkage": {
                "description": "The disulphide bond between two cysteine residues either on the same subunit or on two different subunits shall be described. The position of the disulfide bonds in the SubstanceProtein shall be listed in increasing order of subunit number and position within subunit followed by the abbreviation of the amino acids involved. The disulfide linkage positions shall actually contain the amino acid Cysteine at the respective positions.",
                "type": "array"
              },
              "_disulfideLinkage": {
                "description": "Extensions for disulfideLinkage",
                "type": "array"
              },
              "subunit": {
                "description": "This subclause refers to the description of each subunit constituting the SubstanceProtein. A subunit is a linear sequence of amino acids linked through peptide bonds. The Subunit information shall be provided when the finished SubstanceProtein is a complex of multiple sequences; subunits are not used to delineate domains within a single sequence. Subunits are listed in order of decreasing length; sequences of the same length will be ordered by decreasing molecular weight; subunits that have identical sequences will be repeated multiple times.",
                "items": {
                  "description": "A SubstanceProtein is defined as a single unit of a linear amino acid sequence, or a combination of subunits that are either covalently linked or have a defined invariant stoichiometric relationship. This includes all synthetic, recombinant and purified SubstanceProteins of defined sequence, whether the use is therapeutic or prophylactic. This set of elements will be used to describe albumins, coagulation factors, cytokines, growth factors, peptide/SubstanceProtein hormones, enzymes, toxins, toxoids, recombinant vaccines, and immunomodulators.",
                  "properties": {
                    "id": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "type": "array"
                    },
                    "modifierExtension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                      "type": "array"
                    },
                    "subunit": {
                      "pattern": "^-?([0]|([1-9][0-9]*))$",
                      "type": "number",
                      "description": "A whole number"
                    },
                    "_subunit": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "sequence": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "_sequence": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "length": {
                      "pattern": "^-?([0]|([1-9][0-9]*))$",
                      "type": "number",
                      "description": "A whole number"
                    },
                    "_length": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "sequenceAttachment": {
                      "description": "For referring to data content defined in other formats.",
                      "additionalProperties": false
                    },
                    "nTerminalModificationId": {
                      "description": "An identifier - identifies some entity uniquely and unambiguously. Typically this is used for business identifiers.",
                      "additionalProperties": false
                    },
                    "nTerminalModification": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "_nTerminalModification": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "cTerminalModificationId": {
                      "description": "An identifier - identifies some entity uniquely and unambiguously. Typically this is used for business identifiers.",
                      "additionalProperties": false
                    },
                    "cTerminalModification": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "_cTerminalModification": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                },
                "type": "array"
              }
            },
            "additionalProperties": false,
            "required": [
              "resourceType"
            ]
          },
          {
            "description": "Todo.",
            "properties": {
              "resourceType": {
                "description": "This is a SubstanceReferenceInformation resource",
                "const": "SubstanceReferenceInformation"
              },
              "id": {
                "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                "type": "string",
                "description": "Any combination of letters, numerals, \"-\" and \".\", with a length limit of 64 characters.  (This might be an integer, an unprefixed OID, UUID or any other identifier pattern that meets these constraints.)  Ids are case-insensitive."
              },
              "meta": {
                "description": "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
                "additionalProperties": false
              },
              "implicitRules": {
                "pattern": "^\\S*$",
                "type": "string",
                "description": "String of characters used to identify a name or a resource"
              },
              "_implicitRules": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "language": {
                "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                "type": "string",
                "description": "A string which has at least one character and no leading or trailing whitespace and where there is no whitespace other than single spaces in the contents"
              },
              "_language": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "text": {
                "description": "A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it \"clinically safe\" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.",
                "additionalProperties": false
              },
              "contained": {
                "description": "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope.",
                "type": "array"
              },
              "extension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                "type": "array"
              },
              "modifierExtension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                "type": "array"
              },
              "comment": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "_comment": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "gene": {
                "description": "Todo.",
                "items": {
                  "description": "Todo.",
                  "properties": {
                    "id": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "type": "array"
                    },
                    "modifierExtension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                      "type": "array"
                    },
                    "geneSequenceOrigin": {
                      "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                      "additionalProperties": false
                    },
                    "gene": {
                      "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                      "additionalProperties": false
                    },
                    "source": {
                      "description": "Todo.",
                      "type": "array"
                    }
                  },
                  "additionalProperties": false
                },
                "type": "array"
              },
              "geneElement": {
                "description": "Todo.",
                "items": {
                  "description": "Todo.",
                  "properties": {
                    "id": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "type": "array"
                    },
                    "modifierExtension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                      "type": "array"
                    },
                    "type": {
                      "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                      "additionalProperties": false
                    },
                    "element": {
                      "description": "An identifier - identifies some entity uniquely and unambiguously. Typically this is used for business identifiers.",
                      "additionalProperties": false
                    },
                    "source": {
                      "description": "Todo.",
                      "type": "array"
                    }
                  },
                  "additionalProperties": false
                },
                "type": "array"
              },
              "classification": {
                "description": "Todo.",
                "items": {
                  "description": "Todo.",
                  "properties": {
                    "id": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "type": "array"
                    },
                    "modifierExtension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                      "type": "array"
                    },
                    "domain": {
                      "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                      "additionalProperties": false
                    },
                    "classification": {
                      "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                      "additionalProperties": false
                    },
                    "subtype": {
                      "description": "Todo.",
                      "type": "array"
                    },
                    "source": {
                      "description": "Todo.",
                      "type": "array"
                    }
                  },
                  "additionalProperties": false
                },
                "type": "array"
              },
              "target": {
                "description": "Todo.",
                "items": {
                  "description": "Todo.",
                  "properties": {
                    "id": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "type": "array"
                    },
                    "modifierExtension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                      "type": "array"
                    },
                    "target": {
                      "description": "An identifier - identifies some entity uniquely and unambiguously. Typically this is used for business identifiers.",
                      "additionalProperties": false
                    },
                    "type": {
                      "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                      "additionalProperties": false
                    },
                    "interaction": {
                      "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                      "additionalProperties": false
                    },
                    "organism": {
                      "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                      "additionalProperties": false
                    },
                    "organismType": {
                      "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                      "additionalProperties": false
                    },
                    "amountQuantity": {
                      "description": "A measured amount (or an amount that can potentially be measured). Note that measured amounts include amounts that are not precisely quantified, including amounts involving arbitrary units and floating currencies.",
                      "additionalProperties": false
                    },
                    "amountRange": {
                      "description": "Todo.",
                      "additionalProperties": false
                    },
                    "amountString": {
                      "description": "Todo.",
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string"
                    },
                    "_amountString": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "amountType": {
                      "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                      "additionalProperties": false
                    },
                    "source": {
                      "description": "Todo.",
                      "type": "array"
                    }
                  },
                  "additionalProperties": false
                },
                "type": "array"
              }
            },
            "additionalProperties": false,
            "required": [
              "resourceType"
            ]
          },
          {
            "description": "Source material shall capture information on the taxonomic and anatomical origins as well as the fraction of a material that can result in or can be modified to form a substance. This set of data elements shall be used to define polymer substances isolated from biological matrices. Taxonomic and anatomical origins shall be described using a controlled vocabulary as required. This information is captured for naturally derived polymers ( . starch) and structurally diverse substances. For Organisms belonging to the Kingdom Plantae the Substance level defines the fresh material of a single species or infraspecies, the Herbal Drug and the Herbal preparation. For Herbal preparations, the fraction information will be captured at the Substance information level and additional information for herbal extracts will be captured at the Specified Substance Group 1 information level. See for further explanation the Substance Class: Structurally Diverse and the herbal annex.",
            "properties": {
              "resourceType": {
                "description": "This is a SubstanceSourceMaterial resource",
                "const": "SubstanceSourceMaterial"
              },
              "id": {
                "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                "type": "string",
                "description": "Any combination of letters, numerals, \"-\" and \".\", with a length limit of 64 characters.  (This might be an integer, an unprefixed OID, UUID or any other identifier pattern that meets these constraints.)  Ids are case-insensitive."
              },
              "meta": {
                "description": "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
                "additionalProperties": false
              },
              "implicitRules": {
                "pattern": "^\\S*$",
                "type": "string",
                "description": "String of characters used to identify a name or a resource"
              },
              "_implicitRules": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "language": {
                "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                "type": "string",
                "description": "A string which has at least one character and no leading or trailing whitespace and where there is no whitespace other than single spaces in the contents"
              },
              "_language": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "text": {
                "description": "A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it \"clinically safe\" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.",
                "additionalProperties": false
              },
              "contained": {
                "description": "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope.",
                "type": "array"
              },
              "extension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                "type": "array"
              },
              "modifierExtension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                "type": "array"
              },
              "sourceMaterialClass": {
                "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                "additionalProperties": false
              },
              "sourceMaterialType": {
                "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                "additionalProperties": false
              },
              "sourceMaterialState": {
                "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                "additionalProperties": false
              },
              "organismId": {
                "description": "An identifier - identifies some entity uniquely and unambiguously. Typically this is used for business identifiers.",
                "additionalProperties": false
              },
              "organismName": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "_organismName": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "parentSubstanceId": {
                "description": "The parent of the herbal drug Ginkgo biloba, Leaf is the substance ID of the substance (fresh) of Ginkgo biloba L. or Ginkgo biloba L. (Whole plant).",
                "type": "array"
              },
              "parentSubstanceName": {
                "description": "The parent substance of the Herbal Drug, or Herbal preparation.",
                "type": "array"
              },
              "_parentSubstanceName": {
                "description": "Extensions for parentSubstanceName",
                "type": "array"
              },
              "countryOfOrigin": {
                "description": "The country where the plant material is harvested or the countries where the plasma is sourced from as laid down in accordance with the Plasma Master File. For “Plasma-derived substances” the attribute country of origin provides information about the countries used for the manufacturing of the Cryopoor plama or Crioprecipitate.",
                "type": "array"
              },
              "geographicalLocation": {
                "description": "The place/region where the plant is harvested or the places/regions where the animal source material has its habitat.",
                "type": "array"
              },
              "_geographicalLocation": {
                "description": "Extensions for geographicalLocation",
                "type": "array"
              },
              "developmentStage": {
                "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                "additionalProperties": false
              },
              "fractionDescription": {
                "description": "Many complex materials are fractions of parts of plants, animals, or minerals. Fraction elements are often necessary to define both Substances and Specified Group 1 Substances. For substances derived from Plants, fraction information will be captured at the Substance information level ( . Oils, Juices and Exudates). Additional information for Extracts, such as extraction solvent composition, will be captured at the Specified Substance Group 1 information level. For plasma-derived products fraction information will be captured at the Substance and the Specified Substance Group 1 levels.",
                "items": {
                  "description": "Source material shall capture information on the taxonomic and anatomical origins as well as the fraction of a material that can result in or can be modified to form a substance. This set of data elements shall be used to define polymer substances isolated from biological matrices. Taxonomic and anatomical origins shall be described using a controlled vocabulary as required. This information is captured for naturally derived polymers ( . starch) and structurally diverse substances. For Organisms belonging to the Kingdom Plantae the Substance level defines the fresh material of a single species or infraspecies, the Herbal Drug and the Herbal preparation. For Herbal preparations, the fraction information will be captured at the Substance information level and additional information for herbal extracts will be captured at the Specified Substance Group 1 information level. See for further explanation the Substance Class: Structurally Diverse and the herbal annex.",
                  "properties": {
                    "id": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "type": "array"
                    },
                    "modifierExtension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                      "type": "array"
                    },
                    "fraction": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "_fraction": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "materialType": {
                      "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                },
                "type": "array"
              },
              "organism": {
                "description": "This subclause describes the organism which the substance is derived from. For vaccines, the parent organism shall be specified based on these subclause elements. As an example, full taxonomy will be described for the Substance Name: ., Leaf.",
                "properties": {
                  "id": {
                    "pattern": "^[ \\r\\n\\t\\S]+$",
                    "type": "string",
                    "description": "A sequence of Unicode characters"
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "type": "array"
                  },
                  "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                    "type": "array"
                  },
                  "family": {
                    "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                    "additionalProperties": false
                  },
                  "genus": {
                    "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                    "additionalProperties": false
                  },
                  "species": {
                    "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                    "additionalProperties": false
                  },
                  "intraspecificType": {
                    "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                    "additionalProperties": false
                  },
                  "intraspecificDescription": {
                    "pattern": "^[ \\r\\n\\t\\S]+$",
                    "type": "string",
                    "description": "A sequence of Unicode characters"
                  },
                  "_intraspecificDescription": {
                    "description": "Base definition for all elements in a resource.",
                    "additionalProperties": false
                  },
                  "author": {
                    "description": "4.9.13.6.1 Author type (Conditional).",
                    "items": {
                      "description": "Source material shall capture information on the taxonomic and anatomical origins as well as the fraction of a material that can result in or can be modified to form a substance. This set of data elements shall be used to define polymer substances isolated from biological matrices. Taxonomic and anatomical origins shall be described using a controlled vocabulary as required. This information is captured for naturally derived polymers ( . starch) and structurally diverse substances. For Organisms belonging to the Kingdom Plantae the Substance level defines the fresh material of a single species or infraspecies, the Herbal Drug and the Herbal preparation. For Herbal preparations, the fraction information will be captured at the Substance information level and additional information for herbal extracts will be captured at the Specified Substance Group 1 information level. See for further explanation the Substance Class: Structurally Diverse and the herbal annex.",
                      "properties": {
                        "id": {
                          "pattern": "^[ \\r\\n\\t\\S]+$",
                          "type": "string",
                          "description": "A sequence of Unicode characters"
                        },
                        "extension": {
                          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                          "type": "array"
                        },
                        "modifierExtension": {
                          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                          "type": "array"
                        },
                        "authorType": {
                          "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                          "additionalProperties": false
                        },
                        "authorDescription": {
                          "pattern": "^[ \\r\\n\\t\\S]+$",
                          "type": "string",
                          "description": "A sequence of Unicode characters"
                        },
                        "_authorDescription": {
                          "description": "Base definition for all elements in a resource.",
                          "additionalProperties": false
                        }
                      },
                      "additionalProperties": false
                    },
                    "type": "array"
                  },
                  "hybrid": {
                    "description": "4.9.13.8.1 Hybrid species maternal organism ID (Optional).",
                    "properties": {
                      "id": {
                        "pattern": "^[ \\r\\n\\t\\S]+$",
                        "type": "string",
                        "description": "A sequence of Unicode characters"
                      },
                      "extension": {
                        "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                        "type": "array"
                      },
                      "modifierExtension": {
                        "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                        "type": "array"
                      },
                      "maternalOrganismId": {
                        "pattern": "^[ \\r\\n\\t\\S]+$",
                        "type": "string",
                        "description": "A sequence of Unicode characters"
                      },
                      "_maternalOrganismId": {
                        "description": "Base definition for all elements in a resource.",
                        "additionalProperties": false
                      },
                      "maternalOrganismName": {
                        "pattern": "^[ \\r\\n\\t\\S]+$",
                        "type": "string",
                        "description": "A sequence of Unicode characters"
                      },
                      "_maternalOrganismName": {
                        "description": "Base definition for all elements in a resource.",
                        "additionalProperties": false
                      },
                      "paternalOrganismId": {
                        "pattern": "^[ \\r\\n\\t\\S]+$",
                        "type": "string",
                        "description": "A sequence of Unicode characters"
                      },
                      "_paternalOrganismId": {
                        "description": "Base definition for all elements in a resource.",
                        "additionalProperties": false
                      },
                      "paternalOrganismName": {
                        "pattern": "^[ \\r\\n\\t\\S]+$",
                        "type": "string",
                        "description": "A sequence of Unicode characters"
                      },
                      "_paternalOrganismName": {
                        "description": "Base definition for all elements in a resource.",
                        "additionalProperties": false
                      },
                      "hybridType": {
                        "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                        "additionalProperties": false
                      }
                    },
                    "additionalProperties": false
                  },
                  "organismGeneral": {
                    "description": "4.9.13.7.1 Kingdom (Conditional).",
                    "properties": {
                      "id": {
                        "pattern": "^[ \\r\\n\\t\\S]+$",
                        "type": "string",
                        "description": "A sequence of Unicode characters"
                      },
                      "extension": {
                        "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                        "type": "array"
                      },
                      "modifierExtension": {
                        "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                        "type": "array"
                      },
                      "kingdom": {
                        "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                        "additionalProperties": false
                      },
                      "phylum": {
                        "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                        "additionalProperties": false
                      },
                      "class": {
                        "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                        "additionalProperties": false
                      },
                      "order": {
                        "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                        "additionalProperties": false
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "additionalProperties": false
              },
              "partDescription": {
                "description": "To do.",
                "items": {
                  "description": "Source material shall capture information on the taxonomic and anatomical origins as well as the fraction of a material that can result in or can be modified to form a substance. This set of data elements shall be used to define polymer substances isolated from biological matrices. Taxonomic and anatomical origins shall be described using a controlled vocabulary as required. This information is captured for naturally derived polymers ( . starch) and structurally diverse substances. For Organisms belonging to the Kingdom Plantae the Substance level defines the fresh material of a single species or infraspecies, the Herbal Drug and the Herbal preparation. For Herbal preparations, the fraction information will be captured at the Substance information level and additional information for herbal extracts will be captured at the Specified Substance Group 1 information level. See for further explanation the Substance Class: Structurally Diverse and the herbal annex.",
                  "properties": {
                    "id": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "type": "array"
                    },
                    "modifierExtension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                      "type": "array"
                    },
                    "part": {
                      "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                      "additionalProperties": false
                    },
                    "partLocation": {
                      "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                },
                "type": "array"
              }
            },
            "additionalProperties": false,
            "required": [
              "resourceType"
            ]
          },
          {
            "description": "The detailed description of a substance, typically at a level beyond what is used for prescribing.",
            "properties": {
              "resourceType": {
                "description": "This is a SubstanceSpecification resource",
                "const": "SubstanceSpecification"
              },
              "id": {
                "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                "type": "string",
                "description": "Any combination of letters, numerals, \"-\" and \".\", with a length limit of 64 characters.  (This might be an integer, an unprefixed OID, UUID or any other identifier pattern that meets these constraints.)  Ids are case-insensitive."
              },
              "meta": {
                "description": "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
                "additionalProperties": false
              },
              "implicitRules": {
                "pattern": "^\\S*$",
                "type": "string",
                "description": "String of characters used to identify a name or a resource"
              },
              "_implicitRules": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "language": {
                "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                "type": "string",
                "description": "A string which has at least one character and no leading or trailing whitespace and where there is no whitespace other than single spaces in the contents"
              },
              "_language": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "text": {
                "description": "A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it \"clinically safe\" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.",
                "additionalProperties": false
              },
              "contained": {
                "description": "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope.",
                "type": "array"
              },
              "extension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                "type": "array"
              },
              "modifierExtension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                "type": "array"
              },
              "identifier": {
                "description": "An identifier - identifies some entity uniquely and unambiguously. Typically this is used for business identifiers.",
                "additionalProperties": false
              },
              "type": {
                "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                "additionalProperties": false
              },
              "status": {
                "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                "additionalProperties": false
              },
              "domain": {
                "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                "additionalProperties": false
              },
              "description": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "_description": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "source": {
                "description": "Supporting literature.",
                "type": "array"
              },
              "comment": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "_comment": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "moiety": {
                "description": "Moiety, for structural modifications.",
                "items": {
                  "description": "The detailed description of a substance, typically at a level beyond what is used for prescribing.",
                  "properties": {
                    "id": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "type": "array"
                    },
                    "modifierExtension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                      "type": "array"
                    },
                    "role": {
                      "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                      "additionalProperties": false
                    },
                    "identifier": {
                      "description": "An identifier - identifies some entity uniquely and unambiguously. Typically this is used for business identifiers.",
                      "additionalProperties": false
                    },
                    "name": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "_name": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "stereochemistry": {
                      "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                      "additionalProperties": false
                    },
                    "opticalActivity": {
                      "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                      "additionalProperties": false
                    },
                    "molecularFormula": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "_molecularFormula": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "amountQuantity": {
                      "description": "A measured amount (or an amount that can potentially be measured). Note that measured amounts include amounts that are not precisely quantified, including amounts involving arbitrary units and floating currencies.",
                      "additionalProperties": false
                    },
                    "amountString": {
                      "description": "Quantitative value for this moiety.",
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string"
                    },
                    "_amountString": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                },
                "type": "array"
              },
              "property": {
                "description": "General specifications for this substance, including how it is related to other substances.",
                "items": {
                  "description": "The detailed description of a substance, typically at a level beyond what is used for prescribing.",
                  "properties": {
                    "id": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "type": "array"
                    },
                    "modifierExtension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                      "type": "array"
                    },
                    "category": {
                      "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                      "additionalProperties": false
                    },
                    "code": {
                      "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                      "additionalProperties": false
                    },
                    "parameters": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "_parameters": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "definingSubstanceReference": {
                      "description": "A reference from one resource to another.",
                      "additionalProperties": false
                    },
                    "definingSubstanceCodeableConcept": {
                      "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                      "additionalProperties": false
                    },
                    "amountQuantity": {
                      "description": "A measured amount (or an amount that can potentially be measured). Note that measured amounts include amounts that are not precisely quantified, including amounts involving arbitrary units and floating currencies.",
                      "additionalProperties": false
                    },
                    "amountString": {
                      "description": "Quantitative value for this property.",
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string"
                    },
                    "_amountString": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                },
                "type": "array"
              },
              "referenceInformation": {
                "description": "A reference from one resource to another.",
                "additionalProperties": false
              },
              "structure": {
                "description": "Structural information.",
                "properties": {
                  "id": {
                    "pattern": "^[ \\r\\n\\t\\S]+$",
                    "type": "string",
                    "description": "A sequence of Unicode characters"
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "type": "array"
                  },
                  "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                    "type": "array"
                  },
                  "stereochemistry": {
                    "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                    "additionalProperties": false
                  },
                  "opticalActivity": {
                    "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                    "additionalProperties": false
                  },
                  "molecularFormula": {
                    "pattern": "^[ \\r\\n\\t\\S]+$",
                    "type": "string",
                    "description": "A sequence of Unicode characters"
                  },
                  "_molecularFormula": {
                    "description": "Base definition for all elements in a resource.",
                    "additionalProperties": false
                  },
                  "molecularFormulaByMoiety": {
                    "pattern": "^[ \\r\\n\\t\\S]+$",
                    "type": "string",
                    "description": "A sequence of Unicode characters"
                  },
                  "_molecularFormulaByMoiety": {
                    "description": "Base definition for all elements in a resource.",
                    "additionalProperties": false
                  },
                  "isotope": {
                    "description": "Applicable for single substances that contain a radionuclide or a non-natural isotopic ratio.",
                    "items": {
                      "description": "The detailed description of a substance, typically at a level beyond what is used for prescribing.",
                      "properties": {
                        "id": {
                          "pattern": "^[ \\r\\n\\t\\S]+$",
                          "type": "string",
                          "description": "A sequence of Unicode characters"
                        },
                        "extension": {
                          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                          "type": "array"
                        },
                        "modifierExtension": {
                          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                          "type": "array"
                        },
                        "identifier": {
                          "description": "An identifier - identifies some entity uniquely and unambiguously. Typically this is used for business identifiers.",
                          "additionalProperties": false
                        },
                        "name": {
                          "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                          "additionalProperties": false
                        },
                        "substitution": {
                          "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                          "additionalProperties": false
                        },
                        "halfLife": {
                          "description": "A measured amount (or an amount that can potentially be measured). Note that measured amounts include amounts that are not precisely quantified, including amounts involving arbitrary units and floating currencies.",
                          "additionalProperties": false
                        },
                        "molecularWeight": {
                          "description": "The molecular weight or weight range (for proteins, polymers or nucleic acids).",
                          "properties": {
                            "id": {
                              "pattern": "^[ \\r\\n\\t\\S]+$",
                              "type": "string",
                              "description": "A sequence of Unicode characters"
                            },
                            "extension": {
                              "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                              "type": "array"
                            },
                            "modifierExtension": {
                              "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                              "type": "array"
                            },
                            "method": {
                              "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                              "additionalProperties": false
                            },
                            "type": {
                              "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                              "additionalProperties": false
                            },
                            "amount": {
                              "description": "A measured amount (or an amount that can potentially be measured). Note that measured amounts include amounts that are not precisely quantified, including amounts involving arbitrary units and floating currencies.",
                              "additionalProperties": false
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "additionalProperties": false
                    },
                    "type": "array"
                  },
                  "molecularWeight": {
                    "description": "The molecular weight or weight range (for proteins, polymers or nucleic acids).",
                    "additionalProperties": false
                  },
                  "source": {
                    "description": "Supporting literature.",
                    "type": "array"
                  },
                  "representation": {
                    "description": "Molecular structural representation.",
                    "items": {
                      "description": "The detailed description of a substance, typically at a level beyond what is used for prescribing.",
                      "properties": {
                        "id": {
                          "pattern": "^[ \\r\\n\\t\\S]+$",
                          "type": "string",
                          "description": "A sequence of Unicode characters"
                        },
                        "extension": {
                          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                          "type": "array"
                        },
                        "modifierExtension": {
                          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                          "type": "array"
                        },
                        "type": {
                          "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                          "additionalProperties": false
                        },
                        "representation": {
                          "pattern": "^[ \\r\\n\\t\\S]+$",
                          "type": "string",
                          "description": "A sequence of Unicode characters"
                        },
                        "_representation": {
                          "description": "Base definition for all elements in a resource.",
                          "additionalProperties": false
                        },
                        "attachment": {
                          "description": "For referring to data content defined in other formats.",
                          "additionalProperties": false
                        }
                      },
                      "additionalProperties": false
                    },
                    "type": "array"
                  }
                },
                "additionalProperties": false
              },
              "code": {
                "description": "Codes associated with the substance.",
                "items": {
                  "description": "The detailed description of a substance, typically at a level beyond what is used for prescribing.",
                  "properties": {
                    "id": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "type": "array"
                    },
                    "modifierExtension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                      "type": "array"
                    },
                    "code": {
                      "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                      "additionalProperties": false
                    },
                    "status": {
                      "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                      "additionalProperties": false
                    },
                    "statusDate": {
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                      "type": "string",
                      "description": "A date, date-time or partial date (e.g. just year or year + month).  If hours and minutes are specified, a time zone SHALL be populated. The format is a union of the schema types gYear, gYearMonth, date and dateTime. Seconds must be provided due to schema type constraints but may be zero-filled and may be ignored.                 Dates SHALL be valid dates."
                    },
                    "_statusDate": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "comment": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "_comment": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "source": {
                      "description": "Supporting literature.",
                      "type": "array"
                    }
                  },
                  "additionalProperties": false
                },
                "type": "array"
              },
              "name": {
                "description": "Names applicable to this substance.",
                "items": {
                  "description": "The detailed description of a substance, typically at a level beyond what is used for prescribing.",
                  "properties": {
                    "id": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "type": "array"
                    },
                    "modifierExtension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                      "type": "array"
                    },
                    "name": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "_name": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "type": {
                      "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                      "additionalProperties": false
                    },
                    "status": {
                      "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                      "additionalProperties": false
                    },
                    "preferred": {
                      "description": "If this is the preferred name for this substance.",
                      "pattern": "^true|false$",
                      "type": "boolean"
                    },
                    "_preferred": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "language": {
                      "description": "Language of the name.",
                      "type": "array"
                    },
                    "domain": {
                      "description": "The use context of this name for example if there is a different name a drug active ingredient as opposed to a food colour additive.",
                      "type": "array"
                    },
                    "jurisdiction": {
                      "description": "The jurisdiction where this name applies.",
                      "type": "array"
                    },
                    "synonym": {
                      "description": "A synonym of this name.",
                      "type": "array"
                    },
                    "translation": {
                      "description": "A translation for this name.",
                      "type": "array"
                    },
                    "official": {
                      "description": "Details of the official nature of this name.",
                      "items": {
                        "description": "The detailed description of a substance, typically at a level beyond what is used for prescribing.",
                        "properties": {
                          "id": {
                            "pattern": "^[ \\r\\n\\t\\S]+$",
                            "type": "string",
                            "description": "A sequence of Unicode characters"
                          },
                          "extension": {
                            "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                            "type": "array"
                          },
                          "modifierExtension": {
                            "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                            "type": "array"
                          },
                          "authority": {
                            "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                            "additionalProperties": false
                          },
                          "status": {
                            "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                            "additionalProperties": false
                          },
                          "date": {
                            "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                            "type": "string",
                            "description": "A date, date-time or partial date (e.g. just year or year + month).  If hours and minutes are specified, a time zone SHALL be populated. The format is a union of the schema types gYear, gYearMonth, date and dateTime. Seconds must be provided due to schema type constraints but may be zero-filled and may be ignored.                 Dates SHALL be valid dates."
                          },
                          "_date": {
                            "description": "Base definition for all elements in a resource.",
                            "additionalProperties": false
                          }
                        },
                        "additionalProperties": false
                      },
                      "type": "array"
                    },
                    "source": {
                      "description": "Supporting literature.",
                      "type": "array"
                    }
                  },
                  "additionalProperties": false
                },
                "type": "array"
              },
              "molecularWeight": {
                "description": "The molecular weight or weight range (for proteins, polymers or nucleic acids).",
                "items": {
                  "description": "The detailed description of a substance, typically at a level beyond what is used for prescribing.",
                  "additionalProperties": false
                },
                "type": "array"
              },
              "relationship": {
                "description": "A link between this substance and another, with details of the relationship.",
                "items": {
                  "description": "The detailed description of a substance, typically at a level beyond what is used for prescribing.",
                  "properties": {
                    "id": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "type": "array"
                    },
                    "modifierExtension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                      "type": "array"
                    },
                    "substanceReference": {
                      "description": "A reference from one resource to another.",
                      "additionalProperties": false
                    },
                    "substanceCodeableConcept": {
                      "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                      "additionalProperties": false
                    },
                    "relationship": {
                      "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                      "additionalProperties": false
                    },
                    "isDefining": {
                      "description": "For example where an enzyme strongly bonds with a particular substance, this is a defining relationship for that enzyme, out of several possible substance relationships.",
                      "pattern": "^true|false$",
                      "type": "boolean"
                    },
                    "_isDefining": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "amountQuantity": {
                      "description": "A measured amount (or an amount that can potentially be measured). Note that measured amounts include amounts that are not precisely quantified, including amounts involving arbitrary units and floating currencies.",
                      "additionalProperties": false
                    },
                    "amountRange": {
                      "description": "A numeric factor for the relationship, for instance to express that the salt of a substance has some percentage of the active substance in relation to some other.",
                      "additionalProperties": false
                    },
                    "amountRatio": {
                      "description": "A numeric factor for the relationship, for instance to express that the salt of a substance has some percentage of the active substance in relation to some other.",
                      "additionalProperties": false
                    },
                    "amountString": {
                      "description": "A numeric factor for the relationship, for instance to express that the salt of a substance has some percentage of the active substance in relation to some other.",
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string"
                    },
                    "_amountString": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "amountRatioLowLimit": {
                      "description": "For use when the numeric.",
                      "additionalProperties": false
                    },
                    "amountType": {
                      "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                      "additionalProperties": false
                    },
                    "source": {
                      "description": "Supporting literature.",
                      "type": "array"
                    }
                  },
                  "additionalProperties": false
                },
                "type": "array"
              },
              "nucleicAcid": {
                "description": "A reference from one resource to another.",
                "additionalProperties": false
              },
              "polymer": {
                "description": "A reference from one resource to another.",
                "additionalProperties": false
              },
              "protein": {
                "description": "A reference from one resource to another.",
                "additionalProperties": false
              },
              "sourceMaterial": {
                "description": "A reference from one resource to another.",
                "additionalProperties": false
              }
            },
            "additionalProperties": false,
            "required": [
              "resourceType"
            ]
          },
          {
            "description": "Record of delivery of what is supplied.",
            "properties": {
              "resourceType": {
                "description": "This is a SupplyDelivery resource",
                "const": "SupplyDelivery"
              },
              "id": {
                "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                "type": "string",
                "description": "Any combination of letters, numerals, \"-\" and \".\", with a length limit of 64 characters.  (This might be an integer, an unprefixed OID, UUID or any other identifier pattern that meets these constraints.)  Ids are case-insensitive."
              },
              "meta": {
                "description": "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
                "additionalProperties": false
              },
              "implicitRules": {
                "pattern": "^\\S*$",
                "type": "string",
                "description": "String of characters used to identify a name or a resource"
              },
              "_implicitRules": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "language": {
                "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                "type": "string",
                "description": "A string which has at least one character and no leading or trailing whitespace and where there is no whitespace other than single spaces in the contents"
              },
              "_language": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "text": {
                "description": "A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it \"clinically safe\" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.",
                "additionalProperties": false
              },
              "contained": {
                "description": "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope.",
                "type": "array"
              },
              "extension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                "type": "array"
              },
              "modifierExtension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                "type": "array"
              },
              "identifier": {
                "description": "Identifier for the supply delivery event that is used to identify it across multiple disparate systems.",
                "type": "array"
              },
              "basedOn": {
                "description": "A plan, proposal or order that is fulfilled in whole or in part by this event.",
                "type": "array"
              },
              "partOf": {
                "description": "A larger event of which this particular event is a component or step.",
                "type": "array"
              },
              "status": {
                "description": "A code specifying the state of the dispense event.",
                "enum": [
                  "in-progress",
                  "completed",
                  "abandoned",
                  "entered-in-error"
                ]
              },
              "_status": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "patient": {
                "description": "A reference from one resource to another.",
                "additionalProperties": false
              },
              "type": {
                "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                "additionalProperties": false
              },
              "suppliedItem": {
                "description": "The item that is being delivered or has been supplied.",
                "properties": {
                  "id": {
                    "pattern": "^[ \\r\\n\\t\\S]+$",
                    "type": "string",
                    "description": "A sequence of Unicode characters"
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "type": "array"
                  },
                  "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                    "type": "array"
                  },
                  "quantity": {
                    "description": "A measured amount (or an amount that can potentially be measured). Note that measured amounts include amounts that are not precisely quantified, including amounts involving arbitrary units and floating currencies.",
                    "additionalProperties": false
                  },
                  "itemCodeableConcept": {
                    "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                    "additionalProperties": false
                  },
                  "itemReference": {
                    "description": "A reference from one resource to another.",
                    "additionalProperties": false
                  }
                },
                "additionalProperties": false
              },
              "occurrenceDateTime": {
                "description": "The date or time(s) the activity occurred.",
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                "type": "string"
              },
              "_occurrenceDateTime": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "occurrencePeriod": {
                "description": "A time period defined by a start and end date and optionally time.",
                "additionalProperties": false
              },
              "occurrenceTiming": {
                "description": "Specifies an event that may occur multiple times. Timing schedules are used to record when things are planned, expected or requested to occur. The most common usage is in dosage instructions for medications. They are also used when planning care of various kinds, and may be used for reporting the schedule to which past regular activities were carried out.",
                "additionalProperties": false
              },
              "supplier": {
                "description": "A reference from one resource to another.",
                "additionalProperties": false
              },
              "destination": {
                "description": "A reference from one resource to another.",
                "additionalProperties": false
              },
              "receiver": {
                "description": "Identifies the person who picked up the Supply.",
                "type": "array"
              }
            },
            "additionalProperties": false,
            "required": [
              "resourceType"
            ]
          },
          {
            "description": "A record of a request for a medication, substance or device used in the healthcare setting.",
            "properties": {
              "resourceType": {
                "description": "This is a SupplyRequest resource",
                "const": "SupplyRequest"
              },
              "id": {
                "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                "type": "string",
                "description": "Any combination of letters, numerals, \"-\" and \".\", with a length limit of 64 characters.  (This might be an integer, an unprefixed OID, UUID or any other identifier pattern that meets these constraints.)  Ids are case-insensitive."
              },
              "meta": {
                "description": "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
                "additionalProperties": false
              },
              "implicitRules": {
                "pattern": "^\\S*$",
                "type": "string",
                "description": "String of characters used to identify a name or a resource"
              },
              "_implicitRules": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "language": {
                "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                "type": "string",
                "description": "A string which has at least one character and no leading or trailing whitespace and where there is no whitespace other than single spaces in the contents"
              },
              "_language": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "text": {
                "description": "A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it \"clinically safe\" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.",
                "additionalProperties": false
              },
              "contained": {
                "description": "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope.",
                "type": "array"
              },
              "extension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                "type": "array"
              },
              "modifierExtension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                "type": "array"
              },
              "identifier": {
                "description": "Business identifiers assigned to this SupplyRequest by the author and/or other systems. These identifiers remain constant as the resource is updated and propagates from server to server.",
                "type": "array"
              },
              "status": {
                "description": "Status of the supply request.",
                "enum": [
                  "draft",
                  "active",
                  "suspended",
                  "cancelled",
                  "completed",
                  "entered-in-error",
                  "unknown"
                ]
              },
              "_status": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "category": {
                "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                "additionalProperties": false
              },
              "priority": {
                "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                "type": "string",
                "description": "A string which has at least one character and no leading or trailing whitespace and where there is no whitespace other than single spaces in the contents"
              },
              "_priority": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "itemCodeableConcept": {
                "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                "additionalProperties": false
              },
              "itemReference": {
                "description": "A reference from one resource to another.",
                "additionalProperties": false
              },
              "quantity": {
                "description": "A measured amount (or an amount that can potentially be measured). Note that measured amounts include amounts that are not precisely quantified, including amounts involving arbitrary units and floating currencies.",
                "additionalProperties": false
              },
              "parameter": {
                "description": "Specific parameters for the ordered item.  For example, the size of the indicated item.",
                "items": {
                  "description": "A record of a request for a medication, substance or device used in the healthcare setting.",
                  "properties": {
                    "id": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "type": "array"
                    },
                    "modifierExtension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                      "type": "array"
                    },
                    "code": {
                      "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                      "additionalProperties": false
                    },
                    "valueCodeableConcept": {
                      "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                      "additionalProperties": false
                    },
                    "valueQuantity": {
                      "description": "A measured amount (or an amount that can potentially be measured). Note that measured amounts include amounts that are not precisely quantified, including amounts involving arbitrary units and floating currencies.",
                      "additionalProperties": false
                    },
                    "valueRange": {
                      "description": "The value of the device detail.",
                      "additionalProperties": false
                    },
                    "valueBoolean": {
                      "description": "The value of the device detail.",
                      "pattern": "^true|false$",
                      "type": "boolean"
                    },
                    "_valueBoolean": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                },
                "type": "array"
              },
              "occurrenceDateTime": {
                "description": "When the request should be fulfilled.",
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                "type": "string"
              },
              "_occurrenceDateTime": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "occurrencePeriod": {
                "description": "A time period defined by a start and end date and optionally time.",
                "additionalProperties": false
              },
              "occurrenceTiming": {
                "description": "Specifies an event that may occur multiple times. Timing schedules are used to record when things are planned, expected or requested to occur. The most common usage is in dosage instructions for medications. They are also used when planning care of various kinds, and may be used for reporting the schedule to which past regular activities were carried out.",
                "additionalProperties": false
              },
              "authoredOn": {
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                "type": "string",
                "description": "A date, date-time or partial date (e.g. just year or year + month).  If hours and minutes are specified, a time zone SHALL be populated. The format is a union of the schema types gYear, gYearMonth, date and dateTime. Seconds must be provided due to schema type constraints but may be zero-filled and may be ignored.                 Dates SHALL be valid dates."
              },
              "_authoredOn": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "requester": {
                "description": "A reference from one resource to another.",
                "additionalProperties": false
              },
              "supplier": {
                "description": "Who is intended to fulfill the request.",
                "type": "array"
              },
              "reasonCode": {
                "description": "The reason why the supply item was requested.",
                "type": "array"
              },
              "reasonReference": {
                "description": "The reason why the supply item was requested.",
                "type": "array"
              },
              "deliverFrom": {
                "description": "A reference from one resource to another.",
                "additionalProperties": false
              },
              "deliverTo": {
                "description": "A reference from one resource to another.",
                "additionalProperties": false
              }
            },
            "additionalProperties": false,
            "required": [
              "quantity",
              "resourceType"
            ]
          },
          {
            "description": "A task to be performed.",
            "properties": {
              "resourceType": {
                "description": "This is a Task resource",
                "const": "Task"
              },
              "id": {
                "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                "type": "string",
                "description": "Any combination of letters, numerals, \"-\" and \".\", with a length limit of 64 characters.  (This might be an integer, an unprefixed OID, UUID or any other identifier pattern that meets these constraints.)  Ids are case-insensitive."
              },
              "meta": {
                "description": "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
                "additionalProperties": false
              },
              "implicitRules": {
                "pattern": "^\\S*$",
                "type": "string",
                "description": "String of characters used to identify a name or a resource"
              },
              "_implicitRules": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "language": {
                "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                "type": "string",
                "description": "A string which has at least one character and no leading or trailing whitespace and where there is no whitespace other than single spaces in the contents"
              },
              "_language": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "text": {
                "description": "A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it \"clinically safe\" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.",
                "additionalProperties": false
              },
              "contained": {
                "description": "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope.",
                "type": "array"
              },
              "extension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                "type": "array"
              },
              "modifierExtension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                "type": "array"
              },
              "identifier": {
                "description": "The business identifier for this task.",
                "type": "array"
              },
              "instantiatesCanonical": {
                "pattern": "^\\S*$",
                "type": "string",
                "description": "A URI that is a reference to a canonical URL on a FHIR resource"
              },
              "instantiatesUri": {
                "pattern": "^\\S*$",
                "type": "string",
                "description": "String of characters used to identify a name or a resource"
              },
              "_instantiatesUri": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "basedOn": {
                "description": "BasedOn refers to a higher-level authorization that triggered the creation of the task.  It references a \"request\" resource such as a ServiceRequest, MedicationRequest, ServiceRequest, CarePlan, etc. which is distinct from the \"request\" resource the task is seeking to fulfill.  This latter resource is referenced by FocusOn.  For example, based on a ServiceRequest (= BasedOn), a task is created to fulfill a procedureRequest ( = FocusOn ) to collect a specimen from a patient.",
                "type": "array"
              },
              "groupIdentifier": {
                "description": "An identifier - identifies some entity uniquely and unambiguously. Typically this is used for business identifiers.",
                "additionalProperties": false
              },
              "partOf": {
                "description": "Task that this particular task is part of.",
                "type": "array"
              },
              "status": {
                "description": "The current status of the task.",
                "enum": [
                  "draft",
                  "requested",
                  "received",
                  "accepted",
                  "rejected",
                  "ready",
                  "cancelled",
                  "in-progress",
                  "on-hold",
                  "failed",
                  "completed",
                  "entered-in-error"
                ]
              },
              "_status": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "statusReason": {
                "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                "additionalProperties": false
              },
              "businessStatus": {
                "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                "additionalProperties": false
              },
              "intent": {
                "description": "Indicates the \"level\" of actionability associated with the Task, i.e. i+R[9]Cs this a proposed task, a planned task, an actionable task, etc.",
                "enum": [
                  "unknown",
                  "proposal",
                  "plan",
                  "order",
                  "original-order",
                  "reflex-order",
                  "filler-order",
                  "instance-order",
                  "option"
                ]
              },
              "_intent": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "priority": {
                "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                "type": "string",
                "description": "A string which has at least one character and no leading or trailing whitespace and where there is no whitespace other than single spaces in the contents"
              },
              "_priority": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "code": {
                "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                "additionalProperties": false
              },
              "description": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "_description": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "focus": {
                "description": "A reference from one resource to another.",
                "additionalProperties": false
              },
              "for": {
                "description": "A reference from one resource to another.",
                "additionalProperties": false
              },
              "encounter": {
                "description": "A reference from one resource to another.",
                "additionalProperties": false
              },
              "executionPeriod": {
                "description": "A time period defined by a start and end date and optionally time.",
                "additionalProperties": false
              },
              "authoredOn": {
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                "type": "string",
                "description": "A date, date-time or partial date (e.g. just year or year + month).  If hours and minutes are specified, a time zone SHALL be populated. The format is a union of the schema types gYear, gYearMonth, date and dateTime. Seconds must be provided due to schema type constraints but may be zero-filled and may be ignored.                 Dates SHALL be valid dates."
              },
              "_authoredOn": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "lastModified": {
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                "type": "string",
                "description": "A date, date-time or partial date (e.g. just year or year + month).  If hours and minutes are specified, a time zone SHALL be populated. The format is a union of the schema types gYear, gYearMonth, date and dateTime. Seconds must be provided due to schema type constraints but may be zero-filled and may be ignored.                 Dates SHALL be valid dates."
              },
              "_lastModified": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "requester": {
                "description": "A reference from one resource to another.",
                "additionalProperties": false
              },
              "performerType": {
                "description": "The kind of participant that should perform the task.",
                "type": "array"
              },
              "owner": {
                "description": "A reference from one resource to another.",
                "additionalProperties": false
              },
              "location": {
                "description": "A reference from one resource to another.",
                "additionalProperties": false
              },
              "reasonCode": {
                "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                "additionalProperties": false
              },
              "reasonReference": {
                "description": "A reference from one resource to another.",
                "additionalProperties": false
              },
              "insurance": {
                "description": "Insurance plans, coverage extensions, pre-authorizations and/or pre-determinations that may be relevant to the Task.",
                "type": "array"
              },
              "note": {
                "description": "Free-text information captured about the task as it progresses.",
                "type": "array"
              },
              "relevantHistory": {
                "description": "Links to Provenance records for past versions of this Task that identify key state transitions or updates that are likely to be relevant to a user looking at the current version of the task.",
                "type": "array"
              },
              "restriction": {
                "description": "If the Task.focus is a request resource and the task is seeking fulfillment (i.e. is asking for the request to be actioned), this element identifies any limitations on what parts of the referenced request should be actioned.",
                "properties": {
                  "id": {
                    "pattern": "^[ \\r\\n\\t\\S]+$",
                    "type": "string",
                    "description": "A sequence of Unicode characters"
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "type": "array"
                  },
                  "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                    "type": "array"
                  },
                  "repetitions": {
                    "pattern": "^[1-9][0-9]*$",
                    "type": "number",
                    "description": "An integer with a value that is positive (e.g. >0)"
                  },
                  "_repetitions": {
                    "description": "Base definition for all elements in a resource.",
                    "additionalProperties": false
                  },
                  "period": {
                    "description": "A time period defined by a start and end date and optionally time.",
                    "additionalProperties": false
                  },
                  "recipient": {
                    "description": "For requests that are targeted to more than on potential recipient/target, for whom is fulfillment sought?",
                    "type": "array"
                  }
                },
                "additionalProperties": false
              },
              "input": {
                "description": "Additional information that may be needed in the execution of the task.",
                "items": {
                  "description": "A task to be performed.",
                  "properties": {
                    "id": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "type": "array"
                    },
                    "modifierExtension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                      "type": "array"
                    },
                    "type": {
                      "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                      "additionalProperties": false
                    },
                    "valueBase64Binary": {
                      "description": "The value of the input parameter as a basic type.",
                      "pattern": "^(\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+$",
                      "type": "string"
                    },
                    "_valueBase64Binary": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "valueBoolean": {
                      "description": "The value of the input parameter as a basic type.",
                      "pattern": "^true|false$",
                      "type": "boolean"
                    },
                    "_valueBoolean": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "valueCanonical": {
                      "description": "The value of the input parameter as a basic type.",
                      "pattern": "^\\S*$",
                      "type": "string"
                    },
                    "_valueCanonical": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "valueCode": {
                      "description": "The value of the input parameter as a basic type.",
                      "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                      "type": "string"
                    },
                    "_valueCode": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "valueDate": {
                      "description": "The value of the input parameter as a basic type.",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                      "type": "string"
                    },
                    "_valueDate": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "valueDateTime": {
                      "description": "The value of the input parameter as a basic type.",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                      "type": "string"
                    },
                    "_valueDateTime": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "valueDecimal": {
                      "description": "The value of the input parameter as a basic type.",
                      "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                      "type": "number"
                    },
                    "_valueDecimal": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "valueId": {
                      "description": "The value of the input parameter as a basic type.",
                      "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                      "type": "string"
                    },
                    "_valueId": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "valueInstant": {
                      "description": "The value of the input parameter as a basic type.",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
                      "type": "string"
                    },
                    "_valueInstant": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "valueInteger": {
                      "description": "The value of the input parameter as a basic type.",
                      "pattern": "^-?([0]|([1-9][0-9]*))$",
                      "type": "number"
                    },
                    "_valueInteger": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "valueMarkdown": {
                      "description": "The value of the input parameter as a basic type.",
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string"
                    },
                    "_valueMarkdown": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "valueOid": {
                      "description": "The value of the input parameter as a basic type.",
                      "pattern": "^urn:oid:[0-2](\\.(0|[1-9][0-9]*))+$",
                      "type": "string"
                    },
                    "_valueOid": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "valuePositiveInt": {
                      "description": "The value of the input parameter as a basic type.",
                      "pattern": "^[1-9][0-9]*$",
                      "type": "number"
                    },
                    "_valuePositiveInt": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "valueString": {
                      "description": "The value of the input parameter as a basic type.",
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string"
                    },
                    "_valueString": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "valueTime": {
                      "description": "The value of the input parameter as a basic type.",
                      "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$",
                      "type": "string"
                    },
                    "_valueTime": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "valueUnsignedInt": {
                      "description": "The value of the input parameter as a basic type.",
                      "pattern": "^[0]|([1-9][0-9]*)$",
                      "type": "number"
                    },
                    "_valueUnsignedInt": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "valueUri": {
                      "description": "The value of the input parameter as a basic type.",
                      "pattern": "^\\S*$",
                      "type": "string"
                    },
                    "_valueUri": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "valueUrl": {
                      "description": "The value of the input parameter as a basic type.",
                      "pattern": "^\\S*$",
                      "type": "string"
                    },
                    "_valueUrl": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "valueUuid": {
                      "description": "The value of the input parameter as a basic type.",
                      "pattern": "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                      "type": "string"
                    },
                    "_valueUuid": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "valueAddress": {
                      "description": "An address expressed using postal conventions (as opposed to GPS or other location definition formats).  This data type may be used to convey addresses for use in delivering mail as well as for visiting locations which might not be valid for mail delivery.  There are a variety of postal address formats defined around the world.",
                      "additionalProperties": false
                    },
                    "valueAge": {
                      "description": "The value of the input parameter as a basic type.",
                      "additionalProperties": false
                    },
                    "valueAnnotation": {
                      "description": "A  text note which also  contains information about who made the statement and when.",
                      "additionalProperties": false
                    },
                    "valueAttachment": {
                      "description": "For referring to data content defined in other formats.",
                      "additionalProperties": false
                    },
                    "valueCodeableConcept": {
                      "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                      "additionalProperties": false
                    },
                    "valueCoding": {
                      "description": "A reference to a code defined by a terminology system.",
                      "additionalProperties": false
                    },
                    "valueContactPoint": {
                      "description": "Details for all kinds of technology mediated contact points for a person or organization, including telephone, email, etc.",
                      "additionalProperties": false
                    },
                    "valueCount": {
                      "description": "The value of the input parameter as a basic type.",
                      "additionalProperties": false
                    },
                    "valueDistance": {
                      "description": "The value of the input parameter as a basic type.",
                      "additionalProperties": false
                    },
                    "valueDuration": {
                      "description": "The value of the input parameter as a basic type.",
                      "additionalProperties": false
                    },
                    "valueHumanName": {
                      "description": "A human's name with the ability to identify parts and usage.",
                      "additionalProperties": false
                    },
                    "valueIdentifier": {
                      "description": "An identifier - identifies some entity uniquely and unambiguously. Typically this is used for business identifiers.",
                      "additionalProperties": false
                    },
                    "valueMoney": {
                      "description": "The value of the input parameter as a basic type.",
                      "additionalProperties": false
                    },
                    "valuePeriod": {
                      "description": "A time period defined by a start and end date and optionally time.",
                      "additionalProperties": false
                    },
                    "valueQuantity": {
                      "description": "A measured amount (or an amount that can potentially be measured). Note that measured amounts include amounts that are not precisely quantified, including amounts involving arbitrary units and floating currencies.",
                      "additionalProperties": false
                    },
                    "valueRange": {
                      "description": "The value of the input parameter as a basic type.",
                      "additionalProperties": false
                    },
                    "valueRatio": {
                      "description": "The value of the input parameter as a basic type.",
                      "additionalProperties": false
                    },
                    "valueReference": {
                      "description": "A reference from one resource to another.",
                      "additionalProperties": false
                    },
                    "valueSampledData": {
                      "description": "The value of the input parameter as a basic type.",
                      "additionalProperties": false
                    },
                    "valueSignature": {
                      "description": "A signature along with supporting context. The signature may be a digital signature that is cryptographic in nature, or some other signature acceptable to the domain. This other signature may be as simple as a graphical image representing a hand-written signature, or a signature ceremony Different signature approaches have different utilities.",
                      "additionalProperties": false
                    },
                    "valueTiming": {
                      "description": "Specifies an event that may occur multiple times. Timing schedules are used to record when things are planned, expected or requested to occur. The most common usage is in dosage instructions for medications. They are also used when planning care of various kinds, and may be used for reporting the schedule to which past regular activities were carried out.",
                      "additionalProperties": false
                    },
                    "valueContactDetail": {
                      "description": "Specifies contact information for a person or organization.",
                      "additionalProperties": false
                    },
                    "valueContributor": {
                      "description": "The value of the input parameter as a basic type.",
                      "additionalProperties": false
                    },
                    "valueDataRequirement": {
                      "description": "Describes a required data item for evaluation in terms of the type of data, and optional code or date-based filters of the data.",
                      "additionalProperties": false
                    },
                    "valueExpression": {
                      "description": "The value of the input parameter as a basic type.",
                      "additionalProperties": false
                    },
                    "valueParameterDefinition": {
                      "description": "The parameters to the module. This collection specifies both the input and output parameters. Input parameters are provided by the caller as part of the $evaluate operation. Output parameters are included in the GuidanceResponse.",
                      "additionalProperties": false
                    },
                    "valueRelatedArtifact": {
                      "description": "Related artifacts such as additional documentation, justification, or bibliographic references.",
                      "additionalProperties": false
                    },
                    "valueTriggerDefinition": {
                      "description": "A description of a triggering event. Triggering events can be named events, data events, or periodic, as determined by the type element.",
                      "additionalProperties": false
                    },
                    "valueUsageContext": {
                      "description": "Specifies clinical/business/etc. metadata that can be used to retrieve, index and/or categorize an artifact. This metadata can either be specific to the applicable population (e.g., age category, DRG) or the specific context of care (e.g., venue, care setting, provider of care).",
                      "additionalProperties": false
                    },
                    "valueDosage": {
                      "description": "Indicates how the medication is/was taken or should be taken by the patient.",
                      "additionalProperties": false
                    },
                    "valueMeta": {
                      "description": "The value of the input parameter as a basic type.",
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false,
                  "required": [
                    "type"
                  ]
                },
                "type": "array"
              },
              "output": {
                "description": "Outputs produced by the Task.",
                "items": {
                  "description": "A task to be performed.",
                  "properties": {
                    "id": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "type": "array"
                    },
                    "modifierExtension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                      "type": "array"
                    },
                    "type": {
                      "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                      "additionalProperties": false
                    },
                    "valueBase64Binary": {
                      "description": "The value of the Output parameter as a basic type.",
                      "pattern": "^(\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+$",
                      "type": "string"
                    },
                    "_valueBase64Binary": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "valueBoolean": {
                      "description": "The value of the Output parameter as a basic type.",
                      "pattern": "^true|false$",
                      "type": "boolean"
                    },
                    "_valueBoolean": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "valueCanonical": {
                      "description": "The value of the Output parameter as a basic type.",
                      "pattern": "^\\S*$",
                      "type": "string"
                    },
                    "_valueCanonical": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "valueCode": {
                      "description": "The value of the Output parameter as a basic type.",
                      "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                      "type": "string"
                    },
                    "_valueCode": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "valueDate": {
                      "description": "The value of the Output parameter as a basic type.",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                      "type": "string"
                    },
                    "_valueDate": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "valueDateTime": {
                      "description": "The value of the Output parameter as a basic type.",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                      "type": "string"
                    },
                    "_valueDateTime": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "valueDecimal": {
                      "description": "The value of the Output parameter as a basic type.",
                      "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                      "type": "number"
                    },
                    "_valueDecimal": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "valueId": {
                      "description": "The value of the Output parameter as a basic type.",
                      "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                      "type": "string"
                    },
                    "_valueId": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "valueInstant": {
                      "description": "The value of the Output parameter as a basic type.",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
                      "type": "string"
                    },
                    "_valueInstant": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "valueInteger": {
                      "description": "The value of the Output parameter as a basic type.",
                      "pattern": "^-?([0]|([1-9][0-9]*))$",
                      "type": "number"
                    },
                    "_valueInteger": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "valueMarkdown": {
                      "description": "The value of the Output parameter as a basic type.",
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string"
                    },
                    "_valueMarkdown": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "valueOid": {
                      "description": "The value of the Output parameter as a basic type.",
                      "pattern": "^urn:oid:[0-2](\\.(0|[1-9][0-9]*))+$",
                      "type": "string"
                    },
                    "_valueOid": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "valuePositiveInt": {
                      "description": "The value of the Output parameter as a basic type.",
                      "pattern": "^[1-9][0-9]*$",
                      "type": "number"
                    },
                    "_valuePositiveInt": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "valueString": {
                      "description": "The value of the Output parameter as a basic type.",
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string"
                    },
                    "_valueString": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "valueTime": {
                      "description": "The value of the Output parameter as a basic type.",
                      "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$",
                      "type": "string"
                    },
                    "_valueTime": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "valueUnsignedInt": {
                      "description": "The value of the Output parameter as a basic type.",
                      "pattern": "^[0]|([1-9][0-9]*)$",
                      "type": "number"
                    },
                    "_valueUnsignedInt": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "valueUri": {
                      "description": "The value of the Output parameter as a basic type.",
                      "pattern": "^\\S*$",
                      "type": "string"
                    },
                    "_valueUri": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "valueUrl": {
                      "description": "The value of the Output parameter as a basic type.",
                      "pattern": "^\\S*$",
                      "type": "string"
                    },
                    "_valueUrl": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "valueUuid": {
                      "description": "The value of the Output parameter as a basic type.",
                      "pattern": "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                      "type": "string"
                    },
                    "_valueUuid": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "valueAddress": {
                      "description": "An address expressed using postal conventions (as opposed to GPS or other location definition formats).  This data type may be used to convey addresses for use in delivering mail as well as for visiting locations which might not be valid for mail delivery.  There are a variety of postal address formats defined around the world.",
                      "additionalProperties": false
                    },
                    "valueAge": {
                      "description": "The value of the Output parameter as a basic type.",
                      "additionalProperties": false
                    },
                    "valueAnnotation": {
                      "description": "A  text note which also  contains information about who made the statement and when.",
                      "additionalProperties": false
                    },
                    "valueAttachment": {
                      "description": "For referring to data content defined in other formats.",
                      "additionalProperties": false
                    },
                    "valueCodeableConcept": {
                      "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                      "additionalProperties": false
                    },
                    "valueCoding": {
                      "description": "A reference to a code defined by a terminology system.",
                      "additionalProperties": false
                    },
                    "valueContactPoint": {
                      "description": "Details for all kinds of technology mediated contact points for a person or organization, including telephone, email, etc.",
                      "additionalProperties": false
                    },
                    "valueCount": {
                      "description": "The value of the Output parameter as a basic type.",
                      "additionalProperties": false
                    },
                    "valueDistance": {
                      "description": "The value of the Output parameter as a basic type.",
                      "additionalProperties": false
                    },
                    "valueDuration": {
                      "description": "The value of the Output parameter as a basic type.",
                      "additionalProperties": false
                    },
                    "valueHumanName": {
                      "description": "A human's name with the ability to identify parts and usage.",
                      "additionalProperties": false
                    },
                    "valueIdentifier": {
                      "description": "An identifier - identifies some entity uniquely and unambiguously. Typically this is used for business identifiers.",
                      "additionalProperties": false
                    },
                    "valueMoney": {
                      "description": "The value of the Output parameter as a basic type.",
                      "additionalProperties": false
                    },
                    "valuePeriod": {
                      "description": "A time period defined by a start and end date and optionally time.",
                      "additionalProperties": false
                    },
                    "valueQuantity": {
                      "description": "A measured amount (or an amount that can potentially be measured). Note that measured amounts include amounts that are not precisely quantified, including amounts involving arbitrary units and floating currencies.",
                      "additionalProperties": false
                    },
                    "valueRange": {
                      "description": "The value of the Output parameter as a basic type.",
                      "additionalProperties": false
                    },
                    "valueRatio": {
                      "description": "The value of the Output parameter as a basic type.",
                      "additionalProperties": false
                    },
                    "valueReference": {
                      "description": "A reference from one resource to another.",
                      "additionalProperties": false
                    },
                    "valueSampledData": {
                      "description": "The value of the Output parameter as a basic type.",
                      "additionalProperties": false
                    },
                    "valueSignature": {
                      "description": "A signature along with supporting context. The signature may be a digital signature that is cryptographic in nature, or some other signature acceptable to the domain. This other signature may be as simple as a graphical image representing a hand-written signature, or a signature ceremony Different signature approaches have different utilities.",
                      "additionalProperties": false
                    },
                    "valueTiming": {
                      "description": "Specifies an event that may occur multiple times. Timing schedules are used to record when things are planned, expected or requested to occur. The most common usage is in dosage instructions for medications. They are also used when planning care of various kinds, and may be used for reporting the schedule to which past regular activities were carried out.",
                      "additionalProperties": false
                    },
                    "valueContactDetail": {
                      "description": "Specifies contact information for a person or organization.",
                      "additionalProperties": false
                    },
                    "valueContributor": {
                      "description": "The value of the Output parameter as a basic type.",
                      "additionalProperties": false
                    },
                    "valueDataRequirement": {
                      "description": "Describes a required data item for evaluation in terms of the type of data, and optional code or date-based filters of the data.",
                      "additionalProperties": false
                    },
                    "valueExpression": {
                      "description": "The value of the Output parameter as a basic type.",
                      "additionalProperties": false
                    },
                    "valueParameterDefinition": {
                      "description": "The parameters to the module. This collection specifies both the input and output parameters. Input parameters are provided by the caller as part of the $evaluate operation. Output parameters are included in the GuidanceResponse.",
                      "additionalProperties": false
                    },
                    "valueRelatedArtifact": {
                      "description": "Related artifacts such as additional documentation, justification, or bibliographic references.",
                      "additionalProperties": false
                    },
                    "valueTriggerDefinition": {
                      "description": "A description of a triggering event. Triggering events can be named events, data events, or periodic, as determined by the type element.",
                      "additionalProperties": false
                    },
                    "valueUsageContext": {
                      "description": "Specifies clinical/business/etc. metadata that can be used to retrieve, index and/or categorize an artifact. This metadata can either be specific to the applicable population (e.g., age category, DRG) or the specific context of care (e.g., venue, care setting, provider of care).",
                      "additionalProperties": false
                    },
                    "valueDosage": {
                      "description": "Indicates how the medication is/was taken or should be taken by the patient.",
                      "additionalProperties": false
                    },
                    "valueMeta": {
                      "description": "The value of the Output parameter as a basic type.",
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false,
                  "required": [
                    "type"
                  ]
                },
                "type": "array"
              }
            },
            "additionalProperties": false,
            "required": [
              "resourceType"
            ]
          },
          {
            "description": "A TerminologyCapabilities resource documents a set of capabilities (behaviors) of a FHIR Terminology Server that may be used as a statement of actual server functionality or a statement of required or desired server implementation.",
            "properties": {
              "resourceType": {
                "description": "This is a TerminologyCapabilities resource",
                "const": "TerminologyCapabilities"
              },
              "id": {
                "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                "type": "string",
                "description": "Any combination of letters, numerals, \"-\" and \".\", with a length limit of 64 characters.  (This might be an integer, an unprefixed OID, UUID or any other identifier pattern that meets these constraints.)  Ids are case-insensitive."
              },
              "meta": {
                "description": "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
                "additionalProperties": false
              },
              "implicitRules": {
                "pattern": "^\\S*$",
                "type": "string",
                "description": "String of characters used to identify a name or a resource"
              },
              "_implicitRules": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "language": {
                "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                "type": "string",
                "description": "A string which has at least one character and no leading or trailing whitespace and where there is no whitespace other than single spaces in the contents"
              },
              "_language": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "text": {
                "description": "A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it \"clinically safe\" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.",
                "additionalProperties": false
              },
              "contained": {
                "description": "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope.",
                "type": "array"
              },
              "extension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                "type": "array"
              },
              "modifierExtension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                "type": "array"
              },
              "url": {
                "pattern": "^\\S*$",
                "type": "string",
                "description": "String of characters used to identify a name or a resource"
              },
              "_url": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "version": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "_version": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "name": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "_name": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "title": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "_title": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "status": {
                "description": "The status of this terminology capabilities. Enables tracking the life-cycle of the content.",
                "enum": [
                  "draft",
                  "active",
                  "retired",
                  "unknown"
                ]
              },
              "_status": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "experimental": {
                "description": "A Boolean value to indicate that this terminology capabilities is authored for testing purposes (or education/evaluation/marketing) and is not intended to be used for genuine usage.",
                "pattern": "^true|false$",
                "type": "boolean"
              },
              "_experimental": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "date": {
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                "type": "string",
                "description": "A date, date-time or partial date (e.g. just year or year + month).  If hours and minutes are specified, a time zone SHALL be populated. The format is a union of the schema types gYear, gYearMonth, date and dateTime. Seconds must be provided due to schema type constraints but may be zero-filled and may be ignored.                 Dates SHALL be valid dates."
              },
              "_date": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "publisher": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "_publisher": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "contact": {
                "description": "Contact details to assist a user in finding and communicating with the publisher.",
                "type": "array"
              },
              "description": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A string that may contain Github Flavored Markdown syntax for optional processing by a mark down presentation engine"
              },
              "_description": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "useContext": {
                "description": "The content was developed with a focus and intent of supporting the contexts that are listed. These contexts may be general categories (gender, age, ...) or may be references to specific programs (insurance plans, studies, ...) and may be used to assist with indexing and searching for appropriate terminology capabilities instances.",
                "type": "array"
              },
              "jurisdiction": {
                "description": "A legal or geographic region in which the terminology capabilities is intended to be used.",
                "type": "array"
              },
              "purpose": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A string that may contain Github Flavored Markdown syntax for optional processing by a mark down presentation engine"
              },
              "_purpose": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "copyright": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A string that may contain Github Flavored Markdown syntax for optional processing by a mark down presentation engine"
              },
              "_copyright": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "kind": {
                "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                "type": "string",
                "description": "A string which has at least one character and no leading or trailing whitespace and where there is no whitespace other than single spaces in the contents"
              },
              "_kind": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "software": {
                "description": "Software that is covered by this terminology capability statement.  It is used when the statement describes the capabilities of a particular software version, independent of an installation.",
                "properties": {
                  "id": {
                    "pattern": "^[ \\r\\n\\t\\S]+$",
                    "type": "string",
                    "description": "A sequence of Unicode characters"
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "type": "array"
                  },
                  "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                    "type": "array"
                  },
                  "name": {
                    "pattern": "^[ \\r\\n\\t\\S]+$",
                    "type": "string",
                    "description": "A sequence of Unicode characters"
                  },
                  "_name": {
                    "description": "Base definition for all elements in a resource.",
                    "additionalProperties": false
                  },
                  "version": {
                    "pattern": "^[ \\r\\n\\t\\S]+$",
                    "type": "string",
                    "description": "A sequence of Unicode characters"
                  },
                  "_version": {
                    "description": "Base definition for all elements in a resource.",
                    "additionalProperties": false
                  }
                },
                "additionalProperties": false
              },
              "implementation": {
                "description": "Identifies a specific implementation instance that is described by the terminology capability statement - i.e. a particular installation, rather than the capabilities of a software program.",
                "properties": {
                  "id": {
                    "pattern": "^[ \\r\\n\\t\\S]+$",
                    "type": "string",
                    "description": "A sequence of Unicode characters"
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "type": "array"
                  },
                  "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                    "type": "array"
                  },
                  "description": {
                    "pattern": "^[ \\r\\n\\t\\S]+$",
                    "type": "string",
                    "description": "A sequence of Unicode characters"
                  },
                  "_description": {
                    "description": "Base definition for all elements in a resource.",
                    "additionalProperties": false
                  },
                  "url": {
                    "description": "An absolute base URL for the implementation.",
                    "pattern": "^\\S*$",
                    "type": "string"
                  },
                  "_url": {
                    "description": "Base definition for all elements in a resource.",
                    "additionalProperties": false
                  }
                },
                "additionalProperties": false
              },
              "lockedDate": {
                "description": "Whether the server supports lockedDate.",
                "pattern": "^true|false$",
                "type": "boolean"
              },
              "_lockedDate": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "codeSystem": {
                "description": "Identifies a code system that is supported by the server. If there is a no code system URL, then this declares the general assumptions a client can make about support for any CodeSystem resource.",
                "items": {
                  "description": "A TerminologyCapabilities resource documents a set of capabilities (behaviors) of a FHIR Terminology Server that may be used as a statement of actual server functionality or a statement of required or desired server implementation.",
                  "properties": {
                    "id": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "type": "array"
                    },
                    "modifierExtension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                      "type": "array"
                    },
                    "uri": {
                      "pattern": "^\\S*$",
                      "type": "string",
                      "description": "A URI that is a reference to a canonical URL on a FHIR resource"
                    },
                    "version": {
                      "description": "For the code system, a list of versions that are supported by the server.",
                      "items": {
                        "description": "A TerminologyCapabilities resource documents a set of capabilities (behaviors) of a FHIR Terminology Server that may be used as a statement of actual server functionality or a statement of required or desired server implementation.",
                        "properties": {
                          "id": {
                            "pattern": "^[ \\r\\n\\t\\S]+$",
                            "type": "string",
                            "description": "A sequence of Unicode characters"
                          },
                          "extension": {
                            "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                            "type": "array"
                          },
                          "modifierExtension": {
                            "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                            "type": "array"
                          },
                          "code": {
                            "pattern": "^[ \\r\\n\\t\\S]+$",
                            "type": "string",
                            "description": "A sequence of Unicode characters"
                          },
                          "_code": {
                            "description": "Base definition for all elements in a resource.",
                            "additionalProperties": false
                          },
                          "isDefault": {
                            "description": "If this is the default version for this code system.",
                            "pattern": "^true|false$",
                            "type": "boolean"
                          },
                          "_isDefault": {
                            "description": "Base definition for all elements in a resource.",
                            "additionalProperties": false
                          },
                          "compositional": {
                            "description": "If the compositional grammar defined by the code system is supported.",
                            "pattern": "^true|false$",
                            "type": "boolean"
                          },
                          "_compositional": {
                            "description": "Base definition for all elements in a resource.",
                            "additionalProperties": false
                          },
                          "language": {
                            "description": "Language Displays supported.",
                            "type": "array"
                          },
                          "_language": {
                            "description": "Extensions for language",
                            "type": "array"
                          },
                          "filter": {
                            "description": "Filter Properties supported.",
                            "items": {
                              "description": "A TerminologyCapabilities resource documents a set of capabilities (behaviors) of a FHIR Terminology Server that may be used as a statement of actual server functionality or a statement of required or desired server implementation.",
                              "properties": {
                                "id": {
                                  "pattern": "^[ \\r\\n\\t\\S]+$",
                                  "type": "string",
                                  "description": "A sequence of Unicode characters"
                                },
                                "extension": {
                                  "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                                  "type": "array"
                                },
                                "modifierExtension": {
                                  "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                                  "type": "array"
                                },
                                "code": {
                                  "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                                  "type": "string",
                                  "description": "A string which has at least one character and no leading or trailing whitespace and where there is no whitespace other than single spaces in the contents"
                                },
                                "_code": {
                                  "description": "Base definition for all elements in a resource.",
                                  "additionalProperties": false
                                },
                                "op": {
                                  "description": "Operations supported for the property.",
                                  "type": "array"
                                },
                                "_op": {
                                  "description": "Extensions for op",
                                  "type": "array"
                                }
                              },
                              "additionalProperties": false
                            },
                            "type": "array"
                          },
                          "property": {
                            "description": "Properties supported for $lookup.",
                            "type": "array"
                          },
                          "_property": {
                            "description": "Extensions for property",
                            "type": "array"
                          }
                        },
                        "additionalProperties": false
                      },
                      "type": "array"
                    },
                    "subsumption": {
                      "description": "True if subsumption is supported for this version of the code system.",
                      "pattern": "^true|false$",
                      "type": "boolean"
                    },
                    "_subsumption": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                },
                "type": "array"
              },
              "expansion": {
                "description": "Information about the [ValueSet/$expand](valueset-operation-expand.html) operation.",
                "properties": {
                  "id": {
                    "pattern": "^[ \\r\\n\\t\\S]+$",
                    "type": "string",
                    "description": "A sequence of Unicode characters"
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "type": "array"
                  },
                  "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                    "type": "array"
                  },
                  "hierarchical": {
                    "description": "Whether the server can return nested value sets.",
                    "pattern": "^true|false$",
                    "type": "boolean"
                  },
                  "_hierarchical": {
                    "description": "Base definition for all elements in a resource.",
                    "additionalProperties": false
                  },
                  "paging": {
                    "description": "Whether the server supports paging on expansion.",
                    "pattern": "^true|false$",
                    "type": "boolean"
                  },
                  "_paging": {
                    "description": "Base definition for all elements in a resource.",
                    "additionalProperties": false
                  },
                  "incomplete": {
                    "description": "Allow request for incomplete expansions?",
                    "pattern": "^true|false$",
                    "type": "boolean"
                  },
                  "_incomplete": {
                    "description": "Base definition for all elements in a resource.",
                    "additionalProperties": false
                  },
                  "parameter": {
                    "description": "Supported expansion parameter.",
                    "items": {
                      "description": "A TerminologyCapabilities resource documents a set of capabilities (behaviors) of a FHIR Terminology Server that may be used as a statement of actual server functionality or a statement of required or desired server implementation.",
                      "properties": {
                        "id": {
                          "pattern": "^[ \\r\\n\\t\\S]+$",
                          "type": "string",
                          "description": "A sequence of Unicode characters"
                        },
                        "extension": {
                          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                          "type": "array"
                        },
                        "modifierExtension": {
                          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                          "type": "array"
                        },
                        "name": {
                          "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                          "type": "string",
                          "description": "A string which has at least one character and no leading or trailing whitespace and where there is no whitespace other than single spaces in the contents"
                        },
                        "_name": {
                          "description": "Base definition for all elements in a resource.",
                          "additionalProperties": false
                        },
                        "documentation": {
                          "pattern": "^[ \\r\\n\\t\\S]+$",
                          "type": "string",
                          "description": "A sequence of Unicode characters"
                        },
                        "_documentation": {
                          "description": "Base definition for all elements in a resource.",
                          "additionalProperties": false
                        }
                      },
                      "additionalProperties": false
                    },
                    "type": "array"
                  },
                  "textFilter": {
                    "pattern": "^[ \\r\\n\\t\\S]+$",
                    "type": "string",
                    "description": "A string that may contain Github Flavored Markdown syntax for optional processing by a mark down presentation engine"
                  },
                  "_textFilter": {
                    "description": "Base definition for all elements in a resource.",
                    "additionalProperties": false
                  }
                },
                "additionalProperties": false
              },
              "codeSearch": {
                "description": "The degree to which the server supports the code search parameter on ValueSet, if it is supported.",
                "enum": [
                  "explicit",
                  "all"
                ]
              },
              "_codeSearch": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "validateCode": {
                "description": "Information about the [ValueSet/$validate-code](valueset-operation-validate-code.html) operation.",
                "properties": {
                  "id": {
                    "pattern": "^[ \\r\\n\\t\\S]+$",
                    "type": "string",
                    "description": "A sequence of Unicode characters"
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "type": "array"
                  },
                  "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                    "type": "array"
                  },
                  "translations": {
                    "description": "Whether translations are validated.",
                    "pattern": "^true|false$",
                    "type": "boolean"
                  },
                  "_translations": {
                    "description": "Base definition for all elements in a resource.",
                    "additionalProperties": false
                  }
                },
                "additionalProperties": false
              },
              "translation": {
                "description": "Information about the [ConceptMap/$translate](conceptmap-operation-translate.html) operation.",
                "properties": {
                  "id": {
                    "pattern": "^[ \\r\\n\\t\\S]+$",
                    "type": "string",
                    "description": "A sequence of Unicode characters"
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "type": "array"
                  },
                  "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                    "type": "array"
                  },
                  "needsMap": {
                    "description": "Whether the client must identify the map.",
                    "pattern": "^true|false$",
                    "type": "boolean"
                  },
                  "_needsMap": {
                    "description": "Base definition for all elements in a resource.",
                    "additionalProperties": false
                  }
                },
                "additionalProperties": false
              },
              "closure": {
                "description": "Whether the $closure operation is supported.",
                "properties": {
                  "id": {
                    "pattern": "^[ \\r\\n\\t\\S]+$",
                    "type": "string",
                    "description": "A sequence of Unicode characters"
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "type": "array"
                  },
                  "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                    "type": "array"
                  },
                  "translation": {
                    "description": "If cross-system closure is supported.",
                    "pattern": "^true|false$",
                    "type": "boolean"
                  },
                  "_translation": {
                    "description": "Base definition for all elements in a resource.",
                    "additionalProperties": false
                  }
                },
                "additionalProperties": false
              }
            },
            "additionalProperties": false,
            "required": [
              "resourceType"
            ]
          },
          {
            "description": "A summary of information based on the results of executing a TestScript.",
            "properties": {
              "resourceType": {
                "description": "This is a TestReport resource",
                "const": "TestReport"
              },
              "id": {
                "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                "type": "string",
                "description": "Any combination of letters, numerals, \"-\" and \".\", with a length limit of 64 characters.  (This might be an integer, an unprefixed OID, UUID or any other identifier pattern that meets these constraints.)  Ids are case-insensitive."
              },
              "meta": {
                "description": "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
                "additionalProperties": false
              },
              "implicitRules": {
                "pattern": "^\\S*$",
                "type": "string",
                "description": "String of characters used to identify a name or a resource"
              },
              "_implicitRules": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "language": {
                "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                "type": "string",
                "description": "A string which has at least one character and no leading or trailing whitespace and where there is no whitespace other than single spaces in the contents"
              },
              "_language": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "text": {
                "description": "A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it \"clinically safe\" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.",
                "additionalProperties": false
              },
              "contained": {
                "description": "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope.",
                "type": "array"
              },
              "extension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                "type": "array"
              },
              "modifierExtension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                "type": "array"
              },
              "identifier": {
                "description": "An identifier - identifies some entity uniquely and unambiguously. Typically this is used for business identifiers.",
                "additionalProperties": false
              },
              "name": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "_name": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "status": {
                "description": "The current state of this test report.",
                "enum": [
                  "completed",
                  "in-progress",
                  "waiting",
                  "stopped",
                  "entered-in-error"
                ]
              },
              "_status": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "testScript": {
                "description": "A reference from one resource to another.",
                "additionalProperties": false
              },
              "result": {
                "description": "The overall result from the execution of the TestScript.",
                "enum": [
                  "pass",
                  "fail",
                  "pending"
                ]
              },
              "_result": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "score": {
                "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                "type": "number",
                "description": "A rational number with implicit precision"
              },
              "_score": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "tester": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "_tester": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "issued": {
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                "type": "string",
                "description": "A date, date-time or partial date (e.g. just year or year + month).  If hours and minutes are specified, a time zone SHALL be populated. The format is a union of the schema types gYear, gYearMonth, date and dateTime. Seconds must be provided due to schema type constraints but may be zero-filled and may be ignored.                 Dates SHALL be valid dates."
              },
              "_issued": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "participant": {
                "description": "A participant in the test execution, either the execution engine, a client, or a server.",
                "items": {
                  "description": "A summary of information based on the results of executing a TestScript.",
                  "properties": {
                    "id": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "type": "array"
                    },
                    "modifierExtension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                      "type": "array"
                    },
                    "type": {
                      "description": "The type of participant.",
                      "enum": [
                        "test-engine",
                        "client",
                        "server"
                      ]
                    },
                    "_type": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "uri": {
                      "pattern": "^\\S*$",
                      "type": "string",
                      "description": "String of characters used to identify a name or a resource"
                    },
                    "_uri": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "display": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "_display": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                },
                "type": "array"
              },
              "setup": {
                "description": "The results of the series of required setup operations before the tests were executed.",
                "properties": {
                  "id": {
                    "pattern": "^[ \\r\\n\\t\\S]+$",
                    "type": "string",
                    "description": "A sequence of Unicode characters"
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "type": "array"
                  },
                  "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                    "type": "array"
                  },
                  "action": {
                    "description": "Action would contain either an operation or an assertion.",
                    "items": {
                      "description": "A summary of information based on the results of executing a TestScript.",
                      "properties": {
                        "id": {
                          "pattern": "^[ \\r\\n\\t\\S]+$",
                          "type": "string",
                          "description": "A sequence of Unicode characters"
                        },
                        "extension": {
                          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                          "type": "array"
                        },
                        "modifierExtension": {
                          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                          "type": "array"
                        },
                        "operation": {
                          "description": "The operation performed.",
                          "properties": {
                            "id": {
                              "pattern": "^[ \\r\\n\\t\\S]+$",
                              "type": "string",
                              "description": "A sequence of Unicode characters"
                            },
                            "extension": {
                              "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                              "type": "array"
                            },
                            "modifierExtension": {
                              "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                              "type": "array"
                            },
                            "result": {
                              "description": "The result of this operation.",
                              "enum": [
                                "pass",
                                "skip",
                                "fail",
                                "warning",
                                "error"
                              ]
                            },
                            "_result": {
                              "description": "Base definition for all elements in a resource.",
                              "additionalProperties": false
                            },
                            "message": {
                              "pattern": "^[ \\r\\n\\t\\S]+$",
                              "type": "string",
                              "description": "A string that may contain Github Flavored Markdown syntax for optional processing by a mark down presentation engine"
                            },
                            "_message": {
                              "description": "Base definition for all elements in a resource.",
                              "additionalProperties": false
                            },
                            "detail": {
                              "pattern": "^\\S*$",
                              "type": "string",
                              "description": "String of characters used to identify a name or a resource"
                            },
                            "_detail": {
                              "description": "Base definition for all elements in a resource.",
                              "additionalProperties": false
                            }
                          },
                          "additionalProperties": false
                        },
                        "assert": {
                          "description": "The results of the assertion performed on the previous operations.",
                          "properties": {
                            "id": {
                              "pattern": "^[ \\r\\n\\t\\S]+$",
                              "type": "string",
                              "description": "A sequence of Unicode characters"
                            },
                            "extension": {
                              "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                              "type": "array"
                            },
                            "modifierExtension": {
                              "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                              "type": "array"
                            },
                            "result": {
                              "description": "The result of this assertion.",
                              "enum": [
                                "pass",
                                "skip",
                                "fail",
                                "warning",
                                "error"
                              ]
                            },
                            "_result": {
                              "description": "Base definition for all elements in a resource.",
                              "additionalProperties": false
                            },
                            "message": {
                              "pattern": "^[ \\r\\n\\t\\S]+$",
                              "type": "string",
                              "description": "A string that may contain Github Flavored Markdown syntax for optional processing by a mark down presentation engine"
                            },
                            "_message": {
                              "description": "Base definition for all elements in a resource.",
                              "additionalProperties": false
                            },
                            "detail": {
                              "pattern": "^[ \\r\\n\\t\\S]+$",
                              "type": "string",
                              "description": "A sequence of Unicode characters"
                            },
                            "_detail": {
                              "description": "Base definition for all elements in a resource.",
                              "additionalProperties": false
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "additionalProperties": false
                    },
                    "type": "array"
                  }
                },
                "additionalProperties": false,
                "required": [
                  "action"
                ]
              },
              "test": {
                "description": "A test executed from the test script.",
                "items": {
                  "description": "A summary of information based on the results of executing a TestScript.",
                  "properties": {
                    "id": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "type": "array"
                    },
                    "modifierExtension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                      "type": "array"
                    },
                    "name": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "_name": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "description": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "_description": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "action": {
                      "description": "Action would contain either an operation or an assertion.",
                      "items": {
                        "description": "A summary of information based on the results of executing a TestScript.",
                        "properties": {
                          "id": {
                            "pattern": "^[ \\r\\n\\t\\S]+$",
                            "type": "string",
                            "description": "A sequence of Unicode characters"
                          },
                          "extension": {
                            "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                            "type": "array"
                          },
                          "modifierExtension": {
                            "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                            "type": "array"
                          },
                          "operation": {
                            "description": "An operation would involve a REST request to a server.",
                            "additionalProperties": false
                          },
                          "assert": {
                            "description": "The results of the assertion performed on the previous operations.",
                            "additionalProperties": false
                          }
                        },
                        "additionalProperties": false
                      },
                      "type": "array"
                    }
                  },
                  "additionalProperties": false,
                  "required": [
                    "action"
                  ]
                },
                "type": "array"
              },
              "teardown": {
                "description": "The results of the series of operations required to clean up after all the tests were executed (successfully or otherwise).",
                "properties": {
                  "id": {
                    "pattern": "^[ \\r\\n\\t\\S]+$",
                    "type": "string",
                    "description": "A sequence of Unicode characters"
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "type": "array"
                  },
                  "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                    "type": "array"
                  },
                  "action": {
                    "description": "The teardown action will only contain an operation.",
                    "items": {
                      "description": "A summary of information based on the results of executing a TestScript.",
                      "properties": {
                        "id": {
                          "pattern": "^[ \\r\\n\\t\\S]+$",
                          "type": "string",
                          "description": "A sequence of Unicode characters"
                        },
                        "extension": {
                          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                          "type": "array"
                        },
                        "modifierExtension": {
                          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                          "type": "array"
                        },
                        "operation": {
                          "description": "An operation would involve a REST request to a server.",
                          "additionalProperties": false
                        }
                      },
                      "additionalProperties": false,
                      "required": [
                        "operation"
                      ]
                    },
                    "type": "array"
                  }
                },
                "additionalProperties": false,
                "required": [
                  "action"
                ]
              }
            },
            "additionalProperties": false,
            "required": [
              "testScript",
              "resourceType"
            ]
          },
          {
            "description": "A structured set of tests against a FHIR server or client implementation to determine compliance against the FHIR specification.",
            "properties": {
              "resourceType": {
                "description": "This is a TestScript resource",
                "const": "TestScript"
              },
              "id": {
                "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                "type": "string",
                "description": "Any combination of letters, numerals, \"-\" and \".\", with a length limit of 64 characters.  (This might be an integer, an unprefixed OID, UUID or any other identifier pattern that meets these constraints.)  Ids are case-insensitive."
              },
              "meta": {
                "description": "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
                "additionalProperties": false
              },
              "implicitRules": {
                "pattern": "^\\S*$",
                "type": "string",
                "description": "String of characters used to identify a name or a resource"
              },
              "_implicitRules": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "language": {
                "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                "type": "string",
                "description": "A string which has at least one character and no leading or trailing whitespace and where there is no whitespace other than single spaces in the contents"
              },
              "_language": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "text": {
                "description": "A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it \"clinically safe\" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.",
                "additionalProperties": false
              },
              "contained": {
                "description": "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope.",
                "type": "array"
              },
              "extension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                "type": "array"
              },
              "modifierExtension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                "type": "array"
              },
              "url": {
                "pattern": "^\\S*$",
                "type": "string",
                "description": "String of characters used to identify a name or a resource"
              },
              "_url": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "identifier": {
                "description": "An identifier - identifies some entity uniquely and unambiguously. Typically this is used for business identifiers.",
                "additionalProperties": false
              },
              "version": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "_version": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "name": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "_name": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "title": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "_title": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "status": {
                "description": "The status of this test script. Enables tracking the life-cycle of the content.",
                "enum": [
                  "draft",
                  "active",
                  "retired",
                  "unknown"
                ]
              },
              "_status": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "experimental": {
                "description": "A Boolean value to indicate that this test script is authored for testing purposes (or education/evaluation/marketing) and is not intended to be used for genuine usage.",
                "pattern": "^true|false$",
                "type": "boolean"
              },
              "_experimental": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "date": {
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                "type": "string",
                "description": "A date, date-time or partial date (e.g. just year or year + month).  If hours and minutes are specified, a time zone SHALL be populated. The format is a union of the schema types gYear, gYearMonth, date and dateTime. Seconds must be provided due to schema type constraints but may be zero-filled and may be ignored.                 Dates SHALL be valid dates."
              },
              "_date": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "publisher": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "_publisher": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "contact": {
                "description": "Contact details to assist a user in finding and communicating with the publisher.",
                "type": "array"
              },
              "description": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A string that may contain Github Flavored Markdown syntax for optional processing by a mark down presentation engine"
              },
              "_description": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "useContext": {
                "description": "The content was developed with a focus and intent of supporting the contexts that are listed. These contexts may be general categories (gender, age, ...) or may be references to specific programs (insurance plans, studies, ...) and may be used to assist with indexing and searching for appropriate test script instances.",
                "type": "array"
              },
              "jurisdiction": {
                "description": "A legal or geographic region in which the test script is intended to be used.",
                "type": "array"
              },
              "purpose": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A string that may contain Github Flavored Markdown syntax for optional processing by a mark down presentation engine"
              },
              "_purpose": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "copyright": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A string that may contain Github Flavored Markdown syntax for optional processing by a mark down presentation engine"
              },
              "_copyright": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "origin": {
                "description": "An abstract server used in operations within this test script in the origin element.",
                "items": {
                  "description": "A structured set of tests against a FHIR server or client implementation to determine compliance against the FHIR specification.",
                  "properties": {
                    "id": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "type": "array"
                    },
                    "modifierExtension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                      "type": "array"
                    },
                    "index": {
                      "pattern": "^-?([0]|([1-9][0-9]*))$",
                      "type": "number",
                      "description": "A whole number"
                    },
                    "_index": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "profile": {
                      "description": "A reference to a code defined by a terminology system.",
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false,
                  "required": [
                    "profile"
                  ]
                },
                "type": "array"
              },
              "destination": {
                "description": "An abstract server used in operations within this test script in the destination element.",
                "items": {
                  "description": "A structured set of tests against a FHIR server or client implementation to determine compliance against the FHIR specification.",
                  "properties": {
                    "id": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "type": "array"
                    },
                    "modifierExtension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                      "type": "array"
                    },
                    "index": {
                      "pattern": "^-?([0]|([1-9][0-9]*))$",
                      "type": "number",
                      "description": "A whole number"
                    },
                    "_index": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "profile": {
                      "description": "A reference to a code defined by a terminology system.",
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false,
                  "required": [
                    "profile"
                  ]
                },
                "type": "array"
              },
              "metadata": {
                "description": "The required capability must exist and are assumed to function correctly on the FHIR server being tested.",
                "properties": {
                  "id": {
                    "pattern": "^[ \\r\\n\\t\\S]+$",
                    "type": "string",
                    "description": "A sequence of Unicode characters"
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "type": "array"
                  },
                  "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                    "type": "array"
                  },
                  "link": {
                    "description": "A link to the FHIR specification that this test is covering.",
                    "items": {
                      "description": "A structured set of tests against a FHIR server or client implementation to determine compliance against the FHIR specification.",
                      "properties": {
                        "id": {
                          "pattern": "^[ \\r\\n\\t\\S]+$",
                          "type": "string",
                          "description": "A sequence of Unicode characters"
                        },
                        "extension": {
                          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                          "type": "array"
                        },
                        "modifierExtension": {
                          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                          "type": "array"
                        },
                        "url": {
                          "pattern": "^\\S*$",
                          "type": "string",
                          "description": "String of characters used to identify a name or a resource"
                        },
                        "_url": {
                          "description": "Base definition for all elements in a resource.",
                          "additionalProperties": false
                        },
                        "description": {
                          "pattern": "^[ \\r\\n\\t\\S]+$",
                          "type": "string",
                          "description": "A sequence of Unicode characters"
                        },
                        "_description": {
                          "description": "Base definition for all elements in a resource.",
                          "additionalProperties": false
                        }
                      },
                      "additionalProperties": false
                    },
                    "type": "array"
                  },
                  "capability": {
                    "description": "Capabilities that must exist and are assumed to function correctly on the FHIR server being tested.",
                    "items": {
                      "description": "A structured set of tests against a FHIR server or client implementation to determine compliance against the FHIR specification.",
                      "properties": {
                        "id": {
                          "pattern": "^[ \\r\\n\\t\\S]+$",
                          "type": "string",
                          "description": "A sequence of Unicode characters"
                        },
                        "extension": {
                          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                          "type": "array"
                        },
                        "modifierExtension": {
                          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                          "type": "array"
                        },
                        "required": {
                          "description": "Whether or not the test execution will require the given capabilities of the server in order for this test script to execute.",
                          "pattern": "^true|false$",
                          "type": "boolean"
                        },
                        "_required": {
                          "description": "Base definition for all elements in a resource.",
                          "additionalProperties": false
                        },
                        "validated": {
                          "description": "Whether or not the test execution will validate the given capabilities of the server in order for this test script to execute.",
                          "pattern": "^true|false$",
                          "type": "boolean"
                        },
                        "_validated": {
                          "description": "Base definition for all elements in a resource.",
                          "additionalProperties": false
                        },
                        "description": {
                          "pattern": "^[ \\r\\n\\t\\S]+$",
                          "type": "string",
                          "description": "A sequence of Unicode characters"
                        },
                        "_description": {
                          "description": "Base definition for all elements in a resource.",
                          "additionalProperties": false
                        },
                        "origin": {
                          "description": "Which origin server these requirements apply to.",
                          "type": "array"
                        },
                        "_origin": {
                          "description": "Extensions for origin",
                          "type": "array"
                        },
                        "destination": {
                          "pattern": "^-?([0]|([1-9][0-9]*))$",
                          "type": "number",
                          "description": "A whole number"
                        },
                        "_destination": {
                          "description": "Base definition for all elements in a resource.",
                          "additionalProperties": false
                        },
                        "link": {
                          "description": "Links to the FHIR specification that describes this interaction and the resources involved in more detail.",
                          "type": "array"
                        },
                        "_link": {
                          "description": "Extensions for link",
                          "type": "array"
                        },
                        "capabilities": {
                          "pattern": "^\\S*$",
                          "type": "string",
                          "description": "A URI that is a reference to a canonical URL on a FHIR resource"
                        }
                      },
                      "additionalProperties": false,
                      "required": [
                        "capabilities"
                      ]
                    },
                    "type": "array"
                  }
                },
                "additionalProperties": false,
                "required": [
                  "capability"
                ]
              },
              "fixture": {
                "description": "Fixture in the test script - by reference (uri). All fixtures are required for the test script to execute.",
                "items": {
                  "description": "A structured set of tests against a FHIR server or client implementation to determine compliance against the FHIR specification.",
                  "properties": {
                    "id": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "type": "array"
                    },
                    "modifierExtension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                      "type": "array"
                    },
                    "autocreate": {
                      "description": "Whether or not to implicitly create the fixture during setup. If true, the fixture is automatically created on each server being tested during setup, therefore no create operation is required for this fixture in the TestScript.setup section.",
                      "pattern": "^true|false$",
                      "type": "boolean"
                    },
                    "_autocreate": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "autodelete": {
                      "description": "Whether or not to implicitly delete the fixture during teardown. If true, the fixture is automatically deleted on each server being tested during teardown, therefore no delete operation is required for this fixture in the TestScript.teardown section.",
                      "pattern": "^true|false$",
                      "type": "boolean"
                    },
                    "_autodelete": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "resource": {
                      "description": "A reference from one resource to another.",
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                },
                "type": "array"
              },
              "profile": {
                "description": "Reference to the profile to be used for validation.",
                "type": "array"
              },
              "variable": {
                "description": "Variable is set based either on element value in response body or on header field value in the response headers.",
                "items": {
                  "description": "A structured set of tests against a FHIR server or client implementation to determine compliance against the FHIR specification.",
                  "properties": {
                    "id": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "type": "array"
                    },
                    "modifierExtension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                      "type": "array"
                    },
                    "name": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "_name": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "defaultValue": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "_defaultValue": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "description": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "_description": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "expression": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "_expression": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "headerField": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "_headerField": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "hint": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "_hint": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "path": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "_path": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "sourceId": {
                      "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                      "type": "string",
                      "description": "Any combination of letters, numerals, \"-\" and \".\", with a length limit of 64 characters.  (This might be an integer, an unprefixed OID, UUID or any other identifier pattern that meets these constraints.)  Ids are case-insensitive."
                    },
                    "_sourceId": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                },
                "type": "array"
              },
              "setup": {
                "description": "A series of required setup operations before tests are executed.",
                "properties": {
                  "id": {
                    "pattern": "^[ \\r\\n\\t\\S]+$",
                    "type": "string",
                    "description": "A sequence of Unicode characters"
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "type": "array"
                  },
                  "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                    "type": "array"
                  },
                  "action": {
                    "description": "Action would contain either an operation or an assertion.",
                    "items": {
                      "description": "A structured set of tests against a FHIR server or client implementation to determine compliance against the FHIR specification.",
                      "properties": {
                        "id": {
                          "pattern": "^[ \\r\\n\\t\\S]+$",
                          "type": "string",
                          "description": "A sequence of Unicode characters"
                        },
                        "extension": {
                          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                          "type": "array"
                        },
                        "modifierExtension": {
                          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                          "type": "array"
                        },
                        "operation": {
                          "description": "The operation to perform.",
                          "properties": {
                            "id": {
                              "pattern": "^[ \\r\\n\\t\\S]+$",
                              "type": "string",
                              "description": "A sequence of Unicode characters"
                            },
                            "extension": {
                              "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                              "type": "array"
                            },
                            "modifierExtension": {
                              "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                              "type": "array"
                            },
                            "type": {
                              "description": "A reference to a code defined by a terminology system.",
                              "additionalProperties": false
                            },
                            "resource": {
                              "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                              "type": "string",
                              "description": "A string which has at least one character and no leading or trailing whitespace and where there is no whitespace other than single spaces in the contents"
                            },
                            "_resource": {
                              "description": "Base definition for all elements in a resource.",
                              "additionalProperties": false
                            },
                            "label": {
                              "pattern": "^[ \\r\\n\\t\\S]+$",
                              "type": "string",
                              "description": "A sequence of Unicode characters"
                            },
                            "_label": {
                              "description": "Base definition for all elements in a resource.",
                              "additionalProperties": false
                            },
                            "description": {
                              "pattern": "^[ \\r\\n\\t\\S]+$",
                              "type": "string",
                              "description": "A sequence of Unicode characters"
                            },
                            "_description": {
                              "description": "Base definition for all elements in a resource.",
                              "additionalProperties": false
                            },
                            "accept": {
                              "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                              "type": "string",
                              "description": "A string which has at least one character and no leading or trailing whitespace and where there is no whitespace other than single spaces in the contents"
                            },
                            "_accept": {
                              "description": "Base definition for all elements in a resource.",
                              "additionalProperties": false
                            },
                            "contentType": {
                              "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                              "type": "string",
                              "description": "A string which has at least one character and no leading or trailing whitespace and where there is no whitespace other than single spaces in the contents"
                            },
                            "_contentType": {
                              "description": "Base definition for all elements in a resource.",
                              "additionalProperties": false
                            },
                            "destination": {
                              "pattern": "^-?([0]|([1-9][0-9]*))$",
                              "type": "number",
                              "description": "A whole number"
                            },
                            "_destination": {
                              "description": "Base definition for all elements in a resource.",
                              "additionalProperties": false
                            },
                            "encodeRequestUrl": {
                              "description": "Whether or not to implicitly send the request url in encoded format. The default is true to match the standard RESTful client behavior. Set to false when communicating with a server that does not support encoded url paths.",
                              "pattern": "^true|false$",
                              "type": "boolean"
                            },
                            "_encodeRequestUrl": {
                              "description": "Base definition for all elements in a resource.",
                              "additionalProperties": false
                            },
                            "method": {
                              "description": "The HTTP method the test engine MUST use for this operation regardless of any other operation details.",
                              "enum": [
                                "delete",
                                "get",
                                "options",
                                "patch",
                                "post",
                                "put",
                                "head"
                              ]
                            },
                            "_method": {
                              "description": "Base definition for all elements in a resource.",
                              "additionalProperties": false
                            },
                            "origin": {
                              "pattern": "^-?([0]|([1-9][0-9]*))$",
                              "type": "number",
                              "description": "A whole number"
                            },
                            "_origin": {
                              "description": "Base definition for all elements in a resource.",
                              "additionalProperties": false
                            },
                            "params": {
                              "pattern": "^[ \\r\\n\\t\\S]+$",
                              "type": "string",
                              "description": "A sequence of Unicode characters"
                            },
                            "_params": {
                              "description": "Base definition for all elements in a resource.",
                              "additionalProperties": false
                            },
                            "requestHeader": {
                              "description": "Header elements would be used to set HTTP headers.",
                              "items": {
                                "description": "A structured set of tests against a FHIR server or client implementation to determine compliance against the FHIR specification.",
                                "properties": {
                                  "id": {
                                    "pattern": "^[ \\r\\n\\t\\S]+$",
                                    "type": "string",
                                    "description": "A sequence of Unicode characters"
                                  },
                                  "extension": {
                                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                                    "type": "array"
                                  },
                                  "modifierExtension": {
                                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                                    "type": "array"
                                  },
                                  "field": {
                                    "pattern": "^[ \\r\\n\\t\\S]+$",
                                    "type": "string",
                                    "description": "A sequence of Unicode characters"
                                  },
                                  "_field": {
                                    "description": "Base definition for all elements in a resource.",
                                    "additionalProperties": false
                                  },
                                  "value": {
                                    "pattern": "^[ \\r\\n\\t\\S]+$",
                                    "type": "string",
                                    "description": "A sequence of Unicode characters"
                                  },
                                  "_value": {
                                    "description": "Base definition for all elements in a resource.",
                                    "additionalProperties": false
                                  }
                                },
                                "additionalProperties": false
                              },
                              "type": "array"
                            },
                            "requestId": {
                              "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                              "type": "string",
                              "description": "Any combination of letters, numerals, \"-\" and \".\", with a length limit of 64 characters.  (This might be an integer, an unprefixed OID, UUID or any other identifier pattern that meets these constraints.)  Ids are case-insensitive."
                            },
                            "_requestId": {
                              "description": "Base definition for all elements in a resource.",
                              "additionalProperties": false
                            },
                            "responseId": {
                              "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                              "type": "string",
                              "description": "Any combination of letters, numerals, \"-\" and \".\", with a length limit of 64 characters.  (This might be an integer, an unprefixed OID, UUID or any other identifier pattern that meets these constraints.)  Ids are case-insensitive."
                            },
                            "_responseId": {
                              "description": "Base definition for all elements in a resource.",
                              "additionalProperties": false
                            },
                            "sourceId": {
                              "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                              "type": "string",
                              "description": "Any combination of letters, numerals, \"-\" and \".\", with a length limit of 64 characters.  (This might be an integer, an unprefixed OID, UUID or any other identifier pattern that meets these constraints.)  Ids are case-insensitive."
                            },
                            "_sourceId": {
                              "description": "Base definition for all elements in a resource.",
                              "additionalProperties": false
                            },
                            "targetId": {
                              "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                              "type": "string",
                              "description": "Any combination of letters, numerals, \"-\" and \".\", with a length limit of 64 characters.  (This might be an integer, an unprefixed OID, UUID or any other identifier pattern that meets these constraints.)  Ids are case-insensitive."
                            },
                            "_targetId": {
                              "description": "Base definition for all elements in a resource.",
                              "additionalProperties": false
                            },
                            "url": {
                              "pattern": "^[ \\r\\n\\t\\S]+$",
                              "type": "string",
                              "description": "A sequence of Unicode characters"
                            },
                            "_url": {
                              "description": "Base definition for all elements in a resource.",
                              "additionalProperties": false
                            }
                          },
                          "additionalProperties": false
                        },
                        "assert": {
                          "description": "Evaluates the results of previous operations to determine if the server under test behaves appropriately.",
                          "properties": {
                            "id": {
                              "pattern": "^[ \\r\\n\\t\\S]+$",
                              "type": "string",
                              "description": "A sequence of Unicode characters"
                            },
                            "extension": {
                              "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                              "type": "array"
                            },
                            "modifierExtension": {
                              "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                              "type": "array"
                            },
                            "label": {
                              "pattern": "^[ \\r\\n\\t\\S]+$",
                              "type": "string",
                              "description": "A sequence of Unicode characters"
                            },
                            "_label": {
                              "description": "Base definition for all elements in a resource.",
                              "additionalProperties": false
                            },
                            "description": {
                              "pattern": "^[ \\r\\n\\t\\S]+$",
                              "type": "string",
                              "description": "A sequence of Unicode characters"
                            },
                            "_description": {
                              "description": "Base definition for all elements in a resource.",
                              "additionalProperties": false
                            },
                            "direction": {
                              "description": "The direction to use for the assertion.",
                              "enum": [
                                "response",
                                "request"
                              ]
                            },
                            "_direction": {
                              "description": "Base definition for all elements in a resource.",
                              "additionalProperties": false
                            },
                            "compareToSourceId": {
                              "pattern": "^[ \\r\\n\\t\\S]+$",
                              "type": "string",
                              "description": "A sequence of Unicode characters"
                            },
                            "_compareToSourceId": {
                              "description": "Base definition for all elements in a resource.",
                              "additionalProperties": false
                            },
                            "compareToSourceExpression": {
                              "pattern": "^[ \\r\\n\\t\\S]+$",
                              "type": "string",
                              "description": "A sequence of Unicode characters"
                            },
                            "_compareToSourceExpression": {
                              "description": "Base definition for all elements in a resource.",
                              "additionalProperties": false
                            },
                            "compareToSourcePath": {
                              "pattern": "^[ \\r\\n\\t\\S]+$",
                              "type": "string",
                              "description": "A sequence of Unicode characters"
                            },
                            "_compareToSourcePath": {
                              "description": "Base definition for all elements in a resource.",
                              "additionalProperties": false
                            },
                            "contentType": {
                              "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                              "type": "string",
                              "description": "A string which has at least one character and no leading or trailing whitespace and where there is no whitespace other than single spaces in the contents"
                            },
                            "_contentType": {
                              "description": "Base definition for all elements in a resource.",
                              "additionalProperties": false
                            },
                            "expression": {
                              "pattern": "^[ \\r\\n\\t\\S]+$",
                              "type": "string",
                              "description": "A sequence of Unicode characters"
                            },
                            "_expression": {
                              "description": "Base definition for all elements in a resource.",
                              "additionalProperties": false
                            },
                            "headerField": {
                              "pattern": "^[ \\r\\n\\t\\S]+$",
                              "type": "string",
                              "description": "A sequence of Unicode characters"
                            },
                            "_headerField": {
                              "description": "Base definition for all elements in a resource.",
                              "additionalProperties": false
                            },
                            "minimumId": {
                              "pattern": "^[ \\r\\n\\t\\S]+$",
                              "type": "string",
                              "description": "A sequence of Unicode characters"
                            },
                            "_minimumId": {
                              "description": "Base definition for all elements in a resource.",
                              "additionalProperties": false
                            },
                            "navigationLinks": {
                              "description": "Whether or not the test execution performs validation on the bundle navigation links.",
                              "pattern": "^true|false$",
                              "type": "boolean"
                            },
                            "_navigationLinks": {
                              "description": "Base definition for all elements in a resource.",
                              "additionalProperties": false
                            },
                            "operator": {
                              "description": "The operator type defines the conditional behavior of the assert. If not defined, the default is equals.",
                              "enum": [
                                "equals",
                                "notEquals",
                                "in",
                                "notIn",
                                "greaterThan",
                                "lessThan",
                                "empty",
                                "notEmpty",
                                "contains",
                                "notContains",
                                "eval"
                              ]
                            },
                            "_operator": {
                              "description": "Base definition for all elements in a resource.",
                              "additionalProperties": false
                            },
                            "path": {
                              "pattern": "^[ \\r\\n\\t\\S]+$",
                              "type": "string",
                              "description": "A sequence of Unicode characters"
                            },
                            "_path": {
                              "description": "Base definition for all elements in a resource.",
                              "additionalProperties": false
                            },
                            "requestMethod": {
                              "description": "The request method or HTTP operation code to compare against that used by the client system under test.",
                              "enum": [
                                "delete",
                                "get",
                                "options",
                                "patch",
                                "post",
                                "put",
                                "head"
                              ]
                            },
                            "_requestMethod": {
                              "description": "Base definition for all elements in a resource.",
                              "additionalProperties": false
                            },
                            "requestURL": {
                              "pattern": "^[ \\r\\n\\t\\S]+$",
                              "type": "string",
                              "description": "A sequence of Unicode characters"
                            },
                            "_requestURL": {
                              "description": "Base definition for all elements in a resource.",
                              "additionalProperties": false
                            },
                            "resource": {
                              "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                              "type": "string",
                              "description": "A string which has at least one character and no leading or trailing whitespace and where there is no whitespace other than single spaces in the contents"
                            },
                            "_resource": {
                              "description": "Base definition for all elements in a resource.",
                              "additionalProperties": false
                            },
                            "response": {
                              "description": "okay | created | noContent | notModified | bad | forbidden | notFound | methodNotAllowed | conflict | gone | preconditionFailed | unprocessable.",
                              "enum": [
                                "okay",
                                "created",
                                "noContent",
                                "notModified",
                                "bad",
                                "forbidden",
                                "notFound",
                                "methodNotAllowed",
                                "conflict",
                                "gone",
                                "preconditionFailed",
                                "unprocessable"
                              ]
                            },
                            "_response": {
                              "description": "Base definition for all elements in a resource.",
                              "additionalProperties": false
                            },
                            "responseCode": {
                              "pattern": "^[ \\r\\n\\t\\S]+$",
                              "type": "string",
                              "description": "A sequence of Unicode characters"
                            },
                            "_responseCode": {
                              "description": "Base definition for all elements in a resource.",
                              "additionalProperties": false
                            },
                            "sourceId": {
                              "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                              "type": "string",
                              "description": "Any combination of letters, numerals, \"-\" and \".\", with a length limit of 64 characters.  (This might be an integer, an unprefixed OID, UUID or any other identifier pattern that meets these constraints.)  Ids are case-insensitive."
                            },
                            "_sourceId": {
                              "description": "Base definition for all elements in a resource.",
                              "additionalProperties": false
                            },
                            "validateProfileId": {
                              "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                              "type": "string",
                              "description": "Any combination of letters, numerals, \"-\" and \".\", with a length limit of 64 characters.  (This might be an integer, an unprefixed OID, UUID or any other identifier pattern that meets these constraints.)  Ids are case-insensitive."
                            },
                            "_validateProfileId": {
                              "description": "Base definition for all elements in a resource.",
                              "additionalProperties": false
                            },
                            "value": {
                              "pattern": "^[ \\r\\n\\t\\S]+$",
                              "type": "string",
                              "description": "A sequence of Unicode characters"
                            },
                            "_value": {
                              "description": "Base definition for all elements in a resource.",
                              "additionalProperties": false
                            },
                            "warningOnly": {
                              "description": "Whether or not the test execution will produce a warning only on error for this assert.",
                              "pattern": "^true|false$",
                              "type": "boolean"
                            },
                            "_warningOnly": {
                              "description": "Base definition for all elements in a resource.",
                              "additionalProperties": false
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "additionalProperties": false
                    },
                    "type": "array"
                  }
                },
                "additionalProperties": false,
                "required": [
                  "action"
                ]
              },
              "test": {
                "description": "A test in this script.",
                "items": {
                  "description": "A structured set of tests against a FHIR server or client implementation to determine compliance against the FHIR specification.",
                  "properties": {
                    "id": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "type": "array"
                    },
                    "modifierExtension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                      "type": "array"
                    },
                    "name": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "_name": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "description": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "_description": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "action": {
                      "description": "Action would contain either an operation or an assertion.",
                      "items": {
                        "description": "A structured set of tests against a FHIR server or client implementation to determine compliance against the FHIR specification.",
                        "properties": {
                          "id": {
                            "pattern": "^[ \\r\\n\\t\\S]+$",
                            "type": "string",
                            "description": "A sequence of Unicode characters"
                          },
                          "extension": {
                            "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                            "type": "array"
                          },
                          "modifierExtension": {
                            "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                            "type": "array"
                          },
                          "operation": {
                            "description": "An operation would involve a REST request to a server.",
                            "additionalProperties": false
                          },
                          "assert": {
                            "description": "Evaluates the results of previous operations to determine if the server under test behaves appropriately.",
                            "additionalProperties": false
                          }
                        },
                        "additionalProperties": false
                      },
                      "type": "array"
                    }
                  },
                  "additionalProperties": false,
                  "required": [
                    "action"
                  ]
                },
                "type": "array"
              },
              "teardown": {
                "description": "A series of operations required to clean up after all the tests are executed (successfully or otherwise).",
                "properties": {
                  "id": {
                    "pattern": "^[ \\r\\n\\t\\S]+$",
                    "type": "string",
                    "description": "A sequence of Unicode characters"
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "type": "array"
                  },
                  "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                    "type": "array"
                  },
                  "action": {
                    "description": "The teardown action will only contain an operation.",
                    "items": {
                      "description": "A structured set of tests against a FHIR server or client implementation to determine compliance against the FHIR specification.",
                      "properties": {
                        "id": {
                          "pattern": "^[ \\r\\n\\t\\S]+$",
                          "type": "string",
                          "description": "A sequence of Unicode characters"
                        },
                        "extension": {
                          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                          "type": "array"
                        },
                        "modifierExtension": {
                          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                          "type": "array"
                        },
                        "operation": {
                          "description": "An operation would involve a REST request to a server.",
                          "additionalProperties": false
                        }
                      },
                      "additionalProperties": false,
                      "required": [
                        "operation"
                      ]
                    },
                    "type": "array"
                  }
                },
                "additionalProperties": false,
                "required": [
                  "action"
                ]
              }
            },
            "additionalProperties": false,
            "required": [
              "resourceType"
            ]
          },
          {
            "description": "A ValueSet resource instance specifies a set of codes drawn from one or more code systems, intended for use in a particular context. Value sets link between [[[CodeSystem]]] definitions and their use in [coded elements](terminologies.html).",
            "properties": {
              "resourceType": {
                "description": "This is a ValueSet resource",
                "const": "ValueSet"
              },
              "id": {
                "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                "type": "string",
                "description": "Any combination of letters, numerals, \"-\" and \".\", with a length limit of 64 characters.  (This might be an integer, an unprefixed OID, UUID or any other identifier pattern that meets these constraints.)  Ids are case-insensitive."
              },
              "meta": {
                "description": "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
                "additionalProperties": false
              },
              "implicitRules": {
                "pattern": "^\\S*$",
                "type": "string",
                "description": "String of characters used to identify a name or a resource"
              },
              "_implicitRules": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "language": {
                "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                "type": "string",
                "description": "A string which has at least one character and no leading or trailing whitespace and where there is no whitespace other than single spaces in the contents"
              },
              "_language": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "text": {
                "description": "A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it \"clinically safe\" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.",
                "additionalProperties": false
              },
              "contained": {
                "description": "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope.",
                "type": "array"
              },
              "extension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                "type": "array"
              },
              "modifierExtension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                "type": "array"
              },
              "url": {
                "pattern": "^\\S*$",
                "type": "string",
                "description": "String of characters used to identify a name or a resource"
              },
              "_url": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "identifier": {
                "description": "A formal identifier that is used to identify this value set when it is represented in other formats, or referenced in a specification, model, design or an instance.",
                "type": "array"
              },
              "version": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "_version": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "name": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "_name": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "title": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "_title": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "status": {
                "description": "The status of this value set. Enables tracking the life-cycle of the content. The status of the value set applies to the value set definition (ValueSet.compose) and the associated ValueSet metadata. Expansions do not have a state.",
                "enum": [
                  "draft",
                  "active",
                  "retired",
                  "unknown"
                ]
              },
              "_status": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "experimental": {
                "description": "A Boolean value to indicate that this value set is authored for testing purposes (or education/evaluation/marketing) and is not intended to be used for genuine usage.",
                "pattern": "^true|false$",
                "type": "boolean"
              },
              "_experimental": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "date": {
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                "type": "string",
                "description": "A date, date-time or partial date (e.g. just year or year + month).  If hours and minutes are specified, a time zone SHALL be populated. The format is a union of the schema types gYear, gYearMonth, date and dateTime. Seconds must be provided due to schema type constraints but may be zero-filled and may be ignored.                 Dates SHALL be valid dates."
              },
              "_date": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "publisher": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "_publisher": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "contact": {
                "description": "Contact details to assist a user in finding and communicating with the publisher.",
                "type": "array"
              },
              "description": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A string that may contain Github Flavored Markdown syntax for optional processing by a mark down presentation engine"
              },
              "_description": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "useContext": {
                "description": "The content was developed with a focus and intent of supporting the contexts that are listed. These contexts may be general categories (gender, age, ...) or may be references to specific programs (insurance plans, studies, ...) and may be used to assist with indexing and searching for appropriate value set instances.",
                "type": "array"
              },
              "jurisdiction": {
                "description": "A legal or geographic region in which the value set is intended to be used.",
                "type": "array"
              },
              "immutable": {
                "description": "If this is set to 'true', then no new versions of the content logical definition can be created.  Note: Other metadata might still change.",
                "pattern": "^true|false$",
                "type": "boolean"
              },
              "_immutable": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "purpose": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A string that may contain Github Flavored Markdown syntax for optional processing by a mark down presentation engine"
              },
              "_purpose": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "copyright": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A string that may contain Github Flavored Markdown syntax for optional processing by a mark down presentation engine"
              },
              "_copyright": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "compose": {
                "description": "A set of criteria that define the contents of the value set by including or excluding codes selected from the specified code system(s) that the value set draws from. This is also known as the Content Logical Definition (CLD).",
                "properties": {
                  "id": {
                    "pattern": "^[ \\r\\n\\t\\S]+$",
                    "type": "string",
                    "description": "A sequence of Unicode characters"
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "type": "array"
                  },
                  "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                    "type": "array"
                  },
                  "lockedDate": {
                    "description": "The Locked Date is  the effective date that is used to determine the version of all referenced Code Systems and Value Set Definitions included in the compose that are not already tied to a specific version.",
                    "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                    "type": "string"
                  },
                  "_lockedDate": {
                    "description": "Base definition for all elements in a resource.",
                    "additionalProperties": false
                  },
                  "inactive": {
                    "description": "Whether inactive codes - codes that are not approved for current use - are in the value set. If inactive = true, inactive codes are to be included in the expansion, if inactive = false, the inactive codes will not be included in the expansion. If absent, the behavior is determined by the implementation, or by the applicable $expand parameters (but generally, inactive codes would be expected to be included).",
                    "pattern": "^true|false$",
                    "type": "boolean"
                  },
                  "_inactive": {
                    "description": "Base definition for all elements in a resource.",
                    "additionalProperties": false
                  },
                  "include": {
                    "description": "Include one or more codes from a code system or other value set(s).",
                    "items": {
                      "description": "A ValueSet resource instance specifies a set of codes drawn from one or more code systems, intended for use in a particular context. Value sets link between [[[CodeSystem]]] definitions and their use in [coded elements](terminologies.html).",
                      "properties": {
                        "id": {
                          "pattern": "^[ \\r\\n\\t\\S]+$",
                          "type": "string",
                          "description": "A sequence of Unicode characters"
                        },
                        "extension": {
                          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                          "type": "array"
                        },
                        "modifierExtension": {
                          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                          "type": "array"
                        },
                        "system": {
                          "pattern": "^\\S*$",
                          "type": "string",
                          "description": "String of characters used to identify a name or a resource"
                        },
                        "_system": {
                          "description": "Base definition for all elements in a resource.",
                          "additionalProperties": false
                        },
                        "version": {
                          "pattern": "^[ \\r\\n\\t\\S]+$",
                          "type": "string",
                          "description": "A sequence of Unicode characters"
                        },
                        "_version": {
                          "description": "Base definition for all elements in a resource.",
                          "additionalProperties": false
                        },
                        "concept": {
                          "description": "Specifies a concept to be included or excluded.",
                          "items": {
                            "description": "A ValueSet resource instance specifies a set of codes drawn from one or more code systems, intended for use in a particular context. Value sets link between [[[CodeSystem]]] definitions and their use in [coded elements](terminologies.html).",
                            "properties": {
                              "id": {
                                "pattern": "^[ \\r\\n\\t\\S]+$",
                                "type": "string",
                                "description": "A sequence of Unicode characters"
                              },
                              "extension": {
                                "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                                "type": "array"
                              },
                              "modifierExtension": {
                                "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                                "type": "array"
                              },
                              "code": {
                                "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                                "type": "string",
                                "description": "A string which has at least one character and no leading or trailing whitespace and where there is no whitespace other than single spaces in the contents"
                              },
                              "_code": {
                                "description": "Base definition for all elements in a resource.",
                                "additionalProperties": false
                              },
                              "display": {
                                "pattern": "^[ \\r\\n\\t\\S]+$",
                                "type": "string",
                                "description": "A sequence of Unicode characters"
                              },
                              "_display": {
                                "description": "Base definition for all elements in a resource.",
                                "additionalProperties": false
                              },
                              "designation": {
                                "description": "Additional representations for this concept when used in this value set - other languages, aliases, specialized purposes, used for particular purposes, etc.",
                                "items": {
                                  "description": "A ValueSet resource instance specifies a set of codes drawn from one or more code systems, intended for use in a particular context. Value sets link between [[[CodeSystem]]] definitions and their use in [coded elements](terminologies.html).",
                                  "properties": {
                                    "id": {
                                      "pattern": "^[ \\r\\n\\t\\S]+$",
                                      "type": "string",
                                      "description": "A sequence of Unicode characters"
                                    },
                                    "extension": {
                                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                                      "type": "array"
                                    },
                                    "modifierExtension": {
                                      "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                                      "type": "array"
                                    },
                                    "language": {
                                      "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                                      "type": "string",
                                      "description": "A string which has at least one character and no leading or trailing whitespace and where there is no whitespace other than single spaces in the contents"
                                    },
                                    "_language": {
                                      "description": "Base definition for all elements in a resource.",
                                      "additionalProperties": false
                                    },
                                    "use": {
                                      "description": "A reference to a code defined by a terminology system.",
                                      "additionalProperties": false
                                    },
                                    "value": {
                                      "pattern": "^[ \\r\\n\\t\\S]+$",
                                      "type": "string",
                                      "description": "A sequence of Unicode characters"
                                    },
                                    "_value": {
                                      "description": "Base definition for all elements in a resource.",
                                      "additionalProperties": false
                                    }
                                  },
                                  "additionalProperties": false
                                },
                                "type": "array"
                              }
                            },
                            "additionalProperties": false
                          },
                          "type": "array"
                        },
                        "filter": {
                          "description": "Select concepts by specify a matching criterion based on the properties (including relationships) defined by the system, or on filters defined by the system. If multiple filters are specified, they SHALL all be true.",
                          "items": {
                            "description": "A ValueSet resource instance specifies a set of codes drawn from one or more code systems, intended for use in a particular context. Value sets link between [[[CodeSystem]]] definitions and their use in [coded elements](terminologies.html).",
                            "properties": {
                              "id": {
                                "pattern": "^[ \\r\\n\\t\\S]+$",
                                "type": "string",
                                "description": "A sequence of Unicode characters"
                              },
                              "extension": {
                                "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                                "type": "array"
                              },
                              "modifierExtension": {
                                "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                                "type": "array"
                              },
                              "property": {
                                "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                                "type": "string",
                                "description": "A string which has at least one character and no leading or trailing whitespace and where there is no whitespace other than single spaces in the contents"
                              },
                              "_property": {
                                "description": "Base definition for all elements in a resource.",
                                "additionalProperties": false
                              },
                              "op": {
                                "description": "The kind of operation to perform as a part of the filter criteria.",
                                "enum": [
                                  "=",
                                  "is-a",
                                  "descendent-of",
                                  "is-not-a",
                                  "regex",
                                  "in",
                                  "not-in",
                                  "generalizes",
                                  "exists"
                                ]
                              },
                              "_op": {
                                "description": "Base definition for all elements in a resource.",
                                "additionalProperties": false
                              },
                              "value": {
                                "pattern": "^[ \\r\\n\\t\\S]+$",
                                "type": "string",
                                "description": "A sequence of Unicode characters"
                              },
                              "_value": {
                                "description": "Base definition for all elements in a resource.",
                                "additionalProperties": false
                              }
                            },
                            "additionalProperties": false
                          },
                          "type": "array"
                        },
                        "valueSet": {
                          "description": "Selects the concepts found in this value set (based on its value set definition). This is an absolute URI that is a reference to ValueSet.url.  If multiple value sets are specified this includes the union of the contents of all of the referenced value sets.",
                          "type": "array"
                        }
                      },
                      "additionalProperties": false
                    },
                    "type": "array"
                  },
                  "exclude": {
                    "description": "Exclude one or more codes from the value set based on code system filters and/or other value sets.",
                    "type": "array"
                  }
                },
                "additionalProperties": false,
                "required": [
                  "include"
                ]
              },
              "expansion": {
                "description": "A value set can also be \"expanded\", where the value set is turned into a simple collection of enumerated codes. This element holds the expansion, if it has been performed.",
                "properties": {
                  "id": {
                    "pattern": "^[ \\r\\n\\t\\S]+$",
                    "type": "string",
                    "description": "A sequence of Unicode characters"
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "type": "array"
                  },
                  "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                    "type": "array"
                  },
                  "identifier": {
                    "pattern": "^\\S*$",
                    "type": "string",
                    "description": "String of characters used to identify a name or a resource"
                  },
                  "_identifier": {
                    "description": "Base definition for all elements in a resource.",
                    "additionalProperties": false
                  },
                  "timestamp": {
                    "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                    "type": "string",
                    "description": "A date, date-time or partial date (e.g. just year or year + month).  If hours and minutes are specified, a time zone SHALL be populated. The format is a union of the schema types gYear, gYearMonth, date and dateTime. Seconds must be provided due to schema type constraints but may be zero-filled and may be ignored.                 Dates SHALL be valid dates."
                  },
                  "_timestamp": {
                    "description": "Base definition for all elements in a resource.",
                    "additionalProperties": false
                  },
                  "total": {
                    "pattern": "^-?([0]|([1-9][0-9]*))$",
                    "type": "number",
                    "description": "A whole number"
                  },
                  "_total": {
                    "description": "Base definition for all elements in a resource.",
                    "additionalProperties": false
                  },
                  "offset": {
                    "pattern": "^-?([0]|([1-9][0-9]*))$",
                    "type": "number",
                    "description": "A whole number"
                  },
                  "_offset": {
                    "description": "Base definition for all elements in a resource.",
                    "additionalProperties": false
                  },
                  "parameter": {
                    "description": "A parameter that controlled the expansion process. These parameters may be used by users of expanded value sets to check whether the expansion is suitable for a particular purpose, or to pick the correct expansion.",
                    "items": {
                      "description": "A ValueSet resource instance specifies a set of codes drawn from one or more code systems, intended for use in a particular context. Value sets link between [[[CodeSystem]]] definitions and their use in [coded elements](terminologies.html).",
                      "properties": {
                        "id": {
                          "pattern": "^[ \\r\\n\\t\\S]+$",
                          "type": "string",
                          "description": "A sequence of Unicode characters"
                        },
                        "extension": {
                          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                          "type": "array"
                        },
                        "modifierExtension": {
                          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                          "type": "array"
                        },
                        "name": {
                          "pattern": "^[ \\r\\n\\t\\S]+$",
                          "type": "string",
                          "description": "A sequence of Unicode characters"
                        },
                        "_name": {
                          "description": "Base definition for all elements in a resource.",
                          "additionalProperties": false
                        },
                        "valueString": {
                          "description": "The value of the parameter.",
                          "pattern": "^[ \\r\\n\\t\\S]+$",
                          "type": "string"
                        },
                        "_valueString": {
                          "description": "Base definition for all elements in a resource.",
                          "additionalProperties": false
                        },
                        "valueBoolean": {
                          "description": "The value of the parameter.",
                          "pattern": "^true|false$",
                          "type": "boolean"
                        },
                        "_valueBoolean": {
                          "description": "Base definition for all elements in a resource.",
                          "additionalProperties": false
                        },
                        "valueInteger": {
                          "description": "The value of the parameter.",
                          "pattern": "^-?([0]|([1-9][0-9]*))$",
                          "type": "number"
                        },
                        "_valueInteger": {
                          "description": "Base definition for all elements in a resource.",
                          "additionalProperties": false
                        },
                        "valueDecimal": {
                          "description": "The value of the parameter.",
                          "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                          "type": "number"
                        },
                        "_valueDecimal": {
                          "description": "Base definition for all elements in a resource.",
                          "additionalProperties": false
                        },
                        "valueUri": {
                          "description": "The value of the parameter.",
                          "pattern": "^\\S*$",
                          "type": "string"
                        },
                        "_valueUri": {
                          "description": "Base definition for all elements in a resource.",
                          "additionalProperties": false
                        },
                        "valueCode": {
                          "description": "The value of the parameter.",
                          "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                          "type": "string"
                        },
                        "_valueCode": {
                          "description": "Base definition for all elements in a resource.",
                          "additionalProperties": false
                        },
                        "valueDateTime": {
                          "description": "The value of the parameter.",
                          "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                          "type": "string"
                        },
                        "_valueDateTime": {
                          "description": "Base definition for all elements in a resource.",
                          "additionalProperties": false
                        }
                      },
                      "additionalProperties": false
                    },
                    "type": "array"
                  },
                  "contains": {
                    "description": "The codes that are contained in the value set expansion.",
                    "items": {
                      "description": "A ValueSet resource instance specifies a set of codes drawn from one or more code systems, intended for use in a particular context. Value sets link between [[[CodeSystem]]] definitions and their use in [coded elements](terminologies.html).",
                      "properties": {
                        "id": {
                          "pattern": "^[ \\r\\n\\t\\S]+$",
                          "type": "string",
                          "description": "A sequence of Unicode characters"
                        },
                        "extension": {
                          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                          "type": "array"
                        },
                        "modifierExtension": {
                          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                          "type": "array"
                        },
                        "system": {
                          "pattern": "^\\S*$",
                          "type": "string",
                          "description": "String of characters used to identify a name or a resource"
                        },
                        "_system": {
                          "description": "Base definition for all elements in a resource.",
                          "additionalProperties": false
                        },
                        "abstract": {
                          "description": "If true, this entry is included in the expansion for navigational purposes, and the user cannot select the code directly as a proper value.",
                          "pattern": "^true|false$",
                          "type": "boolean"
                        },
                        "_abstract": {
                          "description": "Base definition for all elements in a resource.",
                          "additionalProperties": false
                        },
                        "inactive": {
                          "description": "If the concept is inactive in the code system that defines it. Inactive codes are those that are no longer to be used, but are maintained by the code system for understanding legacy data. It might not be known or specified whether an concept is inactive (and it may depend on the context of use).",
                          "pattern": "^true|false$",
                          "type": "boolean"
                        },
                        "_inactive": {
                          "description": "Base definition for all elements in a resource.",
                          "additionalProperties": false
                        },
                        "version": {
                          "pattern": "^[ \\r\\n\\t\\S]+$",
                          "type": "string",
                          "description": "A sequence of Unicode characters"
                        },
                        "_version": {
                          "description": "Base definition for all elements in a resource.",
                          "additionalProperties": false
                        },
                        "code": {
                          "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                          "type": "string",
                          "description": "A string which has at least one character and no leading or trailing whitespace and where there is no whitespace other than single spaces in the contents"
                        },
                        "_code": {
                          "description": "Base definition for all elements in a resource.",
                          "additionalProperties": false
                        },
                        "display": {
                          "pattern": "^[ \\r\\n\\t\\S]+$",
                          "type": "string",
                          "description": "A sequence of Unicode characters"
                        },
                        "_display": {
                          "description": "Base definition for all elements in a resource.",
                          "additionalProperties": false
                        },
                        "designation": {
                          "description": "Additional representations for this item - other languages, aliases, specialized purposes, used for particular purposes, etc. These are relevant when the conditions of the expansion do not fix to a single correct representation.",
                          "type": "array"
                        },
                        "contains": {
                          "description": "Other codes and entries contained under this entry in the hierarchy.",
                          "type": "array"
                        }
                      },
                      "additionalProperties": false
                    },
                    "type": "array"
                  }
                },
                "additionalProperties": false
              }
            },
            "additionalProperties": false,
            "required": [
              "resourceType"
            ]
          },
          {
            "description": "Describes validation requirements, source(s), status and dates for one or more elements.",
            "properties": {
              "resourceType": {
                "description": "This is a VerificationResult resource",
                "const": "VerificationResult"
              },
              "id": {
                "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                "type": "string",
                "description": "Any combination of letters, numerals, \"-\" and \".\", with a length limit of 64 characters.  (This might be an integer, an unprefixed OID, UUID or any other identifier pattern that meets these constraints.)  Ids are case-insensitive."
              },
              "meta": {
                "description": "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
                "additionalProperties": false
              },
              "implicitRules": {
                "pattern": "^\\S*$",
                "type": "string",
                "description": "String of characters used to identify a name or a resource"
              },
              "_implicitRules": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "language": {
                "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                "type": "string",
                "description": "A string which has at least one character and no leading or trailing whitespace and where there is no whitespace other than single spaces in the contents"
              },
              "_language": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "text": {
                "description": "A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it \"clinically safe\" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.",
                "additionalProperties": false
              },
              "contained": {
                "description": "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope.",
                "type": "array"
              },
              "extension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                "type": "array"
              },
              "modifierExtension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                "type": "array"
              },
              "target": {
                "description": "A resource that was validated.",
                "type": "array"
              },
              "targetLocation": {
                "description": "The fhirpath location(s) within the resource that was validated.",
                "type": "array"
              },
              "_targetLocation": {
                "description": "Extensions for targetLocation",
                "type": "array"
              },
              "need": {
                "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                "additionalProperties": false
              },
              "status": {
                "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                "type": "string",
                "description": "A string which has at least one character and no leading or trailing whitespace and where there is no whitespace other than single spaces in the contents"
              },
              "_status": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "statusDate": {
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                "type": "string",
                "description": "A date, date-time or partial date (e.g. just year or year + month).  If hours and minutes are specified, a time zone SHALL be populated. The format is a union of the schema types gYear, gYearMonth, date and dateTime. Seconds must be provided due to schema type constraints but may be zero-filled and may be ignored.                 Dates SHALL be valid dates."
              },
              "_statusDate": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "validationType": {
                "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                "additionalProperties": false
              },
              "validationProcess": {
                "description": "The primary process by which the target is validated (edit check; value set; primary source; multiple sources; standalone; in context).",
                "type": "array"
              },
              "frequency": {
                "description": "Specifies an event that may occur multiple times. Timing schedules are used to record when things are planned, expected or requested to occur. The most common usage is in dosage instructions for medications. They are also used when planning care of various kinds, and may be used for reporting the schedule to which past regular activities were carried out.",
                "additionalProperties": false
              },
              "lastPerformed": {
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                "type": "string",
                "description": "A date, date-time or partial date (e.g. just year or year + month).  If hours and minutes are specified, a time zone SHALL be populated. The format is a union of the schema types gYear, gYearMonth, date and dateTime. Seconds must be provided due to schema type constraints but may be zero-filled and may be ignored.                 Dates SHALL be valid dates."
              },
              "_lastPerformed": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "nextScheduled": {
                "description": "The date when target is next validated, if appropriate.",
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                "type": "string"
              },
              "_nextScheduled": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "failureAction": {
                "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                "additionalProperties": false
              },
              "primarySource": {
                "description": "Information about the primary source(s) involved in validation.",
                "items": {
                  "description": "Describes validation requirements, source(s), status and dates for one or more elements.",
                  "properties": {
                    "id": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "type": "array"
                    },
                    "modifierExtension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                      "type": "array"
                    },
                    "who": {
                      "description": "A reference from one resource to another.",
                      "additionalProperties": false
                    },
                    "type": {
                      "description": "Type of primary source (License Board; Primary Education; Continuing Education; Postal Service; Relationship owner; Registration Authority; legal source; issuing source; authoritative source).",
                      "type": "array"
                    },
                    "communicationMethod": {
                      "description": "Method for communicating with the primary source (manual; API; Push).",
                      "type": "array"
                    },
                    "validationStatus": {
                      "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                      "additionalProperties": false
                    },
                    "validationDate": {
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                      "type": "string",
                      "description": "A date, date-time or partial date (e.g. just year or year + month).  If hours and minutes are specified, a time zone SHALL be populated. The format is a union of the schema types gYear, gYearMonth, date and dateTime. Seconds must be provided due to schema type constraints but may be zero-filled and may be ignored.                 Dates SHALL be valid dates."
                    },
                    "_validationDate": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "canPushUpdates": {
                      "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                      "additionalProperties": false
                    },
                    "pushTypeAvailable": {
                      "description": "Type of alerts/updates the primary source can send (specific requested changes; any changes; as defined by source).",
                      "type": "array"
                    }
                  },
                  "additionalProperties": false
                },
                "type": "array"
              },
              "attestation": {
                "description": "Information about the entity attesting to information.",
                "properties": {
                  "id": {
                    "pattern": "^[ \\r\\n\\t\\S]+$",
                    "type": "string",
                    "description": "A sequence of Unicode characters"
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "type": "array"
                  },
                  "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                    "type": "array"
                  },
                  "who": {
                    "description": "A reference from one resource to another.",
                    "additionalProperties": false
                  },
                  "onBehalfOf": {
                    "description": "A reference from one resource to another.",
                    "additionalProperties": false
                  },
                  "communicationMethod": {
                    "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                    "additionalProperties": false
                  },
                  "date": {
                    "description": "The date the information was attested to.",
                    "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                    "type": "string"
                  },
                  "_date": {
                    "description": "Base definition for all elements in a resource.",
                    "additionalProperties": false
                  },
                  "sourceIdentityCertificate": {
                    "pattern": "^[ \\r\\n\\t\\S]+$",
                    "type": "string",
                    "description": "A sequence of Unicode characters"
                  },
                  "_sourceIdentityCertificate": {
                    "description": "Base definition for all elements in a resource.",
                    "additionalProperties": false
                  },
                  "proxyIdentityCertificate": {
                    "pattern": "^[ \\r\\n\\t\\S]+$",
                    "type": "string",
                    "description": "A sequence of Unicode characters"
                  },
                  "_proxyIdentityCertificate": {
                    "description": "Base definition for all elements in a resource.",
                    "additionalProperties": false
                  },
                  "proxySignature": {
                    "description": "A signature along with supporting context. The signature may be a digital signature that is cryptographic in nature, or some other signature acceptable to the domain. This other signature may be as simple as a graphical image representing a hand-written signature, or a signature ceremony Different signature approaches have different utilities.",
                    "additionalProperties": false
                  },
                  "sourceSignature": {
                    "description": "A signature along with supporting context. The signature may be a digital signature that is cryptographic in nature, or some other signature acceptable to the domain. This other signature may be as simple as a graphical image representing a hand-written signature, or a signature ceremony Different signature approaches have different utilities.",
                    "additionalProperties": false
                  }
                },
                "additionalProperties": false
              },
              "validator": {
                "description": "Information about the entity validating information.",
                "items": {
                  "description": "Describes validation requirements, source(s), status and dates for one or more elements.",
                  "properties": {
                    "id": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "type": "array"
                    },
                    "modifierExtension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                      "type": "array"
                    },
                    "organization": {
                      "description": "A reference from one resource to another.",
                      "additionalProperties": false
                    },
                    "identityCertificate": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "_identityCertificate": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "attestationSignature": {
                      "description": "A signature along with supporting context. The signature may be a digital signature that is cryptographic in nature, or some other signature acceptable to the domain. This other signature may be as simple as a graphical image representing a hand-written signature, or a signature ceremony Different signature approaches have different utilities.",
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false,
                  "required": [
                    "organization"
                  ]
                },
                "type": "array"
              }
            },
            "additionalProperties": false,
            "required": [
              "resourceType"
            ]
          },
          {
            "description": "An authorization for the provision of glasses and/or contact lenses to a patient.",
            "properties": {
              "resourceType": {
                "description": "This is a VisionPrescription resource",
                "const": "VisionPrescription"
              },
              "id": {
                "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                "type": "string",
                "description": "Any combination of letters, numerals, \"-\" and \".\", with a length limit of 64 characters.  (This might be an integer, an unprefixed OID, UUID or any other identifier pattern that meets these constraints.)  Ids are case-insensitive."
              },
              "meta": {
                "description": "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
                "additionalProperties": false
              },
              "implicitRules": {
                "pattern": "^\\S*$",
                "type": "string",
                "description": "String of characters used to identify a name or a resource"
              },
              "_implicitRules": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "language": {
                "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                "type": "string",
                "description": "A string which has at least one character and no leading or trailing whitespace and where there is no whitespace other than single spaces in the contents"
              },
              "_language": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "text": {
                "description": "A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it \"clinically safe\" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.",
                "additionalProperties": false
              },
              "contained": {
                "description": "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope.",
                "type": "array"
              },
              "extension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                "type": "array"
              },
              "modifierExtension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                "type": "array"
              },
              "identifier": {
                "description": "A unique identifier assigned to this vision prescription.",
                "type": "array"
              },
              "status": {
                "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                "type": "string",
                "description": "A string which has at least one character and no leading or trailing whitespace and where there is no whitespace other than single spaces in the contents"
              },
              "_status": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "created": {
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                "type": "string",
                "description": "A date, date-time or partial date (e.g. just year or year + month).  If hours and minutes are specified, a time zone SHALL be populated. The format is a union of the schema types gYear, gYearMonth, date and dateTime. Seconds must be provided due to schema type constraints but may be zero-filled and may be ignored.                 Dates SHALL be valid dates."
              },
              "_created": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "patient": {
                "description": "A reference from one resource to another.",
                "additionalProperties": false
              },
              "encounter": {
                "description": "A reference from one resource to another.",
                "additionalProperties": false
              },
              "dateWritten": {
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                "type": "string",
                "description": "A date, date-time or partial date (e.g. just year or year + month).  If hours and minutes are specified, a time zone SHALL be populated. The format is a union of the schema types gYear, gYearMonth, date and dateTime. Seconds must be provided due to schema type constraints but may be zero-filled and may be ignored.                 Dates SHALL be valid dates."
              },
              "_dateWritten": {
                "description": "Base definition for all elements in a resource.",
                "additionalProperties": false
              },
              "prescriber": {
                "description": "A reference from one resource to another.",
                "additionalProperties": false
              },
              "lensSpecification": {
                "description": "Contain the details of  the individual lens specifications and serves as the authorization for the fullfillment by certified professionals.",
                "items": {
                  "description": "An authorization for the provision of glasses and/or contact lenses to a patient.",
                  "properties": {
                    "id": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "type": "array"
                    },
                    "modifierExtension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                      "type": "array"
                    },
                    "product": {
                      "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                      "additionalProperties": false
                    },
                    "eye": {
                      "description": "The eye for which the lens specification applies.",
                      "enum": [
                        "right",
                        "left"
                      ]
                    },
                    "_eye": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "sphere": {
                      "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                      "type": "number",
                      "description": "A rational number with implicit precision"
                    },
                    "_sphere": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "cylinder": {
                      "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                      "type": "number",
                      "description": "A rational number with implicit precision"
                    },
                    "_cylinder": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "axis": {
                      "pattern": "^-?([0]|([1-9][0-9]*))$",
                      "type": "number",
                      "description": "A whole number"
                    },
                    "_axis": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "prism": {
                      "description": "Allows for adjustment on two axis.",
                      "items": {
                        "description": "An authorization for the provision of glasses and/or contact lenses to a patient.",
                        "properties": {
                          "id": {
                            "pattern": "^[ \\r\\n\\t\\S]+$",
                            "type": "string",
                            "description": "A sequence of Unicode characters"
                          },
                          "extension": {
                            "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                            "type": "array"
                          },
                          "modifierExtension": {
                            "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                            "type": "array"
                          },
                          "amount": {
                            "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                            "type": "number",
                            "description": "A rational number with implicit precision"
                          },
                          "_amount": {
                            "description": "Base definition for all elements in a resource.",
                            "additionalProperties": false
                          },
                          "base": {
                            "description": "The relative base, or reference lens edge, for the prism.",
                            "enum": [
                              "up",
                              "down",
                              "in",
                              "out"
                            ]
                          },
                          "_base": {
                            "description": "Base definition for all elements in a resource.",
                            "additionalProperties": false
                          }
                        },
                        "additionalProperties": false
                      },
                      "type": "array"
                    },
                    "add": {
                      "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                      "type": "number",
                      "description": "A rational number with implicit precision"
                    },
                    "_add": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "power": {
                      "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                      "type": "number",
                      "description": "A rational number with implicit precision"
                    },
                    "_power": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "backCurve": {
                      "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                      "type": "number",
                      "description": "A rational number with implicit precision"
                    },
                    "_backCurve": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "diameter": {
                      "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                      "type": "number",
                      "description": "A rational number with implicit precision"
                    },
                    "_diameter": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "duration": {
                      "description": "A measured amount (or an amount that can potentially be measured). Note that measured amounts include amounts that are not precisely quantified, including amounts involving arbitrary units and floating currencies.",
                      "additionalProperties": false
                    },
                    "color": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "_color": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "brand": {
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string",
                      "description": "A sequence of Unicode characters"
                    },
                    "_brand": {
                      "description": "Base definition for all elements in a resource.",
                      "additionalProperties": false
                    },
                    "note": {
                      "description": "Notes for special requirements such as coatings and lens materials.",
                      "type": "array"
                    }
                  },
                  "additionalProperties": false,
                  "required": [
                    "product"
                  ]
                },
                "type": "array"
              }
            },
            "additionalProperties": false,
            "required": [
              "prescriber",
              "patient",
              "lensSpecification",
              "resourceType"
            ]
          }
        ]
      },
      "type": "array"
    },
    "extension": {
      "description": "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
      "type": "array"
    },
    "modifierExtension": {
      "description": "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
      "type": "array"
    },
    "identifier": {
      "description": "Business identifiers assigned to this clinical impression by the performer or other systems which remain constant as the resource is updated and propagates from server to server.",
      "type": "array"
    },
    "status": {
      "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
      "type": "string",
      "description": "A string which has at least one character and no leading or trailing whitespace and where there is no whitespace other than single spaces in the contents"
    },
    "_status": {
      "description": "Base definition for all elements in a resource.",
      "additionalProperties": false
    },
    "statusReason": {
      "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
      "additionalProperties": false
    },
    "code": {
      "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
      "additionalProperties": false
    },
    "description": {
      "pattern": "^[ \\r\\n\\t\\S]+$",
      "type": "string",
      "description": "A sequence of Unicode characters"
    },
    "_description": {
      "description": "Base definition for all elements in a resource.",
      "additionalProperties": false
    },
    "subject": {
      "description": "A reference from one resource to another.",
      "additionalProperties": false
    },
    "encounter": {
      "description": "A reference from one resource to another.",
      "additionalProperties": false
    },
    "effectiveDateTime": {
      "description": "The point in time or period over which the subject was assessed.",
      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
      "type": "string"
    },
    "_effectiveDateTime": {
      "description": "Base definition for all elements in a resource.",
      "additionalProperties": false
    },
    "effectivePeriod": {
      "description": "A time period defined by a start and end date and optionally time.",
      "additionalProperties": false
    },
    "date": {
      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
      "type": "string",
      "description": "A date, date-time or partial date (e.g. just year or year + month).  If hours and minutes are specified, a time zone SHALL be populated. The format is a union of the schema types gYear, gYearMonth, date and dateTime. Seconds must be provided due to schema type constraints but may be zero-filled and may be ignored.                 Dates SHALL be valid dates."
    },
    "_date": {
      "description": "Base definition for all elements in a resource.",
      "additionalProperties": false
    },
    "assessor": {
      "description": "A reference from one resource to another.",
      "additionalProperties": false
    },
    "previous": {
      "description": "A reference from one resource to another.",
      "additionalProperties": false
    },
    "problem": {
      "description": "A list of the relevant problems/conditions for a patient.",
      "type": "array"
    },
    "investigation": {
      "description": "One or more sets of investigations (signs, symptoms, etc.). The actual grouping of investigations varies greatly depending on the type and context of the assessment. These investigations may include data generated during the assessment process, or data previously generated and recorded that is pertinent to the outcomes.",
      "items": {
        "description": "A record of a clinical assessment performed to determine what problem(s) may affect the patient and before planning the treatments or management strategies that are best to manage a patient's condition. Assessments are often 1:1 with a clinical consultation / encounter,  but this varies greatly depending on the clinical workflow. This resource is called \"ClinicalImpression\" rather than \"ClinicalAssessment\" to avoid confusion with the recording of assessment tools such as Apgar score.",
        "properties": {
          "id": {
            "pattern": "^[ \\r\\n\\t\\S]+$",
            "type": "string",
            "description": "A sequence of Unicode characters"
          },
          "extension": {
            "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            "type": "array"
          },
          "modifierExtension": {
            "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            "type": "array"
          },
          "code": {
            "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
            "additionalProperties": false
          },
          "item": {
            "description": "A record of a specific investigation that was undertaken.",
            "type": "array"
          }
        },
        "additionalProperties": false,
        "required": [
          "code"
        ]
      },
      "type": "array"
    },
    "protocol": {
      "description": "Reference to a specific published clinical protocol that was followed during this assessment, and/or that provides evidence in support of the diagnosis.",
      "type": "array"
    },
    "_protocol": {
      "description": "Extensions for protocol",
      "type": "array"
    },
    "summary": {
      "pattern": "^[ \\r\\n\\t\\S]+$",
      "type": "string",
      "description": "A sequence of Unicode characters"
    },
    "_summary": {
      "description": "Base definition for all elements in a resource.",
      "additionalProperties": false
    },
    "finding": {
      "description": "Specific findings or diagnoses that were considered likely or relevant to ongoing treatment.",
      "items": {
        "description": "A record of a clinical assessment performed to determine what problem(s) may affect the patient and before planning the treatments or management strategies that are best to manage a patient's condition. Assessments are often 1:1 with a clinical consultation / encounter,  but this varies greatly depending on the clinical workflow. This resource is called \"ClinicalImpression\" rather than \"ClinicalAssessment\" to avoid confusion with the recording of assessment tools such as Apgar score.",
        "properties": {
          "id": {
            "pattern": "^[ \\r\\n\\t\\S]+$",
            "type": "string",
            "description": "A sequence of Unicode characters"
          },
          "extension": {
            "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            "type": "array"
          },
          "modifierExtension": {
            "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            "type": "array"
          },
          "itemCodeableConcept": {
            "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
            "additionalProperties": false
          },
          "itemReference": {
            "description": "A reference from one resource to another.",
            "additionalProperties": false
          },
          "basis": {
            "pattern": "^[ \\r\\n\\t\\S]+$",
            "type": "string",
            "description": "A sequence of Unicode characters"
          },
          "_basis": {
            "description": "Base definition for all elements in a resource.",
            "additionalProperties": false
          }
        },
        "additionalProperties": false
      },
      "type": "array"
    },
    "prognosisCodeableConcept": {
      "description": "Estimate of likely outcome.",
      "type": "array"
    },
    "prognosisReference": {
      "description": "RiskAssessment expressing likely outcome.",
      "type": "array"
    },
    "supportingInfo": {
      "description": "Information supporting the clinical impression.",
      "type": "array"
    },
    "note": {
      "description": "Commentary about the impression, typically recorded after the impression itself was made, though supplemental notes by the original author could also appear.",
      "type": "array"
    }
  },
  "additionalProperties": false,
  "required": [
    "subject",
    "resourceType"
  ]
}