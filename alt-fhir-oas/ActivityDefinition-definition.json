{
  "allOf": [
    {
      "allOf": [
        {
          "type": "object",
          "discriminator": "resourceType",
          "properties": {
            "resourceType": {
              "type": "string",
              "enum": [
                "Account",
                "ActivityDefinition",
                "AdverseEvent",
                "AllergyIntolerance",
                "Appointment",
                "AppointmentResponse",
                "AuditEvent",
                "Basic",
                "Binary",
                "BiologicallyDerivedProduct",
                "BodyStructure",
                "Bundle",
                "CapabilityStatement",
                "CarePlan",
                "CareTeam",
                "CatalogEntry",
                "ChargeItem",
                "ChargeItemDefinition",
                "Claim",
                "ClaimResponse",
                "ClinicalImpression",
                "CodeSystem",
                "Communication",
                "CommunicationRequest",
                "CompartmentDefinition",
                "Composition",
                "ConceptMap",
                "Condition",
                "Consent",
                "Contract",
                "Coverage",
                "CoverageEligibilityRequest",
                "CoverageEligibilityResponse",
                "DetectedIssue",
                "Device",
                "DeviceDefinition",
                "DeviceMetric",
                "DeviceRequest",
                "DeviceUseStatement",
                "DiagnosticReport",
                "DocumentManifest",
                "DocumentReference",
                "DomainResource",
                "EffectEvidenceSynthesis",
                "Encounter",
                "Endpoint",
                "EnrollmentRequest",
                "EnrollmentResponse",
                "EpisodeOfCare",
                "EventDefinition",
                "Evidence",
                "EvidenceVariable",
                "ExampleScenario",
                "ExplanationOfBenefit",
                "FamilyMemberHistory",
                "Flag",
                "Goal",
                "GraphDefinition",
                "Group",
                "GuidanceResponse",
                "HealthcareService",
                "ImagingStudy",
                "Immunization",
                "ImmunizationEvaluation",
                "ImmunizationRecommendation",
                "ImplementationGuide",
                "InsurancePlan",
                "Invoice",
                "Library",
                "Linkage",
                "List",
                "Location",
                "Measure",
                "MeasureReport",
                "Media",
                "Medication",
                "MedicationAdministration",
                "MedicationDispense",
                "MedicationKnowledge",
                "MedicationRequest",
                "MedicationStatement",
                "MedicinalProduct",
                "MedicinalProductAuthorization",
                "MedicinalProductContraindication",
                "MedicinalProductIndication",
                "MedicinalProductIngredient",
                "MedicinalProductInteraction",
                "MedicinalProductManufactured",
                "MedicinalProductPackaged",
                "MedicinalProductPharmaceutical",
                "MedicinalProductUndesirableEffect",
                "MessageDefinition",
                "MessageHeader",
                "MolecularSequence",
                "NamingSystem",
                "NutritionOrder",
                "Observation",
                "ObservationDefinition",
                "OperationDefinition",
                "OperationOutcome",
                "Organization",
                "OrganizationAffiliation",
                "Parameters",
                "Patient",
                "PaymentNotice",
                "PaymentReconciliation",
                "Person",
                "PlanDefinition",
                "Practitioner",
                "PractitionerRole",
                "Procedure",
                "Provenance",
                "Questionnaire",
                "QuestionnaireResponse",
                "RelatedPerson",
                "RequestGroup",
                "ResearchDefinition",
                "ResearchElementDefinition",
                "ResearchStudy",
                "ResearchSubject",
                "Resource",
                "RiskAssessment",
                "RiskEvidenceSynthesis",
                "Schedule",
                "SearchParameter",
                "ServiceRequest",
                "Slot",
                "Specimen",
                "SpecimenDefinition",
                "StructureDefinition",
                "StructureMap",
                "Subscription",
                "Substance",
                "SubstanceNucleicAcid",
                "SubstancePolymer",
                "SubstanceProtein",
                "SubstanceReferenceInformation",
                "SubstanceSourceMaterial",
                "SubstanceSpecification",
                "SupplyDelivery",
                "SupplyRequest",
                "Task",
                "TerminologyCapabilities",
                "TestReport",
                "TestScript",
                "ValueSet",
                "VerificationResult",
                "VisionPrescription"
              ]
            },
            "id": {
              "type": "string",
              "pattern": "[A-Za-z0-9\\-\\.]{1,64}",
              "description": "The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes."
            },
            "meta": {
              "description": "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
              "allOf": [
                {
                  "type": "object",
                  "properties": {
                    "versionId": {
                      "type": "string",
                      "pattern": "[A-Za-z0-9\\-\\.]{1,64}",
                      "description": "The version specific identifier, as it appears in the version portion of the URL. This value changes when the resource is created, updated, or deleted."
                    },
                    "lastUpdated": {
                      "type": "string",
                      "pattern": "([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))",
                      "description": "When the resource last changed &ndash; e.g. when the version changed."
                    },
                    "source": {
                      "type": "string",
                      "pattern": "\\S*",
                      "description": "A uri that identifies the source system of the resource. This provides a minimal amount of [Provenance](provenance.html#) information that can be used to track or differentiate the source of information in the resource. The source may identify another FHIR server, document, message, database, etc."
                    },
                    "profile": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "pattern": "\\S*",
                        "description": "A list of profiles (references to [StructureDefinition](structuredefinition.html#) resources) that this resource claims to conform to. The URL is a reference to [StructureDefinition.url](structuredefinition&ndash;definitions.html#StructureDefinition.url)."
                      }
                    },
                    "security": {
                      "type": "array",
                      "items": {
                        "description": "Security labels applied to this resource. These tags connect specific resources to the overall security policy and infrastructure.",
                        "allOf": [
                          {
                            "type": "object",
                            "properties": {
                              "system": {
                                "type": "string",
                                "pattern": "\\S*",
                                "description": "The identification of the code system that defines the meaning of the symbol in the code."
                              },
                              "version": {
                                "type": "string",
                                "pattern": "[ \\r\\n\\t\\S]+",
                                "description": "The version of the code system which was used when choosing this code. Note that a well&ndash;maintained code system does not need the version reported, because the meaning of codes is consistent across versions. However this cannot consistently be assured, and when the meaning is not guaranteed to be consistent, the version SHOULD be exchanged."
                              },
                              "code": {
                                "type": "string",
                                "pattern": "[^\\s]+(\\s[^\\s]+)*",
                                "description": "A symbol in syntax defined by the system. The symbol may be a predefined code or an expression in a syntax defined by the coding system (e.g. post&ndash;coordination)."
                              },
                              "display": {
                                "type": "string",
                                "pattern": "[ \\r\\n\\t\\S]+",
                                "description": "A representation of the meaning of the code in the system, following the rules of the system."
                              },
                              "userSelected": {
                                "type": "boolean",
                                "description": "Indicates that this coding was chosen by a user directly &ndash; e.g. off a pick list of available items (codes or displays)."
                              }
                            }
                          }
                        ]
                      }
                    },
                    "tag": {
                      "type": "array",
                      "items": {
                        "description": "Tags applied to this resource. Tags are intended to be used to identify and relate resources to process and workflow, and applications are not required to consider the tags when interpreting the meaning of a resource.",
                        "allOf": [
                          {
                            "type": "object",
                            "properties": {
                              "system": {
                                "type": "string",
                                "pattern": "\\S*",
                                "description": "The identification of the code system that defines the meaning of the symbol in the code."
                              },
                              "version": {
                                "type": "string",
                                "pattern": "[ \\r\\n\\t\\S]+",
                                "description": "The version of the code system which was used when choosing this code. Note that a well&ndash;maintained code system does not need the version reported, because the meaning of codes is consistent across versions. However this cannot consistently be assured, and when the meaning is not guaranteed to be consistent, the version SHOULD be exchanged."
                              },
                              "code": {
                                "type": "string",
                                "pattern": "[^\\s]+(\\s[^\\s]+)*",
                                "description": "A symbol in syntax defined by the system. The symbol may be a predefined code or an expression in a syntax defined by the coding system (e.g. post&ndash;coordination)."
                              },
                              "display": {
                                "type": "string",
                                "pattern": "[ \\r\\n\\t\\S]+",
                                "description": "A representation of the meaning of the code in the system, following the rules of the system."
                              },
                              "userSelected": {
                                "type": "boolean",
                                "description": "Indicates that this coding was chosen by a user directly &ndash; e.g. off a pick list of available items (codes or displays)."
                              }
                            }
                          }
                        ]
                      }
                    }
                  }
                }
              ]
            },
            "implicitRules": {
              "type": "string",
              "pattern": "\\S*",
              "description": "A reference to a set of rules that were followed when the resource was constructed, and which must be understood when processing the content. Often, this is a reference to an implementation guide that defines the special rules along with other profiles etc."
            },
            "language": {
              "type": "string",
              "pattern": "[^\\s]+(\\s[^\\s]+)*",
              "description": "The base language in which the resource is written."
            }
          },
          "required": [
            "resourceType"
          ]
        },
        {
          "type": "object",
          "properties": {
            "text": {
              "description": "A human&ndash;readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it \"clinically safe\" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.",
              "allOf": [
                {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "enum": [
                        "generated",
                        "extensions",
                        "additional",
                        "empty"
                      ],
                      "description": "The status of the narrative &ndash; whether it's entirely generated (from just the defined data or the extensions too), or whether a human authored it and it may contain additional data."
                    },
                    "div": {
                      "type": "string",
                      "description": "The actual narrative content, a stripped down version of XHTML."
                    }
                  },
                  "required": [
                    "status",
                    "div"
                  ]
                }
              ]
            },
            "contained": {
              "type": "array",
              "items": {
                "type": "object",
                "discriminator": "resourceType",
                "properties": {
                  "resourceType": {
                    "type": "string",
                    "enum": [
                      "Account",
                      "ActivityDefinition",
                      "AdverseEvent",
                      "AllergyIntolerance",
                      "Appointment",
                      "AppointmentResponse",
                      "AuditEvent",
                      "Basic",
                      "Binary",
                      "BiologicallyDerivedProduct",
                      "BodyStructure",
                      "Bundle",
                      "CapabilityStatement",
                      "CarePlan",
                      "CareTeam",
                      "CatalogEntry",
                      "ChargeItem",
                      "ChargeItemDefinition",
                      "Claim",
                      "ClaimResponse",
                      "ClinicalImpression",
                      "CodeSystem",
                      "Communication",
                      "CommunicationRequest",
                      "CompartmentDefinition",
                      "Composition",
                      "ConceptMap",
                      "Condition",
                      "Consent",
                      "Contract",
                      "Coverage",
                      "CoverageEligibilityRequest",
                      "CoverageEligibilityResponse",
                      "DetectedIssue",
                      "Device",
                      "DeviceDefinition",
                      "DeviceMetric",
                      "DeviceRequest",
                      "DeviceUseStatement",
                      "DiagnosticReport",
                      "DocumentManifest",
                      "DocumentReference",
                      "DomainResource",
                      "EffectEvidenceSynthesis",
                      "Encounter",
                      "Endpoint",
                      "EnrollmentRequest",
                      "EnrollmentResponse",
                      "EpisodeOfCare",
                      "EventDefinition",
                      "Evidence",
                      "EvidenceVariable",
                      "ExampleScenario",
                      "ExplanationOfBenefit",
                      "FamilyMemberHistory",
                      "Flag",
                      "Goal",
                      "GraphDefinition",
                      "Group",
                      "GuidanceResponse",
                      "HealthcareService",
                      "ImagingStudy",
                      "Immunization",
                      "ImmunizationEvaluation",
                      "ImmunizationRecommendation",
                      "ImplementationGuide",
                      "InsurancePlan",
                      "Invoice",
                      "Library",
                      "Linkage",
                      "List",
                      "Location",
                      "Measure",
                      "MeasureReport",
                      "Media",
                      "Medication",
                      "MedicationAdministration",
                      "MedicationDispense",
                      "MedicationKnowledge",
                      "MedicationRequest",
                      "MedicationStatement",
                      "MedicinalProduct",
                      "MedicinalProductAuthorization",
                      "MedicinalProductContraindication",
                      "MedicinalProductIndication",
                      "MedicinalProductIngredient",
                      "MedicinalProductInteraction",
                      "MedicinalProductManufactured",
                      "MedicinalProductPackaged",
                      "MedicinalProductPharmaceutical",
                      "MedicinalProductUndesirableEffect",
                      "MessageDefinition",
                      "MessageHeader",
                      "MolecularSequence",
                      "NamingSystem",
                      "NutritionOrder",
                      "Observation",
                      "ObservationDefinition",
                      "OperationDefinition",
                      "OperationOutcome",
                      "Organization",
                      "OrganizationAffiliation",
                      "Parameters",
                      "Patient",
                      "PaymentNotice",
                      "PaymentReconciliation",
                      "Person",
                      "PlanDefinition",
                      "Practitioner",
                      "PractitionerRole",
                      "Procedure",
                      "Provenance",
                      "Questionnaire",
                      "QuestionnaireResponse",
                      "RelatedPerson",
                      "RequestGroup",
                      "ResearchDefinition",
                      "ResearchElementDefinition",
                      "ResearchStudy",
                      "ResearchSubject",
                      "Resource",
                      "RiskAssessment",
                      "RiskEvidenceSynthesis",
                      "Schedule",
                      "SearchParameter",
                      "ServiceRequest",
                      "Slot",
                      "Specimen",
                      "SpecimenDefinition",
                      "StructureDefinition",
                      "StructureMap",
                      "Subscription",
                      "Substance",
                      "SubstanceNucleicAcid",
                      "SubstancePolymer",
                      "SubstanceProtein",
                      "SubstanceReferenceInformation",
                      "SubstanceSourceMaterial",
                      "SubstanceSpecification",
                      "SupplyDelivery",
                      "SupplyRequest",
                      "Task",
                      "TerminologyCapabilities",
                      "TestReport",
                      "TestScript",
                      "ValueSet",
                      "VerificationResult",
                      "VisionPrescription"
                    ]
                  },
                  "id": {
                    "type": "string",
                    "pattern": "[A-Za-z0-9\\-\\.]{1,64}",
                    "description": "The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes."
                  },
                  "meta": {
                    "description": "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
                    "allOf": [
                      {
                        "type": "object",
                        "properties": {
                          "versionId": {
                            "type": "string",
                            "pattern": "[A-Za-z0-9\\-\\.]{1,64}",
                            "description": "The version specific identifier, as it appears in the version portion of the URL. This value changes when the resource is created, updated, or deleted."
                          },
                          "lastUpdated": {
                            "type": "string",
                            "pattern": "([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))",
                            "description": "When the resource last changed &ndash; e.g. when the version changed."
                          },
                          "source": {
                            "type": "string",
                            "pattern": "\\S*",
                            "description": "A uri that identifies the source system of the resource. This provides a minimal amount of [Provenance](provenance.html#) information that can be used to track or differentiate the source of information in the resource. The source may identify another FHIR server, document, message, database, etc."
                          },
                          "profile": {
                            "type": "array",
                            "items": {
                              "type": "string",
                              "pattern": "\\S*",
                              "description": "A list of profiles (references to [StructureDefinition](structuredefinition.html#) resources) that this resource claims to conform to. The URL is a reference to [StructureDefinition.url](structuredefinition&ndash;definitions.html#StructureDefinition.url)."
                            }
                          },
                          "security": {
                            "type": "array",
                            "items": {
                              "description": "Security labels applied to this resource. These tags connect specific resources to the overall security policy and infrastructure.",
                              "allOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "system": {
                                      "type": "string",
                                      "pattern": "\\S*",
                                      "description": "The identification of the code system that defines the meaning of the symbol in the code."
                                    },
                                    "version": {
                                      "type": "string",
                                      "pattern": "[ \\r\\n\\t\\S]+",
                                      "description": "The version of the code system which was used when choosing this code. Note that a well&ndash;maintained code system does not need the version reported, because the meaning of codes is consistent across versions. However this cannot consistently be assured, and when the meaning is not guaranteed to be consistent, the version SHOULD be exchanged."
                                    },
                                    "code": {
                                      "type": "string",
                                      "pattern": "[^\\s]+(\\s[^\\s]+)*",
                                      "description": "A symbol in syntax defined by the system. The symbol may be a predefined code or an expression in a syntax defined by the coding system (e.g. post&ndash;coordination)."
                                    },
                                    "display": {
                                      "type": "string",
                                      "pattern": "[ \\r\\n\\t\\S]+",
                                      "description": "A representation of the meaning of the code in the system, following the rules of the system."
                                    },
                                    "userSelected": {
                                      "type": "boolean",
                                      "description": "Indicates that this coding was chosen by a user directly &ndash; e.g. off a pick list of available items (codes or displays)."
                                    }
                                  }
                                }
                              ]
                            }
                          },
                          "tag": {
                            "type": "array",
                            "items": {
                              "description": "Tags applied to this resource. Tags are intended to be used to identify and relate resources to process and workflow, and applications are not required to consider the tags when interpreting the meaning of a resource.",
                              "allOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "system": {
                                      "type": "string",
                                      "pattern": "\\S*",
                                      "description": "The identification of the code system that defines the meaning of the symbol in the code."
                                    },
                                    "version": {
                                      "type": "string",
                                      "pattern": "[ \\r\\n\\t\\S]+",
                                      "description": "The version of the code system which was used when choosing this code. Note that a well&ndash;maintained code system does not need the version reported, because the meaning of codes is consistent across versions. However this cannot consistently be assured, and when the meaning is not guaranteed to be consistent, the version SHOULD be exchanged."
                                    },
                                    "code": {
                                      "type": "string",
                                      "pattern": "[^\\s]+(\\s[^\\s]+)*",
                                      "description": "A symbol in syntax defined by the system. The symbol may be a predefined code or an expression in a syntax defined by the coding system (e.g. post&ndash;coordination)."
                                    },
                                    "display": {
                                      "type": "string",
                                      "pattern": "[ \\r\\n\\t\\S]+",
                                      "description": "A representation of the meaning of the code in the system, following the rules of the system."
                                    },
                                    "userSelected": {
                                      "type": "boolean",
                                      "description": "Indicates that this coding was chosen by a user directly &ndash; e.g. off a pick list of available items (codes or displays)."
                                    }
                                  }
                                }
                              ]
                            }
                          }
                        }
                      }
                    ]
                  },
                  "implicitRules": {
                    "type": "string",
                    "pattern": "\\S*",
                    "description": "A reference to a set of rules that were followed when the resource was constructed, and which must be understood when processing the content. Often, this is a reference to an implementation guide that defines the special rules along with other profiles etc."
                  },
                  "language": {
                    "type": "string",
                    "pattern": "[^\\s]+(\\s[^\\s]+)*",
                    "description": "The base language in which the resource is written."
                  }
                },
                "required": [
                  "resourceType"
                ],
                "description": "These resources do not have an independent existence apart from the resource that contains them &ndash; they cannot be identified independently, and nor can they have their own independent transaction scope."
              }
            },
            "extension": {
              "type": "array",
              "items": {
                "description": "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                "allOf": [
                  {
                    "type": "object",
                    "additionalProperties": true
                  }
                ]
              }
            },
            "modifierExtension": {
              "type": "array",
              "items": {
                "description": "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                "allOf": [
                  {
                    "type": "object",
                    "additionalProperties": true
                  }
                ]
              }
            }
          }
        }
      ]
    },
    {
      "type": "object",
      "properties": {
        "url": {
          "type": "string",
          "pattern": "\\S*",
          "description": "An absolute URI that is used to identify this activity definition when it is referenced in a specification, model, design or an instance; also called its canonical identifier. This SHOULD be globally unique and SHOULD be a literal address at which at which an authoritative instance of this activity definition is (or will be) published. This URL can be the target of a canonical reference. It SHALL remain the same when the activity definition is stored on different servers."
        },
        "identifier": {
          "type": "array",
          "items": {
            "description": "A formal identifier that is used to identify this activity definition when it is represented in other formats, or referenced in a specification, model, design or an instance.",
            "allOf": [
              {
                "type": "object",
                "properties": {
                  "use": {
                    "type": "string",
                    "enum": [
                      "usual",
                      "official",
                      "temp",
                      "secondary",
                      "old"
                    ],
                    "description": "The purpose of this identifier."
                  },
                  "type": {
                    "description": "A coded type for the identifier that can be used to determine which identifier to use for a specific purpose.",
                    "allOf": [
                      {
                        "type": "object",
                        "properties": {
                          "coding": {
                            "type": "array",
                            "items": {
                              "description": "A reference to a code defined by a terminology system.",
                              "allOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "system": {
                                      "type": "string",
                                      "pattern": "\\S*",
                                      "description": "The identification of the code system that defines the meaning of the symbol in the code."
                                    },
                                    "version": {
                                      "type": "string",
                                      "pattern": "[ \\r\\n\\t\\S]+",
                                      "description": "The version of the code system which was used when choosing this code. Note that a well&ndash;maintained code system does not need the version reported, because the meaning of codes is consistent across versions. However this cannot consistently be assured, and when the meaning is not guaranteed to be consistent, the version SHOULD be exchanged."
                                    },
                                    "code": {
                                      "type": "string",
                                      "pattern": "[^\\s]+(\\s[^\\s]+)*",
                                      "description": "A symbol in syntax defined by the system. The symbol may be a predefined code or an expression in a syntax defined by the coding system (e.g. post&ndash;coordination)."
                                    },
                                    "display": {
                                      "type": "string",
                                      "pattern": "[ \\r\\n\\t\\S]+",
                                      "description": "A representation of the meaning of the code in the system, following the rules of the system."
                                    },
                                    "userSelected": {
                                      "type": "boolean",
                                      "description": "Indicates that this coding was chosen by a user directly &ndash; e.g. off a pick list of available items (codes or displays)."
                                    }
                                  }
                                }
                              ]
                            }
                          },
                          "text": {
                            "type": "string",
                            "pattern": "[ \\r\\n\\t\\S]+",
                            "description": "A human language representation of the concept as seen/selected/uttered by the user who entered the data and/or which represents the intended meaning of the user."
                          }
                        }
                      }
                    ]
                  },
                  "system": {
                    "type": "string",
                    "pattern": "\\S*",
                    "description": "Establishes the namespace for the value &ndash; that is, a URL that describes a set values that are unique."
                  },
                  "value": {
                    "type": "string",
                    "pattern": "[ \\r\\n\\t\\S]+",
                    "description": "The portion of the identifier typically relevant to the user and which is unique within the context of the system."
                  },
                  "period": {
                    "description": "Time period during which identifier is/was valid for use.",
                    "allOf": [
                      {
                        "type": "object",
                        "properties": {
                          "start": {
                            "type": "string",
                            "pattern": "([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?",
                            "description": "The start of the period. The boundary is inclusive."
                          },
                          "end": {
                            "type": "string",
                            "pattern": "([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?",
                            "description": "The end of the period. If the end of the period is missing, it means no end was known or planned at the time the instance was created. The start may be in the past, and the end date in the future, which means that period is expected/planned to end at that time."
                          }
                        }
                      }
                    ]
                  },
                  "assigner": {
                    "description": "Organization that issued/manages the identifier.",
                    "allOf": [
                      {
                        "type": "object",
                        "properties": {
                          "reference": {
                            "type": "string",
                            "pattern": "[ \\r\\n\\t\\S]+",
                            "description": "A reference to a location at which the other resource is found. The reference may be a relative reference, in which case it is relative to the service base URL, or an absolute URL that resolves to the location where the resource is found. The reference may be version specific or not. If the reference is not to a FHIR RESTful server, then it should be assumed to be version specific. Internal fragment references (start with '#') refer to contained resources."
                          },
                          "type": {
                            "type": "string",
                            "pattern": "\\S*",
                            "description": "The expected type of the target of the reference. If both Reference.type and Reference.reference are populated and Reference.reference is a FHIR URL, both SHALL be consistent.\n\nThe type is the Canonical URL of Resource Definition that is the type this reference refers to. References are URLs that are relative to http://hl7.org/fhir/StructureDefinition/ e.g. \"Patient\" is a reference to http://hl7.org/fhir/StructureDefinition/Patient. Absolute URLs are only allowed for logical models (and can only be used in references in logical models, not resources)."
                          },
                          "identifier": {
                            "type": "object",
                            "additionalProperties": true,
                            "description": "An identifier for the target resource. This is used when there is no way to reference the other resource directly, either because the entity it represents is not available through a FHIR server, or because there is no way for the author of the resource to convert a known identifier to an actual location. There is no requirement that a Reference.identifier point to something that is actually exposed as a FHIR instance, but it SHALL point to a business concept that would be expected to be exposed as a FHIR instance, and that instance would need to be of a FHIR resource type allowed by the reference."
                          },
                          "display": {
                            "type": "string",
                            "pattern": "[ \\r\\n\\t\\S]+",
                            "description": "Plain text narrative that identifies the resource in addition to the resource reference."
                          }
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        },
        "version": {
          "type": "string",
          "pattern": "[ \\r\\n\\t\\S]+",
          "description": "The identifier that is used to identify this version of the activity definition when it is referenced in a specification, model, design or instance. This is an arbitrary value managed by the activity definition author and is not expected to be globally unique. For example, it might be a timestamp (e.g. yyyymmdd) if a managed version is not available. There is also no expectation that versions can be placed in a lexicographical sequence. To provide a version consistent with the Decision Support Service specification, use the format Major.Minor.Revision (e.g. 1.0.0). For more information on versioning knowledge assets, refer to the Decision Support Service specification. Note that a version is required for non&ndash;experimental active assets."
        },
        "name": {
          "type": "string",
          "pattern": "[ \\r\\n\\t\\S]+",
          "description": "A natural language name identifying the activity definition. This name should be usable as an identifier for the module by machine processing applications such as code generation."
        },
        "title": {
          "type": "string",
          "pattern": "[ \\r\\n\\t\\S]+",
          "description": "A short, descriptive, user&ndash;friendly title for the activity definition."
        },
        "subtitle": {
          "type": "string",
          "pattern": "[ \\r\\n\\t\\S]+",
          "description": "An explanatory or alternate title for the activity definition giving additional information about its content."
        },
        "status": {
          "type": "string",
          "enum": [
            "draft",
            "active",
            "retired",
            "unknown"
          ],
          "description": "The status of this activity definition. Enables tracking the life&ndash;cycle of the content."
        },
        "experimental": {
          "type": "boolean",
          "description": "A Boolean value to indicate that this activity definition is authored for testing purposes (or education/evaluation/marketing) and is not intended to be used for genuine usage."
        },
        "subjectCodeableConcept": {
          "description": "A code or group definition that describes the intended subject of the activity being defined.",
          "allOf": [
            {
              "type": "object",
              "properties": {
                "coding": {
                  "type": "array",
                  "items": {
                    "description": "A reference to a code defined by a terminology system.",
                    "allOf": [
                      {
                        "type": "object",
                        "properties": {
                          "system": {
                            "type": "string",
                            "pattern": "\\S*",
                            "description": "The identification of the code system that defines the meaning of the symbol in the code."
                          },
                          "version": {
                            "type": "string",
                            "pattern": "[ \\r\\n\\t\\S]+",
                            "description": "The version of the code system which was used when choosing this code. Note that a well&ndash;maintained code system does not need the version reported, because the meaning of codes is consistent across versions. However this cannot consistently be assured, and when the meaning is not guaranteed to be consistent, the version SHOULD be exchanged."
                          },
                          "code": {
                            "type": "string",
                            "pattern": "[^\\s]+(\\s[^\\s]+)*",
                            "description": "A symbol in syntax defined by the system. The symbol may be a predefined code or an expression in a syntax defined by the coding system (e.g. post&ndash;coordination)."
                          },
                          "display": {
                            "type": "string",
                            "pattern": "[ \\r\\n\\t\\S]+",
                            "description": "A representation of the meaning of the code in the system, following the rules of the system."
                          },
                          "userSelected": {
                            "type": "boolean",
                            "description": "Indicates that this coding was chosen by a user directly &ndash; e.g. off a pick list of available items (codes or displays)."
                          }
                        }
                      }
                    ]
                  }
                },
                "text": {
                  "type": "string",
                  "pattern": "[ \\r\\n\\t\\S]+",
                  "description": "A human language representation of the concept as seen/selected/uttered by the user who entered the data and/or which represents the intended meaning of the user."
                }
              }
            }
          ]
        },
        "subjectReference": {
          "description": "A code or group definition that describes the intended subject of the activity being defined.",
          "allOf": [
            {
              "type": "object",
              "properties": {
                "reference": {
                  "type": "string",
                  "pattern": "[ \\r\\n\\t\\S]+",
                  "description": "A reference to a location at which the other resource is found. The reference may be a relative reference, in which case it is relative to the service base URL, or an absolute URL that resolves to the location where the resource is found. The reference may be version specific or not. If the reference is not to a FHIR RESTful server, then it should be assumed to be version specific. Internal fragment references (start with '#') refer to contained resources."
                },
                "type": {
                  "type": "string",
                  "pattern": "\\S*",
                  "description": "The expected type of the target of the reference. If both Reference.type and Reference.reference are populated and Reference.reference is a FHIR URL, both SHALL be consistent.\n\nThe type is the Canonical URL of Resource Definition that is the type this reference refers to. References are URLs that are relative to http://hl7.org/fhir/StructureDefinition/ e.g. \"Patient\" is a reference to http://hl7.org/fhir/StructureDefinition/Patient. Absolute URLs are only allowed for logical models (and can only be used in references in logical models, not resources)."
                },
                "identifier": {
                  "type": "object",
                  "additionalProperties": true,
                  "description": "An identifier for the target resource. This is used when there is no way to reference the other resource directly, either because the entity it represents is not available through a FHIR server, or because there is no way for the author of the resource to convert a known identifier to an actual location. There is no requirement that a Reference.identifier point to something that is actually exposed as a FHIR instance, but it SHALL point to a business concept that would be expected to be exposed as a FHIR instance, and that instance would need to be of a FHIR resource type allowed by the reference."
                },
                "display": {
                  "type": "string",
                  "pattern": "[ \\r\\n\\t\\S]+",
                  "description": "Plain text narrative that identifies the resource in addition to the resource reference."
                }
              }
            }
          ]
        },
        "date": {
          "type": "string",
          "pattern": "([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?",
          "description": "The date  (and optionally time) when the activity definition was published. The date must change when the business version changes and it must change if the status code changes. In addition, it should change when the substantive content of the activity definition changes."
        },
        "publisher": {
          "type": "string",
          "pattern": "[ \\r\\n\\t\\S]+",
          "description": "The name of the organization or individual that published the activity definition."
        },
        "contact": {
          "type": "array",
          "items": {
            "description": "Contact details to assist a user in finding and communicating with the publisher.",
            "allOf": [
              {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "pattern": "[ \\r\\n\\t\\S]+",
                    "description": "The name of an individual to contact."
                  },
                  "telecom": {
                    "type": "array",
                    "items": {
                      "description": "The contact details for the individual (if a name was provided) or the organization.",
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "system": {
                              "type": "string",
                              "enum": [
                                "phone",
                                "fax",
                                "email",
                                "pager",
                                "url",
                                "sms",
                                "other"
                              ],
                              "description": "Telecommunications form for contact point &ndash; what communications system is required to make use of the contact."
                            },
                            "value": {
                              "type": "string",
                              "pattern": "[ \\r\\n\\t\\S]+",
                              "description": "The actual contact point details, in a form that is meaningful to the designated communication system (i.e. phone number or email address)."
                            },
                            "use": {
                              "type": "string",
                              "enum": [
                                "home",
                                "work",
                                "temp",
                                "old",
                                "mobile"
                              ],
                              "description": "Identifies the purpose for the contact point."
                            },
                            "rank": {
                              "type": "integer",
                              "format": "int32",
                              "description": "Specifies a preferred order in which to use a set of contacts. ContactPoints with lower rank values are more preferred than those with higher rank values."
                            },
                            "period": {
                              "description": "Time period when the contact point was/is in use.",
                              "allOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "start": {
                                      "type": "string",
                                      "pattern": "([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?",
                                      "description": "The start of the period. The boundary is inclusive."
                                    },
                                    "end": {
                                      "type": "string",
                                      "pattern": "([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?",
                                      "description": "The end of the period. If the end of the period is missing, it means no end was known or planned at the time the instance was created. The start may be in the past, and the end date in the future, which means that period is expected/planned to end at that time."
                                    }
                                  }
                                }
                              ]
                            }
                          }
                        }
                      ]
                    }
                  }
                }
              }
            ]
          }
        },
        "description": {
          "type": "string",
          "pattern": "[ \\r\\n\\t\\S]+",
          "description": "A free text natural language description of the activity definition from a consumer's perspective."
        },
        "useContext": {
          "type": "array",
          "items": {
            "description": "The content was developed with a focus and intent of supporting the contexts that are listed. These contexts may be general categories (gender, age, ...) or may be references to specific programs (insurance plans, studies, ...) and may be used to assist with indexing and searching for appropriate activity definition instances.",
            "allOf": [
              {
                "type": "object",
                "properties": {
                  "code": {
                    "description": "A code that identifies the type of context being specified by this usage context.",
                    "allOf": [
                      {
                        "type": "object",
                        "properties": {
                          "system": {
                            "type": "string",
                            "pattern": "\\S*",
                            "description": "The identification of the code system that defines the meaning of the symbol in the code."
                          },
                          "version": {
                            "type": "string",
                            "pattern": "[ \\r\\n\\t\\S]+",
                            "description": "The version of the code system which was used when choosing this code. Note that a well&ndash;maintained code system does not need the version reported, because the meaning of codes is consistent across versions. However this cannot consistently be assured, and when the meaning is not guaranteed to be consistent, the version SHOULD be exchanged."
                          },
                          "code": {
                            "type": "string",
                            "pattern": "[^\\s]+(\\s[^\\s]+)*",
                            "description": "A symbol in syntax defined by the system. The symbol may be a predefined code or an expression in a syntax defined by the coding system (e.g. post&ndash;coordination)."
                          },
                          "display": {
                            "type": "string",
                            "pattern": "[ \\r\\n\\t\\S]+",
                            "description": "A representation of the meaning of the code in the system, following the rules of the system."
                          },
                          "userSelected": {
                            "type": "boolean",
                            "description": "Indicates that this coding was chosen by a user directly &ndash; e.g. off a pick list of available items (codes or displays)."
                          }
                        }
                      }
                    ]
                  },
                  "valueCodeableConcept": {
                    "description": "A value that defines the context specified in this context of use. The interpretation of the value is defined by the code.",
                    "allOf": [
                      {
                        "type": "object",
                        "properties": {
                          "coding": {
                            "type": "array",
                            "items": {
                              "description": "A reference to a code defined by a terminology system.",
                              "allOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "system": {
                                      "type": "string",
                                      "pattern": "\\S*",
                                      "description": "The identification of the code system that defines the meaning of the symbol in the code."
                                    },
                                    "version": {
                                      "type": "string",
                                      "pattern": "[ \\r\\n\\t\\S]+",
                                      "description": "The version of the code system which was used when choosing this code. Note that a well&ndash;maintained code system does not need the version reported, because the meaning of codes is consistent across versions. However this cannot consistently be assured, and when the meaning is not guaranteed to be consistent, the version SHOULD be exchanged."
                                    },
                                    "code": {
                                      "type": "string",
                                      "pattern": "[^\\s]+(\\s[^\\s]+)*",
                                      "description": "A symbol in syntax defined by the system. The symbol may be a predefined code or an expression in a syntax defined by the coding system (e.g. post&ndash;coordination)."
                                    },
                                    "display": {
                                      "type": "string",
                                      "pattern": "[ \\r\\n\\t\\S]+",
                                      "description": "A representation of the meaning of the code in the system, following the rules of the system."
                                    },
                                    "userSelected": {
                                      "type": "boolean",
                                      "description": "Indicates that this coding was chosen by a user directly &ndash; e.g. off a pick list of available items (codes or displays)."
                                    }
                                  }
                                }
                              ]
                            }
                          },
                          "text": {
                            "type": "string",
                            "pattern": "[ \\r\\n\\t\\S]+",
                            "description": "A human language representation of the concept as seen/selected/uttered by the user who entered the data and/or which represents the intended meaning of the user."
                          }
                        }
                      }
                    ]
                  },
                  "valueQuantity": {
                    "description": "A value that defines the context specified in this context of use. The interpretation of the value is defined by the code.",
                    "allOf": [
                      {
                        "type": "object",
                        "properties": {
                          "value": {
                            "type": "number",
                            "description": "The value of the measured amount. The value includes an implicit precision in the presentation of the value."
                          },
                          "comparator": {
                            "type": "string",
                            "enum": [
                              "<",
                              "<=",
                              ">=",
                              ">"
                            ],
                            "description": "How the value should be understood and represented &ndash; whether the actual value is greater or less than the stated value due to measurement issues; e.g. if the comparator is \"<\" , then the real value is < stated value."
                          },
                          "unit": {
                            "type": "string",
                            "pattern": "[ \\r\\n\\t\\S]+",
                            "description": "A human&ndash;readable form of the unit."
                          },
                          "system": {
                            "type": "string",
                            "pattern": "\\S*",
                            "description": "The identification of the system that provides the coded form of the unit."
                          },
                          "code": {
                            "type": "string",
                            "pattern": "[^\\s]+(\\s[^\\s]+)*",
                            "description": "A computer processable form of the unit in some unit representation system."
                          }
                        }
                      }
                    ]
                  },
                  "valueRange": {
                    "description": "A value that defines the context specified in this context of use. The interpretation of the value is defined by the code.",
                    "allOf": [
                      {
                        "type": "object",
                        "properties": {
                          "low": {
                            "description": "The low limit. The boundary is inclusive.",
                            "allOf": [
                              {
                                "allOf": [
                                  {
                                    "type": "object",
                                    "properties": {
                                      "value": {
                                        "type": "number",
                                        "description": "The value of the measured amount. The value includes an implicit precision in the presentation of the value."
                                      },
                                      "comparator": {
                                        "type": "string",
                                        "enum": [
                                          "<",
                                          "<=",
                                          ">=",
                                          ">"
                                        ],
                                        "description": "How the value should be understood and represented &ndash; whether the actual value is greater or less than the stated value due to measurement issues; e.g. if the comparator is \"<\" , then the real value is < stated value."
                                      },
                                      "unit": {
                                        "type": "string",
                                        "pattern": "[ \\r\\n\\t\\S]+",
                                        "description": "A human&ndash;readable form of the unit."
                                      },
                                      "system": {
                                        "type": "string",
                                        "pattern": "\\S*",
                                        "description": "The identification of the system that provides the coded form of the unit."
                                      },
                                      "code": {
                                        "type": "string",
                                        "pattern": "[^\\s]+(\\s[^\\s]+)*",
                                        "description": "A computer processable form of the unit in some unit representation system."
                                      }
                                    }
                                  }
                                ]
                              },
                              {
                                "type": "object",
                                "properties": {}
                              }
                            ]
                          },
                          "high": {
                            "description": "The high limit. The boundary is inclusive.",
                            "allOf": [
                              {
                                "allOf": [
                                  {
                                    "type": "object",
                                    "properties": {
                                      "value": {
                                        "type": "number",
                                        "description": "The value of the measured amount. The value includes an implicit precision in the presentation of the value."
                                      },
                                      "comparator": {
                                        "type": "string",
                                        "enum": [
                                          "<",
                                          "<=",
                                          ">=",
                                          ">"
                                        ],
                                        "description": "How the value should be understood and represented &ndash; whether the actual value is greater or less than the stated value due to measurement issues; e.g. if the comparator is \"<\" , then the real value is < stated value."
                                      },
                                      "unit": {
                                        "type": "string",
                                        "pattern": "[ \\r\\n\\t\\S]+",
                                        "description": "A human&ndash;readable form of the unit."
                                      },
                                      "system": {
                                        "type": "string",
                                        "pattern": "\\S*",
                                        "description": "The identification of the system that provides the coded form of the unit."
                                      },
                                      "code": {
                                        "type": "string",
                                        "pattern": "[^\\s]+(\\s[^\\s]+)*",
                                        "description": "A computer processable form of the unit in some unit representation system."
                                      }
                                    }
                                  }
                                ]
                              },
                              {
                                "type": "object",
                                "properties": {}
                              }
                            ]
                          }
                        }
                      }
                    ]
                  },
                  "valueReference": {
                    "description": "A value that defines the context specified in this context of use. The interpretation of the value is defined by the code.",
                    "allOf": [
                      {
                        "type": "object",
                        "properties": {
                          "reference": {
                            "type": "string",
                            "pattern": "[ \\r\\n\\t\\S]+",
                            "description": "A reference to a location at which the other resource is found. The reference may be a relative reference, in which case it is relative to the service base URL, or an absolute URL that resolves to the location where the resource is found. The reference may be version specific or not. If the reference is not to a FHIR RESTful server, then it should be assumed to be version specific. Internal fragment references (start with '#') refer to contained resources."
                          },
                          "type": {
                            "type": "string",
                            "pattern": "\\S*",
                            "description": "The expected type of the target of the reference. If both Reference.type and Reference.reference are populated and Reference.reference is a FHIR URL, both SHALL be consistent.\n\nThe type is the Canonical URL of Resource Definition that is the type this reference refers to. References are URLs that are relative to http://hl7.org/fhir/StructureDefinition/ e.g. \"Patient\" is a reference to http://hl7.org/fhir/StructureDefinition/Patient. Absolute URLs are only allowed for logical models (and can only be used in references in logical models, not resources)."
                          },
                          "identifier": {
                            "type": "object",
                            "additionalProperties": true,
                            "description": "An identifier for the target resource. This is used when there is no way to reference the other resource directly, either because the entity it represents is not available through a FHIR server, or because there is no way for the author of the resource to convert a known identifier to an actual location. There is no requirement that a Reference.identifier point to something that is actually exposed as a FHIR instance, but it SHALL point to a business concept that would be expected to be exposed as a FHIR instance, and that instance would need to be of a FHIR resource type allowed by the reference."
                          },
                          "display": {
                            "type": "string",
                            "pattern": "[ \\r\\n\\t\\S]+",
                            "description": "Plain text narrative that identifies the resource in addition to the resource reference."
                          }
                        }
                      }
                    ]
                  }
                },
                "required": [
                  "code"
                ]
              }
            ]
          }
        },
        "jurisdiction": {
          "type": "array",
          "items": {
            "description": "A legal or geographic region in which the activity definition is intended to be used.",
            "allOf": [
              {
                "type": "object",
                "properties": {
                  "coding": {
                    "type": "array",
                    "items": {
                      "description": "A reference to a code defined by a terminology system.",
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "system": {
                              "type": "string",
                              "pattern": "\\S*",
                              "description": "The identification of the code system that defines the meaning of the symbol in the code."
                            },
                            "version": {
                              "type": "string",
                              "pattern": "[ \\r\\n\\t\\S]+",
                              "description": "The version of the code system which was used when choosing this code. Note that a well&ndash;maintained code system does not need the version reported, because the meaning of codes is consistent across versions. However this cannot consistently be assured, and when the meaning is not guaranteed to be consistent, the version SHOULD be exchanged."
                            },
                            "code": {
                              "type": "string",
                              "pattern": "[^\\s]+(\\s[^\\s]+)*",
                              "description": "A symbol in syntax defined by the system. The symbol may be a predefined code or an expression in a syntax defined by the coding system (e.g. post&ndash;coordination)."
                            },
                            "display": {
                              "type": "string",
                              "pattern": "[ \\r\\n\\t\\S]+",
                              "description": "A representation of the meaning of the code in the system, following the rules of the system."
                            },
                            "userSelected": {
                              "type": "boolean",
                              "description": "Indicates that this coding was chosen by a user directly &ndash; e.g. off a pick list of available items (codes or displays)."
                            }
                          }
                        }
                      ]
                    }
                  },
                  "text": {
                    "type": "string",
                    "pattern": "[ \\r\\n\\t\\S]+",
                    "description": "A human language representation of the concept as seen/selected/uttered by the user who entered the data and/or which represents the intended meaning of the user."
                  }
                }
              }
            ]
          }
        },
        "purpose": {
          "type": "string",
          "pattern": "[ \\r\\n\\t\\S]+",
          "description": "Explanation of why this activity definition is needed and why it has been designed as it has."
        },
        "usage": {
          "type": "string",
          "pattern": "[ \\r\\n\\t\\S]+",
          "description": "A detailed description of how the activity definition is used from a clinical perspective."
        },
        "copyright": {
          "type": "string",
          "pattern": "[ \\r\\n\\t\\S]+",
          "description": "A copyright statement relating to the activity definition and/or its contents. Copyright statements are generally legal restrictions on the use and publishing of the activity definition."
        },
        "approvalDate": {
          "type": "string",
          "pattern": "([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?",
          "description": "The date on which the resource content was approved by the publisher. Approval happens once when the content is officially approved for usage."
        },
        "lastReviewDate": {
          "type": "string",
          "pattern": "([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?",
          "description": "The date on which the resource content was last reviewed. Review happens periodically after approval but does not change the original approval date."
        },
        "effectivePeriod": {
          "description": "The period during which the activity definition content was or is planned to be in active use.",
          "allOf": [
            {
              "type": "object",
              "properties": {
                "start": {
                  "type": "string",
                  "pattern": "([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?",
                  "description": "The start of the period. The boundary is inclusive."
                },
                "end": {
                  "type": "string",
                  "pattern": "([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?",
                  "description": "The end of the period. If the end of the period is missing, it means no end was known or planned at the time the instance was created. The start may be in the past, and the end date in the future, which means that period is expected/planned to end at that time."
                }
              }
            }
          ]
        },
        "topic": {
          "type": "array",
          "items": {
            "description": "Descriptive topics related to the content of the activity. Topics provide a high&ndash;level categorization of the activity that can be useful for filtering and searching.",
            "allOf": [
              {
                "type": "object",
                "properties": {
                  "coding": {
                    "type": "array",
                    "items": {
                      "description": "A reference to a code defined by a terminology system.",
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "system": {
                              "type": "string",
                              "pattern": "\\S*",
                              "description": "The identification of the code system that defines the meaning of the symbol in the code."
                            },
                            "version": {
                              "type": "string",
                              "pattern": "[ \\r\\n\\t\\S]+",
                              "description": "The version of the code system which was used when choosing this code. Note that a well&ndash;maintained code system does not need the version reported, because the meaning of codes is consistent across versions. However this cannot consistently be assured, and when the meaning is not guaranteed to be consistent, the version SHOULD be exchanged."
                            },
                            "code": {
                              "type": "string",
                              "pattern": "[^\\s]+(\\s[^\\s]+)*",
                              "description": "A symbol in syntax defined by the system. The symbol may be a predefined code or an expression in a syntax defined by the coding system (e.g. post&ndash;coordination)."
                            },
                            "display": {
                              "type": "string",
                              "pattern": "[ \\r\\n\\t\\S]+",
                              "description": "A representation of the meaning of the code in the system, following the rules of the system."
                            },
                            "userSelected": {
                              "type": "boolean",
                              "description": "Indicates that this coding was chosen by a user directly &ndash; e.g. off a pick list of available items (codes or displays)."
                            }
                          }
                        }
                      ]
                    }
                  },
                  "text": {
                    "type": "string",
                    "pattern": "[ \\r\\n\\t\\S]+",
                    "description": "A human language representation of the concept as seen/selected/uttered by the user who entered the data and/or which represents the intended meaning of the user."
                  }
                }
              }
            ]
          }
        },
        "author": {
          "type": "array",
          "items": {
            "description": "An individiual or organization primarily involved in the creation and maintenance of the content.",
            "allOf": [
              {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "pattern": "[ \\r\\n\\t\\S]+",
                    "description": "The name of an individual to contact."
                  },
                  "telecom": {
                    "type": "array",
                    "items": {
                      "description": "The contact details for the individual (if a name was provided) or the organization.",
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "system": {
                              "type": "string",
                              "enum": [
                                "phone",
                                "fax",
                                "email",
                                "pager",
                                "url",
                                "sms",
                                "other"
                              ],
                              "description": "Telecommunications form for contact point &ndash; what communications system is required to make use of the contact."
                            },
                            "value": {
                              "type": "string",
                              "pattern": "[ \\r\\n\\t\\S]+",
                              "description": "The actual contact point details, in a form that is meaningful to the designated communication system (i.e. phone number or email address)."
                            },
                            "use": {
                              "type": "string",
                              "enum": [
                                "home",
                                "work",
                                "temp",
                                "old",
                                "mobile"
                              ],
                              "description": "Identifies the purpose for the contact point."
                            },
                            "rank": {
                              "type": "integer",
                              "format": "int32",
                              "description": "Specifies a preferred order in which to use a set of contacts. ContactPoints with lower rank values are more preferred than those with higher rank values."
                            },
                            "period": {
                              "description": "Time period when the contact point was/is in use.",
                              "allOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "start": {
                                      "type": "string",
                                      "pattern": "([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?",
                                      "description": "The start of the period. The boundary is inclusive."
                                    },
                                    "end": {
                                      "type": "string",
                                      "pattern": "([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?",
                                      "description": "The end of the period. If the end of the period is missing, it means no end was known or planned at the time the instance was created. The start may be in the past, and the end date in the future, which means that period is expected/planned to end at that time."
                                    }
                                  }
                                }
                              ]
                            }
                          }
                        }
                      ]
                    }
                  }
                }
              }
            ]
          }
        },
        "editor": {
          "type": "array",
          "items": {
            "description": "An individual or organization primarily responsible for internal coherence of the content.",
            "allOf": [
              {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "pattern": "[ \\r\\n\\t\\S]+",
                    "description": "The name of an individual to contact."
                  },
                  "telecom": {
                    "type": "array",
                    "items": {
                      "description": "The contact details for the individual (if a name was provided) or the organization.",
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "system": {
                              "type": "string",
                              "enum": [
                                "phone",
                                "fax",
                                "email",
                                "pager",
                                "url",
                                "sms",
                                "other"
                              ],
                              "description": "Telecommunications form for contact point &ndash; what communications system is required to make use of the contact."
                            },
                            "value": {
                              "type": "string",
                              "pattern": "[ \\r\\n\\t\\S]+",
                              "description": "The actual contact point details, in a form that is meaningful to the designated communication system (i.e. phone number or email address)."
                            },
                            "use": {
                              "type": "string",
                              "enum": [
                                "home",
                                "work",
                                "temp",
                                "old",
                                "mobile"
                              ],
                              "description": "Identifies the purpose for the contact point."
                            },
                            "rank": {
                              "type": "integer",
                              "format": "int32",
                              "description": "Specifies a preferred order in which to use a set of contacts. ContactPoints with lower rank values are more preferred than those with higher rank values."
                            },
                            "period": {
                              "description": "Time period when the contact point was/is in use.",
                              "allOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "start": {
                                      "type": "string",
                                      "pattern": "([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?",
                                      "description": "The start of the period. The boundary is inclusive."
                                    },
                                    "end": {
                                      "type": "string",
                                      "pattern": "([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?",
                                      "description": "The end of the period. If the end of the period is missing, it means no end was known or planned at the time the instance was created. The start may be in the past, and the end date in the future, which means that period is expected/planned to end at that time."
                                    }
                                  }
                                }
                              ]
                            }
                          }
                        }
                      ]
                    }
                  }
                }
              }
            ]
          }
        },
        "reviewer": {
          "type": "array",
          "items": {
            "description": "An individual or organization primarily responsible for review of some aspect of the content.",
            "allOf": [
              {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "pattern": "[ \\r\\n\\t\\S]+",
                    "description": "The name of an individual to contact."
                  },
                  "telecom": {
                    "type": "array",
                    "items": {
                      "description": "The contact details for the individual (if a name was provided) or the organization.",
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "system": {
                              "type": "string",
                              "enum": [
                                "phone",
                                "fax",
                                "email",
                                "pager",
                                "url",
                                "sms",
                                "other"
                              ],
                              "description": "Telecommunications form for contact point &ndash; what communications system is required to make use of the contact."
                            },
                            "value": {
                              "type": "string",
                              "pattern": "[ \\r\\n\\t\\S]+",
                              "description": "The actual contact point details, in a form that is meaningful to the designated communication system (i.e. phone number or email address)."
                            },
                            "use": {
                              "type": "string",
                              "enum": [
                                "home",
                                "work",
                                "temp",
                                "old",
                                "mobile"
                              ],
                              "description": "Identifies the purpose for the contact point."
                            },
                            "rank": {
                              "type": "integer",
                              "format": "int32",
                              "description": "Specifies a preferred order in which to use a set of contacts. ContactPoints with lower rank values are more preferred than those with higher rank values."
                            },
                            "period": {
                              "description": "Time period when the contact point was/is in use.",
                              "allOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "start": {
                                      "type": "string",
                                      "pattern": "([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?",
                                      "description": "The start of the period. The boundary is inclusive."
                                    },
                                    "end": {
                                      "type": "string",
                                      "pattern": "([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?",
                                      "description": "The end of the period. If the end of the period is missing, it means no end was known or planned at the time the instance was created. The start may be in the past, and the end date in the future, which means that period is expected/planned to end at that time."
                                    }
                                  }
                                }
                              ]
                            }
                          }
                        }
                      ]
                    }
                  }
                }
              }
            ]
          }
        },
        "endorser": {
          "type": "array",
          "items": {
            "description": "An individual or organization responsible for officially endorsing the content for use in some setting.",
            "allOf": [
              {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "pattern": "[ \\r\\n\\t\\S]+",
                    "description": "The name of an individual to contact."
                  },
                  "telecom": {
                    "type": "array",
                    "items": {
                      "description": "The contact details for the individual (if a name was provided) or the organization.",
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "system": {
                              "type": "string",
                              "enum": [
                                "phone",
                                "fax",
                                "email",
                                "pager",
                                "url",
                                "sms",
                                "other"
                              ],
                              "description": "Telecommunications form for contact point &ndash; what communications system is required to make use of the contact."
                            },
                            "value": {
                              "type": "string",
                              "pattern": "[ \\r\\n\\t\\S]+",
                              "description": "The actual contact point details, in a form that is meaningful to the designated communication system (i.e. phone number or email address)."
                            },
                            "use": {
                              "type": "string",
                              "enum": [
                                "home",
                                "work",
                                "temp",
                                "old",
                                "mobile"
                              ],
                              "description": "Identifies the purpose for the contact point."
                            },
                            "rank": {
                              "type": "integer",
                              "format": "int32",
                              "description": "Specifies a preferred order in which to use a set of contacts. ContactPoints with lower rank values are more preferred than those with higher rank values."
                            },
                            "period": {
                              "description": "Time period when the contact point was/is in use.",
                              "allOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "start": {
                                      "type": "string",
                                      "pattern": "([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?",
                                      "description": "The start of the period. The boundary is inclusive."
                                    },
                                    "end": {
                                      "type": "string",
                                      "pattern": "([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?",
                                      "description": "The end of the period. If the end of the period is missing, it means no end was known or planned at the time the instance was created. The start may be in the past, and the end date in the future, which means that period is expected/planned to end at that time."
                                    }
                                  }
                                }
                              ]
                            }
                          }
                        }
                      ]
                    }
                  }
                }
              }
            ]
          }
        },
        "relatedArtifact": {
          "type": "array",
          "items": {
            "description": "Related artifacts such as additional documentation, justification, or bibliographic references.",
            "allOf": [
              {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "documentation",
                      "justification",
                      "citation",
                      "predecessor",
                      "successor",
                      "derived-from",
                      "depends-on",
                      "composed-of"
                    ],
                    "description": "The type of relationship to the related artifact."
                  },
                  "label": {
                    "type": "string",
                    "pattern": "[ \\r\\n\\t\\S]+",
                    "description": "A short label that can be used to reference the citation from elsewhere in the containing artifact, such as a footnote index."
                  },
                  "display": {
                    "type": "string",
                    "pattern": "[ \\r\\n\\t\\S]+",
                    "description": "A brief description of the document or knowledge resource being referenced, suitable for display to a consumer."
                  },
                  "citation": {
                    "type": "string",
                    "pattern": "[ \\r\\n\\t\\S]+",
                    "description": "A bibliographic citation for the related artifact. This text SHOULD be formatted according to an accepted citation format."
                  },
                  "url": {
                    "type": "string",
                    "pattern": "\\S*",
                    "description": "A url for the artifact that can be followed to access the actual content."
                  },
                  "document": {
                    "description": "The document being referenced, represented as an attachment. This is exclusive with the resource element.",
                    "allOf": [
                      {
                        "type": "object",
                        "properties": {
                          "contentType": {
                            "type": "string",
                            "pattern": "[^\\s]+(\\s[^\\s]+)*",
                            "description": "Identifies the type of the data in the attachment and allows a method to be chosen to interpret or render the data. Includes mime type parameters such as charset where appropriate."
                          },
                          "language": {
                            "type": "string",
                            "pattern": "[^\\s]+(\\s[^\\s]+)*",
                            "description": "The human language of the content. The value can be any valid value according to BCP 47."
                          },
                          "data": {
                            "type": "string",
                            "pattern": "(\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+",
                            "description": "The actual data of the attachment &ndash; a sequence of bytes, base64 encoded."
                          },
                          "url": {
                            "type": "string",
                            "pattern": "\\S*",
                            "description": "A location where the data can be accessed."
                          },
                          "size": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The number of bytes of data that make up this attachment (before base64 encoding, if that is done)."
                          },
                          "hash": {
                            "type": "string",
                            "pattern": "(\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+",
                            "description": "The calculated hash of the data using SHA&ndash;1. Represented using base64."
                          },
                          "title": {
                            "type": "string",
                            "pattern": "[ \\r\\n\\t\\S]+",
                            "description": "A label or set of text to display in place of the data."
                          },
                          "creation": {
                            "type": "string",
                            "pattern": "([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?",
                            "description": "The date that the attachment was first created."
                          }
                        }
                      }
                    ]
                  },
                  "resource": {
                    "type": "string",
                    "pattern": "\\S*",
                    "description": "The related resource, such as a library, value set, profile, or other knowledge resource."
                  }
                },
                "required": [
                  "type"
                ]
              }
            ]
          }
        },
        "library": {
          "type": "array",
          "items": {
            "type": "string",
            "pattern": "\\S*",
            "description": "A reference to a Library resource containing any formal logic used by the activity definition."
          }
        },
        "kind": {
          "type": "string",
          "enum": [
            "Appointment",
            "AppointmentResponse",
            "CarePlan",
            "Claim",
            "CommunicationRequest",
            "Contract",
            "DeviceRequest",
            "EnrollmentRequest",
            "ImmunizationRecommendation",
            "MedicationRequest",
            "NutritionOrder",
            "ServiceRequest",
            "SupplyRequest",
            "Task",
            "VisionPrescription"
          ],
          "description": "A description of the kind of resource the activity definition is representing. For example, a MedicationRequest, a ServiceRequest, or a CommunicationRequest. Typically, but not always, this is a Request resource."
        },
        "profile": {
          "type": "string",
          "pattern": "\\S*",
          "description": "A profile to which the target of the activity definition is expected to conform."
        },
        "code": {
          "description": "Detailed description of the type of activity; e.g. What lab test, what procedure, what kind of encounter.",
          "allOf": [
            {
              "type": "object",
              "properties": {
                "coding": {
                  "type": "array",
                  "items": {
                    "description": "A reference to a code defined by a terminology system.",
                    "allOf": [
                      {
                        "type": "object",
                        "properties": {
                          "system": {
                            "type": "string",
                            "pattern": "\\S*",
                            "description": "The identification of the code system that defines the meaning of the symbol in the code."
                          },
                          "version": {
                            "type": "string",
                            "pattern": "[ \\r\\n\\t\\S]+",
                            "description": "The version of the code system which was used when choosing this code. Note that a well&ndash;maintained code system does not need the version reported, because the meaning of codes is consistent across versions. However this cannot consistently be assured, and when the meaning is not guaranteed to be consistent, the version SHOULD be exchanged."
                          },
                          "code": {
                            "type": "string",
                            "pattern": "[^\\s]+(\\s[^\\s]+)*",
                            "description": "A symbol in syntax defined by the system. The symbol may be a predefined code or an expression in a syntax defined by the coding system (e.g. post&ndash;coordination)."
                          },
                          "display": {
                            "type": "string",
                            "pattern": "[ \\r\\n\\t\\S]+",
                            "description": "A representation of the meaning of the code in the system, following the rules of the system."
                          },
                          "userSelected": {
                            "type": "boolean",
                            "description": "Indicates that this coding was chosen by a user directly &ndash; e.g. off a pick list of available items (codes or displays)."
                          }
                        }
                      }
                    ]
                  }
                },
                "text": {
                  "type": "string",
                  "pattern": "[ \\r\\n\\t\\S]+",
                  "description": "A human language representation of the concept as seen/selected/uttered by the user who entered the data and/or which represents the intended meaning of the user."
                }
              }
            }
          ]
        },
        "intent": {
          "type": "string",
          "enum": [
            "proposal",
            "plan",
            "directive",
            "order",
            "original-order",
            "reflex-order",
            "filler-order",
            "instance-order",
            "option"
          ],
          "description": "Indicates the level of authority/intentionality associated with the activity and where the request should fit into the workflow chain."
        },
        "priority": {
          "type": "string",
          "enum": [
            "routine",
            "urgent",
            "asap",
            "stat"
          ],
          "description": "Indicates how quickly the activity  should be addressed with respect to other requests."
        },
        "doNotPerform": {
          "type": "boolean",
          "description": "Set this to true if the definition is to indicate that a particular activity should NOT be performed. If true, this element should be interpreted to reinforce a negative coding. For example NPO as a code with a doNotPerform of true would still indicate to NOT perform the action."
        },
        "timingTiming": {
          "description": "The period, timing or frequency upon which the described activity is to occur.",
          "allOf": [
            {
              "allOf": [
                {
                  "type": "object",
                  "properties": {
                    "modifierExtension": {
                      "type": "array",
                      "items": {
                        "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                        "allOf": [
                          {
                            "type": "object",
                            "additionalProperties": true
                          }
                        ]
                      }
                    }
                  }
                }
              ]
            },
            {
              "type": "object",
              "properties": {
                "event": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "pattern": "([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?",
                    "description": "Identifies specific times when the event occurs."
                  }
                },
                "repeat": {
                  "description": "A set of rules that describe when the event is scheduled.",
                  "allOf": [
                    {
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "modifierExtension": {
                              "type": "array",
                              "items": {
                                "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                                "allOf": [
                                  {
                                    "type": "object",
                                    "additionalProperties": true
                                  }
                                ]
                              }
                            }
                          }
                        }
                      ]
                    },
                    {
                      "type": "object",
                      "properties": {
                        "boundsDuration": {
                          "description": "Either a duration for the length of the timing schedule, a range of possible length, or outer bounds for start and/or end limits of the timing schedule.",
                          "allOf": [
                            {
                              "allOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "value": {
                                      "type": "number",
                                      "description": "The value of the measured amount. The value includes an implicit precision in the presentation of the value."
                                    },
                                    "comparator": {
                                      "type": "string",
                                      "enum": [
                                        "<",
                                        "<=",
                                        ">=",
                                        ">"
                                      ],
                                      "description": "How the value should be understood and represented &ndash; whether the actual value is greater or less than the stated value due to measurement issues; e.g. if the comparator is \"<\" , then the real value is < stated value."
                                    },
                                    "unit": {
                                      "type": "string",
                                      "pattern": "[ \\r\\n\\t\\S]+",
                                      "description": "A human&ndash;readable form of the unit."
                                    },
                                    "system": {
                                      "type": "string",
                                      "pattern": "\\S*",
                                      "description": "The identification of the system that provides the coded form of the unit."
                                    },
                                    "code": {
                                      "type": "string",
                                      "pattern": "[^\\s]+(\\s[^\\s]+)*",
                                      "description": "A computer processable form of the unit in some unit representation system."
                                    }
                                  }
                                }
                              ]
                            },
                            {
                              "type": "object",
                              "properties": {}
                            }
                          ]
                        },
                        "boundsRange": {
                          "description": "Either a duration for the length of the timing schedule, a range of possible length, or outer bounds for start and/or end limits of the timing schedule.",
                          "allOf": [
                            {
                              "type": "object",
                              "properties": {
                                "low": {
                                  "description": "The low limit. The boundary is inclusive.",
                                  "allOf": [
                                    {
                                      "allOf": [
                                        {
                                          "type": "object",
                                          "properties": {
                                            "value": {
                                              "type": "number",
                                              "description": "The value of the measured amount. The value includes an implicit precision in the presentation of the value."
                                            },
                                            "comparator": {
                                              "type": "string",
                                              "enum": [
                                                "<",
                                                "<=",
                                                ">=",
                                                ">"
                                              ],
                                              "description": "How the value should be understood and represented &ndash; whether the actual value is greater or less than the stated value due to measurement issues; e.g. if the comparator is \"<\" , then the real value is < stated value."
                                            },
                                            "unit": {
                                              "type": "string",
                                              "pattern": "[ \\r\\n\\t\\S]+",
                                              "description": "A human&ndash;readable form of the unit."
                                            },
                                            "system": {
                                              "type": "string",
                                              "pattern": "\\S*",
                                              "description": "The identification of the system that provides the coded form of the unit."
                                            },
                                            "code": {
                                              "type": "string",
                                              "pattern": "[^\\s]+(\\s[^\\s]+)*",
                                              "description": "A computer processable form of the unit in some unit representation system."
                                            }
                                          }
                                        }
                                      ]
                                    },
                                    {
                                      "type": "object",
                                      "properties": {}
                                    }
                                  ]
                                },
                                "high": {
                                  "description": "The high limit. The boundary is inclusive.",
                                  "allOf": [
                                    {
                                      "allOf": [
                                        {
                                          "type": "object",
                                          "properties": {
                                            "value": {
                                              "type": "number",
                                              "description": "The value of the measured amount. The value includes an implicit precision in the presentation of the value."
                                            },
                                            "comparator": {
                                              "type": "string",
                                              "enum": [
                                                "<",
                                                "<=",
                                                ">=",
                                                ">"
                                              ],
                                              "description": "How the value should be understood and represented &ndash; whether the actual value is greater or less than the stated value due to measurement issues; e.g. if the comparator is \"<\" , then the real value is < stated value."
                                            },
                                            "unit": {
                                              "type": "string",
                                              "pattern": "[ \\r\\n\\t\\S]+",
                                              "description": "A human&ndash;readable form of the unit."
                                            },
                                            "system": {
                                              "type": "string",
                                              "pattern": "\\S*",
                                              "description": "The identification of the system that provides the coded form of the unit."
                                            },
                                            "code": {
                                              "type": "string",
                                              "pattern": "[^\\s]+(\\s[^\\s]+)*",
                                              "description": "A computer processable form of the unit in some unit representation system."
                                            }
                                          }
                                        }
                                      ]
                                    },
                                    {
                                      "type": "object",
                                      "properties": {}
                                    }
                                  ]
                                }
                              }
                            }
                          ]
                        },
                        "boundsPeriod": {
                          "description": "Either a duration for the length of the timing schedule, a range of possible length, or outer bounds for start and/or end limits of the timing schedule.",
                          "allOf": [
                            {
                              "type": "object",
                              "properties": {
                                "start": {
                                  "type": "string",
                                  "pattern": "([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?",
                                  "description": "The start of the period. The boundary is inclusive."
                                },
                                "end": {
                                  "type": "string",
                                  "pattern": "([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?",
                                  "description": "The end of the period. If the end of the period is missing, it means no end was known or planned at the time the instance was created. The start may be in the past, and the end date in the future, which means that period is expected/planned to end at that time."
                                }
                              }
                            }
                          ]
                        },
                        "count": {
                          "type": "integer",
                          "format": "int32",
                          "description": "A total count of the desired number of repetitions across the duration of the entire timing specification. If countMax is present, this element indicates the lower bound of the allowed range of count values."
                        },
                        "countMax": {
                          "type": "integer",
                          "format": "int32",
                          "description": "If present, indicates that the count is a range &ndash; so to perform the action between [count] and [countMax] times."
                        },
                        "duration": {
                          "type": "number",
                          "description": "How long this thing happens for when it happens. If durationMax is present, this element indicates the lower bound of the allowed range of the duration."
                        },
                        "durationMax": {
                          "type": "number",
                          "description": "If present, indicates that the duration is a range &ndash; so to perform the action between [duration] and [durationMax] time length."
                        },
                        "durationUnit": {
                          "type": "string",
                          "enum": [
                            "s",
                            "min",
                            "h",
                            "d",
                            "wk",
                            "mo",
                            "a"
                          ],
                          "description": "The units of time for the duration, in UCUM units."
                        },
                        "frequency": {
                          "type": "integer",
                          "format": "int32",
                          "description": "The number of times to repeat the action within the specified period. If frequencyMax is present, this element indicates the lower bound of the allowed range of the frequency."
                        },
                        "frequencyMax": {
                          "type": "integer",
                          "format": "int32",
                          "description": "If present, indicates that the frequency is a range &ndash; so to repeat between [frequency] and [frequencyMax] times within the period or period range."
                        },
                        "period": {
                          "type": "number",
                          "description": "Indicates the duration of time over which repetitions are to occur; e.g. to express \"3 times per day\", 3 would be the frequency and \"1 day\" would be the period. If periodMax is present, this element indicates the lower bound of the allowed range of the period length."
                        },
                        "periodMax": {
                          "type": "number",
                          "description": "If present, indicates that the period is a range from [period] to [periodMax], allowing expressing concepts such as \"do this once every 3&ndash;5 days."
                        },
                        "periodUnit": {
                          "type": "string",
                          "enum": [
                            "s",
                            "min",
                            "h",
                            "d",
                            "wk",
                            "mo",
                            "a"
                          ],
                          "description": "The units of time for the period in UCUM units."
                        },
                        "dayOfWeek": {
                          "type": "array",
                          "items": {
                            "type": "string",
                            "enum": [
                              "mon",
                              "tue",
                              "wed",
                              "thu",
                              "fri",
                              "sat",
                              "sun"
                            ],
                            "description": "If one or more days of week is provided, then the action happens only on the specified day(s)."
                          }
                        },
                        "timeOfDay": {
                          "type": "array",
                          "items": {
                            "type": "string",
                            "pattern": "([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?",
                            "description": "Specified time of day for action to take place."
                          }
                        },
                        "when": {
                          "type": "array",
                          "items": {
                            "type": "string",
                            "enum": [
                              "MORN",
                              "MORN.early",
                              "MORN.late",
                              "NOON",
                              "AFT",
                              "AFT.early",
                              "AFT.late",
                              "EVE",
                              "EVE.early",
                              "EVE.late",
                              "NIGHT",
                              "PHS",
                              "HS",
                              "WAKE",
                              "C",
                              "CM",
                              "CD",
                              "CV",
                              "AC",
                              "ACM",
                              "ACD",
                              "ACV",
                              "PC",
                              "PCM",
                              "PCD",
                              "PCV"
                            ],
                            "description": "An approximate time period during the day, potentially linked to an event of daily living that indicates when the action should occur."
                          }
                        },
                        "offset": {
                          "type": "integer",
                          "format": "int32",
                          "description": "The number of minutes from the event. If the event code does not indicate whether the minutes is before or after the event, then the offset is assumed to be after the event."
                        }
                      }
                    }
                  ]
                },
                "code": {
                  "description": "A code for the timing schedule (or just text in code.text). Some codes such as BID are ubiquitous, but many institutions define their own additional codes. If a code is provided, the code is understood to be a complete statement of whatever is specified in the structured timing data, and either the code or the data may be used to interpret the Timing, with the exception that .repeat.bounds still applies over the code (and is not contained in the code).",
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "coding": {
                          "type": "array",
                          "items": {
                            "description": "A reference to a code defined by a terminology system.",
                            "allOf": [
                              {
                                "type": "object",
                                "properties": {
                                  "system": {
                                    "type": "string",
                                    "pattern": "\\S*",
                                    "description": "The identification of the code system that defines the meaning of the symbol in the code."
                                  },
                                  "version": {
                                    "type": "string",
                                    "pattern": "[ \\r\\n\\t\\S]+",
                                    "description": "The version of the code system which was used when choosing this code. Note that a well&ndash;maintained code system does not need the version reported, because the meaning of codes is consistent across versions. However this cannot consistently be assured, and when the meaning is not guaranteed to be consistent, the version SHOULD be exchanged."
                                  },
                                  "code": {
                                    "type": "string",
                                    "pattern": "[^\\s]+(\\s[^\\s]+)*",
                                    "description": "A symbol in syntax defined by the system. The symbol may be a predefined code or an expression in a syntax defined by the coding system (e.g. post&ndash;coordination)."
                                  },
                                  "display": {
                                    "type": "string",
                                    "pattern": "[ \\r\\n\\t\\S]+",
                                    "description": "A representation of the meaning of the code in the system, following the rules of the system."
                                  },
                                  "userSelected": {
                                    "type": "boolean",
                                    "description": "Indicates that this coding was chosen by a user directly &ndash; e.g. off a pick list of available items (codes or displays)."
                                  }
                                }
                              }
                            ]
                          }
                        },
                        "text": {
                          "type": "string",
                          "pattern": "[ \\r\\n\\t\\S]+",
                          "description": "A human language representation of the concept as seen/selected/uttered by the user who entered the data and/or which represents the intended meaning of the user."
                        }
                      }
                    }
                  ]
                }
              }
            }
          ]
        },
        "timingDateTime": {
          "type": "string",
          "pattern": "([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?",
          "description": "The period, timing or frequency upon which the described activity is to occur."
        },
        "timingAge": {
          "description": "The period, timing or frequency upon which the described activity is to occur.",
          "allOf": [
            {
              "allOf": [
                {
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "number",
                      "description": "The value of the measured amount. The value includes an implicit precision in the presentation of the value."
                    },
                    "comparator": {
                      "type": "string",
                      "enum": [
                        "<",
                        "<=",
                        ">=",
                        ">"
                      ],
                      "description": "How the value should be understood and represented &ndash; whether the actual value is greater or less than the stated value due to measurement issues; e.g. if the comparator is \"<\" , then the real value is < stated value."
                    },
                    "unit": {
                      "type": "string",
                      "pattern": "[ \\r\\n\\t\\S]+",
                      "description": "A human&ndash;readable form of the unit."
                    },
                    "system": {
                      "type": "string",
                      "pattern": "\\S*",
                      "description": "The identification of the system that provides the coded form of the unit."
                    },
                    "code": {
                      "type": "string",
                      "pattern": "[^\\s]+(\\s[^\\s]+)*",
                      "description": "A computer processable form of the unit in some unit representation system."
                    }
                  }
                }
              ]
            },
            {
              "type": "object",
              "properties": {}
            }
          ]
        },
        "timingPeriod": {
          "description": "The period, timing or frequency upon which the described activity is to occur.",
          "allOf": [
            {
              "type": "object",
              "properties": {
                "start": {
                  "type": "string",
                  "pattern": "([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?",
                  "description": "The start of the period. The boundary is inclusive."
                },
                "end": {
                  "type": "string",
                  "pattern": "([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?",
                  "description": "The end of the period. If the end of the period is missing, it means no end was known or planned at the time the instance was created. The start may be in the past, and the end date in the future, which means that period is expected/planned to end at that time."
                }
              }
            }
          ]
        },
        "timingRange": {
          "description": "The period, timing or frequency upon which the described activity is to occur.",
          "allOf": [
            {
              "type": "object",
              "properties": {
                "low": {
                  "description": "The low limit. The boundary is inclusive.",
                  "allOf": [
                    {
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "value": {
                              "type": "number",
                              "description": "The value of the measured amount. The value includes an implicit precision in the presentation of the value."
                            },
                            "comparator": {
                              "type": "string",
                              "enum": [
                                "<",
                                "<=",
                                ">=",
                                ">"
                              ],
                              "description": "How the value should be understood and represented &ndash; whether the actual value is greater or less than the stated value due to measurement issues; e.g. if the comparator is \"<\" , then the real value is < stated value."
                            },
                            "unit": {
                              "type": "string",
                              "pattern": "[ \\r\\n\\t\\S]+",
                              "description": "A human&ndash;readable form of the unit."
                            },
                            "system": {
                              "type": "string",
                              "pattern": "\\S*",
                              "description": "The identification of the system that provides the coded form of the unit."
                            },
                            "code": {
                              "type": "string",
                              "pattern": "[^\\s]+(\\s[^\\s]+)*",
                              "description": "A computer processable form of the unit in some unit representation system."
                            }
                          }
                        }
                      ]
                    },
                    {
                      "type": "object",
                      "properties": {}
                    }
                  ]
                },
                "high": {
                  "description": "The high limit. The boundary is inclusive.",
                  "allOf": [
                    {
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "value": {
                              "type": "number",
                              "description": "The value of the measured amount. The value includes an implicit precision in the presentation of the value."
                            },
                            "comparator": {
                              "type": "string",
                              "enum": [
                                "<",
                                "<=",
                                ">=",
                                ">"
                              ],
                              "description": "How the value should be understood and represented &ndash; whether the actual value is greater or less than the stated value due to measurement issues; e.g. if the comparator is \"<\" , then the real value is < stated value."
                            },
                            "unit": {
                              "type": "string",
                              "pattern": "[ \\r\\n\\t\\S]+",
                              "description": "A human&ndash;readable form of the unit."
                            },
                            "system": {
                              "type": "string",
                              "pattern": "\\S*",
                              "description": "The identification of the system that provides the coded form of the unit."
                            },
                            "code": {
                              "type": "string",
                              "pattern": "[^\\s]+(\\s[^\\s]+)*",
                              "description": "A computer processable form of the unit in some unit representation system."
                            }
                          }
                        }
                      ]
                    },
                    {
                      "type": "object",
                      "properties": {}
                    }
                  ]
                }
              }
            }
          ]
        },
        "timingDuration": {
          "description": "The period, timing or frequency upon which the described activity is to occur.",
          "allOf": [
            {
              "allOf": [
                {
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "number",
                      "description": "The value of the measured amount. The value includes an implicit precision in the presentation of the value."
                    },
                    "comparator": {
                      "type": "string",
                      "enum": [
                        "<",
                        "<=",
                        ">=",
                        ">"
                      ],
                      "description": "How the value should be understood and represented &ndash; whether the actual value is greater or less than the stated value due to measurement issues; e.g. if the comparator is \"<\" , then the real value is < stated value."
                    },
                    "unit": {
                      "type": "string",
                      "pattern": "[ \\r\\n\\t\\S]+",
                      "description": "A human&ndash;readable form of the unit."
                    },
                    "system": {
                      "type": "string",
                      "pattern": "\\S*",
                      "description": "The identification of the system that provides the coded form of the unit."
                    },
                    "code": {
                      "type": "string",
                      "pattern": "[^\\s]+(\\s[^\\s]+)*",
                      "description": "A computer processable form of the unit in some unit representation system."
                    }
                  }
                }
              ]
            },
            {
              "type": "object",
              "properties": {}
            }
          ]
        },
        "location": {
          "description": "Identifies the facility where the activity will occur; e.g. home, hospital, specific clinic, etc.",
          "allOf": [
            {
              "type": "object",
              "properties": {
                "reference": {
                  "type": "string",
                  "pattern": "[ \\r\\n\\t\\S]+",
                  "description": "A reference to a location at which the other resource is found. The reference may be a relative reference, in which case it is relative to the service base URL, or an absolute URL that resolves to the location where the resource is found. The reference may be version specific or not. If the reference is not to a FHIR RESTful server, then it should be assumed to be version specific. Internal fragment references (start with '#') refer to contained resources."
                },
                "type": {
                  "type": "string",
                  "pattern": "\\S*",
                  "description": "The expected type of the target of the reference. If both Reference.type and Reference.reference are populated and Reference.reference is a FHIR URL, both SHALL be consistent.\n\nThe type is the Canonical URL of Resource Definition that is the type this reference refers to. References are URLs that are relative to http://hl7.org/fhir/StructureDefinition/ e.g. \"Patient\" is a reference to http://hl7.org/fhir/StructureDefinition/Patient. Absolute URLs are only allowed for logical models (and can only be used in references in logical models, not resources)."
                },
                "identifier": {
                  "type": "object",
                  "additionalProperties": true,
                  "description": "An identifier for the target resource. This is used when there is no way to reference the other resource directly, either because the entity it represents is not available through a FHIR server, or because there is no way for the author of the resource to convert a known identifier to an actual location. There is no requirement that a Reference.identifier point to something that is actually exposed as a FHIR instance, but it SHALL point to a business concept that would be expected to be exposed as a FHIR instance, and that instance would need to be of a FHIR resource type allowed by the reference."
                },
                "display": {
                  "type": "string",
                  "pattern": "[ \\r\\n\\t\\S]+",
                  "description": "Plain text narrative that identifies the resource in addition to the resource reference."
                }
              }
            }
          ]
        },
        "participant": {
          "type": "array",
          "items": {
            "description": "Indicates who should participate in performing the action described.",
            "allOf": [
              {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "modifierExtension": {
                        "type": "array",
                        "items": {
                          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                          "allOf": [
                            {
                              "type": "object",
                              "additionalProperties": true
                            }
                          ]
                        }
                      }
                    }
                  }
                ]
              },
              {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "patient",
                      "practitioner",
                      "related-person",
                      "device"
                    ],
                    "description": "The type of participant in the action."
                  },
                  "role": {
                    "description": "The role the participant should play in performing the described action.",
                    "allOf": [
                      {
                        "type": "object",
                        "properties": {
                          "coding": {
                            "type": "array",
                            "items": {
                              "description": "A reference to a code defined by a terminology system.",
                              "allOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "system": {
                                      "type": "string",
                                      "pattern": "\\S*",
                                      "description": "The identification of the code system that defines the meaning of the symbol in the code."
                                    },
                                    "version": {
                                      "type": "string",
                                      "pattern": "[ \\r\\n\\t\\S]+",
                                      "description": "The version of the code system which was used when choosing this code. Note that a well&ndash;maintained code system does not need the version reported, because the meaning of codes is consistent across versions. However this cannot consistently be assured, and when the meaning is not guaranteed to be consistent, the version SHOULD be exchanged."
                                    },
                                    "code": {
                                      "type": "string",
                                      "pattern": "[^\\s]+(\\s[^\\s]+)*",
                                      "description": "A symbol in syntax defined by the system. The symbol may be a predefined code or an expression in a syntax defined by the coding system (e.g. post&ndash;coordination)."
                                    },
                                    "display": {
                                      "type": "string",
                                      "pattern": "[ \\r\\n\\t\\S]+",
                                      "description": "A representation of the meaning of the code in the system, following the rules of the system."
                                    },
                                    "userSelected": {
                                      "type": "boolean",
                                      "description": "Indicates that this coding was chosen by a user directly &ndash; e.g. off a pick list of available items (codes or displays)."
                                    }
                                  }
                                }
                              ]
                            }
                          },
                          "text": {
                            "type": "string",
                            "pattern": "[ \\r\\n\\t\\S]+",
                            "description": "A human language representation of the concept as seen/selected/uttered by the user who entered the data and/or which represents the intended meaning of the user."
                          }
                        }
                      }
                    ]
                  }
                },
                "required": [
                  "type"
                ]
              }
            ]
          }
        },
        "productReference": {
          "description": "Identifies the food, drug or other product being consumed or supplied in the activity.",
          "allOf": [
            {
              "type": "object",
              "properties": {
                "reference": {
                  "type": "string",
                  "pattern": "[ \\r\\n\\t\\S]+",
                  "description": "A reference to a location at which the other resource is found. The reference may be a relative reference, in which case it is relative to the service base URL, or an absolute URL that resolves to the location where the resource is found. The reference may be version specific or not. If the reference is not to a FHIR RESTful server, then it should be assumed to be version specific. Internal fragment references (start with '#') refer to contained resources."
                },
                "type": {
                  "type": "string",
                  "pattern": "\\S*",
                  "description": "The expected type of the target of the reference. If both Reference.type and Reference.reference are populated and Reference.reference is a FHIR URL, both SHALL be consistent.\n\nThe type is the Canonical URL of Resource Definition that is the type this reference refers to. References are URLs that are relative to http://hl7.org/fhir/StructureDefinition/ e.g. \"Patient\" is a reference to http://hl7.org/fhir/StructureDefinition/Patient. Absolute URLs are only allowed for logical models (and can only be used in references in logical models, not resources)."
                },
                "identifier": {
                  "type": "object",
                  "additionalProperties": true,
                  "description": "An identifier for the target resource. This is used when there is no way to reference the other resource directly, either because the entity it represents is not available through a FHIR server, or because there is no way for the author of the resource to convert a known identifier to an actual location. There is no requirement that a Reference.identifier point to something that is actually exposed as a FHIR instance, but it SHALL point to a business concept that would be expected to be exposed as a FHIR instance, and that instance would need to be of a FHIR resource type allowed by the reference."
                },
                "display": {
                  "type": "string",
                  "pattern": "[ \\r\\n\\t\\S]+",
                  "description": "Plain text narrative that identifies the resource in addition to the resource reference."
                }
              }
            }
          ]
        },
        "productCodeableConcept": {
          "description": "Identifies the food, drug or other product being consumed or supplied in the activity.",
          "allOf": [
            {
              "type": "object",
              "properties": {
                "coding": {
                  "type": "array",
                  "items": {
                    "description": "A reference to a code defined by a terminology system.",
                    "allOf": [
                      {
                        "type": "object",
                        "properties": {
                          "system": {
                            "type": "string",
                            "pattern": "\\S*",
                            "description": "The identification of the code system that defines the meaning of the symbol in the code."
                          },
                          "version": {
                            "type": "string",
                            "pattern": "[ \\r\\n\\t\\S]+",
                            "description": "The version of the code system which was used when choosing this code. Note that a well&ndash;maintained code system does not need the version reported, because the meaning of codes is consistent across versions. However this cannot consistently be assured, and when the meaning is not guaranteed to be consistent, the version SHOULD be exchanged."
                          },
                          "code": {
                            "type": "string",
                            "pattern": "[^\\s]+(\\s[^\\s]+)*",
                            "description": "A symbol in syntax defined by the system. The symbol may be a predefined code or an expression in a syntax defined by the coding system (e.g. post&ndash;coordination)."
                          },
                          "display": {
                            "type": "string",
                            "pattern": "[ \\r\\n\\t\\S]+",
                            "description": "A representation of the meaning of the code in the system, following the rules of the system."
                          },
                          "userSelected": {
                            "type": "boolean",
                            "description": "Indicates that this coding was chosen by a user directly &ndash; e.g. off a pick list of available items (codes or displays)."
                          }
                        }
                      }
                    ]
                  }
                },
                "text": {
                  "type": "string",
                  "pattern": "[ \\r\\n\\t\\S]+",
                  "description": "A human language representation of the concept as seen/selected/uttered by the user who entered the data and/or which represents the intended meaning of the user."
                }
              }
            }
          ]
        },
        "quantity": {
          "description": "Identifies the quantity expected to be consumed at once (per dose, per meal, etc.).",
          "allOf": [
            {
              "allOf": [
                {
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "number",
                      "description": "The value of the measured amount. The value includes an implicit precision in the presentation of the value."
                    },
                    "comparator": {
                      "type": "string",
                      "enum": [
                        "<",
                        "<=",
                        ">=",
                        ">"
                      ],
                      "description": "How the value should be understood and represented &ndash; whether the actual value is greater or less than the stated value due to measurement issues; e.g. if the comparator is \"<\" , then the real value is < stated value."
                    },
                    "unit": {
                      "type": "string",
                      "pattern": "[ \\r\\n\\t\\S]+",
                      "description": "A human&ndash;readable form of the unit."
                    },
                    "system": {
                      "type": "string",
                      "pattern": "\\S*",
                      "description": "The identification of the system that provides the coded form of the unit."
                    },
                    "code": {
                      "type": "string",
                      "pattern": "[^\\s]+(\\s[^\\s]+)*",
                      "description": "A computer processable form of the unit in some unit representation system."
                    }
                  }
                }
              ]
            },
            {
              "type": "object",
              "properties": {}
            }
          ]
        },
        "dosage": {
          "type": "array",
          "items": {
            "description": "Provides detailed dosage instructions in the same way that they are described for MedicationRequest resources.",
            "allOf": [
              {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "modifierExtension": {
                        "type": "array",
                        "items": {
                          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                          "allOf": [
                            {
                              "type": "object",
                              "additionalProperties": true
                            }
                          ]
                        }
                      }
                    }
                  }
                ]
              },
              {
                "type": "object",
                "properties": {
                  "sequence": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Indicates the order in which the dosage instructions should be applied or interpreted."
                  },
                  "text": {
                    "type": "string",
                    "pattern": "[ \\r\\n\\t\\S]+",
                    "description": "Free text dosage instructions e.g. SIG."
                  },
                  "additionalInstruction": {
                    "type": "array",
                    "items": {
                      "description": "Supplemental instructions to the patient on how to take the medication  (e.g. \"with meals\" or\"take half to one hour before food\") or warnings for the patient about the medication (e.g. \"may cause drowsiness\" or \"avoid exposure of skin to direct sunlight or sunlamps\").",
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "coding": {
                              "type": "array",
                              "items": {
                                "description": "A reference to a code defined by a terminology system.",
                                "allOf": [
                                  {
                                    "type": "object",
                                    "properties": {
                                      "system": {
                                        "type": "string",
                                        "pattern": "\\S*",
                                        "description": "The identification of the code system that defines the meaning of the symbol in the code."
                                      },
                                      "version": {
                                        "type": "string",
                                        "pattern": "[ \\r\\n\\t\\S]+",
                                        "description": "The version of the code system which was used when choosing this code. Note that a well&ndash;maintained code system does not need the version reported, because the meaning of codes is consistent across versions. However this cannot consistently be assured, and when the meaning is not guaranteed to be consistent, the version SHOULD be exchanged."
                                      },
                                      "code": {
                                        "type": "string",
                                        "pattern": "[^\\s]+(\\s[^\\s]+)*",
                                        "description": "A symbol in syntax defined by the system. The symbol may be a predefined code or an expression in a syntax defined by the coding system (e.g. post&ndash;coordination)."
                                      },
                                      "display": {
                                        "type": "string",
                                        "pattern": "[ \\r\\n\\t\\S]+",
                                        "description": "A representation of the meaning of the code in the system, following the rules of the system."
                                      },
                                      "userSelected": {
                                        "type": "boolean",
                                        "description": "Indicates that this coding was chosen by a user directly &ndash; e.g. off a pick list of available items (codes or displays)."
                                      }
                                    }
                                  }
                                ]
                              }
                            },
                            "text": {
                              "type": "string",
                              "pattern": "[ \\r\\n\\t\\S]+",
                              "description": "A human language representation of the concept as seen/selected/uttered by the user who entered the data and/or which represents the intended meaning of the user."
                            }
                          }
                        }
                      ]
                    }
                  },
                  "patientInstruction": {
                    "type": "string",
                    "pattern": "[ \\r\\n\\t\\S]+",
                    "description": "Instructions in terms that are understood by the patient or consumer."
                  },
                  "timing": {
                    "description": "When medication should be administered.",
                    "allOf": [
                      {
                        "allOf": [
                          {
                            "type": "object",
                            "properties": {
                              "modifierExtension": {
                                "type": "array",
                                "items": {
                                  "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                                  "allOf": [
                                    {
                                      "type": "object",
                                      "additionalProperties": true
                                    }
                                  ]
                                }
                              }
                            }
                          }
                        ]
                      },
                      {
                        "type": "object",
                        "properties": {
                          "event": {
                            "type": "array",
                            "items": {
                              "type": "string",
                              "pattern": "([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?",
                              "description": "Identifies specific times when the event occurs."
                            }
                          },
                          "repeat": {
                            "description": "A set of rules that describe when the event is scheduled.",
                            "allOf": [
                              {
                                "allOf": [
                                  {
                                    "type": "object",
                                    "properties": {
                                      "modifierExtension": {
                                        "type": "array",
                                        "items": {
                                          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                                          "allOf": [
                                            {
                                              "type": "object",
                                              "additionalProperties": true
                                            }
                                          ]
                                        }
                                      }
                                    }
                                  }
                                ]
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "boundsDuration": {
                                    "description": "Either a duration for the length of the timing schedule, a range of possible length, or outer bounds for start and/or end limits of the timing schedule.",
                                    "allOf": [
                                      {
                                        "allOf": [
                                          {
                                            "type": "object",
                                            "properties": {
                                              "value": {
                                                "type": "number",
                                                "description": "The value of the measured amount. The value includes an implicit precision in the presentation of the value."
                                              },
                                              "comparator": {
                                                "type": "string",
                                                "enum": [
                                                  "<",
                                                  "<=",
                                                  ">=",
                                                  ">"
                                                ],
                                                "description": "How the value should be understood and represented &ndash; whether the actual value is greater or less than the stated value due to measurement issues; e.g. if the comparator is \"<\" , then the real value is < stated value."
                                              },
                                              "unit": {
                                                "type": "string",
                                                "pattern": "[ \\r\\n\\t\\S]+",
                                                "description": "A human&ndash;readable form of the unit."
                                              },
                                              "system": {
                                                "type": "string",
                                                "pattern": "\\S*",
                                                "description": "The identification of the system that provides the coded form of the unit."
                                              },
                                              "code": {
                                                "type": "string",
                                                "pattern": "[^\\s]+(\\s[^\\s]+)*",
                                                "description": "A computer processable form of the unit in some unit representation system."
                                              }
                                            }
                                          }
                                        ]
                                      },
                                      {
                                        "type": "object",
                                        "properties": {}
                                      }
                                    ]
                                  },
                                  "boundsRange": {
                                    "description": "Either a duration for the length of the timing schedule, a range of possible length, or outer bounds for start and/or end limits of the timing schedule.",
                                    "allOf": [
                                      {
                                        "type": "object",
                                        "properties": {
                                          "low": {
                                            "description": "The low limit. The boundary is inclusive.",
                                            "allOf": [
                                              {
                                                "allOf": [
                                                  {
                                                    "type": "object",
                                                    "properties": {
                                                      "value": {
                                                        "type": "number",
                                                        "description": "The value of the measured amount. The value includes an implicit precision in the presentation of the value."
                                                      },
                                                      "comparator": {
                                                        "type": "string",
                                                        "enum": [
                                                          "<",
                                                          "<=",
                                                          ">=",
                                                          ">"
                                                        ],
                                                        "description": "How the value should be understood and represented &ndash; whether the actual value is greater or less than the stated value due to measurement issues; e.g. if the comparator is \"<\" , then the real value is < stated value."
                                                      },
                                                      "unit": {
                                                        "type": "string",
                                                        "pattern": "[ \\r\\n\\t\\S]+",
                                                        "description": "A human&ndash;readable form of the unit."
                                                      },
                                                      "system": {
                                                        "type": "string",
                                                        "pattern": "\\S*",
                                                        "description": "The identification of the system that provides the coded form of the unit."
                                                      },
                                                      "code": {
                                                        "type": "string",
                                                        "pattern": "[^\\s]+(\\s[^\\s]+)*",
                                                        "description": "A computer processable form of the unit in some unit representation system."
                                                      }
                                                    }
                                                  }
                                                ]
                                              },
                                              {
                                                "type": "object",
                                                "properties": {}
                                              }
                                            ]
                                          },
                                          "high": {
                                            "description": "The high limit. The boundary is inclusive.",
                                            "allOf": [
                                              {
                                                "allOf": [
                                                  {
                                                    "type": "object",
                                                    "properties": {
                                                      "value": {
                                                        "type": "number",
                                                        "description": "The value of the measured amount. The value includes an implicit precision in the presentation of the value."
                                                      },
                                                      "comparator": {
                                                        "type": "string",
                                                        "enum": [
                                                          "<",
                                                          "<=",
                                                          ">=",
                                                          ">"
                                                        ],
                                                        "description": "How the value should be understood and represented &ndash; whether the actual value is greater or less than the stated value due to measurement issues; e.g. if the comparator is \"<\" , then the real value is < stated value."
                                                      },
                                                      "unit": {
                                                        "type": "string",
                                                        "pattern": "[ \\r\\n\\t\\S]+",
                                                        "description": "A human&ndash;readable form of the unit."
                                                      },
                                                      "system": {
                                                        "type": "string",
                                                        "pattern": "\\S*",
                                                        "description": "The identification of the system that provides the coded form of the unit."
                                                      },
                                                      "code": {
                                                        "type": "string",
                                                        "pattern": "[^\\s]+(\\s[^\\s]+)*",
                                                        "description": "A computer processable form of the unit in some unit representation system."
                                                      }
                                                    }
                                                  }
                                                ]
                                              },
                                              {
                                                "type": "object",
                                                "properties": {}
                                              }
                                            ]
                                          }
                                        }
                                      }
                                    ]
                                  },
                                  "boundsPeriod": {
                                    "description": "Either a duration for the length of the timing schedule, a range of possible length, or outer bounds for start and/or end limits of the timing schedule.",
                                    "allOf": [
                                      {
                                        "type": "object",
                                        "properties": {
                                          "start": {
                                            "type": "string",
                                            "pattern": "([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?",
                                            "description": "The start of the period. The boundary is inclusive."
                                          },
                                          "end": {
                                            "type": "string",
                                            "pattern": "([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?",
                                            "description": "The end of the period. If the end of the period is missing, it means no end was known or planned at the time the instance was created. The start may be in the past, and the end date in the future, which means that period is expected/planned to end at that time."
                                          }
                                        }
                                      }
                                    ]
                                  },
                                  "count": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "A total count of the desired number of repetitions across the duration of the entire timing specification. If countMax is present, this element indicates the lower bound of the allowed range of count values."
                                  },
                                  "countMax": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "If present, indicates that the count is a range &ndash; so to perform the action between [count] and [countMax] times."
                                  },
                                  "duration": {
                                    "type": "number",
                                    "description": "How long this thing happens for when it happens. If durationMax is present, this element indicates the lower bound of the allowed range of the duration."
                                  },
                                  "durationMax": {
                                    "type": "number",
                                    "description": "If present, indicates that the duration is a range &ndash; so to perform the action between [duration] and [durationMax] time length."
                                  },
                                  "durationUnit": {
                                    "type": "string",
                                    "enum": [
                                      "s",
                                      "min",
                                      "h",
                                      "d",
                                      "wk",
                                      "mo",
                                      "a"
                                    ],
                                    "description": "The units of time for the duration, in UCUM units."
                                  },
                                  "frequency": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "The number of times to repeat the action within the specified period. If frequencyMax is present, this element indicates the lower bound of the allowed range of the frequency."
                                  },
                                  "frequencyMax": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "If present, indicates that the frequency is a range &ndash; so to repeat between [frequency] and [frequencyMax] times within the period or period range."
                                  },
                                  "period": {
                                    "type": "number",
                                    "description": "Indicates the duration of time over which repetitions are to occur; e.g. to express \"3 times per day\", 3 would be the frequency and \"1 day\" would be the period. If periodMax is present, this element indicates the lower bound of the allowed range of the period length."
                                  },
                                  "periodMax": {
                                    "type": "number",
                                    "description": "If present, indicates that the period is a range from [period] to [periodMax], allowing expressing concepts such as \"do this once every 3&ndash;5 days."
                                  },
                                  "periodUnit": {
                                    "type": "string",
                                    "enum": [
                                      "s",
                                      "min",
                                      "h",
                                      "d",
                                      "wk",
                                      "mo",
                                      "a"
                                    ],
                                    "description": "The units of time for the period in UCUM units."
                                  },
                                  "dayOfWeek": {
                                    "type": "array",
                                    "items": {
                                      "type": "string",
                                      "enum": [
                                        "mon",
                                        "tue",
                                        "wed",
                                        "thu",
                                        "fri",
                                        "sat",
                                        "sun"
                                      ],
                                      "description": "If one or more days of week is provided, then the action happens only on the specified day(s)."
                                    }
                                  },
                                  "timeOfDay": {
                                    "type": "array",
                                    "items": {
                                      "type": "string",
                                      "pattern": "([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?",
                                      "description": "Specified time of day for action to take place."
                                    }
                                  },
                                  "when": {
                                    "type": "array",
                                    "items": {
                                      "type": "string",
                                      "enum": [
                                        "MORN",
                                        "MORN.early",
                                        "MORN.late",
                                        "NOON",
                                        "AFT",
                                        "AFT.early",
                                        "AFT.late",
                                        "EVE",
                                        "EVE.early",
                                        "EVE.late",
                                        "NIGHT",
                                        "PHS",
                                        "HS",
                                        "WAKE",
                                        "C",
                                        "CM",
                                        "CD",
                                        "CV",
                                        "AC",
                                        "ACM",
                                        "ACD",
                                        "ACV",
                                        "PC",
                                        "PCM",
                                        "PCD",
                                        "PCV"
                                      ],
                                      "description": "An approximate time period during the day, potentially linked to an event of daily living that indicates when the action should occur."
                                    }
                                  },
                                  "offset": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "The number of minutes from the event. If the event code does not indicate whether the minutes is before or after the event, then the offset is assumed to be after the event."
                                  }
                                }
                              }
                            ]
                          },
                          "code": {
                            "description": "A code for the timing schedule (or just text in code.text). Some codes such as BID are ubiquitous, but many institutions define their own additional codes. If a code is provided, the code is understood to be a complete statement of whatever is specified in the structured timing data, and either the code or the data may be used to interpret the Timing, with the exception that .repeat.bounds still applies over the code (and is not contained in the code).",
                            "allOf": [
                              {
                                "type": "object",
                                "properties": {
                                  "coding": {
                                    "type": "array",
                                    "items": {
                                      "description": "A reference to a code defined by a terminology system.",
                                      "allOf": [
                                        {
                                          "type": "object",
                                          "properties": {
                                            "system": {
                                              "type": "string",
                                              "pattern": "\\S*",
                                              "description": "The identification of the code system that defines the meaning of the symbol in the code."
                                            },
                                            "version": {
                                              "type": "string",
                                              "pattern": "[ \\r\\n\\t\\S]+",
                                              "description": "The version of the code system which was used when choosing this code. Note that a well&ndash;maintained code system does not need the version reported, because the meaning of codes is consistent across versions. However this cannot consistently be assured, and when the meaning is not guaranteed to be consistent, the version SHOULD be exchanged."
                                            },
                                            "code": {
                                              "type": "string",
                                              "pattern": "[^\\s]+(\\s[^\\s]+)*",
                                              "description": "A symbol in syntax defined by the system. The symbol may be a predefined code or an expression in a syntax defined by the coding system (e.g. post&ndash;coordination)."
                                            },
                                            "display": {
                                              "type": "string",
                                              "pattern": "[ \\r\\n\\t\\S]+",
                                              "description": "A representation of the meaning of the code in the system, following the rules of the system."
                                            },
                                            "userSelected": {
                                              "type": "boolean",
                                              "description": "Indicates that this coding was chosen by a user directly &ndash; e.g. off a pick list of available items (codes or displays)."
                                            }
                                          }
                                        }
                                      ]
                                    }
                                  },
                                  "text": {
                                    "type": "string",
                                    "pattern": "[ \\r\\n\\t\\S]+",
                                    "description": "A human language representation of the concept as seen/selected/uttered by the user who entered the data and/or which represents the intended meaning of the user."
                                  }
                                }
                              }
                            ]
                          }
                        }
                      }
                    ]
                  },
                  "asNeededBoolean": {
                    "type": "boolean",
                    "description": "Indicates whether the Medication is only taken when needed within a specific dosing schedule (Boolean option), or it indicates the precondition for taking the Medication (CodeableConcept)."
                  },
                  "asNeededCodeableConcept": {
                    "description": "Indicates whether the Medication is only taken when needed within a specific dosing schedule (Boolean option), or it indicates the precondition for taking the Medication (CodeableConcept).",
                    "allOf": [
                      {
                        "type": "object",
                        "properties": {
                          "coding": {
                            "type": "array",
                            "items": {
                              "description": "A reference to a code defined by a terminology system.",
                              "allOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "system": {
                                      "type": "string",
                                      "pattern": "\\S*",
                                      "description": "The identification of the code system that defines the meaning of the symbol in the code."
                                    },
                                    "version": {
                                      "type": "string",
                                      "pattern": "[ \\r\\n\\t\\S]+",
                                      "description": "The version of the code system which was used when choosing this code. Note that a well&ndash;maintained code system does not need the version reported, because the meaning of codes is consistent across versions. However this cannot consistently be assured, and when the meaning is not guaranteed to be consistent, the version SHOULD be exchanged."
                                    },
                                    "code": {
                                      "type": "string",
                                      "pattern": "[^\\s]+(\\s[^\\s]+)*",
                                      "description": "A symbol in syntax defined by the system. The symbol may be a predefined code or an expression in a syntax defined by the coding system (e.g. post&ndash;coordination)."
                                    },
                                    "display": {
                                      "type": "string",
                                      "pattern": "[ \\r\\n\\t\\S]+",
                                      "description": "A representation of the meaning of the code in the system, following the rules of the system."
                                    },
                                    "userSelected": {
                                      "type": "boolean",
                                      "description": "Indicates that this coding was chosen by a user directly &ndash; e.g. off a pick list of available items (codes or displays)."
                                    }
                                  }
                                }
                              ]
                            }
                          },
                          "text": {
                            "type": "string",
                            "pattern": "[ \\r\\n\\t\\S]+",
                            "description": "A human language representation of the concept as seen/selected/uttered by the user who entered the data and/or which represents the intended meaning of the user."
                          }
                        }
                      }
                    ]
                  },
                  "site": {
                    "description": "Body site to administer to.",
                    "allOf": [
                      {
                        "type": "object",
                        "properties": {
                          "coding": {
                            "type": "array",
                            "items": {
                              "description": "A reference to a code defined by a terminology system.",
                              "allOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "system": {
                                      "type": "string",
                                      "pattern": "\\S*",
                                      "description": "The identification of the code system that defines the meaning of the symbol in the code."
                                    },
                                    "version": {
                                      "type": "string",
                                      "pattern": "[ \\r\\n\\t\\S]+",
                                      "description": "The version of the code system which was used when choosing this code. Note that a well&ndash;maintained code system does not need the version reported, because the meaning of codes is consistent across versions. However this cannot consistently be assured, and when the meaning is not guaranteed to be consistent, the version SHOULD be exchanged."
                                    },
                                    "code": {
                                      "type": "string",
                                      "pattern": "[^\\s]+(\\s[^\\s]+)*",
                                      "description": "A symbol in syntax defined by the system. The symbol may be a predefined code or an expression in a syntax defined by the coding system (e.g. post&ndash;coordination)."
                                    },
                                    "display": {
                                      "type": "string",
                                      "pattern": "[ \\r\\n\\t\\S]+",
                                      "description": "A representation of the meaning of the code in the system, following the rules of the system."
                                    },
                                    "userSelected": {
                                      "type": "boolean",
                                      "description": "Indicates that this coding was chosen by a user directly &ndash; e.g. off a pick list of available items (codes or displays)."
                                    }
                                  }
                                }
                              ]
                            }
                          },
                          "text": {
                            "type": "string",
                            "pattern": "[ \\r\\n\\t\\S]+",
                            "description": "A human language representation of the concept as seen/selected/uttered by the user who entered the data and/or which represents the intended meaning of the user."
                          }
                        }
                      }
                    ]
                  },
                  "route": {
                    "description": "How drug should enter body.",
                    "allOf": [
                      {
                        "type": "object",
                        "properties": {
                          "coding": {
                            "type": "array",
                            "items": {
                              "description": "A reference to a code defined by a terminology system.",
                              "allOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "system": {
                                      "type": "string",
                                      "pattern": "\\S*",
                                      "description": "The identification of the code system that defines the meaning of the symbol in the code."
                                    },
                                    "version": {
                                      "type": "string",
                                      "pattern": "[ \\r\\n\\t\\S]+",
                                      "description": "The version of the code system which was used when choosing this code. Note that a well&ndash;maintained code system does not need the version reported, because the meaning of codes is consistent across versions. However this cannot consistently be assured, and when the meaning is not guaranteed to be consistent, the version SHOULD be exchanged."
                                    },
                                    "code": {
                                      "type": "string",
                                      "pattern": "[^\\s]+(\\s[^\\s]+)*",
                                      "description": "A symbol in syntax defined by the system. The symbol may be a predefined code or an expression in a syntax defined by the coding system (e.g. post&ndash;coordination)."
                                    },
                                    "display": {
                                      "type": "string",
                                      "pattern": "[ \\r\\n\\t\\S]+",
                                      "description": "A representation of the meaning of the code in the system, following the rules of the system."
                                    },
                                    "userSelected": {
                                      "type": "boolean",
                                      "description": "Indicates that this coding was chosen by a user directly &ndash; e.g. off a pick list of available items (codes or displays)."
                                    }
                                  }
                                }
                              ]
                            }
                          },
                          "text": {
                            "type": "string",
                            "pattern": "[ \\r\\n\\t\\S]+",
                            "description": "A human language representation of the concept as seen/selected/uttered by the user who entered the data and/or which represents the intended meaning of the user."
                          }
                        }
                      }
                    ]
                  },
                  "method": {
                    "description": "Technique for administering medication.",
                    "allOf": [
                      {
                        "type": "object",
                        "properties": {
                          "coding": {
                            "type": "array",
                            "items": {
                              "description": "A reference to a code defined by a terminology system.",
                              "allOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "system": {
                                      "type": "string",
                                      "pattern": "\\S*",
                                      "description": "The identification of the code system that defines the meaning of the symbol in the code."
                                    },
                                    "version": {
                                      "type": "string",
                                      "pattern": "[ \\r\\n\\t\\S]+",
                                      "description": "The version of the code system which was used when choosing this code. Note that a well&ndash;maintained code system does not need the version reported, because the meaning of codes is consistent across versions. However this cannot consistently be assured, and when the meaning is not guaranteed to be consistent, the version SHOULD be exchanged."
                                    },
                                    "code": {
                                      "type": "string",
                                      "pattern": "[^\\s]+(\\s[^\\s]+)*",
                                      "description": "A symbol in syntax defined by the system. The symbol may be a predefined code or an expression in a syntax defined by the coding system (e.g. post&ndash;coordination)."
                                    },
                                    "display": {
                                      "type": "string",
                                      "pattern": "[ \\r\\n\\t\\S]+",
                                      "description": "A representation of the meaning of the code in the system, following the rules of the system."
                                    },
                                    "userSelected": {
                                      "type": "boolean",
                                      "description": "Indicates that this coding was chosen by a user directly &ndash; e.g. off a pick list of available items (codes or displays)."
                                    }
                                  }
                                }
                              ]
                            }
                          },
                          "text": {
                            "type": "string",
                            "pattern": "[ \\r\\n\\t\\S]+",
                            "description": "A human language representation of the concept as seen/selected/uttered by the user who entered the data and/or which represents the intended meaning of the user."
                          }
                        }
                      }
                    ]
                  },
                  "doseAndRate": {
                    "type": "array",
                    "items": {
                      "description": "The amount of medication administered.",
                      "allOf": [
                        {
                          "allOf": [
                            {
                              "type": "object",
                              "properties": {
                                "modifierExtension": {
                                  "type": "array",
                                  "items": {
                                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                                    "allOf": [
                                      {
                                        "type": "object",
                                        "additionalProperties": true
                                      }
                                    ]
                                  }
                                }
                              }
                            }
                          ]
                        },
                        {
                          "type": "object",
                          "properties": {
                            "type": {
                              "description": "The kind of dose or rate specified, for example, ordered or calculated.",
                              "allOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "coding": {
                                      "type": "array",
                                      "items": {
                                        "description": "A reference to a code defined by a terminology system.",
                                        "allOf": [
                                          {
                                            "type": "object",
                                            "properties": {
                                              "system": {
                                                "type": "string",
                                                "pattern": "\\S*",
                                                "description": "The identification of the code system that defines the meaning of the symbol in the code."
                                              },
                                              "version": {
                                                "type": "string",
                                                "pattern": "[ \\r\\n\\t\\S]+",
                                                "description": "The version of the code system which was used when choosing this code. Note that a well&ndash;maintained code system does not need the version reported, because the meaning of codes is consistent across versions. However this cannot consistently be assured, and when the meaning is not guaranteed to be consistent, the version SHOULD be exchanged."
                                              },
                                              "code": {
                                                "type": "string",
                                                "pattern": "[^\\s]+(\\s[^\\s]+)*",
                                                "description": "A symbol in syntax defined by the system. The symbol may be a predefined code or an expression in a syntax defined by the coding system (e.g. post&ndash;coordination)."
                                              },
                                              "display": {
                                                "type": "string",
                                                "pattern": "[ \\r\\n\\t\\S]+",
                                                "description": "A representation of the meaning of the code in the system, following the rules of the system."
                                              },
                                              "userSelected": {
                                                "type": "boolean",
                                                "description": "Indicates that this coding was chosen by a user directly &ndash; e.g. off a pick list of available items (codes or displays)."
                                              }
                                            }
                                          }
                                        ]
                                      }
                                    },
                                    "text": {
                                      "type": "string",
                                      "pattern": "[ \\r\\n\\t\\S]+",
                                      "description": "A human language representation of the concept as seen/selected/uttered by the user who entered the data and/or which represents the intended meaning of the user."
                                    }
                                  }
                                }
                              ]
                            },
                            "doseRange": {
                              "description": "Amount of medication per dose.",
                              "allOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "low": {
                                      "description": "The low limit. The boundary is inclusive.",
                                      "allOf": [
                                        {
                                          "allOf": [
                                            {
                                              "type": "object",
                                              "properties": {
                                                "value": {
                                                  "type": "number",
                                                  "description": "The value of the measured amount. The value includes an implicit precision in the presentation of the value."
                                                },
                                                "comparator": {
                                                  "type": "string",
                                                  "enum": [
                                                    "<",
                                                    "<=",
                                                    ">=",
                                                    ">"
                                                  ],
                                                  "description": "How the value should be understood and represented &ndash; whether the actual value is greater or less than the stated value due to measurement issues; e.g. if the comparator is \"<\" , then the real value is < stated value."
                                                },
                                                "unit": {
                                                  "type": "string",
                                                  "pattern": "[ \\r\\n\\t\\S]+",
                                                  "description": "A human&ndash;readable form of the unit."
                                                },
                                                "system": {
                                                  "type": "string",
                                                  "pattern": "\\S*",
                                                  "description": "The identification of the system that provides the coded form of the unit."
                                                },
                                                "code": {
                                                  "type": "string",
                                                  "pattern": "[^\\s]+(\\s[^\\s]+)*",
                                                  "description": "A computer processable form of the unit in some unit representation system."
                                                }
                                              }
                                            }
                                          ]
                                        },
                                        {
                                          "type": "object",
                                          "properties": {}
                                        }
                                      ]
                                    },
                                    "high": {
                                      "description": "The high limit. The boundary is inclusive.",
                                      "allOf": [
                                        {
                                          "allOf": [
                                            {
                                              "type": "object",
                                              "properties": {
                                                "value": {
                                                  "type": "number",
                                                  "description": "The value of the measured amount. The value includes an implicit precision in the presentation of the value."
                                                },
                                                "comparator": {
                                                  "type": "string",
                                                  "enum": [
                                                    "<",
                                                    "<=",
                                                    ">=",
                                                    ">"
                                                  ],
                                                  "description": "How the value should be understood and represented &ndash; whether the actual value is greater or less than the stated value due to measurement issues; e.g. if the comparator is \"<\" , then the real value is < stated value."
                                                },
                                                "unit": {
                                                  "type": "string",
                                                  "pattern": "[ \\r\\n\\t\\S]+",
                                                  "description": "A human&ndash;readable form of the unit."
                                                },
                                                "system": {
                                                  "type": "string",
                                                  "pattern": "\\S*",
                                                  "description": "The identification of the system that provides the coded form of the unit."
                                                },
                                                "code": {
                                                  "type": "string",
                                                  "pattern": "[^\\s]+(\\s[^\\s]+)*",
                                                  "description": "A computer processable form of the unit in some unit representation system."
                                                }
                                              }
                                            }
                                          ]
                                        },
                                        {
                                          "type": "object",
                                          "properties": {}
                                        }
                                      ]
                                    }
                                  }
                                }
                              ]
                            },
                            "doseQuantity": {
                              "description": "Amount of medication per dose.",
                              "allOf": [
                                {
                                  "allOf": [
                                    {
                                      "type": "object",
                                      "properties": {
                                        "value": {
                                          "type": "number",
                                          "description": "The value of the measured amount. The value includes an implicit precision in the presentation of the value."
                                        },
                                        "comparator": {
                                          "type": "string",
                                          "enum": [
                                            "<",
                                            "<=",
                                            ">=",
                                            ">"
                                          ],
                                          "description": "How the value should be understood and represented &ndash; whether the actual value is greater or less than the stated value due to measurement issues; e.g. if the comparator is \"<\" , then the real value is < stated value."
                                        },
                                        "unit": {
                                          "type": "string",
                                          "pattern": "[ \\r\\n\\t\\S]+",
                                          "description": "A human&ndash;readable form of the unit."
                                        },
                                        "system": {
                                          "type": "string",
                                          "pattern": "\\S*",
                                          "description": "The identification of the system that provides the coded form of the unit."
                                        },
                                        "code": {
                                          "type": "string",
                                          "pattern": "[^\\s]+(\\s[^\\s]+)*",
                                          "description": "A computer processable form of the unit in some unit representation system."
                                        }
                                      }
                                    }
                                  ]
                                },
                                {
                                  "type": "object",
                                  "properties": {}
                                }
                              ]
                            },
                            "rateRatio": {
                              "description": "Amount of medication per unit of time.",
                              "allOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "numerator": {
                                      "allOf": [
                                        {
                                          "type": "object",
                                          "properties": {
                                            "value": {
                                              "type": "number",
                                              "description": "The value of the measured amount. The value includes an implicit precision in the presentation of the value."
                                            },
                                            "comparator": {
                                              "type": "string",
                                              "enum": [
                                                "<",
                                                "<=",
                                                ">=",
                                                ">"
                                              ],
                                              "description": "How the value should be understood and represented &ndash; whether the actual value is greater or less than the stated value due to measurement issues; e.g. if the comparator is \"<\" , then the real value is < stated value."
                                            },
                                            "unit": {
                                              "type": "string",
                                              "pattern": "[ \\r\\n\\t\\S]+",
                                              "description": "A human&ndash;readable form of the unit."
                                            },
                                            "system": {
                                              "type": "string",
                                              "pattern": "\\S*",
                                              "description": "The identification of the system that provides the coded form of the unit."
                                            },
                                            "code": {
                                              "type": "string",
                                              "pattern": "[^\\s]+(\\s[^\\s]+)*",
                                              "description": "A computer processable form of the unit in some unit representation system."
                                            }
                                          }
                                        }
                                      ],
                                      "description": "The value of the numerator."
                                    },
                                    "denominator": {
                                      "allOf": [
                                        {
                                          "type": "object",
                                          "properties": {
                                            "value": {
                                              "type": "number",
                                              "description": "The value of the measured amount. The value includes an implicit precision in the presentation of the value."
                                            },
                                            "comparator": {
                                              "type": "string",
                                              "enum": [
                                                "<",
                                                "<=",
                                                ">=",
                                                ">"
                                              ],
                                              "description": "How the value should be understood and represented &ndash; whether the actual value is greater or less than the stated value due to measurement issues; e.g. if the comparator is \"<\" , then the real value is < stated value."
                                            },
                                            "unit": {
                                              "type": "string",
                                              "pattern": "[ \\r\\n\\t\\S]+",
                                              "description": "A human&ndash;readable form of the unit."
                                            },
                                            "system": {
                                              "type": "string",
                                              "pattern": "\\S*",
                                              "description": "The identification of the system that provides the coded form of the unit."
                                            },
                                            "code": {
                                              "type": "string",
                                              "pattern": "[^\\s]+(\\s[^\\s]+)*",
                                              "description": "A computer processable form of the unit in some unit representation system."
                                            }
                                          }
                                        }
                                      ],
                                      "description": "The value of the denominator."
                                    }
                                  }
                                }
                              ]
                            },
                            "rateRange": {
                              "description": "Amount of medication per unit of time.",
                              "allOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "low": {
                                      "description": "The low limit. The boundary is inclusive.",
                                      "allOf": [
                                        {
                                          "allOf": [
                                            {
                                              "type": "object",
                                              "properties": {
                                                "value": {
                                                  "type": "number",
                                                  "description": "The value of the measured amount. The value includes an implicit precision in the presentation of the value."
                                                },
                                                "comparator": {
                                                  "type": "string",
                                                  "enum": [
                                                    "<",
                                                    "<=",
                                                    ">=",
                                                    ">"
                                                  ],
                                                  "description": "How the value should be understood and represented &ndash; whether the actual value is greater or less than the stated value due to measurement issues; e.g. if the comparator is \"<\" , then the real value is < stated value."
                                                },
                                                "unit": {
                                                  "type": "string",
                                                  "pattern": "[ \\r\\n\\t\\S]+",
                                                  "description": "A human&ndash;readable form of the unit."
                                                },
                                                "system": {
                                                  "type": "string",
                                                  "pattern": "\\S*",
                                                  "description": "The identification of the system that provides the coded form of the unit."
                                                },
                                                "code": {
                                                  "type": "string",
                                                  "pattern": "[^\\s]+(\\s[^\\s]+)*",
                                                  "description": "A computer processable form of the unit in some unit representation system."
                                                }
                                              }
                                            }
                                          ]
                                        },
                                        {
                                          "type": "object",
                                          "properties": {}
                                        }
                                      ]
                                    },
                                    "high": {
                                      "description": "The high limit. The boundary is inclusive.",
                                      "allOf": [
                                        {
                                          "allOf": [
                                            {
                                              "type": "object",
                                              "properties": {
                                                "value": {
                                                  "type": "number",
                                                  "description": "The value of the measured amount. The value includes an implicit precision in the presentation of the value."
                                                },
                                                "comparator": {
                                                  "type": "string",
                                                  "enum": [
                                                    "<",
                                                    "<=",
                                                    ">=",
                                                    ">"
                                                  ],
                                                  "description": "How the value should be understood and represented &ndash; whether the actual value is greater or less than the stated value due to measurement issues; e.g. if the comparator is \"<\" , then the real value is < stated value."
                                                },
                                                "unit": {
                                                  "type": "string",
                                                  "pattern": "[ \\r\\n\\t\\S]+",
                                                  "description": "A human&ndash;readable form of the unit."
                                                },
                                                "system": {
                                                  "type": "string",
                                                  "pattern": "\\S*",
                                                  "description": "The identification of the system that provides the coded form of the unit."
                                                },
                                                "code": {
                                                  "type": "string",
                                                  "pattern": "[^\\s]+(\\s[^\\s]+)*",
                                                  "description": "A computer processable form of the unit in some unit representation system."
                                                }
                                              }
                                            }
                                          ]
                                        },
                                        {
                                          "type": "object",
                                          "properties": {}
                                        }
                                      ]
                                    }
                                  }
                                }
                              ]
                            },
                            "rateQuantity": {
                              "description": "Amount of medication per unit of time.",
                              "allOf": [
                                {
                                  "allOf": [
                                    {
                                      "type": "object",
                                      "properties": {
                                        "value": {
                                          "type": "number",
                                          "description": "The value of the measured amount. The value includes an implicit precision in the presentation of the value."
                                        },
                                        "comparator": {
                                          "type": "string",
                                          "enum": [
                                            "<",
                                            "<=",
                                            ">=",
                                            ">"
                                          ],
                                          "description": "How the value should be understood and represented &ndash; whether the actual value is greater or less than the stated value due to measurement issues; e.g. if the comparator is \"<\" , then the real value is < stated value."
                                        },
                                        "unit": {
                                          "type": "string",
                                          "pattern": "[ \\r\\n\\t\\S]+",
                                          "description": "A human&ndash;readable form of the unit."
                                        },
                                        "system": {
                                          "type": "string",
                                          "pattern": "\\S*",
                                          "description": "The identification of the system that provides the coded form of the unit."
                                        },
                                        "code": {
                                          "type": "string",
                                          "pattern": "[^\\s]+(\\s[^\\s]+)*",
                                          "description": "A computer processable form of the unit in some unit representation system."
                                        }
                                      }
                                    }
                                  ]
                                },
                                {
                                  "type": "object",
                                  "properties": {}
                                }
                              ]
                            }
                          }
                        }
                      ]
                    }
                  },
                  "maxDosePerPeriod": {
                    "description": "Upper limit on medication per unit of time.",
                    "allOf": [
                      {
                        "type": "object",
                        "properties": {
                          "numerator": {
                            "allOf": [
                              {
                                "type": "object",
                                "properties": {
                                  "value": {
                                    "type": "number",
                                    "description": "The value of the measured amount. The value includes an implicit precision in the presentation of the value."
                                  },
                                  "comparator": {
                                    "type": "string",
                                    "enum": [
                                      "<",
                                      "<=",
                                      ">=",
                                      ">"
                                    ],
                                    "description": "How the value should be understood and represented &ndash; whether the actual value is greater or less than the stated value due to measurement issues; e.g. if the comparator is \"<\" , then the real value is < stated value."
                                  },
                                  "unit": {
                                    "type": "string",
                                    "pattern": "[ \\r\\n\\t\\S]+",
                                    "description": "A human&ndash;readable form of the unit."
                                  },
                                  "system": {
                                    "type": "string",
                                    "pattern": "\\S*",
                                    "description": "The identification of the system that provides the coded form of the unit."
                                  },
                                  "code": {
                                    "type": "string",
                                    "pattern": "[^\\s]+(\\s[^\\s]+)*",
                                    "description": "A computer processable form of the unit in some unit representation system."
                                  }
                                }
                              }
                            ],
                            "description": "The value of the numerator."
                          },
                          "denominator": {
                            "allOf": [
                              {
                                "type": "object",
                                "properties": {
                                  "value": {
                                    "type": "number",
                                    "description": "The value of the measured amount. The value includes an implicit precision in the presentation of the value."
                                  },
                                  "comparator": {
                                    "type": "string",
                                    "enum": [
                                      "<",
                                      "<=",
                                      ">=",
                                      ">"
                                    ],
                                    "description": "How the value should be understood and represented &ndash; whether the actual value is greater or less than the stated value due to measurement issues; e.g. if the comparator is \"<\" , then the real value is < stated value."
                                  },
                                  "unit": {
                                    "type": "string",
                                    "pattern": "[ \\r\\n\\t\\S]+",
                                    "description": "A human&ndash;readable form of the unit."
                                  },
                                  "system": {
                                    "type": "string",
                                    "pattern": "\\S*",
                                    "description": "The identification of the system that provides the coded form of the unit."
                                  },
                                  "code": {
                                    "type": "string",
                                    "pattern": "[^\\s]+(\\s[^\\s]+)*",
                                    "description": "A computer processable form of the unit in some unit representation system."
                                  }
                                }
                              }
                            ],
                            "description": "The value of the denominator."
                          }
                        }
                      }
                    ]
                  },
                  "maxDosePerAdministration": {
                    "description": "Upper limit on medication per administration.",
                    "allOf": [
                      {
                        "allOf": [
                          {
                            "type": "object",
                            "properties": {
                              "value": {
                                "type": "number",
                                "description": "The value of the measured amount. The value includes an implicit precision in the presentation of the value."
                              },
                              "comparator": {
                                "type": "string",
                                "enum": [
                                  "<",
                                  "<=",
                                  ">=",
                                  ">"
                                ],
                                "description": "How the value should be understood and represented &ndash; whether the actual value is greater or less than the stated value due to measurement issues; e.g. if the comparator is \"<\" , then the real value is < stated value."
                              },
                              "unit": {
                                "type": "string",
                                "pattern": "[ \\r\\n\\t\\S]+",
                                "description": "A human&ndash;readable form of the unit."
                              },
                              "system": {
                                "type": "string",
                                "pattern": "\\S*",
                                "description": "The identification of the system that provides the coded form of the unit."
                              },
                              "code": {
                                "type": "string",
                                "pattern": "[^\\s]+(\\s[^\\s]+)*",
                                "description": "A computer processable form of the unit in some unit representation system."
                              }
                            }
                          }
                        ]
                      },
                      {
                        "type": "object",
                        "properties": {}
                      }
                    ]
                  },
                  "maxDosePerLifetime": {
                    "description": "Upper limit on medication per lifetime of the patient.",
                    "allOf": [
                      {
                        "allOf": [
                          {
                            "type": "object",
                            "properties": {
                              "value": {
                                "type": "number",
                                "description": "The value of the measured amount. The value includes an implicit precision in the presentation of the value."
                              },
                              "comparator": {
                                "type": "string",
                                "enum": [
                                  "<",
                                  "<=",
                                  ">=",
                                  ">"
                                ],
                                "description": "How the value should be understood and represented &ndash; whether the actual value is greater or less than the stated value due to measurement issues; e.g. if the comparator is \"<\" , then the real value is < stated value."
                              },
                              "unit": {
                                "type": "string",
                                "pattern": "[ \\r\\n\\t\\S]+",
                                "description": "A human&ndash;readable form of the unit."
                              },
                              "system": {
                                "type": "string",
                                "pattern": "\\S*",
                                "description": "The identification of the system that provides the coded form of the unit."
                              },
                              "code": {
                                "type": "string",
                                "pattern": "[^\\s]+(\\s[^\\s]+)*",
                                "description": "A computer processable form of the unit in some unit representation system."
                              }
                            }
                          }
                        ]
                      },
                      {
                        "type": "object",
                        "properties": {}
                      }
                    ]
                  }
                }
              }
            ]
          }
        },
        "bodySite": {
          "type": "array",
          "items": {
            "description": "Indicates the sites on the subject's body where the procedure should be performed (I.e. the target sites).",
            "allOf": [
              {
                "type": "object",
                "properties": {
                  "coding": {
                    "type": "array",
                    "items": {
                      "description": "A reference to a code defined by a terminology system.",
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "system": {
                              "type": "string",
                              "pattern": "\\S*",
                              "description": "The identification of the code system that defines the meaning of the symbol in the code."
                            },
                            "version": {
                              "type": "string",
                              "pattern": "[ \\r\\n\\t\\S]+",
                              "description": "The version of the code system which was used when choosing this code. Note that a well&ndash;maintained code system does not need the version reported, because the meaning of codes is consistent across versions. However this cannot consistently be assured, and when the meaning is not guaranteed to be consistent, the version SHOULD be exchanged."
                            },
                            "code": {
                              "type": "string",
                              "pattern": "[^\\s]+(\\s[^\\s]+)*",
                              "description": "A symbol in syntax defined by the system. The symbol may be a predefined code or an expression in a syntax defined by the coding system (e.g. post&ndash;coordination)."
                            },
                            "display": {
                              "type": "string",
                              "pattern": "[ \\r\\n\\t\\S]+",
                              "description": "A representation of the meaning of the code in the system, following the rules of the system."
                            },
                            "userSelected": {
                              "type": "boolean",
                              "description": "Indicates that this coding was chosen by a user directly &ndash; e.g. off a pick list of available items (codes or displays)."
                            }
                          }
                        }
                      ]
                    }
                  },
                  "text": {
                    "type": "string",
                    "pattern": "[ \\r\\n\\t\\S]+",
                    "description": "A human language representation of the concept as seen/selected/uttered by the user who entered the data and/or which represents the intended meaning of the user."
                  }
                }
              }
            ]
          }
        },
        "specimenRequirement": {
          "type": "array",
          "items": {
            "description": "Defines specimen requirements for the action to be performed, such as required specimens for a lab test.",
            "allOf": [
              {
                "type": "object",
                "properties": {
                  "reference": {
                    "type": "string",
                    "pattern": "[ \\r\\n\\t\\S]+",
                    "description": "A reference to a location at which the other resource is found. The reference may be a relative reference, in which case it is relative to the service base URL, or an absolute URL that resolves to the location where the resource is found. The reference may be version specific or not. If the reference is not to a FHIR RESTful server, then it should be assumed to be version specific. Internal fragment references (start with '#') refer to contained resources."
                  },
                  "type": {
                    "type": "string",
                    "pattern": "\\S*",
                    "description": "The expected type of the target of the reference. If both Reference.type and Reference.reference are populated and Reference.reference is a FHIR URL, both SHALL be consistent.\n\nThe type is the Canonical URL of Resource Definition that is the type this reference refers to. References are URLs that are relative to http://hl7.org/fhir/StructureDefinition/ e.g. \"Patient\" is a reference to http://hl7.org/fhir/StructureDefinition/Patient. Absolute URLs are only allowed for logical models (and can only be used in references in logical models, not resources)."
                  },
                  "identifier": {
                    "type": "object",
                    "additionalProperties": true,
                    "description": "An identifier for the target resource. This is used when there is no way to reference the other resource directly, either because the entity it represents is not available through a FHIR server, or because there is no way for the author of the resource to convert a known identifier to an actual location. There is no requirement that a Reference.identifier point to something that is actually exposed as a FHIR instance, but it SHALL point to a business concept that would be expected to be exposed as a FHIR instance, and that instance would need to be of a FHIR resource type allowed by the reference."
                  },
                  "display": {
                    "type": "string",
                    "pattern": "[ \\r\\n\\t\\S]+",
                    "description": "Plain text narrative that identifies the resource in addition to the resource reference."
                  }
                }
              }
            ]
          }
        },
        "observationRequirement": {
          "type": "array",
          "items": {
            "description": "Defines observation requirements for the action to be performed, such as body weight or surface area.",
            "allOf": [
              {
                "type": "object",
                "properties": {
                  "reference": {
                    "type": "string",
                    "pattern": "[ \\r\\n\\t\\S]+",
                    "description": "A reference to a location at which the other resource is found. The reference may be a relative reference, in which case it is relative to the service base URL, or an absolute URL that resolves to the location where the resource is found. The reference may be version specific or not. If the reference is not to a FHIR RESTful server, then it should be assumed to be version specific. Internal fragment references (start with '#') refer to contained resources."
                  },
                  "type": {
                    "type": "string",
                    "pattern": "\\S*",
                    "description": "The expected type of the target of the reference. If both Reference.type and Reference.reference are populated and Reference.reference is a FHIR URL, both SHALL be consistent.\n\nThe type is the Canonical URL of Resource Definition that is the type this reference refers to. References are URLs that are relative to http://hl7.org/fhir/StructureDefinition/ e.g. \"Patient\" is a reference to http://hl7.org/fhir/StructureDefinition/Patient. Absolute URLs are only allowed for logical models (and can only be used in references in logical models, not resources)."
                  },
                  "identifier": {
                    "type": "object",
                    "additionalProperties": true,
                    "description": "An identifier for the target resource. This is used when there is no way to reference the other resource directly, either because the entity it represents is not available through a FHIR server, or because there is no way for the author of the resource to convert a known identifier to an actual location. There is no requirement that a Reference.identifier point to something that is actually exposed as a FHIR instance, but it SHALL point to a business concept that would be expected to be exposed as a FHIR instance, and that instance would need to be of a FHIR resource type allowed by the reference."
                  },
                  "display": {
                    "type": "string",
                    "pattern": "[ \\r\\n\\t\\S]+",
                    "description": "Plain text narrative that identifies the resource in addition to the resource reference."
                  }
                }
              }
            ]
          }
        },
        "observationResultRequirement": {
          "type": "array",
          "items": {
            "description": "Defines the observations that are expected to be produced by the action.",
            "allOf": [
              {
                "type": "object",
                "properties": {
                  "reference": {
                    "type": "string",
                    "pattern": "[ \\r\\n\\t\\S]+",
                    "description": "A reference to a location at which the other resource is found. The reference may be a relative reference, in which case it is relative to the service base URL, or an absolute URL that resolves to the location where the resource is found. The reference may be version specific or not. If the reference is not to a FHIR RESTful server, then it should be assumed to be version specific. Internal fragment references (start with '#') refer to contained resources."
                  },
                  "type": {
                    "type": "string",
                    "pattern": "\\S*",
                    "description": "The expected type of the target of the reference. If both Reference.type and Reference.reference are populated and Reference.reference is a FHIR URL, both SHALL be consistent.\n\nThe type is the Canonical URL of Resource Definition that is the type this reference refers to. References are URLs that are relative to http://hl7.org/fhir/StructureDefinition/ e.g. \"Patient\" is a reference to http://hl7.org/fhir/StructureDefinition/Patient. Absolute URLs are only allowed for logical models (and can only be used in references in logical models, not resources)."
                  },
                  "identifier": {
                    "type": "object",
                    "additionalProperties": true,
                    "description": "An identifier for the target resource. This is used when there is no way to reference the other resource directly, either because the entity it represents is not available through a FHIR server, or because there is no way for the author of the resource to convert a known identifier to an actual location. There is no requirement that a Reference.identifier point to something that is actually exposed as a FHIR instance, but it SHALL point to a business concept that would be expected to be exposed as a FHIR instance, and that instance would need to be of a FHIR resource type allowed by the reference."
                  },
                  "display": {
                    "type": "string",
                    "pattern": "[ \\r\\n\\t\\S]+",
                    "description": "Plain text narrative that identifies the resource in addition to the resource reference."
                  }
                }
              }
            ]
          }
        },
        "transform": {
          "type": "string",
          "pattern": "\\S*",
          "description": "A reference to a StructureMap resource that defines a transform that can be executed to produce the intent resource using the ActivityDefinition instance as the input."
        },
        "dynamicValue": {
          "type": "array",
          "items": {
            "description": "Dynamic values that will be evaluated to produce values for elements of the resulting resource. For example, if the dosage of a medication must be computed based on the patient's weight, a dynamic value would be used to specify an expression that calculated the weight, and the path on the request resource that would contain the result.",
            "allOf": [
              {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "modifierExtension": {
                        "type": "array",
                        "items": {
                          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                          "allOf": [
                            {
                              "type": "object",
                              "additionalProperties": true
                            }
                          ]
                        }
                      }
                    }
                  }
                ]
              },
              {
                "type": "object",
                "properties": {
                  "path": {
                    "type": "string",
                    "pattern": "[ \\r\\n\\t\\S]+",
                    "description": "The path to the element to be customized. This is the path on the resource that will hold the result of the calculation defined by the expression. The specified path SHALL be a FHIRPath resolveable on the specified target type of the ActivityDefinition, and SHALL consist only of identifiers, constant indexers, and a restricted subset of functions. The path is allowed to contain qualifiers (.) to traverse sub&ndash;elements, as well as indexers ([x]) to traverse multiple&ndash;cardinality sub&ndash;elements (see the [Simple FHIRPath Profile](fhirpath.html#simple) for full details)."
                  },
                  "expression": {
                    "description": "An expression specifying the value of the customized element.",
                    "allOf": [
                      {
                        "type": "object",
                        "properties": {
                          "description": {
                            "type": "string",
                            "pattern": "[ \\r\\n\\t\\S]+",
                            "description": "A brief, natural language description of the condition that effectively communicates the intended semantics."
                          },
                          "name": {
                            "type": "string",
                            "pattern": "[A-Za-z0-9\\-\\.]{1,64}",
                            "description": "A short name assigned to the expression to allow for multiple reuse of the expression in the context where it is defined."
                          },
                          "language": {
                            "type": "string",
                            "pattern": "[^\\s]+(\\s[^\\s]+)*",
                            "description": "The media type of the language for the expression."
                          },
                          "expression": {
                            "type": "string",
                            "pattern": "[ \\r\\n\\t\\S]+",
                            "description": "An expression in the specified language that returns a value."
                          },
                          "reference": {
                            "type": "string",
                            "pattern": "\\S*",
                            "description": "A URI that defines where the expression is found."
                          }
                        },
                        "required": [
                          "language"
                        ]
                      }
                    ]
                  }
                },
                "required": [
                  "path",
                  "expression"
                ]
              }
            ]
          }
        }
      },
      "required": [
        "status"
      ]
    }
  ]
}