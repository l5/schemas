{
  "allOf": [
    {
      "allOf": [
        {
          "type": "object",
          "discriminator": "resourceType",
          "properties": {
            "resourceType": {
              "type": "string",
              "enum": [
                "Account",
                "ActivityDefinition",
                "AdverseEvent",
                "AllergyIntolerance",
                "Appointment",
                "AppointmentResponse",
                "AuditEvent",
                "Basic",
                "Binary",
                "BiologicallyDerivedProduct",
                "BodyStructure",
                "Bundle",
                "CapabilityStatement",
                "CarePlan",
                "CareTeam",
                "CatalogEntry",
                "ChargeItem",
                "ChargeItemDefinition",
                "Claim",
                "ClaimResponse",
                "ClinicalImpression",
                "CodeSystem",
                "Communication",
                "CommunicationRequest",
                "CompartmentDefinition",
                "Composition",
                "ConceptMap",
                "Condition",
                "Consent",
                "Contract",
                "Coverage",
                "CoverageEligibilityRequest",
                "CoverageEligibilityResponse",
                "DetectedIssue",
                "Device",
                "DeviceDefinition",
                "DeviceMetric",
                "DeviceRequest",
                "DeviceUseStatement",
                "DiagnosticReport",
                "DocumentManifest",
                "DocumentReference",
                "DomainResource",
                "EffectEvidenceSynthesis",
                "Encounter",
                "Endpoint",
                "EnrollmentRequest",
                "EnrollmentResponse",
                "EpisodeOfCare",
                "EventDefinition",
                "Evidence",
                "EvidenceVariable",
                "ExampleScenario",
                "ExplanationOfBenefit",
                "FamilyMemberHistory",
                "Flag",
                "Goal",
                "GraphDefinition",
                "Group",
                "GuidanceResponse",
                "HealthcareService",
                "ImagingStudy",
                "Immunization",
                "ImmunizationEvaluation",
                "ImmunizationRecommendation",
                "ImplementationGuide",
                "InsurancePlan",
                "Invoice",
                "Library",
                "Linkage",
                "List",
                "Location",
                "Measure",
                "MeasureReport",
                "Media",
                "Medication",
                "MedicationAdministration",
                "MedicationDispense",
                "MedicationKnowledge",
                "MedicationRequest",
                "MedicationStatement",
                "MedicinalProduct",
                "MedicinalProductAuthorization",
                "MedicinalProductContraindication",
                "MedicinalProductIndication",
                "MedicinalProductIngredient",
                "MedicinalProductInteraction",
                "MedicinalProductManufactured",
                "MedicinalProductPackaged",
                "MedicinalProductPharmaceutical",
                "MedicinalProductUndesirableEffect",
                "MessageDefinition",
                "MessageHeader",
                "MolecularSequence",
                "NamingSystem",
                "NutritionOrder",
                "Observation",
                "ObservationDefinition",
                "OperationDefinition",
                "OperationOutcome",
                "Organization",
                "OrganizationAffiliation",
                "Parameters",
                "Patient",
                "PaymentNotice",
                "PaymentReconciliation",
                "Person",
                "PlanDefinition",
                "Practitioner",
                "PractitionerRole",
                "Procedure",
                "Provenance",
                "Questionnaire",
                "QuestionnaireResponse",
                "RelatedPerson",
                "RequestGroup",
                "ResearchDefinition",
                "ResearchElementDefinition",
                "ResearchStudy",
                "ResearchSubject",
                "Resource",
                "RiskAssessment",
                "RiskEvidenceSynthesis",
                "Schedule",
                "SearchParameter",
                "ServiceRequest",
                "Slot",
                "Specimen",
                "SpecimenDefinition",
                "StructureDefinition",
                "StructureMap",
                "Subscription",
                "Substance",
                "SubstanceNucleicAcid",
                "SubstancePolymer",
                "SubstanceProtein",
                "SubstanceReferenceInformation",
                "SubstanceSourceMaterial",
                "SubstanceSpecification",
                "SupplyDelivery",
                "SupplyRequest",
                "Task",
                "TerminologyCapabilities",
                "TestReport",
                "TestScript",
                "ValueSet",
                "VerificationResult",
                "VisionPrescription"
              ]
            },
            "id": {
              "type": "string",
              "pattern": "[A-Za-z0-9\\-\\.]{1,64}",
              "description": "The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes."
            },
            "meta": {
              "description": "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
              "allOf": [
                {
                  "type": "object",
                  "properties": {
                    "versionId": {
                      "type": "string",
                      "pattern": "[A-Za-z0-9\\-\\.]{1,64}",
                      "description": "The version specific identifier, as it appears in the version portion of the URL. This value changes when the resource is created, updated, or deleted."
                    },
                    "lastUpdated": {
                      "type": "string",
                      "pattern": "([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))",
                      "description": "When the resource last changed &ndash; e.g. when the version changed."
                    },
                    "source": {
                      "type": "string",
                      "pattern": "\\S*",
                      "description": "A uri that identifies the source system of the resource. This provides a minimal amount of [Provenance](provenance.html#) information that can be used to track or differentiate the source of information in the resource. The source may identify another FHIR server, document, message, database, etc."
                    },
                    "profile": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "pattern": "\\S*",
                        "description": "A list of profiles (references to [StructureDefinition](structuredefinition.html#) resources) that this resource claims to conform to. The URL is a reference to [StructureDefinition.url](structuredefinition&ndash;definitions.html#StructureDefinition.url)."
                      }
                    },
                    "security": {
                      "type": "array",
                      "items": {
                        "description": "Security labels applied to this resource. These tags connect specific resources to the overall security policy and infrastructure.",
                        "allOf": [
                          {
                            "type": "object",
                            "properties": {
                              "system": {
                                "type": "string",
                                "pattern": "\\S*",
                                "description": "The identification of the code system that defines the meaning of the symbol in the code."
                              },
                              "version": {
                                "type": "string",
                                "pattern": "[ \\r\\n\\t\\S]+",
                                "description": "The version of the code system which was used when choosing this code. Note that a well&ndash;maintained code system does not need the version reported, because the meaning of codes is consistent across versions. However this cannot consistently be assured, and when the meaning is not guaranteed to be consistent, the version SHOULD be exchanged."
                              },
                              "code": {
                                "type": "string",
                                "pattern": "[^\\s]+(\\s[^\\s]+)*",
                                "description": "A symbol in syntax defined by the system. The symbol may be a predefined code or an expression in a syntax defined by the coding system (e.g. post&ndash;coordination)."
                              },
                              "display": {
                                "type": "string",
                                "pattern": "[ \\r\\n\\t\\S]+",
                                "description": "A representation of the meaning of the code in the system, following the rules of the system."
                              },
                              "userSelected": {
                                "type": "boolean",
                                "description": "Indicates that this coding was chosen by a user directly &ndash; e.g. off a pick list of available items (codes or displays)."
                              }
                            }
                          }
                        ]
                      }
                    },
                    "tag": {
                      "type": "array",
                      "items": {
                        "description": "Tags applied to this resource. Tags are intended to be used to identify and relate resources to process and workflow, and applications are not required to consider the tags when interpreting the meaning of a resource.",
                        "allOf": [
                          {
                            "type": "object",
                            "properties": {
                              "system": {
                                "type": "string",
                                "pattern": "\\S*",
                                "description": "The identification of the code system that defines the meaning of the symbol in the code."
                              },
                              "version": {
                                "type": "string",
                                "pattern": "[ \\r\\n\\t\\S]+",
                                "description": "The version of the code system which was used when choosing this code. Note that a well&ndash;maintained code system does not need the version reported, because the meaning of codes is consistent across versions. However this cannot consistently be assured, and when the meaning is not guaranteed to be consistent, the version SHOULD be exchanged."
                              },
                              "code": {
                                "type": "string",
                                "pattern": "[^\\s]+(\\s[^\\s]+)*",
                                "description": "A symbol in syntax defined by the system. The symbol may be a predefined code or an expression in a syntax defined by the coding system (e.g. post&ndash;coordination)."
                              },
                              "display": {
                                "type": "string",
                                "pattern": "[ \\r\\n\\t\\S]+",
                                "description": "A representation of the meaning of the code in the system, following the rules of the system."
                              },
                              "userSelected": {
                                "type": "boolean",
                                "description": "Indicates that this coding was chosen by a user directly &ndash; e.g. off a pick list of available items (codes or displays)."
                              }
                            }
                          }
                        ]
                      }
                    }
                  }
                }
              ]
            },
            "implicitRules": {
              "type": "string",
              "pattern": "\\S*",
              "description": "A reference to a set of rules that were followed when the resource was constructed, and which must be understood when processing the content. Often, this is a reference to an implementation guide that defines the special rules along with other profiles etc."
            },
            "language": {
              "type": "string",
              "pattern": "[^\\s]+(\\s[^\\s]+)*",
              "description": "The base language in which the resource is written."
            }
          },
          "required": [
            "resourceType"
          ]
        },
        {
          "type": "object",
          "properties": {
            "text": {
              "description": "A human&ndash;readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it \"clinically safe\" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.",
              "allOf": [
                {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "enum": [
                        "generated",
                        "extensions",
                        "additional",
                        "empty"
                      ],
                      "description": "The status of the narrative &ndash; whether it's entirely generated (from just the defined data or the extensions too), or whether a human authored it and it may contain additional data."
                    },
                    "div": {
                      "type": "string",
                      "description": "The actual narrative content, a stripped down version of XHTML."
                    }
                  },
                  "required": [
                    "status",
                    "div"
                  ]
                }
              ]
            },
            "contained": {
              "type": "array",
              "items": {
                "type": "object",
                "discriminator": "resourceType",
                "properties": {
                  "resourceType": {
                    "type": "string",
                    "enum": [
                      "Account",
                      "ActivityDefinition",
                      "AdverseEvent",
                      "AllergyIntolerance",
                      "Appointment",
                      "AppointmentResponse",
                      "AuditEvent",
                      "Basic",
                      "Binary",
                      "BiologicallyDerivedProduct",
                      "BodyStructure",
                      "Bundle",
                      "CapabilityStatement",
                      "CarePlan",
                      "CareTeam",
                      "CatalogEntry",
                      "ChargeItem",
                      "ChargeItemDefinition",
                      "Claim",
                      "ClaimResponse",
                      "ClinicalImpression",
                      "CodeSystem",
                      "Communication",
                      "CommunicationRequest",
                      "CompartmentDefinition",
                      "Composition",
                      "ConceptMap",
                      "Condition",
                      "Consent",
                      "Contract",
                      "Coverage",
                      "CoverageEligibilityRequest",
                      "CoverageEligibilityResponse",
                      "DetectedIssue",
                      "Device",
                      "DeviceDefinition",
                      "DeviceMetric",
                      "DeviceRequest",
                      "DeviceUseStatement",
                      "DiagnosticReport",
                      "DocumentManifest",
                      "DocumentReference",
                      "DomainResource",
                      "EffectEvidenceSynthesis",
                      "Encounter",
                      "Endpoint",
                      "EnrollmentRequest",
                      "EnrollmentResponse",
                      "EpisodeOfCare",
                      "EventDefinition",
                      "Evidence",
                      "EvidenceVariable",
                      "ExampleScenario",
                      "ExplanationOfBenefit",
                      "FamilyMemberHistory",
                      "Flag",
                      "Goal",
                      "GraphDefinition",
                      "Group",
                      "GuidanceResponse",
                      "HealthcareService",
                      "ImagingStudy",
                      "Immunization",
                      "ImmunizationEvaluation",
                      "ImmunizationRecommendation",
                      "ImplementationGuide",
                      "InsurancePlan",
                      "Invoice",
                      "Library",
                      "Linkage",
                      "List",
                      "Location",
                      "Measure",
                      "MeasureReport",
                      "Media",
                      "Medication",
                      "MedicationAdministration",
                      "MedicationDispense",
                      "MedicationKnowledge",
                      "MedicationRequest",
                      "MedicationStatement",
                      "MedicinalProduct",
                      "MedicinalProductAuthorization",
                      "MedicinalProductContraindication",
                      "MedicinalProductIndication",
                      "MedicinalProductIngredient",
                      "MedicinalProductInteraction",
                      "MedicinalProductManufactured",
                      "MedicinalProductPackaged",
                      "MedicinalProductPharmaceutical",
                      "MedicinalProductUndesirableEffect",
                      "MessageDefinition",
                      "MessageHeader",
                      "MolecularSequence",
                      "NamingSystem",
                      "NutritionOrder",
                      "Observation",
                      "ObservationDefinition",
                      "OperationDefinition",
                      "OperationOutcome",
                      "Organization",
                      "OrganizationAffiliation",
                      "Parameters",
                      "Patient",
                      "PaymentNotice",
                      "PaymentReconciliation",
                      "Person",
                      "PlanDefinition",
                      "Practitioner",
                      "PractitionerRole",
                      "Procedure",
                      "Provenance",
                      "Questionnaire",
                      "QuestionnaireResponse",
                      "RelatedPerson",
                      "RequestGroup",
                      "ResearchDefinition",
                      "ResearchElementDefinition",
                      "ResearchStudy",
                      "ResearchSubject",
                      "Resource",
                      "RiskAssessment",
                      "RiskEvidenceSynthesis",
                      "Schedule",
                      "SearchParameter",
                      "ServiceRequest",
                      "Slot",
                      "Specimen",
                      "SpecimenDefinition",
                      "StructureDefinition",
                      "StructureMap",
                      "Subscription",
                      "Substance",
                      "SubstanceNucleicAcid",
                      "SubstancePolymer",
                      "SubstanceProtein",
                      "SubstanceReferenceInformation",
                      "SubstanceSourceMaterial",
                      "SubstanceSpecification",
                      "SupplyDelivery",
                      "SupplyRequest",
                      "Task",
                      "TerminologyCapabilities",
                      "TestReport",
                      "TestScript",
                      "ValueSet",
                      "VerificationResult",
                      "VisionPrescription"
                    ]
                  },
                  "id": {
                    "type": "string",
                    "pattern": "[A-Za-z0-9\\-\\.]{1,64}",
                    "description": "The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes."
                  },
                  "meta": {
                    "description": "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
                    "allOf": [
                      {
                        "type": "object",
                        "properties": {
                          "versionId": {
                            "type": "string",
                            "pattern": "[A-Za-z0-9\\-\\.]{1,64}",
                            "description": "The version specific identifier, as it appears in the version portion of the URL. This value changes when the resource is created, updated, or deleted."
                          },
                          "lastUpdated": {
                            "type": "string",
                            "pattern": "([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))",
                            "description": "When the resource last changed &ndash; e.g. when the version changed."
                          },
                          "source": {
                            "type": "string",
                            "pattern": "\\S*",
                            "description": "A uri that identifies the source system of the resource. This provides a minimal amount of [Provenance](provenance.html#) information that can be used to track or differentiate the source of information in the resource. The source may identify another FHIR server, document, message, database, etc."
                          },
                          "profile": {
                            "type": "array",
                            "items": {
                              "type": "string",
                              "pattern": "\\S*",
                              "description": "A list of profiles (references to [StructureDefinition](structuredefinition.html#) resources) that this resource claims to conform to. The URL is a reference to [StructureDefinition.url](structuredefinition&ndash;definitions.html#StructureDefinition.url)."
                            }
                          },
                          "security": {
                            "type": "array",
                            "items": {
                              "description": "Security labels applied to this resource. These tags connect specific resources to the overall security policy and infrastructure.",
                              "allOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "system": {
                                      "type": "string",
                                      "pattern": "\\S*",
                                      "description": "The identification of the code system that defines the meaning of the symbol in the code."
                                    },
                                    "version": {
                                      "type": "string",
                                      "pattern": "[ \\r\\n\\t\\S]+",
                                      "description": "The version of the code system which was used when choosing this code. Note that a well&ndash;maintained code system does not need the version reported, because the meaning of codes is consistent across versions. However this cannot consistently be assured, and when the meaning is not guaranteed to be consistent, the version SHOULD be exchanged."
                                    },
                                    "code": {
                                      "type": "string",
                                      "pattern": "[^\\s]+(\\s[^\\s]+)*",
                                      "description": "A symbol in syntax defined by the system. The symbol may be a predefined code or an expression in a syntax defined by the coding system (e.g. post&ndash;coordination)."
                                    },
                                    "display": {
                                      "type": "string",
                                      "pattern": "[ \\r\\n\\t\\S]+",
                                      "description": "A representation of the meaning of the code in the system, following the rules of the system."
                                    },
                                    "userSelected": {
                                      "type": "boolean",
                                      "description": "Indicates that this coding was chosen by a user directly &ndash; e.g. off a pick list of available items (codes or displays)."
                                    }
                                  }
                                }
                              ]
                            }
                          },
                          "tag": {
                            "type": "array",
                            "items": {
                              "description": "Tags applied to this resource. Tags are intended to be used to identify and relate resources to process and workflow, and applications are not required to consider the tags when interpreting the meaning of a resource.",
                              "allOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "system": {
                                      "type": "string",
                                      "pattern": "\\S*",
                                      "description": "The identification of the code system that defines the meaning of the symbol in the code."
                                    },
                                    "version": {
                                      "type": "string",
                                      "pattern": "[ \\r\\n\\t\\S]+",
                                      "description": "The version of the code system which was used when choosing this code. Note that a well&ndash;maintained code system does not need the version reported, because the meaning of codes is consistent across versions. However this cannot consistently be assured, and when the meaning is not guaranteed to be consistent, the version SHOULD be exchanged."
                                    },
                                    "code": {
                                      "type": "string",
                                      "pattern": "[^\\s]+(\\s[^\\s]+)*",
                                      "description": "A symbol in syntax defined by the system. The symbol may be a predefined code or an expression in a syntax defined by the coding system (e.g. post&ndash;coordination)."
                                    },
                                    "display": {
                                      "type": "string",
                                      "pattern": "[ \\r\\n\\t\\S]+",
                                      "description": "A representation of the meaning of the code in the system, following the rules of the system."
                                    },
                                    "userSelected": {
                                      "type": "boolean",
                                      "description": "Indicates that this coding was chosen by a user directly &ndash; e.g. off a pick list of available items (codes or displays)."
                                    }
                                  }
                                }
                              ]
                            }
                          }
                        }
                      }
                    ]
                  },
                  "implicitRules": {
                    "type": "string",
                    "pattern": "\\S*",
                    "description": "A reference to a set of rules that were followed when the resource was constructed, and which must be understood when processing the content. Often, this is a reference to an implementation guide that defines the special rules along with other profiles etc."
                  },
                  "language": {
                    "type": "string",
                    "pattern": "[^\\s]+(\\s[^\\s]+)*",
                    "description": "The base language in which the resource is written."
                  }
                },
                "required": [
                  "resourceType"
                ],
                "description": "These resources do not have an independent existence apart from the resource that contains them &ndash; they cannot be identified independently, and nor can they have their own independent transaction scope."
              }
            },
            "extension": {
              "type": "array",
              "items": {
                "description": "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                "allOf": [
                  {
                    "type": "object",
                    "additionalProperties": true
                  }
                ]
              }
            },
            "modifierExtension": {
              "type": "array",
              "items": {
                "description": "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                "allOf": [
                  {
                    "type": "object",
                    "additionalProperties": true
                  }
                ]
              }
            }
          }
        }
      ]
    },
    {
      "type": "object",
      "properties": {
        "identifier": {
          "type": "array",
          "items": {
            "description": "A unique identifier assigned to this observation.",
            "allOf": [
              {
                "type": "object",
                "properties": {
                  "use": {
                    "type": "string",
                    "enum": [
                      "usual",
                      "official",
                      "temp",
                      "secondary",
                      "old"
                    ],
                    "description": "The purpose of this identifier."
                  },
                  "type": {
                    "description": "A coded type for the identifier that can be used to determine which identifier to use for a specific purpose.",
                    "allOf": [
                      {
                        "type": "object",
                        "properties": {
                          "coding": {
                            "type": "array",
                            "items": {
                              "description": "A reference to a code defined by a terminology system.",
                              "allOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "system": {
                                      "type": "string",
                                      "pattern": "\\S*",
                                      "description": "The identification of the code system that defines the meaning of the symbol in the code."
                                    },
                                    "version": {
                                      "type": "string",
                                      "pattern": "[ \\r\\n\\t\\S]+",
                                      "description": "The version of the code system which was used when choosing this code. Note that a well&ndash;maintained code system does not need the version reported, because the meaning of codes is consistent across versions. However this cannot consistently be assured, and when the meaning is not guaranteed to be consistent, the version SHOULD be exchanged."
                                    },
                                    "code": {
                                      "type": "string",
                                      "pattern": "[^\\s]+(\\s[^\\s]+)*",
                                      "description": "A symbol in syntax defined by the system. The symbol may be a predefined code or an expression in a syntax defined by the coding system (e.g. post&ndash;coordination)."
                                    },
                                    "display": {
                                      "type": "string",
                                      "pattern": "[ \\r\\n\\t\\S]+",
                                      "description": "A representation of the meaning of the code in the system, following the rules of the system."
                                    },
                                    "userSelected": {
                                      "type": "boolean",
                                      "description": "Indicates that this coding was chosen by a user directly &ndash; e.g. off a pick list of available items (codes or displays)."
                                    }
                                  }
                                }
                              ]
                            }
                          },
                          "text": {
                            "type": "string",
                            "pattern": "[ \\r\\n\\t\\S]+",
                            "description": "A human language representation of the concept as seen/selected/uttered by the user who entered the data and/or which represents the intended meaning of the user."
                          }
                        }
                      }
                    ]
                  },
                  "system": {
                    "type": "string",
                    "pattern": "\\S*",
                    "description": "Establishes the namespace for the value &ndash; that is, a URL that describes a set values that are unique."
                  },
                  "value": {
                    "type": "string",
                    "pattern": "[ \\r\\n\\t\\S]+",
                    "description": "The portion of the identifier typically relevant to the user and which is unique within the context of the system."
                  },
                  "period": {
                    "description": "Time period during which identifier is/was valid for use.",
                    "allOf": [
                      {
                        "type": "object",
                        "properties": {
                          "start": {
                            "type": "string",
                            "pattern": "([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?",
                            "description": "The start of the period. The boundary is inclusive."
                          },
                          "end": {
                            "type": "string",
                            "pattern": "([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?",
                            "description": "The end of the period. If the end of the period is missing, it means no end was known or planned at the time the instance was created. The start may be in the past, and the end date in the future, which means that period is expected/planned to end at that time."
                          }
                        }
                      }
                    ]
                  },
                  "assigner": {
                    "description": "Organization that issued/manages the identifier.",
                    "allOf": [
                      {
                        "type": "object",
                        "properties": {
                          "reference": {
                            "type": "string",
                            "pattern": "[ \\r\\n\\t\\S]+",
                            "description": "A reference to a location at which the other resource is found. The reference may be a relative reference, in which case it is relative to the service base URL, or an absolute URL that resolves to the location where the resource is found. The reference may be version specific or not. If the reference is not to a FHIR RESTful server, then it should be assumed to be version specific. Internal fragment references (start with '#') refer to contained resources."
                          },
                          "type": {
                            "type": "string",
                            "pattern": "\\S*",
                            "description": "The expected type of the target of the reference. If both Reference.type and Reference.reference are populated and Reference.reference is a FHIR URL, both SHALL be consistent.\n\nThe type is the Canonical URL of Resource Definition that is the type this reference refers to. References are URLs that are relative to http://hl7.org/fhir/StructureDefinition/ e.g. \"Patient\" is a reference to http://hl7.org/fhir/StructureDefinition/Patient. Absolute URLs are only allowed for logical models (and can only be used in references in logical models, not resources)."
                          },
                          "identifier": {
                            "type": "object",
                            "additionalProperties": true,
                            "description": "An identifier for the target resource. This is used when there is no way to reference the other resource directly, either because the entity it represents is not available through a FHIR server, or because there is no way for the author of the resource to convert a known identifier to an actual location. There is no requirement that a Reference.identifier point to something that is actually exposed as a FHIR instance, but it SHALL point to a business concept that would be expected to be exposed as a FHIR instance, and that instance would need to be of a FHIR resource type allowed by the reference."
                          },
                          "display": {
                            "type": "string",
                            "pattern": "[ \\r\\n\\t\\S]+",
                            "description": "Plain text narrative that identifies the resource in addition to the resource reference."
                          }
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        },
        "basedOn": {
          "type": "array",
          "items": {
            "description": "A plan, proposal or order that is fulfilled in whole or in part by this event.  For example, a MedicationRequest may require a patient to have laboratory test performed before  it is dispensed.",
            "allOf": [
              {
                "type": "object",
                "properties": {
                  "reference": {
                    "type": "string",
                    "pattern": "[ \\r\\n\\t\\S]+",
                    "description": "A reference to a location at which the other resource is found. The reference may be a relative reference, in which case it is relative to the service base URL, or an absolute URL that resolves to the location where the resource is found. The reference may be version specific or not. If the reference is not to a FHIR RESTful server, then it should be assumed to be version specific. Internal fragment references (start with '#') refer to contained resources."
                  },
                  "type": {
                    "type": "string",
                    "pattern": "\\S*",
                    "description": "The expected type of the target of the reference. If both Reference.type and Reference.reference are populated and Reference.reference is a FHIR URL, both SHALL be consistent.\n\nThe type is the Canonical URL of Resource Definition that is the type this reference refers to. References are URLs that are relative to http://hl7.org/fhir/StructureDefinition/ e.g. \"Patient\" is a reference to http://hl7.org/fhir/StructureDefinition/Patient. Absolute URLs are only allowed for logical models (and can only be used in references in logical models, not resources)."
                  },
                  "identifier": {
                    "type": "object",
                    "additionalProperties": true,
                    "description": "An identifier for the target resource. This is used when there is no way to reference the other resource directly, either because the entity it represents is not available through a FHIR server, or because there is no way for the author of the resource to convert a known identifier to an actual location. There is no requirement that a Reference.identifier point to something that is actually exposed as a FHIR instance, but it SHALL point to a business concept that would be expected to be exposed as a FHIR instance, and that instance would need to be of a FHIR resource type allowed by the reference."
                  },
                  "display": {
                    "type": "string",
                    "pattern": "[ \\r\\n\\t\\S]+",
                    "description": "Plain text narrative that identifies the resource in addition to the resource reference."
                  }
                }
              }
            ]
          }
        },
        "partOf": {
          "type": "array",
          "items": {
            "description": "A larger event of which this particular Observation is a component or step.  For example,  an observation as part of a procedure.",
            "allOf": [
              {
                "type": "object",
                "properties": {
                  "reference": {
                    "type": "string",
                    "pattern": "[ \\r\\n\\t\\S]+",
                    "description": "A reference to a location at which the other resource is found. The reference may be a relative reference, in which case it is relative to the service base URL, or an absolute URL that resolves to the location where the resource is found. The reference may be version specific or not. If the reference is not to a FHIR RESTful server, then it should be assumed to be version specific. Internal fragment references (start with '#') refer to contained resources."
                  },
                  "type": {
                    "type": "string",
                    "pattern": "\\S*",
                    "description": "The expected type of the target of the reference. If both Reference.type and Reference.reference are populated and Reference.reference is a FHIR URL, both SHALL be consistent.\n\nThe type is the Canonical URL of Resource Definition that is the type this reference refers to. References are URLs that are relative to http://hl7.org/fhir/StructureDefinition/ e.g. \"Patient\" is a reference to http://hl7.org/fhir/StructureDefinition/Patient. Absolute URLs are only allowed for logical models (and can only be used in references in logical models, not resources)."
                  },
                  "identifier": {
                    "type": "object",
                    "additionalProperties": true,
                    "description": "An identifier for the target resource. This is used when there is no way to reference the other resource directly, either because the entity it represents is not available through a FHIR server, or because there is no way for the author of the resource to convert a known identifier to an actual location. There is no requirement that a Reference.identifier point to something that is actually exposed as a FHIR instance, but it SHALL point to a business concept that would be expected to be exposed as a FHIR instance, and that instance would need to be of a FHIR resource type allowed by the reference."
                  },
                  "display": {
                    "type": "string",
                    "pattern": "[ \\r\\n\\t\\S]+",
                    "description": "Plain text narrative that identifies the resource in addition to the resource reference."
                  }
                }
              }
            ]
          }
        },
        "status": {
          "type": "string",
          "enum": [
            "registered",
            "preliminary",
            "final",
            "amended",
            "corrected",
            "cancelled",
            "entered-in-error",
            "unknown"
          ],
          "description": "The status of the result value."
        },
        "category": {
          "type": "array",
          "items": {
            "description": "A code that classifies the general type of observation being made.",
            "allOf": [
              {
                "type": "object",
                "properties": {
                  "coding": {
                    "type": "array",
                    "items": {
                      "description": "A reference to a code defined by a terminology system.",
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "system": {
                              "type": "string",
                              "pattern": "\\S*",
                              "description": "The identification of the code system that defines the meaning of the symbol in the code."
                            },
                            "version": {
                              "type": "string",
                              "pattern": "[ \\r\\n\\t\\S]+",
                              "description": "The version of the code system which was used when choosing this code. Note that a well&ndash;maintained code system does not need the version reported, because the meaning of codes is consistent across versions. However this cannot consistently be assured, and when the meaning is not guaranteed to be consistent, the version SHOULD be exchanged."
                            },
                            "code": {
                              "type": "string",
                              "pattern": "[^\\s]+(\\s[^\\s]+)*",
                              "description": "A symbol in syntax defined by the system. The symbol may be a predefined code or an expression in a syntax defined by the coding system (e.g. post&ndash;coordination)."
                            },
                            "display": {
                              "type": "string",
                              "pattern": "[ \\r\\n\\t\\S]+",
                              "description": "A representation of the meaning of the code in the system, following the rules of the system."
                            },
                            "userSelected": {
                              "type": "boolean",
                              "description": "Indicates that this coding was chosen by a user directly &ndash; e.g. off a pick list of available items (codes or displays)."
                            }
                          }
                        }
                      ]
                    }
                  },
                  "text": {
                    "type": "string",
                    "pattern": "[ \\r\\n\\t\\S]+",
                    "description": "A human language representation of the concept as seen/selected/uttered by the user who entered the data and/or which represents the intended meaning of the user."
                  }
                }
              }
            ]
          }
        },
        "code": {
          "description": "Describes what was observed. Sometimes this is called the observation \"name\".",
          "allOf": [
            {
              "type": "object",
              "properties": {
                "coding": {
                  "type": "array",
                  "items": {
                    "description": "A reference to a code defined by a terminology system.",
                    "allOf": [
                      {
                        "type": "object",
                        "properties": {
                          "system": {
                            "type": "string",
                            "pattern": "\\S*",
                            "description": "The identification of the code system that defines the meaning of the symbol in the code."
                          },
                          "version": {
                            "type": "string",
                            "pattern": "[ \\r\\n\\t\\S]+",
                            "description": "The version of the code system which was used when choosing this code. Note that a well&ndash;maintained code system does not need the version reported, because the meaning of codes is consistent across versions. However this cannot consistently be assured, and when the meaning is not guaranteed to be consistent, the version SHOULD be exchanged."
                          },
                          "code": {
                            "type": "string",
                            "pattern": "[^\\s]+(\\s[^\\s]+)*",
                            "description": "A symbol in syntax defined by the system. The symbol may be a predefined code or an expression in a syntax defined by the coding system (e.g. post&ndash;coordination)."
                          },
                          "display": {
                            "type": "string",
                            "pattern": "[ \\r\\n\\t\\S]+",
                            "description": "A representation of the meaning of the code in the system, following the rules of the system."
                          },
                          "userSelected": {
                            "type": "boolean",
                            "description": "Indicates that this coding was chosen by a user directly &ndash; e.g. off a pick list of available items (codes or displays)."
                          }
                        }
                      }
                    ]
                  }
                },
                "text": {
                  "type": "string",
                  "pattern": "[ \\r\\n\\t\\S]+",
                  "description": "A human language representation of the concept as seen/selected/uttered by the user who entered the data and/or which represents the intended meaning of the user."
                }
              }
            }
          ]
        },
        "subject": {
          "description": "The patient, or group of patients, location, or device this observation is about and into whose record the observation is placed. If the actual focus of the observation is different from the subject (or a sample of, part, or region of the subject), the `focus` element or the `code` itself specifies the actual focus of the observation.",
          "allOf": [
            {
              "type": "object",
              "properties": {
                "reference": {
                  "type": "string",
                  "pattern": "[ \\r\\n\\t\\S]+",
                  "description": "A reference to a location at which the other resource is found. The reference may be a relative reference, in which case it is relative to the service base URL, or an absolute URL that resolves to the location where the resource is found. The reference may be version specific or not. If the reference is not to a FHIR RESTful server, then it should be assumed to be version specific. Internal fragment references (start with '#') refer to contained resources."
                },
                "type": {
                  "type": "string",
                  "pattern": "\\S*",
                  "description": "The expected type of the target of the reference. If both Reference.type and Reference.reference are populated and Reference.reference is a FHIR URL, both SHALL be consistent.\n\nThe type is the Canonical URL of Resource Definition that is the type this reference refers to. References are URLs that are relative to http://hl7.org/fhir/StructureDefinition/ e.g. \"Patient\" is a reference to http://hl7.org/fhir/StructureDefinition/Patient. Absolute URLs are only allowed for logical models (and can only be used in references in logical models, not resources)."
                },
                "identifier": {
                  "type": "object",
                  "additionalProperties": true,
                  "description": "An identifier for the target resource. This is used when there is no way to reference the other resource directly, either because the entity it represents is not available through a FHIR server, or because there is no way for the author of the resource to convert a known identifier to an actual location. There is no requirement that a Reference.identifier point to something that is actually exposed as a FHIR instance, but it SHALL point to a business concept that would be expected to be exposed as a FHIR instance, and that instance would need to be of a FHIR resource type allowed by the reference."
                },
                "display": {
                  "type": "string",
                  "pattern": "[ \\r\\n\\t\\S]+",
                  "description": "Plain text narrative that identifies the resource in addition to the resource reference."
                }
              }
            }
          ]
        },
        "focus": {
          "type": "array",
          "items": {
            "description": "The actual focus of an observation when it is not the patient of record representing something or someone associated with the patient such as a spouse, parent, fetus, or donor. For example, fetus observations in a mother's record.  The focus of an observation could also be an existing condition,  an intervention, the subject's diet,  another observation of the subject,  or a body structure such as tumor or implanted device.   An example use case would be using the Observation resource to capture whether the mother is trained to change her child's tracheostomy tube. In this example, the child is the patient of record and the mother is the focus.",
            "allOf": [
              {
                "type": "object",
                "properties": {
                  "reference": {
                    "type": "string",
                    "pattern": "[ \\r\\n\\t\\S]+",
                    "description": "A reference to a location at which the other resource is found. The reference may be a relative reference, in which case it is relative to the service base URL, or an absolute URL that resolves to the location where the resource is found. The reference may be version specific or not. If the reference is not to a FHIR RESTful server, then it should be assumed to be version specific. Internal fragment references (start with '#') refer to contained resources."
                  },
                  "type": {
                    "type": "string",
                    "pattern": "\\S*",
                    "description": "The expected type of the target of the reference. If both Reference.type and Reference.reference are populated and Reference.reference is a FHIR URL, both SHALL be consistent.\n\nThe type is the Canonical URL of Resource Definition that is the type this reference refers to. References are URLs that are relative to http://hl7.org/fhir/StructureDefinition/ e.g. \"Patient\" is a reference to http://hl7.org/fhir/StructureDefinition/Patient. Absolute URLs are only allowed for logical models (and can only be used in references in logical models, not resources)."
                  },
                  "identifier": {
                    "type": "object",
                    "additionalProperties": true,
                    "description": "An identifier for the target resource. This is used when there is no way to reference the other resource directly, either because the entity it represents is not available through a FHIR server, or because there is no way for the author of the resource to convert a known identifier to an actual location. There is no requirement that a Reference.identifier point to something that is actually exposed as a FHIR instance, but it SHALL point to a business concept that would be expected to be exposed as a FHIR instance, and that instance would need to be of a FHIR resource type allowed by the reference."
                  },
                  "display": {
                    "type": "string",
                    "pattern": "[ \\r\\n\\t\\S]+",
                    "description": "Plain text narrative that identifies the resource in addition to the resource reference."
                  }
                }
              }
            ]
          }
        },
        "encounter": {
          "description": "The healthcare event  (e.g. a patient and healthcare provider interaction) during which this observation is made.",
          "allOf": [
            {
              "type": "object",
              "properties": {
                "reference": {
                  "type": "string",
                  "pattern": "[ \\r\\n\\t\\S]+",
                  "description": "A reference to a location at which the other resource is found. The reference may be a relative reference, in which case it is relative to the service base URL, or an absolute URL that resolves to the location where the resource is found. The reference may be version specific or not. If the reference is not to a FHIR RESTful server, then it should be assumed to be version specific. Internal fragment references (start with '#') refer to contained resources."
                },
                "type": {
                  "type": "string",
                  "pattern": "\\S*",
                  "description": "The expected type of the target of the reference. If both Reference.type and Reference.reference are populated and Reference.reference is a FHIR URL, both SHALL be consistent.\n\nThe type is the Canonical URL of Resource Definition that is the type this reference refers to. References are URLs that are relative to http://hl7.org/fhir/StructureDefinition/ e.g. \"Patient\" is a reference to http://hl7.org/fhir/StructureDefinition/Patient. Absolute URLs are only allowed for logical models (and can only be used in references in logical models, not resources)."
                },
                "identifier": {
                  "type": "object",
                  "additionalProperties": true,
                  "description": "An identifier for the target resource. This is used when there is no way to reference the other resource directly, either because the entity it represents is not available through a FHIR server, or because there is no way for the author of the resource to convert a known identifier to an actual location. There is no requirement that a Reference.identifier point to something that is actually exposed as a FHIR instance, but it SHALL point to a business concept that would be expected to be exposed as a FHIR instance, and that instance would need to be of a FHIR resource type allowed by the reference."
                },
                "display": {
                  "type": "string",
                  "pattern": "[ \\r\\n\\t\\S]+",
                  "description": "Plain text narrative that identifies the resource in addition to the resource reference."
                }
              }
            }
          ]
        },
        "effectiveDateTime": {
          "type": "string",
          "pattern": "([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?",
          "description": "The time or time&ndash;period the observed value is asserted as being true. For biological subjects &ndash; e.g. human patients &ndash; this is usually called the \"physiologically relevant time\". This is usually either the time of the procedure or of specimen collection, but very often the source of the date/time is not known, only the date/time itself."
        },
        "effectivePeriod": {
          "description": "The time or time&ndash;period the observed value is asserted as being true. For biological subjects &ndash; e.g. human patients &ndash; this is usually called the \"physiologically relevant time\". This is usually either the time of the procedure or of specimen collection, but very often the source of the date/time is not known, only the date/time itself.",
          "allOf": [
            {
              "type": "object",
              "properties": {
                "start": {
                  "type": "string",
                  "pattern": "([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?",
                  "description": "The start of the period. The boundary is inclusive."
                },
                "end": {
                  "type": "string",
                  "pattern": "([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?",
                  "description": "The end of the period. If the end of the period is missing, it means no end was known or planned at the time the instance was created. The start may be in the past, and the end date in the future, which means that period is expected/planned to end at that time."
                }
              }
            }
          ]
        },
        "effectiveTiming": {
          "description": "The time or time&ndash;period the observed value is asserted as being true. For biological subjects &ndash; e.g. human patients &ndash; this is usually called the \"physiologically relevant time\". This is usually either the time of the procedure or of specimen collection, but very often the source of the date/time is not known, only the date/time itself.",
          "allOf": [
            {
              "allOf": [
                {
                  "type": "object",
                  "properties": {
                    "modifierExtension": {
                      "type": "array",
                      "items": {
                        "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                        "allOf": [
                          {
                            "type": "object",
                            "additionalProperties": true
                          }
                        ]
                      }
                    }
                  }
                }
              ]
            },
            {
              "type": "object",
              "properties": {
                "event": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "pattern": "([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?",
                    "description": "Identifies specific times when the event occurs."
                  }
                },
                "repeat": {
                  "description": "A set of rules that describe when the event is scheduled.",
                  "allOf": [
                    {
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "modifierExtension": {
                              "type": "array",
                              "items": {
                                "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                                "allOf": [
                                  {
                                    "type": "object",
                                    "additionalProperties": true
                                  }
                                ]
                              }
                            }
                          }
                        }
                      ]
                    },
                    {
                      "type": "object",
                      "properties": {
                        "boundsDuration": {
                          "description": "Either a duration for the length of the timing schedule, a range of possible length, or outer bounds for start and/or end limits of the timing schedule.",
                          "allOf": [
                            {
                              "allOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "value": {
                                      "type": "number",
                                      "description": "The value of the measured amount. The value includes an implicit precision in the presentation of the value."
                                    },
                                    "comparator": {
                                      "type": "string",
                                      "enum": [
                                        "<",
                                        "<=",
                                        ">=",
                                        ">"
                                      ],
                                      "description": "How the value should be understood and represented &ndash; whether the actual value is greater or less than the stated value due to measurement issues; e.g. if the comparator is \"<\" , then the real value is < stated value."
                                    },
                                    "unit": {
                                      "type": "string",
                                      "pattern": "[ \\r\\n\\t\\S]+",
                                      "description": "A human&ndash;readable form of the unit."
                                    },
                                    "system": {
                                      "type": "string",
                                      "pattern": "\\S*",
                                      "description": "The identification of the system that provides the coded form of the unit."
                                    },
                                    "code": {
                                      "type": "string",
                                      "pattern": "[^\\s]+(\\s[^\\s]+)*",
                                      "description": "A computer processable form of the unit in some unit representation system."
                                    }
                                  }
                                }
                              ]
                            },
                            {
                              "type": "object",
                              "properties": {}
                            }
                          ]
                        },
                        "boundsRange": {
                          "description": "Either a duration for the length of the timing schedule, a range of possible length, or outer bounds for start and/or end limits of the timing schedule.",
                          "allOf": [
                            {
                              "type": "object",
                              "properties": {
                                "low": {
                                  "description": "The low limit. The boundary is inclusive.",
                                  "allOf": [
                                    {
                                      "allOf": [
                                        {
                                          "type": "object",
                                          "properties": {
                                            "value": {
                                              "type": "number",
                                              "description": "The value of the measured amount. The value includes an implicit precision in the presentation of the value."
                                            },
                                            "comparator": {
                                              "type": "string",
                                              "enum": [
                                                "<",
                                                "<=",
                                                ">=",
                                                ">"
                                              ],
                                              "description": "How the value should be understood and represented &ndash; whether the actual value is greater or less than the stated value due to measurement issues; e.g. if the comparator is \"<\" , then the real value is < stated value."
                                            },
                                            "unit": {
                                              "type": "string",
                                              "pattern": "[ \\r\\n\\t\\S]+",
                                              "description": "A human&ndash;readable form of the unit."
                                            },
                                            "system": {
                                              "type": "string",
                                              "pattern": "\\S*",
                                              "description": "The identification of the system that provides the coded form of the unit."
                                            },
                                            "code": {
                                              "type": "string",
                                              "pattern": "[^\\s]+(\\s[^\\s]+)*",
                                              "description": "A computer processable form of the unit in some unit representation system."
                                            }
                                          }
                                        }
                                      ]
                                    },
                                    {
                                      "type": "object",
                                      "properties": {}
                                    }
                                  ]
                                },
                                "high": {
                                  "description": "The high limit. The boundary is inclusive.",
                                  "allOf": [
                                    {
                                      "allOf": [
                                        {
                                          "type": "object",
                                          "properties": {
                                            "value": {
                                              "type": "number",
                                              "description": "The value of the measured amount. The value includes an implicit precision in the presentation of the value."
                                            },
                                            "comparator": {
                                              "type": "string",
                                              "enum": [
                                                "<",
                                                "<=",
                                                ">=",
                                                ">"
                                              ],
                                              "description": "How the value should be understood and represented &ndash; whether the actual value is greater or less than the stated value due to measurement issues; e.g. if the comparator is \"<\" , then the real value is < stated value."
                                            },
                                            "unit": {
                                              "type": "string",
                                              "pattern": "[ \\r\\n\\t\\S]+",
                                              "description": "A human&ndash;readable form of the unit."
                                            },
                                            "system": {
                                              "type": "string",
                                              "pattern": "\\S*",
                                              "description": "The identification of the system that provides the coded form of the unit."
                                            },
                                            "code": {
                                              "type": "string",
                                              "pattern": "[^\\s]+(\\s[^\\s]+)*",
                                              "description": "A computer processable form of the unit in some unit representation system."
                                            }
                                          }
                                        }
                                      ]
                                    },
                                    {
                                      "type": "object",
                                      "properties": {}
                                    }
                                  ]
                                }
                              }
                            }
                          ]
                        },
                        "boundsPeriod": {
                          "description": "Either a duration for the length of the timing schedule, a range of possible length, or outer bounds for start and/or end limits of the timing schedule.",
                          "allOf": [
                            {
                              "type": "object",
                              "properties": {
                                "start": {
                                  "type": "string",
                                  "pattern": "([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?",
                                  "description": "The start of the period. The boundary is inclusive."
                                },
                                "end": {
                                  "type": "string",
                                  "pattern": "([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?",
                                  "description": "The end of the period. If the end of the period is missing, it means no end was known or planned at the time the instance was created. The start may be in the past, and the end date in the future, which means that period is expected/planned to end at that time."
                                }
                              }
                            }
                          ]
                        },
                        "count": {
                          "type": "integer",
                          "format": "int32",
                          "description": "A total count of the desired number of repetitions across the duration of the entire timing specification. If countMax is present, this element indicates the lower bound of the allowed range of count values."
                        },
                        "countMax": {
                          "type": "integer",
                          "format": "int32",
                          "description": "If present, indicates that the count is a range &ndash; so to perform the action between [count] and [countMax] times."
                        },
                        "duration": {
                          "type": "number",
                          "description": "How long this thing happens for when it happens. If durationMax is present, this element indicates the lower bound of the allowed range of the duration."
                        },
                        "durationMax": {
                          "type": "number",
                          "description": "If present, indicates that the duration is a range &ndash; so to perform the action between [duration] and [durationMax] time length."
                        },
                        "durationUnit": {
                          "type": "string",
                          "enum": [
                            "s",
                            "min",
                            "h",
                            "d",
                            "wk",
                            "mo",
                            "a"
                          ],
                          "description": "The units of time for the duration, in UCUM units."
                        },
                        "frequency": {
                          "type": "integer",
                          "format": "int32",
                          "description": "The number of times to repeat the action within the specified period. If frequencyMax is present, this element indicates the lower bound of the allowed range of the frequency."
                        },
                        "frequencyMax": {
                          "type": "integer",
                          "format": "int32",
                          "description": "If present, indicates that the frequency is a range &ndash; so to repeat between [frequency] and [frequencyMax] times within the period or period range."
                        },
                        "period": {
                          "type": "number",
                          "description": "Indicates the duration of time over which repetitions are to occur; e.g. to express \"3 times per day\", 3 would be the frequency and \"1 day\" would be the period. If periodMax is present, this element indicates the lower bound of the allowed range of the period length."
                        },
                        "periodMax": {
                          "type": "number",
                          "description": "If present, indicates that the period is a range from [period] to [periodMax], allowing expressing concepts such as \"do this once every 3&ndash;5 days."
                        },
                        "periodUnit": {
                          "type": "string",
                          "enum": [
                            "s",
                            "min",
                            "h",
                            "d",
                            "wk",
                            "mo",
                            "a"
                          ],
                          "description": "The units of time for the period in UCUM units."
                        },
                        "dayOfWeek": {
                          "type": "array",
                          "items": {
                            "type": "string",
                            "enum": [
                              "mon",
                              "tue",
                              "wed",
                              "thu",
                              "fri",
                              "sat",
                              "sun"
                            ],
                            "description": "If one or more days of week is provided, then the action happens only on the specified day(s)."
                          }
                        },
                        "timeOfDay": {
                          "type": "array",
                          "items": {
                            "type": "string",
                            "pattern": "([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?",
                            "description": "Specified time of day for action to take place."
                          }
                        },
                        "when": {
                          "type": "array",
                          "items": {
                            "type": "string",
                            "enum": [
                              "MORN",
                              "MORN.early",
                              "MORN.late",
                              "NOON",
                              "AFT",
                              "AFT.early",
                              "AFT.late",
                              "EVE",
                              "EVE.early",
                              "EVE.late",
                              "NIGHT",
                              "PHS",
                              "HS",
                              "WAKE",
                              "C",
                              "CM",
                              "CD",
                              "CV",
                              "AC",
                              "ACM",
                              "ACD",
                              "ACV",
                              "PC",
                              "PCM",
                              "PCD",
                              "PCV"
                            ],
                            "description": "An approximate time period during the day, potentially linked to an event of daily living that indicates when the action should occur."
                          }
                        },
                        "offset": {
                          "type": "integer",
                          "format": "int32",
                          "description": "The number of minutes from the event. If the event code does not indicate whether the minutes is before or after the event, then the offset is assumed to be after the event."
                        }
                      }
                    }
                  ]
                },
                "code": {
                  "description": "A code for the timing schedule (or just text in code.text). Some codes such as BID are ubiquitous, but many institutions define their own additional codes. If a code is provided, the code is understood to be a complete statement of whatever is specified in the structured timing data, and either the code or the data may be used to interpret the Timing, with the exception that .repeat.bounds still applies over the code (and is not contained in the code).",
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "coding": {
                          "type": "array",
                          "items": {
                            "description": "A reference to a code defined by a terminology system.",
                            "allOf": [
                              {
                                "type": "object",
                                "properties": {
                                  "system": {
                                    "type": "string",
                                    "pattern": "\\S*",
                                    "description": "The identification of the code system that defines the meaning of the symbol in the code."
                                  },
                                  "version": {
                                    "type": "string",
                                    "pattern": "[ \\r\\n\\t\\S]+",
                                    "description": "The version of the code system which was used when choosing this code. Note that a well&ndash;maintained code system does not need the version reported, because the meaning of codes is consistent across versions. However this cannot consistently be assured, and when the meaning is not guaranteed to be consistent, the version SHOULD be exchanged."
                                  },
                                  "code": {
                                    "type": "string",
                                    "pattern": "[^\\s]+(\\s[^\\s]+)*",
                                    "description": "A symbol in syntax defined by the system. The symbol may be a predefined code or an expression in a syntax defined by the coding system (e.g. post&ndash;coordination)."
                                  },
                                  "display": {
                                    "type": "string",
                                    "pattern": "[ \\r\\n\\t\\S]+",
                                    "description": "A representation of the meaning of the code in the system, following the rules of the system."
                                  },
                                  "userSelected": {
                                    "type": "boolean",
                                    "description": "Indicates that this coding was chosen by a user directly &ndash; e.g. off a pick list of available items (codes or displays)."
                                  }
                                }
                              }
                            ]
                          }
                        },
                        "text": {
                          "type": "string",
                          "pattern": "[ \\r\\n\\t\\S]+",
                          "description": "A human language representation of the concept as seen/selected/uttered by the user who entered the data and/or which represents the intended meaning of the user."
                        }
                      }
                    }
                  ]
                }
              }
            }
          ]
        },
        "effectiveInstant": {
          "type": "string",
          "pattern": "([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))",
          "description": "The time or time&ndash;period the observed value is asserted as being true. For biological subjects &ndash; e.g. human patients &ndash; this is usually called the \"physiologically relevant time\". This is usually either the time of the procedure or of specimen collection, but very often the source of the date/time is not known, only the date/time itself."
        },
        "issued": {
          "type": "string",
          "pattern": "([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))",
          "description": "The date and time this version of the observation was made available to providers, typically after the results have been reviewed and verified."
        },
        "performer": {
          "type": "array",
          "items": {
            "description": "Who was responsible for asserting the observed value as \"true\".",
            "allOf": [
              {
                "type": "object",
                "properties": {
                  "reference": {
                    "type": "string",
                    "pattern": "[ \\r\\n\\t\\S]+",
                    "description": "A reference to a location at which the other resource is found. The reference may be a relative reference, in which case it is relative to the service base URL, or an absolute URL that resolves to the location where the resource is found. The reference may be version specific or not. If the reference is not to a FHIR RESTful server, then it should be assumed to be version specific. Internal fragment references (start with '#') refer to contained resources."
                  },
                  "type": {
                    "type": "string",
                    "pattern": "\\S*",
                    "description": "The expected type of the target of the reference. If both Reference.type and Reference.reference are populated and Reference.reference is a FHIR URL, both SHALL be consistent.\n\nThe type is the Canonical URL of Resource Definition that is the type this reference refers to. References are URLs that are relative to http://hl7.org/fhir/StructureDefinition/ e.g. \"Patient\" is a reference to http://hl7.org/fhir/StructureDefinition/Patient. Absolute URLs are only allowed for logical models (and can only be used in references in logical models, not resources)."
                  },
                  "identifier": {
                    "type": "object",
                    "additionalProperties": true,
                    "description": "An identifier for the target resource. This is used when there is no way to reference the other resource directly, either because the entity it represents is not available through a FHIR server, or because there is no way for the author of the resource to convert a known identifier to an actual location. There is no requirement that a Reference.identifier point to something that is actually exposed as a FHIR instance, but it SHALL point to a business concept that would be expected to be exposed as a FHIR instance, and that instance would need to be of a FHIR resource type allowed by the reference."
                  },
                  "display": {
                    "type": "string",
                    "pattern": "[ \\r\\n\\t\\S]+",
                    "description": "Plain text narrative that identifies the resource in addition to the resource reference."
                  }
                }
              }
            ]
          }
        },
        "valueQuantity": {
          "allOf": [
            {
              "type": "object",
              "properties": {
                "value": {
                  "type": "number",
                  "description": "The value of the measured amount. The value includes an implicit precision in the presentation of the value."
                },
                "comparator": {
                  "type": "string",
                  "enum": [
                    "<",
                    "<=",
                    ">=",
                    ">"
                  ],
                  "description": "How the value should be understood and represented &ndash; whether the actual value is greater or less than the stated value due to measurement issues; e.g. if the comparator is \"<\" , then the real value is < stated value."
                },
                "unit": {
                  "type": "string",
                  "pattern": "[ \\r\\n\\t\\S]+",
                  "description": "A human&ndash;readable form of the unit."
                },
                "system": {
                  "type": "string",
                  "pattern": "\\S*",
                  "description": "The identification of the system that provides the coded form of the unit."
                },
                "code": {
                  "type": "string",
                  "pattern": "[^\\s]+(\\s[^\\s]+)*",
                  "description": "A computer processable form of the unit in some unit representation system."
                }
              }
            }
          ],
          "description": "The information determined as a result of making the observation, if the information has a simple value."
        },
        "valueCodeableConcept": {
          "description": "The information determined as a result of making the observation, if the information has a simple value.",
          "allOf": [
            {
              "type": "object",
              "properties": {
                "coding": {
                  "type": "array",
                  "items": {
                    "description": "A reference to a code defined by a terminology system.",
                    "allOf": [
                      {
                        "type": "object",
                        "properties": {
                          "system": {
                            "type": "string",
                            "pattern": "\\S*",
                            "description": "The identification of the code system that defines the meaning of the symbol in the code."
                          },
                          "version": {
                            "type": "string",
                            "pattern": "[ \\r\\n\\t\\S]+",
                            "description": "The version of the code system which was used when choosing this code. Note that a well&ndash;maintained code system does not need the version reported, because the meaning of codes is consistent across versions. However this cannot consistently be assured, and when the meaning is not guaranteed to be consistent, the version SHOULD be exchanged."
                          },
                          "code": {
                            "type": "string",
                            "pattern": "[^\\s]+(\\s[^\\s]+)*",
                            "description": "A symbol in syntax defined by the system. The symbol may be a predefined code or an expression in a syntax defined by the coding system (e.g. post&ndash;coordination)."
                          },
                          "display": {
                            "type": "string",
                            "pattern": "[ \\r\\n\\t\\S]+",
                            "description": "A representation of the meaning of the code in the system, following the rules of the system."
                          },
                          "userSelected": {
                            "type": "boolean",
                            "description": "Indicates that this coding was chosen by a user directly &ndash; e.g. off a pick list of available items (codes or displays)."
                          }
                        }
                      }
                    ]
                  }
                },
                "text": {
                  "type": "string",
                  "pattern": "[ \\r\\n\\t\\S]+",
                  "description": "A human language representation of the concept as seen/selected/uttered by the user who entered the data and/or which represents the intended meaning of the user."
                }
              }
            }
          ]
        },
        "valueString": {
          "type": "string",
          "pattern": "[ \\r\\n\\t\\S]+",
          "description": "The information determined as a result of making the observation, if the information has a simple value."
        },
        "valueBoolean": {
          "type": "boolean",
          "description": "The information determined as a result of making the observation, if the information has a simple value."
        },
        "valueInteger": {
          "type": "integer",
          "format": "int32",
          "description": "The information determined as a result of making the observation, if the information has a simple value."
        },
        "valueRange": {
          "description": "The information determined as a result of making the observation, if the information has a simple value.",
          "allOf": [
            {
              "type": "object",
              "properties": {
                "low": {
                  "description": "The low limit. The boundary is inclusive.",
                  "allOf": [
                    {
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "value": {
                              "type": "number",
                              "description": "The value of the measured amount. The value includes an implicit precision in the presentation of the value."
                            },
                            "comparator": {
                              "type": "string",
                              "enum": [
                                "<",
                                "<=",
                                ">=",
                                ">"
                              ],
                              "description": "How the value should be understood and represented &ndash; whether the actual value is greater or less than the stated value due to measurement issues; e.g. if the comparator is \"<\" , then the real value is < stated value."
                            },
                            "unit": {
                              "type": "string",
                              "pattern": "[ \\r\\n\\t\\S]+",
                              "description": "A human&ndash;readable form of the unit."
                            },
                            "system": {
                              "type": "string",
                              "pattern": "\\S*",
                              "description": "The identification of the system that provides the coded form of the unit."
                            },
                            "code": {
                              "type": "string",
                              "pattern": "[^\\s]+(\\s[^\\s]+)*",
                              "description": "A computer processable form of the unit in some unit representation system."
                            }
                          }
                        }
                      ]
                    },
                    {
                      "type": "object",
                      "properties": {}
                    }
                  ]
                },
                "high": {
                  "description": "The high limit. The boundary is inclusive.",
                  "allOf": [
                    {
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "value": {
                              "type": "number",
                              "description": "The value of the measured amount. The value includes an implicit precision in the presentation of the value."
                            },
                            "comparator": {
                              "type": "string",
                              "enum": [
                                "<",
                                "<=",
                                ">=",
                                ">"
                              ],
                              "description": "How the value should be understood and represented &ndash; whether the actual value is greater or less than the stated value due to measurement issues; e.g. if the comparator is \"<\" , then the real value is < stated value."
                            },
                            "unit": {
                              "type": "string",
                              "pattern": "[ \\r\\n\\t\\S]+",
                              "description": "A human&ndash;readable form of the unit."
                            },
                            "system": {
                              "type": "string",
                              "pattern": "\\S*",
                              "description": "The identification of the system that provides the coded form of the unit."
                            },
                            "code": {
                              "type": "string",
                              "pattern": "[^\\s]+(\\s[^\\s]+)*",
                              "description": "A computer processable form of the unit in some unit representation system."
                            }
                          }
                        }
                      ]
                    },
                    {
                      "type": "object",
                      "properties": {}
                    }
                  ]
                }
              }
            }
          ]
        },
        "valueRatio": {
          "description": "The information determined as a result of making the observation, if the information has a simple value.",
          "allOf": [
            {
              "type": "object",
              "properties": {
                "numerator": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "value": {
                          "type": "number",
                          "description": "The value of the measured amount. The value includes an implicit precision in the presentation of the value."
                        },
                        "comparator": {
                          "type": "string",
                          "enum": [
                            "<",
                            "<=",
                            ">=",
                            ">"
                          ],
                          "description": "How the value should be understood and represented &ndash; whether the actual value is greater or less than the stated value due to measurement issues; e.g. if the comparator is \"<\" , then the real value is < stated value."
                        },
                        "unit": {
                          "type": "string",
                          "pattern": "[ \\r\\n\\t\\S]+",
                          "description": "A human&ndash;readable form of the unit."
                        },
                        "system": {
                          "type": "string",
                          "pattern": "\\S*",
                          "description": "The identification of the system that provides the coded form of the unit."
                        },
                        "code": {
                          "type": "string",
                          "pattern": "[^\\s]+(\\s[^\\s]+)*",
                          "description": "A computer processable form of the unit in some unit representation system."
                        }
                      }
                    }
                  ],
                  "description": "The value of the numerator."
                },
                "denominator": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "value": {
                          "type": "number",
                          "description": "The value of the measured amount. The value includes an implicit precision in the presentation of the value."
                        },
                        "comparator": {
                          "type": "string",
                          "enum": [
                            "<",
                            "<=",
                            ">=",
                            ">"
                          ],
                          "description": "How the value should be understood and represented &ndash; whether the actual value is greater or less than the stated value due to measurement issues; e.g. if the comparator is \"<\" , then the real value is < stated value."
                        },
                        "unit": {
                          "type": "string",
                          "pattern": "[ \\r\\n\\t\\S]+",
                          "description": "A human&ndash;readable form of the unit."
                        },
                        "system": {
                          "type": "string",
                          "pattern": "\\S*",
                          "description": "The identification of the system that provides the coded form of the unit."
                        },
                        "code": {
                          "type": "string",
                          "pattern": "[^\\s]+(\\s[^\\s]+)*",
                          "description": "A computer processable form of the unit in some unit representation system."
                        }
                      }
                    }
                  ],
                  "description": "The value of the denominator."
                }
              }
            }
          ]
        },
        "valueSampledData": {
          "description": "The information determined as a result of making the observation, if the information has a simple value.",
          "allOf": [
            {
              "type": "object",
              "properties": {
                "origin": {
                  "description": "The base quantity that a measured value of zero represents. In addition, this provides the units of the entire measurement series.",
                  "allOf": [
                    {
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "value": {
                              "type": "number",
                              "description": "The value of the measured amount. The value includes an implicit precision in the presentation of the value."
                            },
                            "comparator": {
                              "type": "string",
                              "enum": [
                                "<",
                                "<=",
                                ">=",
                                ">"
                              ],
                              "description": "How the value should be understood and represented &ndash; whether the actual value is greater or less than the stated value due to measurement issues; e.g. if the comparator is \"<\" , then the real value is < stated value."
                            },
                            "unit": {
                              "type": "string",
                              "pattern": "[ \\r\\n\\t\\S]+",
                              "description": "A human&ndash;readable form of the unit."
                            },
                            "system": {
                              "type": "string",
                              "pattern": "\\S*",
                              "description": "The identification of the system that provides the coded form of the unit."
                            },
                            "code": {
                              "type": "string",
                              "pattern": "[^\\s]+(\\s[^\\s]+)*",
                              "description": "A computer processable form of the unit in some unit representation system."
                            }
                          }
                        }
                      ]
                    },
                    {
                      "type": "object",
                      "properties": {}
                    }
                  ]
                },
                "period": {
                  "type": "number",
                  "description": "The length of time between sampling times, measured in milliseconds."
                },
                "factor": {
                  "type": "number",
                  "description": "A correction factor that is applied to the sampled data points before they are added to the origin."
                },
                "lowerLimit": {
                  "type": "number",
                  "description": "The lower limit of detection of the measured points. This is needed if any of the data points have the value \"L\" (lower than detection limit)."
                },
                "upperLimit": {
                  "type": "number",
                  "description": "The upper limit of detection of the measured points. This is needed if any of the data points have the value \"U\" (higher than detection limit)."
                },
                "dimensions": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The number of sample points at each time point. If this value is greater than one, then the dimensions will be interlaced &ndash; all the sample points for a point in time will be recorded at once."
                },
                "data": {
                  "type": "string",
                  "pattern": "[ \\r\\n\\t\\S]+",
                  "description": "A series of data points which are decimal values separated by a single space (character u20). The special values \"E\" (error), \"L\" (below detection limit) and \"U\" (above detection limit) can also be used in place of a decimal value."
                }
              },
              "required": [
                "origin",
                "period",
                "dimensions"
              ]
            }
          ]
        },
        "valueTime": {
          "type": "string",
          "pattern": "([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?",
          "description": "The information determined as a result of making the observation, if the information has a simple value."
        },
        "valueDateTime": {
          "type": "string",
          "pattern": "([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?",
          "description": "The information determined as a result of making the observation, if the information has a simple value."
        },
        "valuePeriod": {
          "description": "The information determined as a result of making the observation, if the information has a simple value.",
          "allOf": [
            {
              "type": "object",
              "properties": {
                "start": {
                  "type": "string",
                  "pattern": "([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?",
                  "description": "The start of the period. The boundary is inclusive."
                },
                "end": {
                  "type": "string",
                  "pattern": "([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?",
                  "description": "The end of the period. If the end of the period is missing, it means no end was known or planned at the time the instance was created. The start may be in the past, and the end date in the future, which means that period is expected/planned to end at that time."
                }
              }
            }
          ]
        },
        "dataAbsentReason": {
          "description": "Provides a reason why the expected value in the element Observation.value[x] is missing.",
          "allOf": [
            {
              "type": "object",
              "properties": {
                "coding": {
                  "type": "array",
                  "items": {
                    "description": "A reference to a code defined by a terminology system.",
                    "allOf": [
                      {
                        "type": "object",
                        "properties": {
                          "system": {
                            "type": "string",
                            "pattern": "\\S*",
                            "description": "The identification of the code system that defines the meaning of the symbol in the code."
                          },
                          "version": {
                            "type": "string",
                            "pattern": "[ \\r\\n\\t\\S]+",
                            "description": "The version of the code system which was used when choosing this code. Note that a well&ndash;maintained code system does not need the version reported, because the meaning of codes is consistent across versions. However this cannot consistently be assured, and when the meaning is not guaranteed to be consistent, the version SHOULD be exchanged."
                          },
                          "code": {
                            "type": "string",
                            "pattern": "[^\\s]+(\\s[^\\s]+)*",
                            "description": "A symbol in syntax defined by the system. The symbol may be a predefined code or an expression in a syntax defined by the coding system (e.g. post&ndash;coordination)."
                          },
                          "display": {
                            "type": "string",
                            "pattern": "[ \\r\\n\\t\\S]+",
                            "description": "A representation of the meaning of the code in the system, following the rules of the system."
                          },
                          "userSelected": {
                            "type": "boolean",
                            "description": "Indicates that this coding was chosen by a user directly &ndash; e.g. off a pick list of available items (codes or displays)."
                          }
                        }
                      }
                    ]
                  }
                },
                "text": {
                  "type": "string",
                  "pattern": "[ \\r\\n\\t\\S]+",
                  "description": "A human language representation of the concept as seen/selected/uttered by the user who entered the data and/or which represents the intended meaning of the user."
                }
              }
            }
          ]
        },
        "interpretation": {
          "type": "array",
          "items": {
            "description": "A categorical assessment of an observation value.  For example, high, low, normal.",
            "allOf": [
              {
                "type": "object",
                "properties": {
                  "coding": {
                    "type": "array",
                    "items": {
                      "description": "A reference to a code defined by a terminology system.",
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "system": {
                              "type": "string",
                              "pattern": "\\S*",
                              "description": "The identification of the code system that defines the meaning of the symbol in the code."
                            },
                            "version": {
                              "type": "string",
                              "pattern": "[ \\r\\n\\t\\S]+",
                              "description": "The version of the code system which was used when choosing this code. Note that a well&ndash;maintained code system does not need the version reported, because the meaning of codes is consistent across versions. However this cannot consistently be assured, and when the meaning is not guaranteed to be consistent, the version SHOULD be exchanged."
                            },
                            "code": {
                              "type": "string",
                              "pattern": "[^\\s]+(\\s[^\\s]+)*",
                              "description": "A symbol in syntax defined by the system. The symbol may be a predefined code or an expression in a syntax defined by the coding system (e.g. post&ndash;coordination)."
                            },
                            "display": {
                              "type": "string",
                              "pattern": "[ \\r\\n\\t\\S]+",
                              "description": "A representation of the meaning of the code in the system, following the rules of the system."
                            },
                            "userSelected": {
                              "type": "boolean",
                              "description": "Indicates that this coding was chosen by a user directly &ndash; e.g. off a pick list of available items (codes or displays)."
                            }
                          }
                        }
                      ]
                    }
                  },
                  "text": {
                    "type": "string",
                    "pattern": "[ \\r\\n\\t\\S]+",
                    "description": "A human language representation of the concept as seen/selected/uttered by the user who entered the data and/or which represents the intended meaning of the user."
                  }
                }
              }
            ]
          }
        },
        "note": {
          "type": "array",
          "items": {
            "description": "Comments about the observation or the results.",
            "allOf": [
              {
                "type": "object",
                "properties": {
                  "authorReference": {
                    "description": "The individual responsible for making the annotation.",
                    "allOf": [
                      {
                        "type": "object",
                        "properties": {
                          "reference": {
                            "type": "string",
                            "pattern": "[ \\r\\n\\t\\S]+",
                            "description": "A reference to a location at which the other resource is found. The reference may be a relative reference, in which case it is relative to the service base URL, or an absolute URL that resolves to the location where the resource is found. The reference may be version specific or not. If the reference is not to a FHIR RESTful server, then it should be assumed to be version specific. Internal fragment references (start with '#') refer to contained resources."
                          },
                          "type": {
                            "type": "string",
                            "pattern": "\\S*",
                            "description": "The expected type of the target of the reference. If both Reference.type and Reference.reference are populated and Reference.reference is a FHIR URL, both SHALL be consistent.\n\nThe type is the Canonical URL of Resource Definition that is the type this reference refers to. References are URLs that are relative to http://hl7.org/fhir/StructureDefinition/ e.g. \"Patient\" is a reference to http://hl7.org/fhir/StructureDefinition/Patient. Absolute URLs are only allowed for logical models (and can only be used in references in logical models, not resources)."
                          },
                          "identifier": {
                            "type": "object",
                            "additionalProperties": true,
                            "description": "An identifier for the target resource. This is used when there is no way to reference the other resource directly, either because the entity it represents is not available through a FHIR server, or because there is no way for the author of the resource to convert a known identifier to an actual location. There is no requirement that a Reference.identifier point to something that is actually exposed as a FHIR instance, but it SHALL point to a business concept that would be expected to be exposed as a FHIR instance, and that instance would need to be of a FHIR resource type allowed by the reference."
                          },
                          "display": {
                            "type": "string",
                            "pattern": "[ \\r\\n\\t\\S]+",
                            "description": "Plain text narrative that identifies the resource in addition to the resource reference."
                          }
                        }
                      }
                    ]
                  },
                  "authorString": {
                    "type": "string",
                    "pattern": "[ \\r\\n\\t\\S]+",
                    "description": "The individual responsible for making the annotation."
                  },
                  "time": {
                    "type": "string",
                    "pattern": "([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?",
                    "description": "Indicates when this particular annotation was made."
                  },
                  "text": {
                    "type": "string",
                    "pattern": "[ \\r\\n\\t\\S]+",
                    "description": "The text of the annotation in markdown format."
                  }
                },
                "required": [
                  "text"
                ]
              }
            ]
          }
        },
        "bodySite": {
          "description": "Indicates the site on the subject's body where the observation was made (i.e. the target site).",
          "allOf": [
            {
              "type": "object",
              "properties": {
                "coding": {
                  "type": "array",
                  "items": {
                    "description": "A reference to a code defined by a terminology system.",
                    "allOf": [
                      {
                        "type": "object",
                        "properties": {
                          "system": {
                            "type": "string",
                            "pattern": "\\S*",
                            "description": "The identification of the code system that defines the meaning of the symbol in the code."
                          },
                          "version": {
                            "type": "string",
                            "pattern": "[ \\r\\n\\t\\S]+",
                            "description": "The version of the code system which was used when choosing this code. Note that a well&ndash;maintained code system does not need the version reported, because the meaning of codes is consistent across versions. However this cannot consistently be assured, and when the meaning is not guaranteed to be consistent, the version SHOULD be exchanged."
                          },
                          "code": {
                            "type": "string",
                            "pattern": "[^\\s]+(\\s[^\\s]+)*",
                            "description": "A symbol in syntax defined by the system. The symbol may be a predefined code or an expression in a syntax defined by the coding system (e.g. post&ndash;coordination)."
                          },
                          "display": {
                            "type": "string",
                            "pattern": "[ \\r\\n\\t\\S]+",
                            "description": "A representation of the meaning of the code in the system, following the rules of the system."
                          },
                          "userSelected": {
                            "type": "boolean",
                            "description": "Indicates that this coding was chosen by a user directly &ndash; e.g. off a pick list of available items (codes or displays)."
                          }
                        }
                      }
                    ]
                  }
                },
                "text": {
                  "type": "string",
                  "pattern": "[ \\r\\n\\t\\S]+",
                  "description": "A human language representation of the concept as seen/selected/uttered by the user who entered the data and/or which represents the intended meaning of the user."
                }
              }
            }
          ]
        },
        "method": {
          "description": "Indicates the mechanism used to perform the observation.",
          "allOf": [
            {
              "type": "object",
              "properties": {
                "coding": {
                  "type": "array",
                  "items": {
                    "description": "A reference to a code defined by a terminology system.",
                    "allOf": [
                      {
                        "type": "object",
                        "properties": {
                          "system": {
                            "type": "string",
                            "pattern": "\\S*",
                            "description": "The identification of the code system that defines the meaning of the symbol in the code."
                          },
                          "version": {
                            "type": "string",
                            "pattern": "[ \\r\\n\\t\\S]+",
                            "description": "The version of the code system which was used when choosing this code. Note that a well&ndash;maintained code system does not need the version reported, because the meaning of codes is consistent across versions. However this cannot consistently be assured, and when the meaning is not guaranteed to be consistent, the version SHOULD be exchanged."
                          },
                          "code": {
                            "type": "string",
                            "pattern": "[^\\s]+(\\s[^\\s]+)*",
                            "description": "A symbol in syntax defined by the system. The symbol may be a predefined code or an expression in a syntax defined by the coding system (e.g. post&ndash;coordination)."
                          },
                          "display": {
                            "type": "string",
                            "pattern": "[ \\r\\n\\t\\S]+",
                            "description": "A representation of the meaning of the code in the system, following the rules of the system."
                          },
                          "userSelected": {
                            "type": "boolean",
                            "description": "Indicates that this coding was chosen by a user directly &ndash; e.g. off a pick list of available items (codes or displays)."
                          }
                        }
                      }
                    ]
                  }
                },
                "text": {
                  "type": "string",
                  "pattern": "[ \\r\\n\\t\\S]+",
                  "description": "A human language representation of the concept as seen/selected/uttered by the user who entered the data and/or which represents the intended meaning of the user."
                }
              }
            }
          ]
        },
        "specimen": {
          "description": "The specimen that was used when this observation was made.",
          "allOf": [
            {
              "type": "object",
              "properties": {
                "reference": {
                  "type": "string",
                  "pattern": "[ \\r\\n\\t\\S]+",
                  "description": "A reference to a location at which the other resource is found. The reference may be a relative reference, in which case it is relative to the service base URL, or an absolute URL that resolves to the location where the resource is found. The reference may be version specific or not. If the reference is not to a FHIR RESTful server, then it should be assumed to be version specific. Internal fragment references (start with '#') refer to contained resources."
                },
                "type": {
                  "type": "string",
                  "pattern": "\\S*",
                  "description": "The expected type of the target of the reference. If both Reference.type and Reference.reference are populated and Reference.reference is a FHIR URL, both SHALL be consistent.\n\nThe type is the Canonical URL of Resource Definition that is the type this reference refers to. References are URLs that are relative to http://hl7.org/fhir/StructureDefinition/ e.g. \"Patient\" is a reference to http://hl7.org/fhir/StructureDefinition/Patient. Absolute URLs are only allowed for logical models (and can only be used in references in logical models, not resources)."
                },
                "identifier": {
                  "type": "object",
                  "additionalProperties": true,
                  "description": "An identifier for the target resource. This is used when there is no way to reference the other resource directly, either because the entity it represents is not available through a FHIR server, or because there is no way for the author of the resource to convert a known identifier to an actual location. There is no requirement that a Reference.identifier point to something that is actually exposed as a FHIR instance, but it SHALL point to a business concept that would be expected to be exposed as a FHIR instance, and that instance would need to be of a FHIR resource type allowed by the reference."
                },
                "display": {
                  "type": "string",
                  "pattern": "[ \\r\\n\\t\\S]+",
                  "description": "Plain text narrative that identifies the resource in addition to the resource reference."
                }
              }
            }
          ]
        },
        "device": {
          "description": "The device used to generate the observation data.",
          "allOf": [
            {
              "type": "object",
              "properties": {
                "reference": {
                  "type": "string",
                  "pattern": "[ \\r\\n\\t\\S]+",
                  "description": "A reference to a location at which the other resource is found. The reference may be a relative reference, in which case it is relative to the service base URL, or an absolute URL that resolves to the location where the resource is found. The reference may be version specific or not. If the reference is not to a FHIR RESTful server, then it should be assumed to be version specific. Internal fragment references (start with '#') refer to contained resources."
                },
                "type": {
                  "type": "string",
                  "pattern": "\\S*",
                  "description": "The expected type of the target of the reference. If both Reference.type and Reference.reference are populated and Reference.reference is a FHIR URL, both SHALL be consistent.\n\nThe type is the Canonical URL of Resource Definition that is the type this reference refers to. References are URLs that are relative to http://hl7.org/fhir/StructureDefinition/ e.g. \"Patient\" is a reference to http://hl7.org/fhir/StructureDefinition/Patient. Absolute URLs are only allowed for logical models (and can only be used in references in logical models, not resources)."
                },
                "identifier": {
                  "type": "object",
                  "additionalProperties": true,
                  "description": "An identifier for the target resource. This is used when there is no way to reference the other resource directly, either because the entity it represents is not available through a FHIR server, or because there is no way for the author of the resource to convert a known identifier to an actual location. There is no requirement that a Reference.identifier point to something that is actually exposed as a FHIR instance, but it SHALL point to a business concept that would be expected to be exposed as a FHIR instance, and that instance would need to be of a FHIR resource type allowed by the reference."
                },
                "display": {
                  "type": "string",
                  "pattern": "[ \\r\\n\\t\\S]+",
                  "description": "Plain text narrative that identifies the resource in addition to the resource reference."
                }
              }
            }
          ]
        },
        "referenceRange": {
          "type": "array",
          "items": {
            "description": "Guidance on how to interpret the value by comparison to a normal or recommended range.  Multiple reference ranges are interpreted as an \"OR\".   In other words, to represent two distinct target populations, two `referenceRange` elements would be used.",
            "allOf": [
              {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "modifierExtension": {
                        "type": "array",
                        "items": {
                          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                          "allOf": [
                            {
                              "type": "object",
                              "additionalProperties": true
                            }
                          ]
                        }
                      }
                    }
                  }
                ]
              },
              {
                "type": "object",
                "properties": {
                  "low": {
                    "description": "The value of the low bound of the reference range.  The low bound of the reference range endpoint is inclusive of the value (e.g.  reference range is >=5 &ndash; <=9). If the low bound is omitted,  it is assumed to be meaningless (e.g. reference range is <=2.3).",
                    "allOf": [
                      {
                        "allOf": [
                          {
                            "type": "object",
                            "properties": {
                              "value": {
                                "type": "number",
                                "description": "The value of the measured amount. The value includes an implicit precision in the presentation of the value."
                              },
                              "comparator": {
                                "type": "string",
                                "enum": [
                                  "<",
                                  "<=",
                                  ">=",
                                  ">"
                                ],
                                "description": "How the value should be understood and represented &ndash; whether the actual value is greater or less than the stated value due to measurement issues; e.g. if the comparator is \"<\" , then the real value is < stated value."
                              },
                              "unit": {
                                "type": "string",
                                "pattern": "[ \\r\\n\\t\\S]+",
                                "description": "A human&ndash;readable form of the unit."
                              },
                              "system": {
                                "type": "string",
                                "pattern": "\\S*",
                                "description": "The identification of the system that provides the coded form of the unit."
                              },
                              "code": {
                                "type": "string",
                                "pattern": "[^\\s]+(\\s[^\\s]+)*",
                                "description": "A computer processable form of the unit in some unit representation system."
                              }
                            }
                          }
                        ]
                      },
                      {
                        "type": "object",
                        "properties": {}
                      }
                    ]
                  },
                  "high": {
                    "description": "The value of the high bound of the reference range.  The high bound of the reference range endpoint is inclusive of the value (e.g.  reference range is >=5 &ndash; <=9). If the high bound is omitted,  it is assumed to be meaningless (e.g. reference range is >= 2.3).",
                    "allOf": [
                      {
                        "allOf": [
                          {
                            "type": "object",
                            "properties": {
                              "value": {
                                "type": "number",
                                "description": "The value of the measured amount. The value includes an implicit precision in the presentation of the value."
                              },
                              "comparator": {
                                "type": "string",
                                "enum": [
                                  "<",
                                  "<=",
                                  ">=",
                                  ">"
                                ],
                                "description": "How the value should be understood and represented &ndash; whether the actual value is greater or less than the stated value due to measurement issues; e.g. if the comparator is \"<\" , then the real value is < stated value."
                              },
                              "unit": {
                                "type": "string",
                                "pattern": "[ \\r\\n\\t\\S]+",
                                "description": "A human&ndash;readable form of the unit."
                              },
                              "system": {
                                "type": "string",
                                "pattern": "\\S*",
                                "description": "The identification of the system that provides the coded form of the unit."
                              },
                              "code": {
                                "type": "string",
                                "pattern": "[^\\s]+(\\s[^\\s]+)*",
                                "description": "A computer processable form of the unit in some unit representation system."
                              }
                            }
                          }
                        ]
                      },
                      {
                        "type": "object",
                        "properties": {}
                      }
                    ]
                  },
                  "type": {
                    "description": "Codes to indicate the what part of the targeted reference population it applies to. For example, the normal or therapeutic range.",
                    "allOf": [
                      {
                        "type": "object",
                        "properties": {
                          "coding": {
                            "type": "array",
                            "items": {
                              "description": "A reference to a code defined by a terminology system.",
                              "allOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "system": {
                                      "type": "string",
                                      "pattern": "\\S*",
                                      "description": "The identification of the code system that defines the meaning of the symbol in the code."
                                    },
                                    "version": {
                                      "type": "string",
                                      "pattern": "[ \\r\\n\\t\\S]+",
                                      "description": "The version of the code system which was used when choosing this code. Note that a well&ndash;maintained code system does not need the version reported, because the meaning of codes is consistent across versions. However this cannot consistently be assured, and when the meaning is not guaranteed to be consistent, the version SHOULD be exchanged."
                                    },
                                    "code": {
                                      "type": "string",
                                      "pattern": "[^\\s]+(\\s[^\\s]+)*",
                                      "description": "A symbol in syntax defined by the system. The symbol may be a predefined code or an expression in a syntax defined by the coding system (e.g. post&ndash;coordination)."
                                    },
                                    "display": {
                                      "type": "string",
                                      "pattern": "[ \\r\\n\\t\\S]+",
                                      "description": "A representation of the meaning of the code in the system, following the rules of the system."
                                    },
                                    "userSelected": {
                                      "type": "boolean",
                                      "description": "Indicates that this coding was chosen by a user directly &ndash; e.g. off a pick list of available items (codes or displays)."
                                    }
                                  }
                                }
                              ]
                            }
                          },
                          "text": {
                            "type": "string",
                            "pattern": "[ \\r\\n\\t\\S]+",
                            "description": "A human language representation of the concept as seen/selected/uttered by the user who entered the data and/or which represents the intended meaning of the user."
                          }
                        }
                      }
                    ]
                  },
                  "appliesTo": {
                    "type": "array",
                    "items": {
                      "description": "Codes to indicate the target population this reference range applies to.  For example, a reference range may be based on the normal population or a particular sex or race.  Multiple `appliesTo`  are interpreted as an \"AND\" of the target populations.  For example, to represent a target population of African American females, both a code of female and a code for African American would be used.",
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "coding": {
                              "type": "array",
                              "items": {
                                "description": "A reference to a code defined by a terminology system.",
                                "allOf": [
                                  {
                                    "type": "object",
                                    "properties": {
                                      "system": {
                                        "type": "string",
                                        "pattern": "\\S*",
                                        "description": "The identification of the code system that defines the meaning of the symbol in the code."
                                      },
                                      "version": {
                                        "type": "string",
                                        "pattern": "[ \\r\\n\\t\\S]+",
                                        "description": "The version of the code system which was used when choosing this code. Note that a well&ndash;maintained code system does not need the version reported, because the meaning of codes is consistent across versions. However this cannot consistently be assured, and when the meaning is not guaranteed to be consistent, the version SHOULD be exchanged."
                                      },
                                      "code": {
                                        "type": "string",
                                        "pattern": "[^\\s]+(\\s[^\\s]+)*",
                                        "description": "A symbol in syntax defined by the system. The symbol may be a predefined code or an expression in a syntax defined by the coding system (e.g. post&ndash;coordination)."
                                      },
                                      "display": {
                                        "type": "string",
                                        "pattern": "[ \\r\\n\\t\\S]+",
                                        "description": "A representation of the meaning of the code in the system, following the rules of the system."
                                      },
                                      "userSelected": {
                                        "type": "boolean",
                                        "description": "Indicates that this coding was chosen by a user directly &ndash; e.g. off a pick list of available items (codes or displays)."
                                      }
                                    }
                                  }
                                ]
                              }
                            },
                            "text": {
                              "type": "string",
                              "pattern": "[ \\r\\n\\t\\S]+",
                              "description": "A human language representation of the concept as seen/selected/uttered by the user who entered the data and/or which represents the intended meaning of the user."
                            }
                          }
                        }
                      ]
                    }
                  },
                  "age": {
                    "description": "The age at which this reference range is applicable. This is a neonatal age (e.g. number of weeks at term) if the meaning says so.",
                    "allOf": [
                      {
                        "type": "object",
                        "properties": {
                          "low": {
                            "description": "The low limit. The boundary is inclusive.",
                            "allOf": [
                              {
                                "allOf": [
                                  {
                                    "type": "object",
                                    "properties": {
                                      "value": {
                                        "type": "number",
                                        "description": "The value of the measured amount. The value includes an implicit precision in the presentation of the value."
                                      },
                                      "comparator": {
                                        "type": "string",
                                        "enum": [
                                          "<",
                                          "<=",
                                          ">=",
                                          ">"
                                        ],
                                        "description": "How the value should be understood and represented &ndash; whether the actual value is greater or less than the stated value due to measurement issues; e.g. if the comparator is \"<\" , then the real value is < stated value."
                                      },
                                      "unit": {
                                        "type": "string",
                                        "pattern": "[ \\r\\n\\t\\S]+",
                                        "description": "A human&ndash;readable form of the unit."
                                      },
                                      "system": {
                                        "type": "string",
                                        "pattern": "\\S*",
                                        "description": "The identification of the system that provides the coded form of the unit."
                                      },
                                      "code": {
                                        "type": "string",
                                        "pattern": "[^\\s]+(\\s[^\\s]+)*",
                                        "description": "A computer processable form of the unit in some unit representation system."
                                      }
                                    }
                                  }
                                ]
                              },
                              {
                                "type": "object",
                                "properties": {}
                              }
                            ]
                          },
                          "high": {
                            "description": "The high limit. The boundary is inclusive.",
                            "allOf": [
                              {
                                "allOf": [
                                  {
                                    "type": "object",
                                    "properties": {
                                      "value": {
                                        "type": "number",
                                        "description": "The value of the measured amount. The value includes an implicit precision in the presentation of the value."
                                      },
                                      "comparator": {
                                        "type": "string",
                                        "enum": [
                                          "<",
                                          "<=",
                                          ">=",
                                          ">"
                                        ],
                                        "description": "How the value should be understood and represented &ndash; whether the actual value is greater or less than the stated value due to measurement issues; e.g. if the comparator is \"<\" , then the real value is < stated value."
                                      },
                                      "unit": {
                                        "type": "string",
                                        "pattern": "[ \\r\\n\\t\\S]+",
                                        "description": "A human&ndash;readable form of the unit."
                                      },
                                      "system": {
                                        "type": "string",
                                        "pattern": "\\S*",
                                        "description": "The identification of the system that provides the coded form of the unit."
                                      },
                                      "code": {
                                        "type": "string",
                                        "pattern": "[^\\s]+(\\s[^\\s]+)*",
                                        "description": "A computer processable form of the unit in some unit representation system."
                                      }
                                    }
                                  }
                                ]
                              },
                              {
                                "type": "object",
                                "properties": {}
                              }
                            ]
                          }
                        }
                      }
                    ]
                  },
                  "text": {
                    "type": "string",
                    "pattern": "[ \\r\\n\\t\\S]+",
                    "description": "Text based reference range in an observation which may be used when a quantitative range is not appropriate for an observation.  An example would be a reference value of \"Negative\" or a list or table of \"normals\"."
                  }
                }
              }
            ]
          }
        },
        "hasMember": {
          "type": "array",
          "items": {
            "description": "This observation is a group observation (e.g. a battery, a panel of tests, a set of vital sign measurements) that includes the target as a member of the group.",
            "allOf": [
              {
                "type": "object",
                "properties": {
                  "reference": {
                    "type": "string",
                    "pattern": "[ \\r\\n\\t\\S]+",
                    "description": "A reference to a location at which the other resource is found. The reference may be a relative reference, in which case it is relative to the service base URL, or an absolute URL that resolves to the location where the resource is found. The reference may be version specific or not. If the reference is not to a FHIR RESTful server, then it should be assumed to be version specific. Internal fragment references (start with '#') refer to contained resources."
                  },
                  "type": {
                    "type": "string",
                    "pattern": "\\S*",
                    "description": "The expected type of the target of the reference. If both Reference.type and Reference.reference are populated and Reference.reference is a FHIR URL, both SHALL be consistent.\n\nThe type is the Canonical URL of Resource Definition that is the type this reference refers to. References are URLs that are relative to http://hl7.org/fhir/StructureDefinition/ e.g. \"Patient\" is a reference to http://hl7.org/fhir/StructureDefinition/Patient. Absolute URLs are only allowed for logical models (and can only be used in references in logical models, not resources)."
                  },
                  "identifier": {
                    "type": "object",
                    "additionalProperties": true,
                    "description": "An identifier for the target resource. This is used when there is no way to reference the other resource directly, either because the entity it represents is not available through a FHIR server, or because there is no way for the author of the resource to convert a known identifier to an actual location. There is no requirement that a Reference.identifier point to something that is actually exposed as a FHIR instance, but it SHALL point to a business concept that would be expected to be exposed as a FHIR instance, and that instance would need to be of a FHIR resource type allowed by the reference."
                  },
                  "display": {
                    "type": "string",
                    "pattern": "[ \\r\\n\\t\\S]+",
                    "description": "Plain text narrative that identifies the resource in addition to the resource reference."
                  }
                }
              }
            ]
          }
        },
        "derivedFrom": {
          "type": "array",
          "items": {
            "description": "The target resource that represents a measurement from which this observation value is derived. For example, a calculated anion gap or a fetal measurement based on an ultrasound image.",
            "allOf": [
              {
                "type": "object",
                "properties": {
                  "reference": {
                    "type": "string",
                    "pattern": "[ \\r\\n\\t\\S]+",
                    "description": "A reference to a location at which the other resource is found. The reference may be a relative reference, in which case it is relative to the service base URL, or an absolute URL that resolves to the location where the resource is found. The reference may be version specific or not. If the reference is not to a FHIR RESTful server, then it should be assumed to be version specific. Internal fragment references (start with '#') refer to contained resources."
                  },
                  "type": {
                    "type": "string",
                    "pattern": "\\S*",
                    "description": "The expected type of the target of the reference. If both Reference.type and Reference.reference are populated and Reference.reference is a FHIR URL, both SHALL be consistent.\n\nThe type is the Canonical URL of Resource Definition that is the type this reference refers to. References are URLs that are relative to http://hl7.org/fhir/StructureDefinition/ e.g. \"Patient\" is a reference to http://hl7.org/fhir/StructureDefinition/Patient. Absolute URLs are only allowed for logical models (and can only be used in references in logical models, not resources)."
                  },
                  "identifier": {
                    "type": "object",
                    "additionalProperties": true,
                    "description": "An identifier for the target resource. This is used when there is no way to reference the other resource directly, either because the entity it represents is not available through a FHIR server, or because there is no way for the author of the resource to convert a known identifier to an actual location. There is no requirement that a Reference.identifier point to something that is actually exposed as a FHIR instance, but it SHALL point to a business concept that would be expected to be exposed as a FHIR instance, and that instance would need to be of a FHIR resource type allowed by the reference."
                  },
                  "display": {
                    "type": "string",
                    "pattern": "[ \\r\\n\\t\\S]+",
                    "description": "Plain text narrative that identifies the resource in addition to the resource reference."
                  }
                }
              }
            ]
          }
        },
        "component": {
          "type": "array",
          "items": {
            "description": "Some observations have multiple component observations.  These component observations are expressed as separate code value pairs that share the same attributes.  Examples include systolic and diastolic component observations for blood pressure measurement and multiple component observations for genetics observations.",
            "allOf": [
              {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "modifierExtension": {
                        "type": "array",
                        "items": {
                          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                          "allOf": [
                            {
                              "type": "object",
                              "additionalProperties": true
                            }
                          ]
                        }
                      }
                    }
                  }
                ]
              },
              {
                "type": "object",
                "properties": {
                  "code": {
                    "description": "Describes what was observed. Sometimes this is called the observation \"code\".",
                    "allOf": [
                      {
                        "type": "object",
                        "properties": {
                          "coding": {
                            "type": "array",
                            "items": {
                              "description": "A reference to a code defined by a terminology system.",
                              "allOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "system": {
                                      "type": "string",
                                      "pattern": "\\S*",
                                      "description": "The identification of the code system that defines the meaning of the symbol in the code."
                                    },
                                    "version": {
                                      "type": "string",
                                      "pattern": "[ \\r\\n\\t\\S]+",
                                      "description": "The version of the code system which was used when choosing this code. Note that a well&ndash;maintained code system does not need the version reported, because the meaning of codes is consistent across versions. However this cannot consistently be assured, and when the meaning is not guaranteed to be consistent, the version SHOULD be exchanged."
                                    },
                                    "code": {
                                      "type": "string",
                                      "pattern": "[^\\s]+(\\s[^\\s]+)*",
                                      "description": "A symbol in syntax defined by the system. The symbol may be a predefined code or an expression in a syntax defined by the coding system (e.g. post&ndash;coordination)."
                                    },
                                    "display": {
                                      "type": "string",
                                      "pattern": "[ \\r\\n\\t\\S]+",
                                      "description": "A representation of the meaning of the code in the system, following the rules of the system."
                                    },
                                    "userSelected": {
                                      "type": "boolean",
                                      "description": "Indicates that this coding was chosen by a user directly &ndash; e.g. off a pick list of available items (codes or displays)."
                                    }
                                  }
                                }
                              ]
                            }
                          },
                          "text": {
                            "type": "string",
                            "pattern": "[ \\r\\n\\t\\S]+",
                            "description": "A human language representation of the concept as seen/selected/uttered by the user who entered the data and/or which represents the intended meaning of the user."
                          }
                        }
                      }
                    ]
                  },
                  "valueQuantity": {
                    "allOf": [
                      {
                        "type": "object",
                        "properties": {
                          "value": {
                            "type": "number",
                            "description": "The value of the measured amount. The value includes an implicit precision in the presentation of the value."
                          },
                          "comparator": {
                            "type": "string",
                            "enum": [
                              "<",
                              "<=",
                              ">=",
                              ">"
                            ],
                            "description": "How the value should be understood and represented &ndash; whether the actual value is greater or less than the stated value due to measurement issues; e.g. if the comparator is \"<\" , then the real value is < stated value."
                          },
                          "unit": {
                            "type": "string",
                            "pattern": "[ \\r\\n\\t\\S]+",
                            "description": "A human&ndash;readable form of the unit."
                          },
                          "system": {
                            "type": "string",
                            "pattern": "\\S*",
                            "description": "The identification of the system that provides the coded form of the unit."
                          },
                          "code": {
                            "type": "string",
                            "pattern": "[^\\s]+(\\s[^\\s]+)*",
                            "description": "A computer processable form of the unit in some unit representation system."
                          }
                        }
                      }
                    ],
                    "description": "The information determined as a result of making the observation, if the information has a simple value."
                  },
                  "valueCodeableConcept": {
                    "description": "The information determined as a result of making the observation, if the information has a simple value.",
                    "allOf": [
                      {
                        "type": "object",
                        "properties": {
                          "coding": {
                            "type": "array",
                            "items": {
                              "description": "A reference to a code defined by a terminology system.",
                              "allOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "system": {
                                      "type": "string",
                                      "pattern": "\\S*",
                                      "description": "The identification of the code system that defines the meaning of the symbol in the code."
                                    },
                                    "version": {
                                      "type": "string",
                                      "pattern": "[ \\r\\n\\t\\S]+",
                                      "description": "The version of the code system which was used when choosing this code. Note that a well&ndash;maintained code system does not need the version reported, because the meaning of codes is consistent across versions. However this cannot consistently be assured, and when the meaning is not guaranteed to be consistent, the version SHOULD be exchanged."
                                    },
                                    "code": {
                                      "type": "string",
                                      "pattern": "[^\\s]+(\\s[^\\s]+)*",
                                      "description": "A symbol in syntax defined by the system. The symbol may be a predefined code or an expression in a syntax defined by the coding system (e.g. post&ndash;coordination)."
                                    },
                                    "display": {
                                      "type": "string",
                                      "pattern": "[ \\r\\n\\t\\S]+",
                                      "description": "A representation of the meaning of the code in the system, following the rules of the system."
                                    },
                                    "userSelected": {
                                      "type": "boolean",
                                      "description": "Indicates that this coding was chosen by a user directly &ndash; e.g. off a pick list of available items (codes or displays)."
                                    }
                                  }
                                }
                              ]
                            }
                          },
                          "text": {
                            "type": "string",
                            "pattern": "[ \\r\\n\\t\\S]+",
                            "description": "A human language representation of the concept as seen/selected/uttered by the user who entered the data and/or which represents the intended meaning of the user."
                          }
                        }
                      }
                    ]
                  },
                  "valueString": {
                    "type": "string",
                    "pattern": "[ \\r\\n\\t\\S]+",
                    "description": "The information determined as a result of making the observation, if the information has a simple value."
                  },
                  "valueBoolean": {
                    "type": "boolean",
                    "description": "The information determined as a result of making the observation, if the information has a simple value."
                  },
                  "valueInteger": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The information determined as a result of making the observation, if the information has a simple value."
                  },
                  "valueRange": {
                    "description": "The information determined as a result of making the observation, if the information has a simple value.",
                    "allOf": [
                      {
                        "type": "object",
                        "properties": {
                          "low": {
                            "description": "The low limit. The boundary is inclusive.",
                            "allOf": [
                              {
                                "allOf": [
                                  {
                                    "type": "object",
                                    "properties": {
                                      "value": {
                                        "type": "number",
                                        "description": "The value of the measured amount. The value includes an implicit precision in the presentation of the value."
                                      },
                                      "comparator": {
                                        "type": "string",
                                        "enum": [
                                          "<",
                                          "<=",
                                          ">=",
                                          ">"
                                        ],
                                        "description": "How the value should be understood and represented &ndash; whether the actual value is greater or less than the stated value due to measurement issues; e.g. if the comparator is \"<\" , then the real value is < stated value."
                                      },
                                      "unit": {
                                        "type": "string",
                                        "pattern": "[ \\r\\n\\t\\S]+",
                                        "description": "A human&ndash;readable form of the unit."
                                      },
                                      "system": {
                                        "type": "string",
                                        "pattern": "\\S*",
                                        "description": "The identification of the system that provides the coded form of the unit."
                                      },
                                      "code": {
                                        "type": "string",
                                        "pattern": "[^\\s]+(\\s[^\\s]+)*",
                                        "description": "A computer processable form of the unit in some unit representation system."
                                      }
                                    }
                                  }
                                ]
                              },
                              {
                                "type": "object",
                                "properties": {}
                              }
                            ]
                          },
                          "high": {
                            "description": "The high limit. The boundary is inclusive.",
                            "allOf": [
                              {
                                "allOf": [
                                  {
                                    "type": "object",
                                    "properties": {
                                      "value": {
                                        "type": "number",
                                        "description": "The value of the measured amount. The value includes an implicit precision in the presentation of the value."
                                      },
                                      "comparator": {
                                        "type": "string",
                                        "enum": [
                                          "<",
                                          "<=",
                                          ">=",
                                          ">"
                                        ],
                                        "description": "How the value should be understood and represented &ndash; whether the actual value is greater or less than the stated value due to measurement issues; e.g. if the comparator is \"<\" , then the real value is < stated value."
                                      },
                                      "unit": {
                                        "type": "string",
                                        "pattern": "[ \\r\\n\\t\\S]+",
                                        "description": "A human&ndash;readable form of the unit."
                                      },
                                      "system": {
                                        "type": "string",
                                        "pattern": "\\S*",
                                        "description": "The identification of the system that provides the coded form of the unit."
                                      },
                                      "code": {
                                        "type": "string",
                                        "pattern": "[^\\s]+(\\s[^\\s]+)*",
                                        "description": "A computer processable form of the unit in some unit representation system."
                                      }
                                    }
                                  }
                                ]
                              },
                              {
                                "type": "object",
                                "properties": {}
                              }
                            ]
                          }
                        }
                      }
                    ]
                  },
                  "valueRatio": {
                    "description": "The information determined as a result of making the observation, if the information has a simple value.",
                    "allOf": [
                      {
                        "type": "object",
                        "properties": {
                          "numerator": {
                            "allOf": [
                              {
                                "type": "object",
                                "properties": {
                                  "value": {
                                    "type": "number",
                                    "description": "The value of the measured amount. The value includes an implicit precision in the presentation of the value."
                                  },
                                  "comparator": {
                                    "type": "string",
                                    "enum": [
                                      "<",
                                      "<=",
                                      ">=",
                                      ">"
                                    ],
                                    "description": "How the value should be understood and represented &ndash; whether the actual value is greater or less than the stated value due to measurement issues; e.g. if the comparator is \"<\" , then the real value is < stated value."
                                  },
                                  "unit": {
                                    "type": "string",
                                    "pattern": "[ \\r\\n\\t\\S]+",
                                    "description": "A human&ndash;readable form of the unit."
                                  },
                                  "system": {
                                    "type": "string",
                                    "pattern": "\\S*",
                                    "description": "The identification of the system that provides the coded form of the unit."
                                  },
                                  "code": {
                                    "type": "string",
                                    "pattern": "[^\\s]+(\\s[^\\s]+)*",
                                    "description": "A computer processable form of the unit in some unit representation system."
                                  }
                                }
                              }
                            ],
                            "description": "The value of the numerator."
                          },
                          "denominator": {
                            "allOf": [
                              {
                                "type": "object",
                                "properties": {
                                  "value": {
                                    "type": "number",
                                    "description": "The value of the measured amount. The value includes an implicit precision in the presentation of the value."
                                  },
                                  "comparator": {
                                    "type": "string",
                                    "enum": [
                                      "<",
                                      "<=",
                                      ">=",
                                      ">"
                                    ],
                                    "description": "How the value should be understood and represented &ndash; whether the actual value is greater or less than the stated value due to measurement issues; e.g. if the comparator is \"<\" , then the real value is < stated value."
                                  },
                                  "unit": {
                                    "type": "string",
                                    "pattern": "[ \\r\\n\\t\\S]+",
                                    "description": "A human&ndash;readable form of the unit."
                                  },
                                  "system": {
                                    "type": "string",
                                    "pattern": "\\S*",
                                    "description": "The identification of the system that provides the coded form of the unit."
                                  },
                                  "code": {
                                    "type": "string",
                                    "pattern": "[^\\s]+(\\s[^\\s]+)*",
                                    "description": "A computer processable form of the unit in some unit representation system."
                                  }
                                }
                              }
                            ],
                            "description": "The value of the denominator."
                          }
                        }
                      }
                    ]
                  },
                  "valueSampledData": {
                    "description": "The information determined as a result of making the observation, if the information has a simple value.",
                    "allOf": [
                      {
                        "type": "object",
                        "properties": {
                          "origin": {
                            "description": "The base quantity that a measured value of zero represents. In addition, this provides the units of the entire measurement series.",
                            "allOf": [
                              {
                                "allOf": [
                                  {
                                    "type": "object",
                                    "properties": {
                                      "value": {
                                        "type": "number",
                                        "description": "The value of the measured amount. The value includes an implicit precision in the presentation of the value."
                                      },
                                      "comparator": {
                                        "type": "string",
                                        "enum": [
                                          "<",
                                          "<=",
                                          ">=",
                                          ">"
                                        ],
                                        "description": "How the value should be understood and represented &ndash; whether the actual value is greater or less than the stated value due to measurement issues; e.g. if the comparator is \"<\" , then the real value is < stated value."
                                      },
                                      "unit": {
                                        "type": "string",
                                        "pattern": "[ \\r\\n\\t\\S]+",
                                        "description": "A human&ndash;readable form of the unit."
                                      },
                                      "system": {
                                        "type": "string",
                                        "pattern": "\\S*",
                                        "description": "The identification of the system that provides the coded form of the unit."
                                      },
                                      "code": {
                                        "type": "string",
                                        "pattern": "[^\\s]+(\\s[^\\s]+)*",
                                        "description": "A computer processable form of the unit in some unit representation system."
                                      }
                                    }
                                  }
                                ]
                              },
                              {
                                "type": "object",
                                "properties": {}
                              }
                            ]
                          },
                          "period": {
                            "type": "number",
                            "description": "The length of time between sampling times, measured in milliseconds."
                          },
                          "factor": {
                            "type": "number",
                            "description": "A correction factor that is applied to the sampled data points before they are added to the origin."
                          },
                          "lowerLimit": {
                            "type": "number",
                            "description": "The lower limit of detection of the measured points. This is needed if any of the data points have the value \"L\" (lower than detection limit)."
                          },
                          "upperLimit": {
                            "type": "number",
                            "description": "The upper limit of detection of the measured points. This is needed if any of the data points have the value \"U\" (higher than detection limit)."
                          },
                          "dimensions": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The number of sample points at each time point. If this value is greater than one, then the dimensions will be interlaced &ndash; all the sample points for a point in time will be recorded at once."
                          },
                          "data": {
                            "type": "string",
                            "pattern": "[ \\r\\n\\t\\S]+",
                            "description": "A series of data points which are decimal values separated by a single space (character u20). The special values \"E\" (error), \"L\" (below detection limit) and \"U\" (above detection limit) can also be used in place of a decimal value."
                          }
                        },
                        "required": [
                          "origin",
                          "period",
                          "dimensions"
                        ]
                      }
                    ]
                  },
                  "valueTime": {
                    "type": "string",
                    "pattern": "([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?",
                    "description": "The information determined as a result of making the observation, if the information has a simple value."
                  },
                  "valueDateTime": {
                    "type": "string",
                    "pattern": "([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?",
                    "description": "The information determined as a result of making the observation, if the information has a simple value."
                  },
                  "valuePeriod": {
                    "description": "The information determined as a result of making the observation, if the information has a simple value.",
                    "allOf": [
                      {
                        "type": "object",
                        "properties": {
                          "start": {
                            "type": "string",
                            "pattern": "([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?",
                            "description": "The start of the period. The boundary is inclusive."
                          },
                          "end": {
                            "type": "string",
                            "pattern": "([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?",
                            "description": "The end of the period. If the end of the period is missing, it means no end was known or planned at the time the instance was created. The start may be in the past, and the end date in the future, which means that period is expected/planned to end at that time."
                          }
                        }
                      }
                    ]
                  },
                  "dataAbsentReason": {
                    "description": "Provides a reason why the expected value in the element Observation.component.value[x] is missing.",
                    "allOf": [
                      {
                        "type": "object",
                        "properties": {
                          "coding": {
                            "type": "array",
                            "items": {
                              "description": "A reference to a code defined by a terminology system.",
                              "allOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "system": {
                                      "type": "string",
                                      "pattern": "\\S*",
                                      "description": "The identification of the code system that defines the meaning of the symbol in the code."
                                    },
                                    "version": {
                                      "type": "string",
                                      "pattern": "[ \\r\\n\\t\\S]+",
                                      "description": "The version of the code system which was used when choosing this code. Note that a well&ndash;maintained code system does not need the version reported, because the meaning of codes is consistent across versions. However this cannot consistently be assured, and when the meaning is not guaranteed to be consistent, the version SHOULD be exchanged."
                                    },
                                    "code": {
                                      "type": "string",
                                      "pattern": "[^\\s]+(\\s[^\\s]+)*",
                                      "description": "A symbol in syntax defined by the system. The symbol may be a predefined code or an expression in a syntax defined by the coding system (e.g. post&ndash;coordination)."
                                    },
                                    "display": {
                                      "type": "string",
                                      "pattern": "[ \\r\\n\\t\\S]+",
                                      "description": "A representation of the meaning of the code in the system, following the rules of the system."
                                    },
                                    "userSelected": {
                                      "type": "boolean",
                                      "description": "Indicates that this coding was chosen by a user directly &ndash; e.g. off a pick list of available items (codes or displays)."
                                    }
                                  }
                                }
                              ]
                            }
                          },
                          "text": {
                            "type": "string",
                            "pattern": "[ \\r\\n\\t\\S]+",
                            "description": "A human language representation of the concept as seen/selected/uttered by the user who entered the data and/or which represents the intended meaning of the user."
                          }
                        }
                      }
                    ]
                  },
                  "interpretation": {
                    "type": "array",
                    "items": {
                      "description": "A categorical assessment of an observation value.  For example, high, low, normal.",
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "coding": {
                              "type": "array",
                              "items": {
                                "description": "A reference to a code defined by a terminology system.",
                                "allOf": [
                                  {
                                    "type": "object",
                                    "properties": {
                                      "system": {
                                        "type": "string",
                                        "pattern": "\\S*",
                                        "description": "The identification of the code system that defines the meaning of the symbol in the code."
                                      },
                                      "version": {
                                        "type": "string",
                                        "pattern": "[ \\r\\n\\t\\S]+",
                                        "description": "The version of the code system which was used when choosing this code. Note that a well&ndash;maintained code system does not need the version reported, because the meaning of codes is consistent across versions. However this cannot consistently be assured, and when the meaning is not guaranteed to be consistent, the version SHOULD be exchanged."
                                      },
                                      "code": {
                                        "type": "string",
                                        "pattern": "[^\\s]+(\\s[^\\s]+)*",
                                        "description": "A symbol in syntax defined by the system. The symbol may be a predefined code or an expression in a syntax defined by the coding system (e.g. post&ndash;coordination)."
                                      },
                                      "display": {
                                        "type": "string",
                                        "pattern": "[ \\r\\n\\t\\S]+",
                                        "description": "A representation of the meaning of the code in the system, following the rules of the system."
                                      },
                                      "userSelected": {
                                        "type": "boolean",
                                        "description": "Indicates that this coding was chosen by a user directly &ndash; e.g. off a pick list of available items (codes or displays)."
                                      }
                                    }
                                  }
                                ]
                              }
                            },
                            "text": {
                              "type": "string",
                              "pattern": "[ \\r\\n\\t\\S]+",
                              "description": "A human language representation of the concept as seen/selected/uttered by the user who entered the data and/or which represents the intended meaning of the user."
                            }
                          }
                        }
                      ]
                    }
                  },
                  "referenceRange": {
                    "type": "array",
                    "items": {
                      "description": "Guidance on how to interpret the value by comparison to a normal or recommended range.",
                      "allOf": [
                        {
                          "allOf": [
                            {
                              "type": "object",
                              "properties": {
                                "modifierExtension": {
                                  "type": "array",
                                  "items": {
                                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                                    "allOf": [
                                      {
                                        "type": "object",
                                        "additionalProperties": true
                                      }
                                    ]
                                  }
                                }
                              }
                            }
                          ]
                        },
                        {
                          "type": "object",
                          "properties": {
                            "low": {
                              "description": "The value of the low bound of the reference range.  The low bound of the reference range endpoint is inclusive of the value (e.g.  reference range is >=5 &ndash; <=9). If the low bound is omitted,  it is assumed to be meaningless (e.g. reference range is <=2.3).",
                              "allOf": [
                                {
                                  "allOf": [
                                    {
                                      "type": "object",
                                      "properties": {
                                        "value": {
                                          "type": "number",
                                          "description": "The value of the measured amount. The value includes an implicit precision in the presentation of the value."
                                        },
                                        "comparator": {
                                          "type": "string",
                                          "enum": [
                                            "<",
                                            "<=",
                                            ">=",
                                            ">"
                                          ],
                                          "description": "How the value should be understood and represented &ndash; whether the actual value is greater or less than the stated value due to measurement issues; e.g. if the comparator is \"<\" , then the real value is < stated value."
                                        },
                                        "unit": {
                                          "type": "string",
                                          "pattern": "[ \\r\\n\\t\\S]+",
                                          "description": "A human&ndash;readable form of the unit."
                                        },
                                        "system": {
                                          "type": "string",
                                          "pattern": "\\S*",
                                          "description": "The identification of the system that provides the coded form of the unit."
                                        },
                                        "code": {
                                          "type": "string",
                                          "pattern": "[^\\s]+(\\s[^\\s]+)*",
                                          "description": "A computer processable form of the unit in some unit representation system."
                                        }
                                      }
                                    }
                                  ]
                                },
                                {
                                  "type": "object",
                                  "properties": {}
                                }
                              ]
                            },
                            "high": {
                              "description": "The value of the high bound of the reference range.  The high bound of the reference range endpoint is inclusive of the value (e.g.  reference range is >=5 &ndash; <=9). If the high bound is omitted,  it is assumed to be meaningless (e.g. reference range is >= 2.3).",
                              "allOf": [
                                {
                                  "allOf": [
                                    {
                                      "type": "object",
                                      "properties": {
                                        "value": {
                                          "type": "number",
                                          "description": "The value of the measured amount. The value includes an implicit precision in the presentation of the value."
                                        },
                                        "comparator": {
                                          "type": "string",
                                          "enum": [
                                            "<",
                                            "<=",
                                            ">=",
                                            ">"
                                          ],
                                          "description": "How the value should be understood and represented &ndash; whether the actual value is greater or less than the stated value due to measurement issues; e.g. if the comparator is \"<\" , then the real value is < stated value."
                                        },
                                        "unit": {
                                          "type": "string",
                                          "pattern": "[ \\r\\n\\t\\S]+",
                                          "description": "A human&ndash;readable form of the unit."
                                        },
                                        "system": {
                                          "type": "string",
                                          "pattern": "\\S*",
                                          "description": "The identification of the system that provides the coded form of the unit."
                                        },
                                        "code": {
                                          "type": "string",
                                          "pattern": "[^\\s]+(\\s[^\\s]+)*",
                                          "description": "A computer processable form of the unit in some unit representation system."
                                        }
                                      }
                                    }
                                  ]
                                },
                                {
                                  "type": "object",
                                  "properties": {}
                                }
                              ]
                            },
                            "type": {
                              "description": "Codes to indicate the what part of the targeted reference population it applies to. For example, the normal or therapeutic range.",
                              "allOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "coding": {
                                      "type": "array",
                                      "items": {
                                        "description": "A reference to a code defined by a terminology system.",
                                        "allOf": [
                                          {
                                            "type": "object",
                                            "properties": {
                                              "system": {
                                                "type": "string",
                                                "pattern": "\\S*",
                                                "description": "The identification of the code system that defines the meaning of the symbol in the code."
                                              },
                                              "version": {
                                                "type": "string",
                                                "pattern": "[ \\r\\n\\t\\S]+",
                                                "description": "The version of the code system which was used when choosing this code. Note that a well&ndash;maintained code system does not need the version reported, because the meaning of codes is consistent across versions. However this cannot consistently be assured, and when the meaning is not guaranteed to be consistent, the version SHOULD be exchanged."
                                              },
                                              "code": {
                                                "type": "string",
                                                "pattern": "[^\\s]+(\\s[^\\s]+)*",
                                                "description": "A symbol in syntax defined by the system. The symbol may be a predefined code or an expression in a syntax defined by the coding system (e.g. post&ndash;coordination)."
                                              },
                                              "display": {
                                                "type": "string",
                                                "pattern": "[ \\r\\n\\t\\S]+",
                                                "description": "A representation of the meaning of the code in the system, following the rules of the system."
                                              },
                                              "userSelected": {
                                                "type": "boolean",
                                                "description": "Indicates that this coding was chosen by a user directly &ndash; e.g. off a pick list of available items (codes or displays)."
                                              }
                                            }
                                          }
                                        ]
                                      }
                                    },
                                    "text": {
                                      "type": "string",
                                      "pattern": "[ \\r\\n\\t\\S]+",
                                      "description": "A human language representation of the concept as seen/selected/uttered by the user who entered the data and/or which represents the intended meaning of the user."
                                    }
                                  }
                                }
                              ]
                            },
                            "appliesTo": {
                              "type": "array",
                              "items": {
                                "description": "Codes to indicate the target population this reference range applies to.  For example, a reference range may be based on the normal population or a particular sex or race.  Multiple `appliesTo`  are interpreted as an \"AND\" of the target populations.  For example, to represent a target population of African American females, both a code of female and a code for African American would be used.",
                                "allOf": [
                                  {
                                    "type": "object",
                                    "properties": {
                                      "coding": {
                                        "type": "array",
                                        "items": {
                                          "description": "A reference to a code defined by a terminology system.",
                                          "allOf": [
                                            {
                                              "type": "object",
                                              "properties": {
                                                "system": {
                                                  "type": "string",
                                                  "pattern": "\\S*",
                                                  "description": "The identification of the code system that defines the meaning of the symbol in the code."
                                                },
                                                "version": {
                                                  "type": "string",
                                                  "pattern": "[ \\r\\n\\t\\S]+",
                                                  "description": "The version of the code system which was used when choosing this code. Note that a well&ndash;maintained code system does not need the version reported, because the meaning of codes is consistent across versions. However this cannot consistently be assured, and when the meaning is not guaranteed to be consistent, the version SHOULD be exchanged."
                                                },
                                                "code": {
                                                  "type": "string",
                                                  "pattern": "[^\\s]+(\\s[^\\s]+)*",
                                                  "description": "A symbol in syntax defined by the system. The symbol may be a predefined code or an expression in a syntax defined by the coding system (e.g. post&ndash;coordination)."
                                                },
                                                "display": {
                                                  "type": "string",
                                                  "pattern": "[ \\r\\n\\t\\S]+",
                                                  "description": "A representation of the meaning of the code in the system, following the rules of the system."
                                                },
                                                "userSelected": {
                                                  "type": "boolean",
                                                  "description": "Indicates that this coding was chosen by a user directly &ndash; e.g. off a pick list of available items (codes or displays)."
                                                }
                                              }
                                            }
                                          ]
                                        }
                                      },
                                      "text": {
                                        "type": "string",
                                        "pattern": "[ \\r\\n\\t\\S]+",
                                        "description": "A human language representation of the concept as seen/selected/uttered by the user who entered the data and/or which represents the intended meaning of the user."
                                      }
                                    }
                                  }
                                ]
                              }
                            },
                            "age": {
                              "description": "The age at which this reference range is applicable. This is a neonatal age (e.g. number of weeks at term) if the meaning says so.",
                              "allOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "low": {
                                      "description": "The low limit. The boundary is inclusive.",
                                      "allOf": [
                                        {
                                          "allOf": [
                                            {
                                              "type": "object",
                                              "properties": {
                                                "value": {
                                                  "type": "number",
                                                  "description": "The value of the measured amount. The value includes an implicit precision in the presentation of the value."
                                                },
                                                "comparator": {
                                                  "type": "string",
                                                  "enum": [
                                                    "<",
                                                    "<=",
                                                    ">=",
                                                    ">"
                                                  ],
                                                  "description": "How the value should be understood and represented &ndash; whether the actual value is greater or less than the stated value due to measurement issues; e.g. if the comparator is \"<\" , then the real value is < stated value."
                                                },
                                                "unit": {
                                                  "type": "string",
                                                  "pattern": "[ \\r\\n\\t\\S]+",
                                                  "description": "A human&ndash;readable form of the unit."
                                                },
                                                "system": {
                                                  "type": "string",
                                                  "pattern": "\\S*",
                                                  "description": "The identification of the system that provides the coded form of the unit."
                                                },
                                                "code": {
                                                  "type": "string",
                                                  "pattern": "[^\\s]+(\\s[^\\s]+)*",
                                                  "description": "A computer processable form of the unit in some unit representation system."
                                                }
                                              }
                                            }
                                          ]
                                        },
                                        {
                                          "type": "object",
                                          "properties": {}
                                        }
                                      ]
                                    },
                                    "high": {
                                      "description": "The high limit. The boundary is inclusive.",
                                      "allOf": [
                                        {
                                          "allOf": [
                                            {
                                              "type": "object",
                                              "properties": {
                                                "value": {
                                                  "type": "number",
                                                  "description": "The value of the measured amount. The value includes an implicit precision in the presentation of the value."
                                                },
                                                "comparator": {
                                                  "type": "string",
                                                  "enum": [
                                                    "<",
                                                    "<=",
                                                    ">=",
                                                    ">"
                                                  ],
                                                  "description": "How the value should be understood and represented &ndash; whether the actual value is greater or less than the stated value due to measurement issues; e.g. if the comparator is \"<\" , then the real value is < stated value."
                                                },
                                                "unit": {
                                                  "type": "string",
                                                  "pattern": "[ \\r\\n\\t\\S]+",
                                                  "description": "A human&ndash;readable form of the unit."
                                                },
                                                "system": {
                                                  "type": "string",
                                                  "pattern": "\\S*",
                                                  "description": "The identification of the system that provides the coded form of the unit."
                                                },
                                                "code": {
                                                  "type": "string",
                                                  "pattern": "[^\\s]+(\\s[^\\s]+)*",
                                                  "description": "A computer processable form of the unit in some unit representation system."
                                                }
                                              }
                                            }
                                          ]
                                        },
                                        {
                                          "type": "object",
                                          "properties": {}
                                        }
                                      ]
                                    }
                                  }
                                }
                              ]
                            },
                            "text": {
                              "type": "string",
                              "pattern": "[ \\r\\n\\t\\S]+",
                              "description": "Text based reference range in an observation which may be used when a quantitative range is not appropriate for an observation.  An example would be a reference value of \"Negative\" or a list or table of \"normals\"."
                            }
                          }
                        }
                      ]
                    }
                  }
                },
                "required": [
                  "code"
                ]
              }
            ]
          }
        }
      },
      "required": [
        "status",
        "code"
      ]
    }
  ]
}