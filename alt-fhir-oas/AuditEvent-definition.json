{
  "allOf": [
    {
      "allOf": [
        {
          "type": "object",
          "discriminator": "resourceType",
          "properties": {
            "resourceType": {
              "type": "string",
              "enum": [
                "Account",
                "ActivityDefinition",
                "AdverseEvent",
                "AllergyIntolerance",
                "Appointment",
                "AppointmentResponse",
                "AuditEvent",
                "Basic",
                "Binary",
                "BiologicallyDerivedProduct",
                "BodyStructure",
                "Bundle",
                "CapabilityStatement",
                "CarePlan",
                "CareTeam",
                "CatalogEntry",
                "ChargeItem",
                "ChargeItemDefinition",
                "Claim",
                "ClaimResponse",
                "ClinicalImpression",
                "CodeSystem",
                "Communication",
                "CommunicationRequest",
                "CompartmentDefinition",
                "Composition",
                "ConceptMap",
                "Condition",
                "Consent",
                "Contract",
                "Coverage",
                "CoverageEligibilityRequest",
                "CoverageEligibilityResponse",
                "DetectedIssue",
                "Device",
                "DeviceDefinition",
                "DeviceMetric",
                "DeviceRequest",
                "DeviceUseStatement",
                "DiagnosticReport",
                "DocumentManifest",
                "DocumentReference",
                "DomainResource",
                "EffectEvidenceSynthesis",
                "Encounter",
                "Endpoint",
                "EnrollmentRequest",
                "EnrollmentResponse",
                "EpisodeOfCare",
                "EventDefinition",
                "Evidence",
                "EvidenceVariable",
                "ExampleScenario",
                "ExplanationOfBenefit",
                "FamilyMemberHistory",
                "Flag",
                "Goal",
                "GraphDefinition",
                "Group",
                "GuidanceResponse",
                "HealthcareService",
                "ImagingStudy",
                "Immunization",
                "ImmunizationEvaluation",
                "ImmunizationRecommendation",
                "ImplementationGuide",
                "InsurancePlan",
                "Invoice",
                "Library",
                "Linkage",
                "List",
                "Location",
                "Measure",
                "MeasureReport",
                "Media",
                "Medication",
                "MedicationAdministration",
                "MedicationDispense",
                "MedicationKnowledge",
                "MedicationRequest",
                "MedicationStatement",
                "MedicinalProduct",
                "MedicinalProductAuthorization",
                "MedicinalProductContraindication",
                "MedicinalProductIndication",
                "MedicinalProductIngredient",
                "MedicinalProductInteraction",
                "MedicinalProductManufactured",
                "MedicinalProductPackaged",
                "MedicinalProductPharmaceutical",
                "MedicinalProductUndesirableEffect",
                "MessageDefinition",
                "MessageHeader",
                "MolecularSequence",
                "NamingSystem",
                "NutritionOrder",
                "Observation",
                "ObservationDefinition",
                "OperationDefinition",
                "OperationOutcome",
                "Organization",
                "OrganizationAffiliation",
                "Parameters",
                "Patient",
                "PaymentNotice",
                "PaymentReconciliation",
                "Person",
                "PlanDefinition",
                "Practitioner",
                "PractitionerRole",
                "Procedure",
                "Provenance",
                "Questionnaire",
                "QuestionnaireResponse",
                "RelatedPerson",
                "RequestGroup",
                "ResearchDefinition",
                "ResearchElementDefinition",
                "ResearchStudy",
                "ResearchSubject",
                "Resource",
                "RiskAssessment",
                "RiskEvidenceSynthesis",
                "Schedule",
                "SearchParameter",
                "ServiceRequest",
                "Slot",
                "Specimen",
                "SpecimenDefinition",
                "StructureDefinition",
                "StructureMap",
                "Subscription",
                "Substance",
                "SubstanceNucleicAcid",
                "SubstancePolymer",
                "SubstanceProtein",
                "SubstanceReferenceInformation",
                "SubstanceSourceMaterial",
                "SubstanceSpecification",
                "SupplyDelivery",
                "SupplyRequest",
                "Task",
                "TerminologyCapabilities",
                "TestReport",
                "TestScript",
                "ValueSet",
                "VerificationResult",
                "VisionPrescription"
              ]
            },
            "id": {
              "type": "string",
              "pattern": "[A-Za-z0-9\\-\\.]{1,64}",
              "description": "The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes."
            },
            "meta": {
              "description": "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
              "allOf": [
                {
                  "type": "object",
                  "properties": {
                    "versionId": {
                      "type": "string",
                      "pattern": "[A-Za-z0-9\\-\\.]{1,64}",
                      "description": "The version specific identifier, as it appears in the version portion of the URL. This value changes when the resource is created, updated, or deleted."
                    },
                    "lastUpdated": {
                      "type": "string",
                      "pattern": "([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))",
                      "description": "When the resource last changed &ndash; e.g. when the version changed."
                    },
                    "source": {
                      "type": "string",
                      "pattern": "\\S*",
                      "description": "A uri that identifies the source system of the resource. This provides a minimal amount of [Provenance](provenance.html#) information that can be used to track or differentiate the source of information in the resource. The source may identify another FHIR server, document, message, database, etc."
                    },
                    "profile": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "pattern": "\\S*",
                        "description": "A list of profiles (references to [StructureDefinition](structuredefinition.html#) resources) that this resource claims to conform to. The URL is a reference to [StructureDefinition.url](structuredefinition&ndash;definitions.html#StructureDefinition.url)."
                      }
                    },
                    "security": {
                      "type": "array",
                      "items": {
                        "description": "Security labels applied to this resource. These tags connect specific resources to the overall security policy and infrastructure.",
                        "allOf": [
                          {
                            "type": "object",
                            "properties": {
                              "system": {
                                "type": "string",
                                "pattern": "\\S*",
                                "description": "The identification of the code system that defines the meaning of the symbol in the code."
                              },
                              "version": {
                                "type": "string",
                                "pattern": "[ \\r\\n\\t\\S]+",
                                "description": "The version of the code system which was used when choosing this code. Note that a well&ndash;maintained code system does not need the version reported, because the meaning of codes is consistent across versions. However this cannot consistently be assured, and when the meaning is not guaranteed to be consistent, the version SHOULD be exchanged."
                              },
                              "code": {
                                "type": "string",
                                "pattern": "[^\\s]+(\\s[^\\s]+)*",
                                "description": "A symbol in syntax defined by the system. The symbol may be a predefined code or an expression in a syntax defined by the coding system (e.g. post&ndash;coordination)."
                              },
                              "display": {
                                "type": "string",
                                "pattern": "[ \\r\\n\\t\\S]+",
                                "description": "A representation of the meaning of the code in the system, following the rules of the system."
                              },
                              "userSelected": {
                                "type": "boolean",
                                "description": "Indicates that this coding was chosen by a user directly &ndash; e.g. off a pick list of available items (codes or displays)."
                              }
                            }
                          }
                        ]
                      }
                    },
                    "tag": {
                      "type": "array",
                      "items": {
                        "description": "Tags applied to this resource. Tags are intended to be used to identify and relate resources to process and workflow, and applications are not required to consider the tags when interpreting the meaning of a resource.",
                        "allOf": [
                          {
                            "type": "object",
                            "properties": {
                              "system": {
                                "type": "string",
                                "pattern": "\\S*",
                                "description": "The identification of the code system that defines the meaning of the symbol in the code."
                              },
                              "version": {
                                "type": "string",
                                "pattern": "[ \\r\\n\\t\\S]+",
                                "description": "The version of the code system which was used when choosing this code. Note that a well&ndash;maintained code system does not need the version reported, because the meaning of codes is consistent across versions. However this cannot consistently be assured, and when the meaning is not guaranteed to be consistent, the version SHOULD be exchanged."
                              },
                              "code": {
                                "type": "string",
                                "pattern": "[^\\s]+(\\s[^\\s]+)*",
                                "description": "A symbol in syntax defined by the system. The symbol may be a predefined code or an expression in a syntax defined by the coding system (e.g. post&ndash;coordination)."
                              },
                              "display": {
                                "type": "string",
                                "pattern": "[ \\r\\n\\t\\S]+",
                                "description": "A representation of the meaning of the code in the system, following the rules of the system."
                              },
                              "userSelected": {
                                "type": "boolean",
                                "description": "Indicates that this coding was chosen by a user directly &ndash; e.g. off a pick list of available items (codes or displays)."
                              }
                            }
                          }
                        ]
                      }
                    }
                  }
                }
              ]
            },
            "implicitRules": {
              "type": "string",
              "pattern": "\\S*",
              "description": "A reference to a set of rules that were followed when the resource was constructed, and which must be understood when processing the content. Often, this is a reference to an implementation guide that defines the special rules along with other profiles etc."
            },
            "language": {
              "type": "string",
              "pattern": "[^\\s]+(\\s[^\\s]+)*",
              "description": "The base language in which the resource is written."
            }
          },
          "required": [
            "resourceType"
          ]
        },
        {
          "type": "object",
          "properties": {
            "text": {
              "description": "A human&ndash;readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it \"clinically safe\" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.",
              "allOf": [
                {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "enum": [
                        "generated",
                        "extensions",
                        "additional",
                        "empty"
                      ],
                      "description": "The status of the narrative &ndash; whether it's entirely generated (from just the defined data or the extensions too), or whether a human authored it and it may contain additional data."
                    },
                    "div": {
                      "type": "string",
                      "description": "The actual narrative content, a stripped down version of XHTML."
                    }
                  },
                  "required": [
                    "status",
                    "div"
                  ]
                }
              ]
            },
            "contained": {
              "type": "array",
              "items": {
                "type": "object",
                "discriminator": "resourceType",
                "properties": {
                  "resourceType": {
                    "type": "string",
                    "enum": [
                      "Account",
                      "ActivityDefinition",
                      "AdverseEvent",
                      "AllergyIntolerance",
                      "Appointment",
                      "AppointmentResponse",
                      "AuditEvent",
                      "Basic",
                      "Binary",
                      "BiologicallyDerivedProduct",
                      "BodyStructure",
                      "Bundle",
                      "CapabilityStatement",
                      "CarePlan",
                      "CareTeam",
                      "CatalogEntry",
                      "ChargeItem",
                      "ChargeItemDefinition",
                      "Claim",
                      "ClaimResponse",
                      "ClinicalImpression",
                      "CodeSystem",
                      "Communication",
                      "CommunicationRequest",
                      "CompartmentDefinition",
                      "Composition",
                      "ConceptMap",
                      "Condition",
                      "Consent",
                      "Contract",
                      "Coverage",
                      "CoverageEligibilityRequest",
                      "CoverageEligibilityResponse",
                      "DetectedIssue",
                      "Device",
                      "DeviceDefinition",
                      "DeviceMetric",
                      "DeviceRequest",
                      "DeviceUseStatement",
                      "DiagnosticReport",
                      "DocumentManifest",
                      "DocumentReference",
                      "DomainResource",
                      "EffectEvidenceSynthesis",
                      "Encounter",
                      "Endpoint",
                      "EnrollmentRequest",
                      "EnrollmentResponse",
                      "EpisodeOfCare",
                      "EventDefinition",
                      "Evidence",
                      "EvidenceVariable",
                      "ExampleScenario",
                      "ExplanationOfBenefit",
                      "FamilyMemberHistory",
                      "Flag",
                      "Goal",
                      "GraphDefinition",
                      "Group",
                      "GuidanceResponse",
                      "HealthcareService",
                      "ImagingStudy",
                      "Immunization",
                      "ImmunizationEvaluation",
                      "ImmunizationRecommendation",
                      "ImplementationGuide",
                      "InsurancePlan",
                      "Invoice",
                      "Library",
                      "Linkage",
                      "List",
                      "Location",
                      "Measure",
                      "MeasureReport",
                      "Media",
                      "Medication",
                      "MedicationAdministration",
                      "MedicationDispense",
                      "MedicationKnowledge",
                      "MedicationRequest",
                      "MedicationStatement",
                      "MedicinalProduct",
                      "MedicinalProductAuthorization",
                      "MedicinalProductContraindication",
                      "MedicinalProductIndication",
                      "MedicinalProductIngredient",
                      "MedicinalProductInteraction",
                      "MedicinalProductManufactured",
                      "MedicinalProductPackaged",
                      "MedicinalProductPharmaceutical",
                      "MedicinalProductUndesirableEffect",
                      "MessageDefinition",
                      "MessageHeader",
                      "MolecularSequence",
                      "NamingSystem",
                      "NutritionOrder",
                      "Observation",
                      "ObservationDefinition",
                      "OperationDefinition",
                      "OperationOutcome",
                      "Organization",
                      "OrganizationAffiliation",
                      "Parameters",
                      "Patient",
                      "PaymentNotice",
                      "PaymentReconciliation",
                      "Person",
                      "PlanDefinition",
                      "Practitioner",
                      "PractitionerRole",
                      "Procedure",
                      "Provenance",
                      "Questionnaire",
                      "QuestionnaireResponse",
                      "RelatedPerson",
                      "RequestGroup",
                      "ResearchDefinition",
                      "ResearchElementDefinition",
                      "ResearchStudy",
                      "ResearchSubject",
                      "Resource",
                      "RiskAssessment",
                      "RiskEvidenceSynthesis",
                      "Schedule",
                      "SearchParameter",
                      "ServiceRequest",
                      "Slot",
                      "Specimen",
                      "SpecimenDefinition",
                      "StructureDefinition",
                      "StructureMap",
                      "Subscription",
                      "Substance",
                      "SubstanceNucleicAcid",
                      "SubstancePolymer",
                      "SubstanceProtein",
                      "SubstanceReferenceInformation",
                      "SubstanceSourceMaterial",
                      "SubstanceSpecification",
                      "SupplyDelivery",
                      "SupplyRequest",
                      "Task",
                      "TerminologyCapabilities",
                      "TestReport",
                      "TestScript",
                      "ValueSet",
                      "VerificationResult",
                      "VisionPrescription"
                    ]
                  },
                  "id": {
                    "type": "string",
                    "pattern": "[A-Za-z0-9\\-\\.]{1,64}",
                    "description": "The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes."
                  },
                  "meta": {
                    "description": "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
                    "allOf": [
                      {
                        "type": "object",
                        "properties": {
                          "versionId": {
                            "type": "string",
                            "pattern": "[A-Za-z0-9\\-\\.]{1,64}",
                            "description": "The version specific identifier, as it appears in the version portion of the URL. This value changes when the resource is created, updated, or deleted."
                          },
                          "lastUpdated": {
                            "type": "string",
                            "pattern": "([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))",
                            "description": "When the resource last changed &ndash; e.g. when the version changed."
                          },
                          "source": {
                            "type": "string",
                            "pattern": "\\S*",
                            "description": "A uri that identifies the source system of the resource. This provides a minimal amount of [Provenance](provenance.html#) information that can be used to track or differentiate the source of information in the resource. The source may identify another FHIR server, document, message, database, etc."
                          },
                          "profile": {
                            "type": "array",
                            "items": {
                              "type": "string",
                              "pattern": "\\S*",
                              "description": "A list of profiles (references to [StructureDefinition](structuredefinition.html#) resources) that this resource claims to conform to. The URL is a reference to [StructureDefinition.url](structuredefinition&ndash;definitions.html#StructureDefinition.url)."
                            }
                          },
                          "security": {
                            "type": "array",
                            "items": {
                              "description": "Security labels applied to this resource. These tags connect specific resources to the overall security policy and infrastructure.",
                              "allOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "system": {
                                      "type": "string",
                                      "pattern": "\\S*",
                                      "description": "The identification of the code system that defines the meaning of the symbol in the code."
                                    },
                                    "version": {
                                      "type": "string",
                                      "pattern": "[ \\r\\n\\t\\S]+",
                                      "description": "The version of the code system which was used when choosing this code. Note that a well&ndash;maintained code system does not need the version reported, because the meaning of codes is consistent across versions. However this cannot consistently be assured, and when the meaning is not guaranteed to be consistent, the version SHOULD be exchanged."
                                    },
                                    "code": {
                                      "type": "string",
                                      "pattern": "[^\\s]+(\\s[^\\s]+)*",
                                      "description": "A symbol in syntax defined by the system. The symbol may be a predefined code or an expression in a syntax defined by the coding system (e.g. post&ndash;coordination)."
                                    },
                                    "display": {
                                      "type": "string",
                                      "pattern": "[ \\r\\n\\t\\S]+",
                                      "description": "A representation of the meaning of the code in the system, following the rules of the system."
                                    },
                                    "userSelected": {
                                      "type": "boolean",
                                      "description": "Indicates that this coding was chosen by a user directly &ndash; e.g. off a pick list of available items (codes or displays)."
                                    }
                                  }
                                }
                              ]
                            }
                          },
                          "tag": {
                            "type": "array",
                            "items": {
                              "description": "Tags applied to this resource. Tags are intended to be used to identify and relate resources to process and workflow, and applications are not required to consider the tags when interpreting the meaning of a resource.",
                              "allOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "system": {
                                      "type": "string",
                                      "pattern": "\\S*",
                                      "description": "The identification of the code system that defines the meaning of the symbol in the code."
                                    },
                                    "version": {
                                      "type": "string",
                                      "pattern": "[ \\r\\n\\t\\S]+",
                                      "description": "The version of the code system which was used when choosing this code. Note that a well&ndash;maintained code system does not need the version reported, because the meaning of codes is consistent across versions. However this cannot consistently be assured, and when the meaning is not guaranteed to be consistent, the version SHOULD be exchanged."
                                    },
                                    "code": {
                                      "type": "string",
                                      "pattern": "[^\\s]+(\\s[^\\s]+)*",
                                      "description": "A symbol in syntax defined by the system. The symbol may be a predefined code or an expression in a syntax defined by the coding system (e.g. post&ndash;coordination)."
                                    },
                                    "display": {
                                      "type": "string",
                                      "pattern": "[ \\r\\n\\t\\S]+",
                                      "description": "A representation of the meaning of the code in the system, following the rules of the system."
                                    },
                                    "userSelected": {
                                      "type": "boolean",
                                      "description": "Indicates that this coding was chosen by a user directly &ndash; e.g. off a pick list of available items (codes or displays)."
                                    }
                                  }
                                }
                              ]
                            }
                          }
                        }
                      }
                    ]
                  },
                  "implicitRules": {
                    "type": "string",
                    "pattern": "\\S*",
                    "description": "A reference to a set of rules that were followed when the resource was constructed, and which must be understood when processing the content. Often, this is a reference to an implementation guide that defines the special rules along with other profiles etc."
                  },
                  "language": {
                    "type": "string",
                    "pattern": "[^\\s]+(\\s[^\\s]+)*",
                    "description": "The base language in which the resource is written."
                  }
                },
                "required": [
                  "resourceType"
                ],
                "description": "These resources do not have an independent existence apart from the resource that contains them &ndash; they cannot be identified independently, and nor can they have their own independent transaction scope."
              }
            },
            "extension": {
              "type": "array",
              "items": {
                "description": "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                "allOf": [
                  {
                    "type": "object",
                    "additionalProperties": true
                  }
                ]
              }
            },
            "modifierExtension": {
              "type": "array",
              "items": {
                "description": "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                "allOf": [
                  {
                    "type": "object",
                    "additionalProperties": true
                  }
                ]
              }
            }
          }
        }
      ]
    },
    {
      "type": "object",
      "properties": {
        "type": {
          "description": "Identifier for a family of the event.  For example, a menu item, program, rule, policy, function code, application name or URL. It identifies the performed function.",
          "allOf": [
            {
              "type": "object",
              "properties": {
                "system": {
                  "type": "string",
                  "pattern": "\\S*",
                  "description": "The identification of the code system that defines the meaning of the symbol in the code."
                },
                "version": {
                  "type": "string",
                  "pattern": "[ \\r\\n\\t\\S]+",
                  "description": "The version of the code system which was used when choosing this code. Note that a well&ndash;maintained code system does not need the version reported, because the meaning of codes is consistent across versions. However this cannot consistently be assured, and when the meaning is not guaranteed to be consistent, the version SHOULD be exchanged."
                },
                "code": {
                  "type": "string",
                  "pattern": "[^\\s]+(\\s[^\\s]+)*",
                  "description": "A symbol in syntax defined by the system. The symbol may be a predefined code or an expression in a syntax defined by the coding system (e.g. post&ndash;coordination)."
                },
                "display": {
                  "type": "string",
                  "pattern": "[ \\r\\n\\t\\S]+",
                  "description": "A representation of the meaning of the code in the system, following the rules of the system."
                },
                "userSelected": {
                  "type": "boolean",
                  "description": "Indicates that this coding was chosen by a user directly &ndash; e.g. off a pick list of available items (codes or displays)."
                }
              }
            }
          ]
        },
        "subtype": {
          "type": "array",
          "items": {
            "description": "Identifier for the category of event.",
            "allOf": [
              {
                "type": "object",
                "properties": {
                  "system": {
                    "type": "string",
                    "pattern": "\\S*",
                    "description": "The identification of the code system that defines the meaning of the symbol in the code."
                  },
                  "version": {
                    "type": "string",
                    "pattern": "[ \\r\\n\\t\\S]+",
                    "description": "The version of the code system which was used when choosing this code. Note that a well&ndash;maintained code system does not need the version reported, because the meaning of codes is consistent across versions. However this cannot consistently be assured, and when the meaning is not guaranteed to be consistent, the version SHOULD be exchanged."
                  },
                  "code": {
                    "type": "string",
                    "pattern": "[^\\s]+(\\s[^\\s]+)*",
                    "description": "A symbol in syntax defined by the system. The symbol may be a predefined code or an expression in a syntax defined by the coding system (e.g. post&ndash;coordination)."
                  },
                  "display": {
                    "type": "string",
                    "pattern": "[ \\r\\n\\t\\S]+",
                    "description": "A representation of the meaning of the code in the system, following the rules of the system."
                  },
                  "userSelected": {
                    "type": "boolean",
                    "description": "Indicates that this coding was chosen by a user directly &ndash; e.g. off a pick list of available items (codes or displays)."
                  }
                }
              }
            ]
          }
        },
        "action": {
          "type": "string",
          "enum": [
            "C",
            "R",
            "U",
            "D",
            "E"
          ],
          "description": "Indicator for type of action performed during the event that generated the audit."
        },
        "period": {
          "description": "The period during which the activity occurred.",
          "allOf": [
            {
              "type": "object",
              "properties": {
                "start": {
                  "type": "string",
                  "pattern": "([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?",
                  "description": "The start of the period. The boundary is inclusive."
                },
                "end": {
                  "type": "string",
                  "pattern": "([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?",
                  "description": "The end of the period. If the end of the period is missing, it means no end was known or planned at the time the instance was created. The start may be in the past, and the end date in the future, which means that period is expected/planned to end at that time."
                }
              }
            }
          ]
        },
        "recorded": {
          "type": "string",
          "pattern": "([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))",
          "description": "The time when the event was recorded."
        },
        "outcome": {
          "type": "string",
          "enum": [
            "0",
            "4",
            "8",
            "12"
          ],
          "description": "Indicates whether the event succeeded or failed."
        },
        "outcomeDesc": {
          "type": "string",
          "pattern": "[ \\r\\n\\t\\S]+",
          "description": "A free text description of the outcome of the event."
        },
        "purposeOfEvent": {
          "type": "array",
          "items": {
            "description": "The purposeOfUse (reason) that was used during the event being recorded.",
            "allOf": [
              {
                "type": "object",
                "properties": {
                  "coding": {
                    "type": "array",
                    "items": {
                      "description": "A reference to a code defined by a terminology system.",
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "system": {
                              "type": "string",
                              "pattern": "\\S*",
                              "description": "The identification of the code system that defines the meaning of the symbol in the code."
                            },
                            "version": {
                              "type": "string",
                              "pattern": "[ \\r\\n\\t\\S]+",
                              "description": "The version of the code system which was used when choosing this code. Note that a well&ndash;maintained code system does not need the version reported, because the meaning of codes is consistent across versions. However this cannot consistently be assured, and when the meaning is not guaranteed to be consistent, the version SHOULD be exchanged."
                            },
                            "code": {
                              "type": "string",
                              "pattern": "[^\\s]+(\\s[^\\s]+)*",
                              "description": "A symbol in syntax defined by the system. The symbol may be a predefined code or an expression in a syntax defined by the coding system (e.g. post&ndash;coordination)."
                            },
                            "display": {
                              "type": "string",
                              "pattern": "[ \\r\\n\\t\\S]+",
                              "description": "A representation of the meaning of the code in the system, following the rules of the system."
                            },
                            "userSelected": {
                              "type": "boolean",
                              "description": "Indicates that this coding was chosen by a user directly &ndash; e.g. off a pick list of available items (codes or displays)."
                            }
                          }
                        }
                      ]
                    }
                  },
                  "text": {
                    "type": "string",
                    "pattern": "[ \\r\\n\\t\\S]+",
                    "description": "A human language representation of the concept as seen/selected/uttered by the user who entered the data and/or which represents the intended meaning of the user."
                  }
                }
              }
            ]
          }
        },
        "agent": {
          "type": "array",
          "items": {
            "description": "An actor taking an active role in the event or activity that is logged.",
            "allOf": [
              {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "modifierExtension": {
                        "type": "array",
                        "items": {
                          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                          "allOf": [
                            {
                              "type": "object",
                              "additionalProperties": true
                            }
                          ]
                        }
                      }
                    }
                  }
                ]
              },
              {
                "type": "object",
                "properties": {
                  "type": {
                    "description": "Specification of the participation type the user plays when performing the event.",
                    "allOf": [
                      {
                        "type": "object",
                        "properties": {
                          "coding": {
                            "type": "array",
                            "items": {
                              "description": "A reference to a code defined by a terminology system.",
                              "allOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "system": {
                                      "type": "string",
                                      "pattern": "\\S*",
                                      "description": "The identification of the code system that defines the meaning of the symbol in the code."
                                    },
                                    "version": {
                                      "type": "string",
                                      "pattern": "[ \\r\\n\\t\\S]+",
                                      "description": "The version of the code system which was used when choosing this code. Note that a well&ndash;maintained code system does not need the version reported, because the meaning of codes is consistent across versions. However this cannot consistently be assured, and when the meaning is not guaranteed to be consistent, the version SHOULD be exchanged."
                                    },
                                    "code": {
                                      "type": "string",
                                      "pattern": "[^\\s]+(\\s[^\\s]+)*",
                                      "description": "A symbol in syntax defined by the system. The symbol may be a predefined code or an expression in a syntax defined by the coding system (e.g. post&ndash;coordination)."
                                    },
                                    "display": {
                                      "type": "string",
                                      "pattern": "[ \\r\\n\\t\\S]+",
                                      "description": "A representation of the meaning of the code in the system, following the rules of the system."
                                    },
                                    "userSelected": {
                                      "type": "boolean",
                                      "description": "Indicates that this coding was chosen by a user directly &ndash; e.g. off a pick list of available items (codes or displays)."
                                    }
                                  }
                                }
                              ]
                            }
                          },
                          "text": {
                            "type": "string",
                            "pattern": "[ \\r\\n\\t\\S]+",
                            "description": "A human language representation of the concept as seen/selected/uttered by the user who entered the data and/or which represents the intended meaning of the user."
                          }
                        }
                      }
                    ]
                  },
                  "role": {
                    "type": "array",
                    "items": {
                      "description": "The security role that the user was acting under, that come from local codes defined by the access control security system (e.g. RBAC, ABAC) used in the local context.",
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "coding": {
                              "type": "array",
                              "items": {
                                "description": "A reference to a code defined by a terminology system.",
                                "allOf": [
                                  {
                                    "type": "object",
                                    "properties": {
                                      "system": {
                                        "type": "string",
                                        "pattern": "\\S*",
                                        "description": "The identification of the code system that defines the meaning of the symbol in the code."
                                      },
                                      "version": {
                                        "type": "string",
                                        "pattern": "[ \\r\\n\\t\\S]+",
                                        "description": "The version of the code system which was used when choosing this code. Note that a well&ndash;maintained code system does not need the version reported, because the meaning of codes is consistent across versions. However this cannot consistently be assured, and when the meaning is not guaranteed to be consistent, the version SHOULD be exchanged."
                                      },
                                      "code": {
                                        "type": "string",
                                        "pattern": "[^\\s]+(\\s[^\\s]+)*",
                                        "description": "A symbol in syntax defined by the system. The symbol may be a predefined code or an expression in a syntax defined by the coding system (e.g. post&ndash;coordination)."
                                      },
                                      "display": {
                                        "type": "string",
                                        "pattern": "[ \\r\\n\\t\\S]+",
                                        "description": "A representation of the meaning of the code in the system, following the rules of the system."
                                      },
                                      "userSelected": {
                                        "type": "boolean",
                                        "description": "Indicates that this coding was chosen by a user directly &ndash; e.g. off a pick list of available items (codes or displays)."
                                      }
                                    }
                                  }
                                ]
                              }
                            },
                            "text": {
                              "type": "string",
                              "pattern": "[ \\r\\n\\t\\S]+",
                              "description": "A human language representation of the concept as seen/selected/uttered by the user who entered the data and/or which represents the intended meaning of the user."
                            }
                          }
                        }
                      ]
                    }
                  },
                  "who": {
                    "description": "Reference to who this agent is that was involved in the event.",
                    "allOf": [
                      {
                        "type": "object",
                        "properties": {
                          "reference": {
                            "type": "string",
                            "pattern": "[ \\r\\n\\t\\S]+",
                            "description": "A reference to a location at which the other resource is found. The reference may be a relative reference, in which case it is relative to the service base URL, or an absolute URL that resolves to the location where the resource is found. The reference may be version specific or not. If the reference is not to a FHIR RESTful server, then it should be assumed to be version specific. Internal fragment references (start with '#') refer to contained resources."
                          },
                          "type": {
                            "type": "string",
                            "pattern": "\\S*",
                            "description": "The expected type of the target of the reference. If both Reference.type and Reference.reference are populated and Reference.reference is a FHIR URL, both SHALL be consistent.\n\nThe type is the Canonical URL of Resource Definition that is the type this reference refers to. References are URLs that are relative to http://hl7.org/fhir/StructureDefinition/ e.g. \"Patient\" is a reference to http://hl7.org/fhir/StructureDefinition/Patient. Absolute URLs are only allowed for logical models (and can only be used in references in logical models, not resources)."
                          },
                          "identifier": {
                            "type": "object",
                            "additionalProperties": true,
                            "description": "An identifier for the target resource. This is used when there is no way to reference the other resource directly, either because the entity it represents is not available through a FHIR server, or because there is no way for the author of the resource to convert a known identifier to an actual location. There is no requirement that a Reference.identifier point to something that is actually exposed as a FHIR instance, but it SHALL point to a business concept that would be expected to be exposed as a FHIR instance, and that instance would need to be of a FHIR resource type allowed by the reference."
                          },
                          "display": {
                            "type": "string",
                            "pattern": "[ \\r\\n\\t\\S]+",
                            "description": "Plain text narrative that identifies the resource in addition to the resource reference."
                          }
                        }
                      }
                    ]
                  },
                  "altId": {
                    "type": "string",
                    "pattern": "[ \\r\\n\\t\\S]+",
                    "description": "Alternative agent Identifier. For a human, this should be a user identifier text string from authentication system. This identifier would be one known to a common authentication system (e.g. single sign&ndash;on), if available."
                  },
                  "name": {
                    "type": "string",
                    "pattern": "[ \\r\\n\\t\\S]+",
                    "description": "Human&ndash;meaningful name for the agent."
                  },
                  "requestor": {
                    "type": "boolean",
                    "description": "Indicator that the user is or is not the requestor, or initiator, for the event being audited."
                  },
                  "location": {
                    "description": "Where the event occurred.",
                    "allOf": [
                      {
                        "type": "object",
                        "properties": {
                          "reference": {
                            "type": "string",
                            "pattern": "[ \\r\\n\\t\\S]+",
                            "description": "A reference to a location at which the other resource is found. The reference may be a relative reference, in which case it is relative to the service base URL, or an absolute URL that resolves to the location where the resource is found. The reference may be version specific or not. If the reference is not to a FHIR RESTful server, then it should be assumed to be version specific. Internal fragment references (start with '#') refer to contained resources."
                          },
                          "type": {
                            "type": "string",
                            "pattern": "\\S*",
                            "description": "The expected type of the target of the reference. If both Reference.type and Reference.reference are populated and Reference.reference is a FHIR URL, both SHALL be consistent.\n\nThe type is the Canonical URL of Resource Definition that is the type this reference refers to. References are URLs that are relative to http://hl7.org/fhir/StructureDefinition/ e.g. \"Patient\" is a reference to http://hl7.org/fhir/StructureDefinition/Patient. Absolute URLs are only allowed for logical models (and can only be used in references in logical models, not resources)."
                          },
                          "identifier": {
                            "type": "object",
                            "additionalProperties": true,
                            "description": "An identifier for the target resource. This is used when there is no way to reference the other resource directly, either because the entity it represents is not available through a FHIR server, or because there is no way for the author of the resource to convert a known identifier to an actual location. There is no requirement that a Reference.identifier point to something that is actually exposed as a FHIR instance, but it SHALL point to a business concept that would be expected to be exposed as a FHIR instance, and that instance would need to be of a FHIR resource type allowed by the reference."
                          },
                          "display": {
                            "type": "string",
                            "pattern": "[ \\r\\n\\t\\S]+",
                            "description": "Plain text narrative that identifies the resource in addition to the resource reference."
                          }
                        }
                      }
                    ]
                  },
                  "policy": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "pattern": "\\S*",
                      "description": "The policy or plan that authorized the activity being recorded. Typically, a single activity may have multiple applicable policies, such as patient consent, guarantor funding, etc. The policy would also indicate the security token used."
                    }
                  },
                  "media": {
                    "description": "Type of media involved. Used when the event is about exporting/importing onto media.",
                    "allOf": [
                      {
                        "type": "object",
                        "properties": {
                          "system": {
                            "type": "string",
                            "pattern": "\\S*",
                            "description": "The identification of the code system that defines the meaning of the symbol in the code."
                          },
                          "version": {
                            "type": "string",
                            "pattern": "[ \\r\\n\\t\\S]+",
                            "description": "The version of the code system which was used when choosing this code. Note that a well&ndash;maintained code system does not need the version reported, because the meaning of codes is consistent across versions. However this cannot consistently be assured, and when the meaning is not guaranteed to be consistent, the version SHOULD be exchanged."
                          },
                          "code": {
                            "type": "string",
                            "pattern": "[^\\s]+(\\s[^\\s]+)*",
                            "description": "A symbol in syntax defined by the system. The symbol may be a predefined code or an expression in a syntax defined by the coding system (e.g. post&ndash;coordination)."
                          },
                          "display": {
                            "type": "string",
                            "pattern": "[ \\r\\n\\t\\S]+",
                            "description": "A representation of the meaning of the code in the system, following the rules of the system."
                          },
                          "userSelected": {
                            "type": "boolean",
                            "description": "Indicates that this coding was chosen by a user directly &ndash; e.g. off a pick list of available items (codes or displays)."
                          }
                        }
                      }
                    ]
                  },
                  "network": {
                    "description": "Logical network location for application activity, if the activity has a network location.",
                    "allOf": [
                      {
                        "allOf": [
                          {
                            "type": "object",
                            "properties": {
                              "modifierExtension": {
                                "type": "array",
                                "items": {
                                  "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                                  "allOf": [
                                    {
                                      "type": "object",
                                      "additionalProperties": true
                                    }
                                  ]
                                }
                              }
                            }
                          }
                        ]
                      },
                      {
                        "type": "object",
                        "properties": {
                          "address": {
                            "type": "string",
                            "pattern": "[ \\r\\n\\t\\S]+",
                            "description": "An identifier for the network access point of the user device for the audit event."
                          },
                          "type": {
                            "type": "string",
                            "enum": [
                              "1",
                              "2",
                              "3",
                              "4",
                              "5"
                            ],
                            "description": "An identifier for the type of network access point that originated the audit event."
                          }
                        }
                      }
                    ]
                  },
                  "purposeOfUse": {
                    "type": "array",
                    "items": {
                      "description": "The reason (purpose of use), specific to this agent, that was used during the event being recorded.",
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "coding": {
                              "type": "array",
                              "items": {
                                "description": "A reference to a code defined by a terminology system.",
                                "allOf": [
                                  {
                                    "type": "object",
                                    "properties": {
                                      "system": {
                                        "type": "string",
                                        "pattern": "\\S*",
                                        "description": "The identification of the code system that defines the meaning of the symbol in the code."
                                      },
                                      "version": {
                                        "type": "string",
                                        "pattern": "[ \\r\\n\\t\\S]+",
                                        "description": "The version of the code system which was used when choosing this code. Note that a well&ndash;maintained code system does not need the version reported, because the meaning of codes is consistent across versions. However this cannot consistently be assured, and when the meaning is not guaranteed to be consistent, the version SHOULD be exchanged."
                                      },
                                      "code": {
                                        "type": "string",
                                        "pattern": "[^\\s]+(\\s[^\\s]+)*",
                                        "description": "A symbol in syntax defined by the system. The symbol may be a predefined code or an expression in a syntax defined by the coding system (e.g. post&ndash;coordination)."
                                      },
                                      "display": {
                                        "type": "string",
                                        "pattern": "[ \\r\\n\\t\\S]+",
                                        "description": "A representation of the meaning of the code in the system, following the rules of the system."
                                      },
                                      "userSelected": {
                                        "type": "boolean",
                                        "description": "Indicates that this coding was chosen by a user directly &ndash; e.g. off a pick list of available items (codes or displays)."
                                      }
                                    }
                                  }
                                ]
                              }
                            },
                            "text": {
                              "type": "string",
                              "pattern": "[ \\r\\n\\t\\S]+",
                              "description": "A human language representation of the concept as seen/selected/uttered by the user who entered the data and/or which represents the intended meaning of the user."
                            }
                          }
                        }
                      ]
                    }
                  }
                },
                "required": [
                  "requestor"
                ]
              }
            ]
          },
          "minItems": 1
        },
        "source": {
          "description": "The system that is reporting the event.",
          "allOf": [
            {
              "allOf": [
                {
                  "type": "object",
                  "properties": {
                    "modifierExtension": {
                      "type": "array",
                      "items": {
                        "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                        "allOf": [
                          {
                            "type": "object",
                            "additionalProperties": true
                          }
                        ]
                      }
                    }
                  }
                }
              ]
            },
            {
              "type": "object",
              "properties": {
                "site": {
                  "type": "string",
                  "pattern": "[ \\r\\n\\t\\S]+",
                  "description": "Logical source location within the healthcare enterprise network.  For example, a hospital or other provider location within a multi&ndash;entity provider group."
                },
                "observer": {
                  "description": "Identifier of the source where the event was detected.",
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "reference": {
                          "type": "string",
                          "pattern": "[ \\r\\n\\t\\S]+",
                          "description": "A reference to a location at which the other resource is found. The reference may be a relative reference, in which case it is relative to the service base URL, or an absolute URL that resolves to the location where the resource is found. The reference may be version specific or not. If the reference is not to a FHIR RESTful server, then it should be assumed to be version specific. Internal fragment references (start with '#') refer to contained resources."
                        },
                        "type": {
                          "type": "string",
                          "pattern": "\\S*",
                          "description": "The expected type of the target of the reference. If both Reference.type and Reference.reference are populated and Reference.reference is a FHIR URL, both SHALL be consistent.\n\nThe type is the Canonical URL of Resource Definition that is the type this reference refers to. References are URLs that are relative to http://hl7.org/fhir/StructureDefinition/ e.g. \"Patient\" is a reference to http://hl7.org/fhir/StructureDefinition/Patient. Absolute URLs are only allowed for logical models (and can only be used in references in logical models, not resources)."
                        },
                        "identifier": {
                          "type": "object",
                          "additionalProperties": true,
                          "description": "An identifier for the target resource. This is used when there is no way to reference the other resource directly, either because the entity it represents is not available through a FHIR server, or because there is no way for the author of the resource to convert a known identifier to an actual location. There is no requirement that a Reference.identifier point to something that is actually exposed as a FHIR instance, but it SHALL point to a business concept that would be expected to be exposed as a FHIR instance, and that instance would need to be of a FHIR resource type allowed by the reference."
                        },
                        "display": {
                          "type": "string",
                          "pattern": "[ \\r\\n\\t\\S]+",
                          "description": "Plain text narrative that identifies the resource in addition to the resource reference."
                        }
                      }
                    }
                  ]
                },
                "type": {
                  "type": "array",
                  "items": {
                    "description": "Code specifying the type of source where event originated.",
                    "allOf": [
                      {
                        "type": "object",
                        "properties": {
                          "system": {
                            "type": "string",
                            "pattern": "\\S*",
                            "description": "The identification of the code system that defines the meaning of the symbol in the code."
                          },
                          "version": {
                            "type": "string",
                            "pattern": "[ \\r\\n\\t\\S]+",
                            "description": "The version of the code system which was used when choosing this code. Note that a well&ndash;maintained code system does not need the version reported, because the meaning of codes is consistent across versions. However this cannot consistently be assured, and when the meaning is not guaranteed to be consistent, the version SHOULD be exchanged."
                          },
                          "code": {
                            "type": "string",
                            "pattern": "[^\\s]+(\\s[^\\s]+)*",
                            "description": "A symbol in syntax defined by the system. The symbol may be a predefined code or an expression in a syntax defined by the coding system (e.g. post&ndash;coordination)."
                          },
                          "display": {
                            "type": "string",
                            "pattern": "[ \\r\\n\\t\\S]+",
                            "description": "A representation of the meaning of the code in the system, following the rules of the system."
                          },
                          "userSelected": {
                            "type": "boolean",
                            "description": "Indicates that this coding was chosen by a user directly &ndash; e.g. off a pick list of available items (codes or displays)."
                          }
                        }
                      }
                    ]
                  }
                }
              },
              "required": [
                "observer"
              ]
            }
          ]
        },
        "entity": {
          "type": "array",
          "items": {
            "description": "Specific instances of data or objects that have been accessed.",
            "allOf": [
              {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "modifierExtension": {
                        "type": "array",
                        "items": {
                          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                          "allOf": [
                            {
                              "type": "object",
                              "additionalProperties": true
                            }
                          ]
                        }
                      }
                    }
                  }
                ]
              },
              {
                "type": "object",
                "properties": {
                  "what": {
                    "description": "Identifies a specific instance of the entity. The reference should be version specific.",
                    "allOf": [
                      {
                        "type": "object",
                        "properties": {
                          "reference": {
                            "type": "string",
                            "pattern": "[ \\r\\n\\t\\S]+",
                            "description": "A reference to a location at which the other resource is found. The reference may be a relative reference, in which case it is relative to the service base URL, or an absolute URL that resolves to the location where the resource is found. The reference may be version specific or not. If the reference is not to a FHIR RESTful server, then it should be assumed to be version specific. Internal fragment references (start with '#') refer to contained resources."
                          },
                          "type": {
                            "type": "string",
                            "pattern": "\\S*",
                            "description": "The expected type of the target of the reference. If both Reference.type and Reference.reference are populated and Reference.reference is a FHIR URL, both SHALL be consistent.\n\nThe type is the Canonical URL of Resource Definition that is the type this reference refers to. References are URLs that are relative to http://hl7.org/fhir/StructureDefinition/ e.g. \"Patient\" is a reference to http://hl7.org/fhir/StructureDefinition/Patient. Absolute URLs are only allowed for logical models (and can only be used in references in logical models, not resources)."
                          },
                          "identifier": {
                            "type": "object",
                            "additionalProperties": true,
                            "description": "An identifier for the target resource. This is used when there is no way to reference the other resource directly, either because the entity it represents is not available through a FHIR server, or because there is no way for the author of the resource to convert a known identifier to an actual location. There is no requirement that a Reference.identifier point to something that is actually exposed as a FHIR instance, but it SHALL point to a business concept that would be expected to be exposed as a FHIR instance, and that instance would need to be of a FHIR resource type allowed by the reference."
                          },
                          "display": {
                            "type": "string",
                            "pattern": "[ \\r\\n\\t\\S]+",
                            "description": "Plain text narrative that identifies the resource in addition to the resource reference."
                          }
                        }
                      }
                    ]
                  },
                  "type": {
                    "description": "The type of the object that was involved in this audit event.",
                    "allOf": [
                      {
                        "type": "object",
                        "properties": {
                          "system": {
                            "type": "string",
                            "pattern": "\\S*",
                            "description": "The identification of the code system that defines the meaning of the symbol in the code."
                          },
                          "version": {
                            "type": "string",
                            "pattern": "[ \\r\\n\\t\\S]+",
                            "description": "The version of the code system which was used when choosing this code. Note that a well&ndash;maintained code system does not need the version reported, because the meaning of codes is consistent across versions. However this cannot consistently be assured, and when the meaning is not guaranteed to be consistent, the version SHOULD be exchanged."
                          },
                          "code": {
                            "type": "string",
                            "pattern": "[^\\s]+(\\s[^\\s]+)*",
                            "description": "A symbol in syntax defined by the system. The symbol may be a predefined code or an expression in a syntax defined by the coding system (e.g. post&ndash;coordination)."
                          },
                          "display": {
                            "type": "string",
                            "pattern": "[ \\r\\n\\t\\S]+",
                            "description": "A representation of the meaning of the code in the system, following the rules of the system."
                          },
                          "userSelected": {
                            "type": "boolean",
                            "description": "Indicates that this coding was chosen by a user directly &ndash; e.g. off a pick list of available items (codes or displays)."
                          }
                        }
                      }
                    ]
                  },
                  "role": {
                    "description": "Code representing the role the entity played in the event being audited.",
                    "allOf": [
                      {
                        "type": "object",
                        "properties": {
                          "system": {
                            "type": "string",
                            "pattern": "\\S*",
                            "description": "The identification of the code system that defines the meaning of the symbol in the code."
                          },
                          "version": {
                            "type": "string",
                            "pattern": "[ \\r\\n\\t\\S]+",
                            "description": "The version of the code system which was used when choosing this code. Note that a well&ndash;maintained code system does not need the version reported, because the meaning of codes is consistent across versions. However this cannot consistently be assured, and when the meaning is not guaranteed to be consistent, the version SHOULD be exchanged."
                          },
                          "code": {
                            "type": "string",
                            "pattern": "[^\\s]+(\\s[^\\s]+)*",
                            "description": "A symbol in syntax defined by the system. The symbol may be a predefined code or an expression in a syntax defined by the coding system (e.g. post&ndash;coordination)."
                          },
                          "display": {
                            "type": "string",
                            "pattern": "[ \\r\\n\\t\\S]+",
                            "description": "A representation of the meaning of the code in the system, following the rules of the system."
                          },
                          "userSelected": {
                            "type": "boolean",
                            "description": "Indicates that this coding was chosen by a user directly &ndash; e.g. off a pick list of available items (codes or displays)."
                          }
                        }
                      }
                    ]
                  },
                  "lifecycle": {
                    "description": "Identifier for the data life&ndash;cycle stage for the entity.",
                    "allOf": [
                      {
                        "type": "object",
                        "properties": {
                          "system": {
                            "type": "string",
                            "pattern": "\\S*",
                            "description": "The identification of the code system that defines the meaning of the symbol in the code."
                          },
                          "version": {
                            "type": "string",
                            "pattern": "[ \\r\\n\\t\\S]+",
                            "description": "The version of the code system which was used when choosing this code. Note that a well&ndash;maintained code system does not need the version reported, because the meaning of codes is consistent across versions. However this cannot consistently be assured, and when the meaning is not guaranteed to be consistent, the version SHOULD be exchanged."
                          },
                          "code": {
                            "type": "string",
                            "pattern": "[^\\s]+(\\s[^\\s]+)*",
                            "description": "A symbol in syntax defined by the system. The symbol may be a predefined code or an expression in a syntax defined by the coding system (e.g. post&ndash;coordination)."
                          },
                          "display": {
                            "type": "string",
                            "pattern": "[ \\r\\n\\t\\S]+",
                            "description": "A representation of the meaning of the code in the system, following the rules of the system."
                          },
                          "userSelected": {
                            "type": "boolean",
                            "description": "Indicates that this coding was chosen by a user directly &ndash; e.g. off a pick list of available items (codes or displays)."
                          }
                        }
                      }
                    ]
                  },
                  "securityLabel": {
                    "type": "array",
                    "items": {
                      "description": "Security labels for the identified entity.",
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "system": {
                              "type": "string",
                              "pattern": "\\S*",
                              "description": "The identification of the code system that defines the meaning of the symbol in the code."
                            },
                            "version": {
                              "type": "string",
                              "pattern": "[ \\r\\n\\t\\S]+",
                              "description": "The version of the code system which was used when choosing this code. Note that a well&ndash;maintained code system does not need the version reported, because the meaning of codes is consistent across versions. However this cannot consistently be assured, and when the meaning is not guaranteed to be consistent, the version SHOULD be exchanged."
                            },
                            "code": {
                              "type": "string",
                              "pattern": "[^\\s]+(\\s[^\\s]+)*",
                              "description": "A symbol in syntax defined by the system. The symbol may be a predefined code or an expression in a syntax defined by the coding system (e.g. post&ndash;coordination)."
                            },
                            "display": {
                              "type": "string",
                              "pattern": "[ \\r\\n\\t\\S]+",
                              "description": "A representation of the meaning of the code in the system, following the rules of the system."
                            },
                            "userSelected": {
                              "type": "boolean",
                              "description": "Indicates that this coding was chosen by a user directly &ndash; e.g. off a pick list of available items (codes or displays)."
                            }
                          }
                        }
                      ]
                    }
                  },
                  "name": {
                    "type": "string",
                    "pattern": "[ \\r\\n\\t\\S]+",
                    "description": "A name of the entity in the audit event."
                  },
                  "description": {
                    "type": "string",
                    "pattern": "[ \\r\\n\\t\\S]+",
                    "description": "Text that describes the entity in more detail."
                  },
                  "query": {
                    "type": "string",
                    "pattern": "(\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+",
                    "description": "The query parameters for a query&ndash;type entities."
                  },
                  "detail": {
                    "type": "array",
                    "items": {
                      "description": "Tagged value pairs for conveying additional information about the entity.",
                      "allOf": [
                        {
                          "allOf": [
                            {
                              "type": "object",
                              "properties": {
                                "modifierExtension": {
                                  "type": "array",
                                  "items": {
                                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                                    "allOf": [
                                      {
                                        "type": "object",
                                        "additionalProperties": true
                                      }
                                    ]
                                  }
                                }
                              }
                            }
                          ]
                        },
                        {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "pattern": "[ \\r\\n\\t\\S]+",
                              "description": "The type of extra detail provided in the value."
                            },
                            "valueString": {
                              "type": "string",
                              "pattern": "[ \\r\\n\\t\\S]+",
                              "description": "The  value of the extra detail."
                            },
                            "valueBase64Binary": {
                              "type": "string",
                              "pattern": "(\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+",
                              "description": "The  value of the extra detail."
                            }
                          },
                          "required": [
                            "type"
                          ]
                        }
                      ]
                    }
                  }
                }
              }
            ]
          }
        }
      },
      "required": [
        "type",
        "recorded",
        "agent",
        "source"
      ]
    }
  ]
}